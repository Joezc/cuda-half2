//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-21554848
// Cuda compilation tools, release 8.0, V8.0.61
// Based on LLVM 3.4svn
//

.version 5.0
.target sm_60
.address_size 64

	// .globl	_Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S_

.visible .entry _Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S_(
	.param .u64 _Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_0,
	.param .u64 _Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_1,
	.param .u64 _Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_2,
	.param .align 2 .b8 _Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_3[2],
	.param .u32 _Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_4,
	.param .u32 _Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_5,
	.param .u32 _Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_6,
	.param .align 2 .b8 _Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_7[2],
	.param .align 2 .b8 _Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_8[2],
	.param .align 2 .b8 _Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_9[2],
	.param .align 2 .b8 _Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_10[2],
	.param .align 2 .b8 _Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_11[2],
	.param .align 2 .b8 _Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_12[2],
	.param .align 2 .b8 _Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_13[2]
)
{
	.reg .pred 	%p<14>;
	.reg .b16 	%rs<163>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<98>;
	.reg .b64 	%rd<52>;


	ld.param.u64 	%rd12, [_Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_0];
	ld.param.u64 	%rd13, [_Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_1];
	ld.param.u64 	%rd14, [_Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_2];
	ld.param.u16 	%rs10, [_Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_3];
	ld.param.u32 	%r3, [_Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_4];
	ld.param.u32 	%r4, [_Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_5];
	ld.param.u32 	%r5, [_Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_6];
	ld.param.u16 	%rs5, [_Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_7];
	ld.param.u16 	%rs4, [_Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_8];
	ld.param.u16 	%rs7, [_Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_9];
	ld.param.u16 	%rs6, [_Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_10];
	ld.param.u16 	%rs9, [_Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_11];
	ld.param.u16 	%rs8, [_Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_12];
	ld.param.u16 	%rs3, [_Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_13];
	cvta.to.global.u64 	%rd15, %rd14;
	mov.f32 	%f1, 0f42A00000;
	// inline asm
	{  cvt.rn.f16.f32 %rs18, %f1;}

	// inline asm
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %tid.x;
	mov.u32 	%r10, %ctaid.y;
	mov.u32 	%r11, %ntid.y;
	mul.lo.s32 	%r12, %r10, %r11;
	mov.u32 	%r13, %tid.y;
	add.s32 	%r14, %r12, %r13;
	mad.lo.s32 	%r15, %r7, %r8, %r9;
	mad.lo.s32 	%r16, %r14, %r3, %r15;
	setp.ne.s32	%p1, %r15, 0;
	selp.b32	%r17, -1, 0, %p1;
	add.s32 	%r18, %r16, %r17;
	add.s32 	%r19, %r3, -1;
	setp.ne.s32	%p2, %r15, %r19;
	selp.u32	%r20, 1, 0, %p2;
	add.s32 	%r21, %r16, %r20;
	setp.eq.s32	%p3, %r14, 0;
	selp.b32	%r22, 0, %r3, %p3;
	sub.s32 	%r23, %r16, %r22;
	add.s32 	%r24, %r4, -1;
	setp.eq.s32	%p4, %r14, %r24;
	selp.b32	%r25, 0, %r3, %p4;
	add.s32 	%r26, %r16, %r25;
	cvta.to.global.u64 	%rd49, %rd13;
	mul.wide.s32 	%rd16, %r16, 2;
	add.s64 	%rd17, %rd49, %rd16;
	mad.lo.s32 	%r27, %r4, %r3, %r16;
	mul.wide.s32 	%rd18, %r27, 2;
	add.s64 	%rd19, %rd49, %rd18;
	ld.global.u16 	%rs162, [%rd19];
	ld.global.u16 	%rs161, [%rd17];
	// inline asm
	{mul.f16 %rs19,%rs3,%rs161;
}
	// inline asm
	mul.wide.s32 	%rd20, %r18, 2;
	add.s64 	%rd21, %rd49, %rd20;
	ld.global.u16 	%rs24, [%rd21];
	// inline asm
	{mul.f16 %rs22,%rs4,%rs24;
}
	// inline asm
	// inline asm
	{add.f16 %rs25,%rs19,%rs22;
}
	// inline asm
	mul.wide.s32 	%rd22, %r21, 2;
	add.s64 	%rd23, %rd49, %rd22;
	ld.global.u16 	%rs30, [%rd23];
	// inline asm
	{mul.f16 %rs28,%rs5,%rs30;
}
	// inline asm
	// inline asm
	{add.f16 %rs31,%rs25,%rs28;
}
	// inline asm
	mul.wide.s32 	%rd24, %r26, 2;
	add.s64 	%rd25, %rd49, %rd24;
	ld.global.u16 	%rs36, [%rd25];
	// inline asm
	{mul.f16 %rs34,%rs6,%rs36;
}
	// inline asm
	// inline asm
	{add.f16 %rs37,%rs31,%rs34;
}
	// inline asm
	mul.wide.s32 	%rd26, %r23, 2;
	add.s64 	%rd27, %rd49, %rd26;
	ld.global.u16 	%rs42, [%rd27];
	// inline asm
	{mul.f16 %rs40,%rs7,%rs42;
}
	// inline asm
	// inline asm
	{add.f16 %rs43,%rs37,%rs40;
}
	// inline asm
	// inline asm
	{mul.f16 %rs46,%rs8,%rs161;
}
	// inline asm
	// inline asm
	{add.f16 %rs49,%rs43,%rs46;
}
	// inline asm
	// inline asm
	{mul.f16 %rs52,%rs9,%rs162;
}
	// inline asm
	// inline asm
	{add.f16 %rs55,%rs49,%rs52;
}
	// inline asm
	cvta.to.global.u64 	%rd28, %rd12;
	add.s64 	%rd29, %rd28, %rd16;
	ld.global.u16 	%rs60, [%rd29];
	// inline asm
	{mul.f16 %rs58,%rs10,%rs60;
}
	// inline asm
	// inline asm
	{add.f16 %rs61,%rs55,%rs58;
}
	// inline asm
	// inline asm
	{mul.f16 %rs64,%rs9,%rs18;
}
	// inline asm
	// inline asm
	{add.f16 %rs67,%rs61,%rs64;
}
	// inline asm
	add.s64 	%rd30, %rd15, %rd16;
	st.global.u16 	[%rd30], %rs67;
	add.s32 	%r28, %r13, %r4;
	add.s32 	%r29, %r28, %r12;
	mad.lo.s32 	%r30, %r3, %r29, %r15;
	mul.wide.s32 	%rd31, %r30, 2;
	add.s64 	%rd51, %rd28, %rd31;
	add.s64 	%rd50, %rd15, %rd31;
	mov.u32 	%r97, 0;
	add.s32 	%r52, %r5, -1;
	bra.uni 	BB0_1;

BB0_3:
	mul.lo.s32 	%r68, %r4, %r3;
	mul.wide.s32 	%rd38, %r68, 2;
	add.s64 	%rd49, %rd4, %rd38;
	add.s64 	%rd50, %rd5, %rd38;
	add.s64 	%rd51, %rd6, %rd38;
	add.s32 	%r74, %r42, %r9;
	setp.ne.s32	%p10, %r74, %r19;
	selp.u32	%r75, 1, 0, %p10;
	add.s32 	%r83, %r74, %r46;
	add.s32 	%r84, %r83, %r75;
	mul.wide.s32 	%rd39, %r84, 2;
	add.s64 	%rd40, %rd4, %rd39;
	setp.ne.s32	%p11, %r74, 0;
	selp.b32	%r85, -1, 0, %p11;
	add.s32 	%r86, %r83, %r85;
	mul.wide.s32 	%rd41, %r86, 2;
	add.s64 	%rd42, %rd4, %rd41;
	add.s32 	%r87, %r13, %r12;
	mad.lo.s32 	%r88, %r4, 2, %r87;
	mad.lo.s32 	%r89, %r3, %r88, %r74;
	mul.wide.s32 	%rd43, %r89, 2;
	add.s64 	%rd44, %rd4, %rd43;
	ld.global.u16 	%rs162, [%rd44];
	ld.global.u16 	%rs120, [%rd42];
	// inline asm
	{mul.f16 %rs118,%rs4,%rs120;
}
	// inline asm
	// inline asm
	{add.f16 %rs121,%rs70,%rs118;
}
	// inline asm
	ld.global.u16 	%rs126, [%rd40];
	// inline asm
	{mul.f16 %rs124,%rs5,%rs126;
}
	// inline asm
	// inline asm
	{add.f16 %rs127,%rs121,%rs124;
}
	// inline asm
	setp.eq.s32	%p12, %r87, %r24;
	selp.b32	%r91, 0, %r3, %p12;
	add.s32 	%r92, %r91, %r9;
	add.s32 	%r93, %r92, %r42;
	add.s32 	%r94, %r93, %r46;
	mul.wide.s32 	%rd45, %r94, 2;
	add.s64 	%rd46, %rd4, %rd45;
	ld.global.u16 	%rs132, [%rd46];
	// inline asm
	{mul.f16 %rs130,%rs6,%rs132;
}
	// inline asm
	// inline asm
	{add.f16 %rs133,%rs127,%rs130;
}
	// inline asm
	setp.eq.s32	%p13, %r87, 0;
	selp.b32	%r95, 0, %r3, %p13;
	sub.s32 	%r96, %r83, %r95;
	mul.wide.s32 	%rd47, %r96, 2;
	add.s64 	%rd48, %rd4, %rd47;
	ld.global.u16 	%rs138, [%rd48];
	// inline asm
	{mul.f16 %rs136,%rs7,%rs138;
}
	// inline asm
	// inline asm
	{add.f16 %rs139,%rs133,%rs136;
}
	// inline asm
	// inline asm
	{add.f16 %rs142,%rs139,%rs73;
}
	// inline asm
	// inline asm
	{mul.f16 %rs145,%rs9,%rs162;
}
	// inline asm
	// inline asm
	{add.f16 %rs148,%rs142,%rs145;
}
	// inline asm
	ld.global.u16 	%rs153, [%rd6];
	// inline asm
	{mul.f16 %rs151,%rs10,%rs153;
}
	// inline asm
	// inline asm
	{add.f16 %rs154,%rs148,%rs151;
}
	// inline asm
	// inline asm
	{add.f16 %rs157,%rs154,%rs64;
}
	// inline asm
	st.global.u16 	[%rd5], %rs157;

BB0_1:
	mov.u16 	%rs160, %rs162;
	mov.u16 	%rs12, %rs161;
	mov.u16 	%rs161, %rs160;
	mov.u64 	%rd6, %rd51;
	mov.u64 	%rd5, %rd50;
	mov.u64 	%rd4, %rd49;
	// inline asm
	{mul.f16 %rs70,%rs3,%rs161;
}
	// inline asm
	// inline asm
	{mul.f16 %rs73,%rs8,%rs12;
}
	// inline asm
	add.s32 	%r39, %r25, %r9;
	mul.lo.s32 	%r42, %r7, %r8;
	add.s32 	%r43, %r39, %r42;
	mul.lo.s32 	%r46, %r3, %r29;
	add.s32 	%r47, %r43, %r46;
	mul.wide.s32 	%rd7, %r47, 2;
	add.s32 	%r48, %r9, %r42;
	add.s32 	%r49, %r48, %r46;
	sub.s32 	%r51, %r49, %r22;
	mul.wide.s32 	%rd8, %r51, 2;
	add.s32 	%r97, %r97, 1;
	setp.lt.s32	%p7, %r97, %r52;
	@%p7 bra 	BB0_3;

	mad.lo.s32 	%r62, %r10, %r11, %r28;
	mad.lo.s32 	%r63, %r3, %r62, %r15;
	add.s32 	%r65, %r63, %r17;
	mul.wide.s32 	%rd32, %r65, 2;
	add.s64 	%rd33, %rd4, %rd32;
	ld.global.u16 	%rs78, [%rd33];
	// inline asm
	{mul.f16 %rs76,%rs4,%rs78;
}
	// inline asm
	// inline asm
	{add.f16 %rs79,%rs70,%rs76;
}
	// inline asm
	add.s32 	%r67, %r63, %r20;
	mul.wide.s32 	%rd34, %r67, 2;
	add.s64 	%rd35, %rd4, %rd34;
	ld.global.u16 	%rs84, [%rd35];
	// inline asm
	{mul.f16 %rs82,%rs5,%rs84;
}
	// inline asm
	// inline asm
	{add.f16 %rs85,%rs79,%rs82;
}
	// inline asm
	add.s64 	%rd36, %rd4, %rd7;
	ld.global.u16 	%rs90, [%rd36];
	// inline asm
	{mul.f16 %rs88,%rs6,%rs90;
}
	// inline asm
	// inline asm
	{add.f16 %rs91,%rs85,%rs88;
}
	// inline asm
	add.s64 	%rd37, %rd4, %rd8;
	ld.global.u16 	%rs96, [%rd37];
	// inline asm
	{mul.f16 %rs94,%rs7,%rs96;
}
	// inline asm
	// inline asm
	{add.f16 %rs97,%rs91,%rs94;
}
	// inline asm
	// inline asm
	{add.f16 %rs100,%rs97,%rs73;
}
	// inline asm
	// inline asm
	{mul.f16 %rs103,%rs9,%rs161;
}
	// inline asm
	// inline asm
	{add.f16 %rs106,%rs100,%rs103;
}
	// inline asm
	ld.global.u16 	%rs111, [%rd6];
	// inline asm
	{mul.f16 %rs109,%rs10,%rs111;
}
	// inline asm
	// inline asm
	{add.f16 %rs112,%rs106,%rs109;
}
	// inline asm
	// inline asm
	{add.f16 %rs115,%rs112,%rs64;
}
	// inline asm
	st.global.u16 	[%rd5], %rs115;
	ret;
}


