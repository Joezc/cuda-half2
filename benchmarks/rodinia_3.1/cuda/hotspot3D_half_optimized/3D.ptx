//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-21554848
// Cuda compilation tools, release 8.0, V8.0.61
// Based on LLVM 3.4svn
//

.version 5.0
.target sm_60
.address_size 64

	// .globl	_Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S_

.visible .entry _Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S_(
	.param .u64 _Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_0,
	.param .u64 _Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_1,
	.param .u64 _Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_2,
	.param .align 2 .b8 _Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_3[2],
	.param .u32 _Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_4,
	.param .u32 _Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_5,
	.param .u32 _Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_6,
	.param .align 2 .b8 _Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_7[2],
	.param .align 2 .b8 _Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_8[2],
	.param .align 2 .b8 _Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_9[2],
	.param .align 2 .b8 _Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_10[2],
	.param .align 2 .b8 _Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_11[2],
	.param .align 2 .b8 _Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_12[2],
	.param .align 2 .b8 _Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_13[2]
)
{
	.reg .pred 	%p<15>;
	.reg .b16 	%rs<164>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<89>;
	.reg .b64 	%rd<52>;


	ld.param.u64 	%rd11, [_Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_0];
	ld.param.u64 	%rd12, [_Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_1];
	ld.param.u64 	%rd13, [_Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_2];
	ld.param.u16 	%rs9, [_Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_3];
	ld.param.u32 	%r5, [_Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_4];
	ld.param.u32 	%r6, [_Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_5];
	ld.param.u32 	%r7, [_Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_6];
	ld.param.u16 	%rs4, [_Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_7];
	ld.param.u16 	%rs3, [_Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_8];
	ld.param.u16 	%rs6, [_Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_9];
	ld.param.u16 	%rs5, [_Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_10];
	ld.param.u16 	%rs8, [_Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_11];
	ld.param.u16 	%rs7, [_Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_12];
	ld.param.u16 	%rs2, [_Z11hotspotOpt1P6__halfS0_S0_S_iiiS_S_S_S_S_S_S__param_13];
	mov.f32 	%f1, 0f42A00000;
	// inline asm
	{  cvt.rn.f16.f32 %rs19, %f1;}

	// inline asm
	mov.u32 	%r8, 0;
	cvta.to.global.u64 	%rd1, %rd12;
	cvta.to.global.u64 	%rd22, %rd11;
	// inline asm
	{mul.f16 %rs65,%rs8,%rs19;
}
	// inline asm
	cvta.to.global.u64 	%rd28, %rd13;
	add.s32 	%r30, %r7, -1;
	mov.u32 	%r88, %r8;

BB0_1:
	mov.u32 	%r10, %ntid.x;
	mov.u32 	%r11, %ctaid.x;
	mov.u32 	%r12, %tid.x;
	mad.lo.s32 	%r13, %r11, %r10, %r12;
	setp.ne.s32	%p1, %r13, 0;
	selp.b32	%r14, -1, 0, %p1;
	mov.u32 	%r15, %ntid.y;
	mov.u32 	%r16, %ctaid.y;
	mov.u32 	%r17, %tid.y;
	mad.lo.s32 	%r18, %r16, %r15, %r17;
	mad.lo.s32 	%r19, %r18, %r5, %r13;
	add.s32 	%r20, %r19, %r14;
	mul.wide.s32 	%rd14, %r20, 2;
	add.s64 	%rd15, %rd1, %rd14;
	ld.global.u16 	%rs25, [%rd15];
	add.s32 	%r21, %r5, -1;
	setp.ne.s32	%p2, %r13, %r21;
	selp.u32	%r22, 1, 0, %p2;
	add.s32 	%r23, %r19, %r22;
	mul.wide.s32 	%rd16, %r23, 2;
	add.s64 	%rd17, %rd1, %rd16;
	ld.global.u16 	%rs31, [%rd17];
	add.s32 	%r24, %r6, -1;
	setp.eq.s32	%p3, %r18, %r24;
	selp.b32	%r25, 0, %r5, %p3;
	add.s32 	%r26, %r19, %r25;
	mul.wide.s32 	%rd18, %r26, 2;
	add.s64 	%rd19, %rd1, %rd18;
	ld.global.u16 	%rs37, [%rd19];
	setp.eq.s32	%p4, %r18, 0;
	selp.b32	%r27, 0, %r5, %p4;
	sub.s32 	%r28, %r19, %r27;
	mul.wide.s32 	%rd20, %r28, 2;
	add.s64 	%rd21, %rd1, %rd20;
	ld.global.u16 	%rs43, [%rd21];
	mul.wide.s32 	%rd23, %r19, 2;
	add.s64 	%rd24, %rd22, %rd23;
	ld.global.u16 	%rs61, [%rd24];
	add.s64 	%rd25, %rd1, %rd23;
	mul.lo.s32 	%r29, %r6, %r5;
	mul.wide.s32 	%rd26, %r29, 2;
	add.s64 	%rd27, %rd25, %rd26;
	ld.global.u16 	%rs163, [%rd27];
	ld.global.u16 	%rs162, [%rd25];
	// inline asm
	{mul.f16 %rs20,%rs2,%rs162;
}
	// inline asm
	// inline asm
	{mul.f16 %rs23,%rs3,%rs25;
}
	// inline asm
	// inline asm
	{add.f16 %rs26,%rs20,%rs23;
}
	// inline asm
	// inline asm
	{mul.f16 %rs29,%rs4,%rs31;
}
	// inline asm
	// inline asm
	{add.f16 %rs32,%rs26,%rs29;
}
	// inline asm
	// inline asm
	{mul.f16 %rs35,%rs5,%rs37;
}
	// inline asm
	// inline asm
	{add.f16 %rs38,%rs32,%rs35;
}
	// inline asm
	// inline asm
	{mul.f16 %rs41,%rs6,%rs43;
}
	// inline asm
	// inline asm
	{add.f16 %rs44,%rs38,%rs41;
}
	// inline asm
	// inline asm
	{mul.f16 %rs47,%rs7,%rs162;
}
	// inline asm
	// inline asm
	{add.f16 %rs50,%rs44,%rs47;
}
	// inline asm
	// inline asm
	{mul.f16 %rs53,%rs8,%rs163;
}
	// inline asm
	// inline asm
	{add.f16 %rs56,%rs50,%rs53;
}
	// inline asm
	// inline asm
	{mul.f16 %rs59,%rs9,%rs61;
}
	// inline asm
	// inline asm
	{add.f16 %rs62,%rs56,%rs59;
}
	// inline asm
	// inline asm
	{add.f16 %rs68,%rs62,%rs65;
}
	// inline asm
	add.s64 	%rd29, %rd28, %rd23;
	st.global.u16 	[%rd29], %rs68;
	add.s64 	%rd50, %rd29, %rd26;
	add.s64 	%rd51, %rd24, %rd26;
	mov.u32 	%r87, %r8;
	mov.u64 	%rd49, %rd1;
	bra.uni 	BB0_2;

BB0_5:
	add.s64 	%rd8, %rd4, %rd26;
	add.s64 	%rd50, %rd5, %rd26;
	add.s64 	%rd51, %rd6, %rd26;
	mul.lo.s32 	%r60, %r11, %r10;
	mul.lo.s32 	%r64, %r16, %r15;
	add.s32 	%r66, %r17, %r64;
	mad.lo.s32 	%r67, %r6, 2, %r66;
	add.s32 	%r68, %r12, %r60;
	mad.lo.s32 	%r69, %r5, %r67, %r68;
	mul.wide.s32 	%rd39, %r69, 2;
	add.s64 	%rd40, %rd4, %rd39;
	ld.global.u16 	%rs163, [%rd40];
	setp.ne.s32	%p11, %r68, 0;
	selp.b32	%r70, -1, 0, %p11;
	add.s32 	%r71, %r17, %r6;
	add.s32 	%r72, %r71, %r64;
	mul.lo.s32 	%r73, %r5, %r72;
	add.s32 	%r74, %r68, %r73;
	add.s32 	%r75, %r74, %r70;
	mul.wide.s32 	%rd41, %r75, 2;
	add.s64 	%rd42, %rd4, %rd41;
	ld.global.u16 	%rs121, [%rd42];
	setp.ne.s32	%p12, %r68, %r21;
	selp.u32	%r77, 1, 0, %p12;
	add.s32 	%r78, %r74, %r77;
	mul.wide.s32 	%rd43, %r78, 2;
	add.s64 	%rd44, %rd4, %rd43;
	ld.global.u16 	%rs127, [%rd44];
	setp.eq.s32	%p13, %r66, %r24;
	selp.b32	%r80, 0, %r5, %p13;
	add.s32 	%r81, %r80, %r12;
	add.s32 	%r82, %r81, %r60;
	add.s32 	%r83, %r82, %r73;
	mul.wide.s32 	%rd45, %r83, 2;
	add.s64 	%rd46, %rd4, %rd45;
	ld.global.u16 	%rs133, [%rd46];
	setp.eq.s32	%p14, %r66, 0;
	selp.b32	%r84, 0, %r5, %p14;
	sub.s32 	%r85, %r74, %r84;
	mul.wide.s32 	%rd47, %r85, 2;
	add.s64 	%rd48, %rd4, %rd47;
	ld.global.u16 	%rs139, [%rd48];
	ld.global.u16 	%rs154, [%rd6];
	// inline asm
	{mul.f16 %rs119,%rs3,%rs121;
}
	// inline asm
	// inline asm
	{add.f16 %rs122,%rs71,%rs119;
}
	// inline asm
	// inline asm
	{mul.f16 %rs125,%rs4,%rs127;
}
	// inline asm
	// inline asm
	{add.f16 %rs128,%rs122,%rs125;
}
	// inline asm
	// inline asm
	{mul.f16 %rs131,%rs5,%rs133;
}
	// inline asm
	// inline asm
	{add.f16 %rs134,%rs128,%rs131;
}
	// inline asm
	// inline asm
	{mul.f16 %rs137,%rs6,%rs139;
}
	// inline asm
	// inline asm
	{add.f16 %rs140,%rs134,%rs137;
}
	// inline asm
	// inline asm
	{add.f16 %rs143,%rs140,%rs74;
}
	// inline asm
	// inline asm
	{mul.f16 %rs146,%rs8,%rs163;
}
	// inline asm
	// inline asm
	{add.f16 %rs149,%rs143,%rs146;
}
	// inline asm
	// inline asm
	{mul.f16 %rs152,%rs9,%rs154;
}
	// inline asm
	// inline asm
	{add.f16 %rs155,%rs149,%rs152;
}
	// inline asm
	// inline asm
	{add.f16 %rs158,%rs155,%rs65;
}
	// inline asm
	st.global.u16 	[%rd5], %rs158;
	mov.u32 	%r87, %r3;
	mov.u64 	%rd49, %rd8;

BB0_2:
	mov.u16 	%rs161, %rs163;
	mov.u16 	%rs13, %rs162;
	mov.u16 	%rs162, %rs161;
	mov.u64 	%rd6, %rd51;
	mov.u64 	%rd5, %rd50;
	mov.u64 	%rd4, %rd49;
	mov.u32 	%r2, %r87;
	// inline asm
	{mul.f16 %rs71,%rs2,%rs162;
}
	// inline asm
	// inline asm
	{mul.f16 %rs74,%rs7,%rs13;
}
	// inline asm
	add.s32 	%r3, %r2, 1;
	setp.lt.s32	%p5, %r3, %r30;
	@%p5 bra 	BB0_5;

	mul.lo.s32 	%r33, %r11, %r10;
	add.s32 	%r35, %r33, %r12;
	setp.ne.s32	%p6, %r35, 0;
	selp.b32	%r36, -1, 0, %p6;
	add.s32 	%r38, %r17, %r6;
	mul.lo.s32 	%r41, %r16, %r15;
	add.s32 	%r42, %r38, %r41;
	mul.lo.s32 	%r43, %r5, %r42;
	add.s32 	%r44, %r35, %r43;
	add.s32 	%r45, %r44, %r36;
	mul.wide.s32 	%rd30, %r45, 2;
	add.s64 	%rd31, %rd4, %rd30;
	ld.global.u16 	%rs79, [%rd31];
	setp.ne.s32	%p7, %r35, %r21;
	selp.u32	%r47, 1, 0, %p7;
	add.s32 	%r48, %r44, %r47;
	mul.wide.s32 	%rd32, %r48, 2;
	add.s64 	%rd33, %rd4, %rd32;
	ld.global.u16 	%rs85, [%rd33];
	add.s32 	%r49, %r41, %r17;
	setp.eq.s32	%p8, %r49, %r24;
	selp.b32	%r51, 0, %r5, %p8;
	add.s32 	%r52, %r51, %r12;
	add.s32 	%r53, %r52, %r33;
	add.s32 	%r54, %r53, %r43;
	mul.wide.s32 	%rd34, %r54, 2;
	add.s64 	%rd35, %rd4, %rd34;
	ld.global.u16 	%rs91, [%rd35];
	setp.eq.s32	%p9, %r49, 0;
	selp.b32	%r55, 0, %r5, %p9;
	sub.s32 	%r56, %r44, %r55;
	mul.wide.s32 	%rd36, %r56, 2;
	add.s64 	%rd37, %rd4, %rd36;
	ld.global.u16 	%rs97, [%rd37];
	ld.global.u16 	%rs112, [%rd6];
	// inline asm
	{mul.f16 %rs77,%rs3,%rs79;
}
	// inline asm
	// inline asm
	{add.f16 %rs80,%rs71,%rs77;
}
	// inline asm
	// inline asm
	{mul.f16 %rs83,%rs4,%rs85;
}
	// inline asm
	// inline asm
	{add.f16 %rs86,%rs80,%rs83;
}
	// inline asm
	// inline asm
	{mul.f16 %rs89,%rs5,%rs91;
}
	// inline asm
	// inline asm
	{add.f16 %rs92,%rs86,%rs89;
}
	// inline asm
	// inline asm
	{mul.f16 %rs95,%rs6,%rs97;
}
	// inline asm
	// inline asm
	{add.f16 %rs98,%rs92,%rs95;
}
	// inline asm
	// inline asm
	{add.f16 %rs101,%rs98,%rs74;
}
	// inline asm
	// inline asm
	{mul.f16 %rs104,%rs8,%rs162;
}
	// inline asm
	// inline asm
	{add.f16 %rs107,%rs101,%rs104;
}
	// inline asm
	// inline asm
	{mul.f16 %rs110,%rs9,%rs112;
}
	// inline asm
	// inline asm
	{add.f16 %rs113,%rs107,%rs110;
}
	// inline asm
	// inline asm
	{add.f16 %rs116,%rs113,%rs65;
}
	// inline asm
	st.global.u16 	[%rd5], %rs116;
	add.s32 	%r88, %r88, 1;
	setp.lt.s32	%p10, %r88, 100;
	@%p10 bra 	BB0_1;

	ret;
}


