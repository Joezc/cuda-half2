# 1 "/tmp/tmpxft_000048b8_00000000-5_nn_cuda.compute_53.cudafe1.cpp"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "/tmp/tmpxft_000048b8_00000000-5_nn_cuda.compute_53.cudafe1.cpp"
# 1 "nn_cuda.cu"
#pragma GCC diagnostic ignored "-Wunused-local-typedefs"
# 1 "nn_cuda.cu"
#pragma GCC diagnostic push
# 1 "nn_cuda.cu"
#pragma GCC diagnostic ignored "-Wunused-variable"
# 1 "nn_cuda.cu"
#pragma GCC diagnostic ignored "-Wunused-function"
# 1 "nn_cuda.cu"
static char __nv_inited_managed_rt = 0; static void **__nv_fatbinhandle_for_managed_rt; static void __nv_save_fatbinhandle_for_managed_rt(void **in){__nv_fatbinhandle_for_managed_rt = in;} static char __nv_init_managed_rt_with_module(void **); static inline void __nv_init_managed_rt(void) { __nv_inited_managed_rt = (__nv_inited_managed_rt ? __nv_inited_managed_rt : __nv_init_managed_rt_with_module(__nv_fatbinhandle_for_managed_rt));}
# 1 "nn_cuda.cu"
#pragma GCC diagnostic pop
# 1 "nn_cuda.cu"
#pragma GCC diagnostic ignored "-Wunused-variable"
# 1 "nn_cuda.cu"
# 1 "nn_cuda.cu"
# 61 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
#pragma GCC diagnostic push
# 64 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
#pragma GCC diagnostic ignored "-Wunused-function"
# 66 "/usr/local/cuda/bin/..//include/device_types.h"
# 98 "/usr/local/cuda/bin/..//include/vector_types.h"
# 103 "/usr/local/cuda/bin/..//include/vector_types.h"
# 109 "/usr/local/cuda/bin/..//include/vector_types.h"
# 114 "/usr/local/cuda/bin/..//include/vector_types.h"
# 119 "/usr/local/cuda/bin/..//include/vector_types.h"
# 124 "/usr/local/cuda/bin/..//include/vector_types.h"
# 129 "/usr/local/cuda/bin/..//include/vector_types.h"
# 134 "/usr/local/cuda/bin/..//include/vector_types.h"
# 139 "/usr/local/cuda/bin/..//include/vector_types.h"
# 144 "/usr/local/cuda/bin/..//include/vector_types.h"
# 149 "/usr/local/cuda/bin/..//include/vector_types.h"
# 154 "/usr/local/cuda/bin/..//include/vector_types.h"
# 159 "/usr/local/cuda/bin/..//include/vector_types.h"
# 164 "/usr/local/cuda/bin/..//include/vector_types.h"
# 169 "/usr/local/cuda/bin/..//include/vector_types.h"
# 170 "/usr/local/cuda/bin/..//include/vector_types.h"
# 172 "/usr/local/cuda/bin/..//include/vector_types.h"
# 177 "/usr/local/cuda/bin/..//include/vector_types.h"
# 182 "/usr/local/cuda/bin/..//include/vector_types.h"
# 183 "/usr/local/cuda/bin/..//include/vector_types.h"
# 185 "/usr/local/cuda/bin/..//include/vector_types.h"
# 190 "/usr/local/cuda/bin/..//include/vector_types.h"
# 195 "/usr/local/cuda/bin/..//include/vector_types.h"
# 200 "/usr/local/cuda/bin/..//include/vector_types.h"
# 205 "/usr/local/cuda/bin/..//include/vector_types.h"
# 210 "/usr/local/cuda/bin/..//include/vector_types.h"
# 220 "/usr/local/cuda/bin/..//include/vector_types.h"
# 225 "/usr/local/cuda/bin/..//include/vector_types.h"
# 232 "/usr/local/cuda/bin/..//include/vector_types.h"
# 237 "/usr/local/cuda/bin/..//include/vector_types.h"
# 242 "/usr/local/cuda/bin/..//include/vector_types.h"
# 247 "/usr/local/cuda/bin/..//include/vector_types.h"
# 252 "/usr/local/cuda/bin/..//include/vector_types.h"
# 274 "/usr/local/cuda/bin/..//include/vector_types.h"
# 279 "/usr/local/cuda/bin/..//include/vector_types.h"
# 284 "/usr/local/cuda/bin/..//include/vector_types.h"
# 289 "/usr/local/cuda/bin/..//include/vector_types.h"
# 294 "/usr/local/cuda/bin/..//include/vector_types.h"
# 299 "/usr/local/cuda/bin/..//include/vector_types.h"
# 304 "/usr/local/cuda/bin/..//include/vector_types.h"
# 309 "/usr/local/cuda/bin/..//include/vector_types.h"
# 314 "/usr/local/cuda/bin/..//include/vector_types.h"
# 319 "/usr/local/cuda/bin/..//include/vector_types.h"
# 324 "/usr/local/cuda/bin/..//include/vector_types.h"
# 329 "/usr/local/cuda/bin/..//include/vector_types.h"
# 334 "/usr/local/cuda/bin/..//include/vector_types.h"
# 339 "/usr/local/cuda/bin/..//include/vector_types.h"
# 344 "/usr/local/cuda/bin/..//include/vector_types.h"
# 361 "/usr/local/cuda/bin/..//include/vector_types.h"
# 362 "/usr/local/cuda/bin/..//include/vector_types.h"
# 363 "/usr/local/cuda/bin/..//include/vector_types.h"
# 364 "/usr/local/cuda/bin/..//include/vector_types.h"
# 365 "/usr/local/cuda/bin/..//include/vector_types.h"
# 366 "/usr/local/cuda/bin/..//include/vector_types.h"
# 367 "/usr/local/cuda/bin/..//include/vector_types.h"
# 368 "/usr/local/cuda/bin/..//include/vector_types.h"
# 369 "/usr/local/cuda/bin/..//include/vector_types.h"
# 370 "/usr/local/cuda/bin/..//include/vector_types.h"
# 371 "/usr/local/cuda/bin/..//include/vector_types.h"
# 372 "/usr/local/cuda/bin/..//include/vector_types.h"
# 373 "/usr/local/cuda/bin/..//include/vector_types.h"
# 374 "/usr/local/cuda/bin/..//include/vector_types.h"
# 375 "/usr/local/cuda/bin/..//include/vector_types.h"
# 376 "/usr/local/cuda/bin/..//include/vector_types.h"
# 377 "/usr/local/cuda/bin/..//include/vector_types.h"
# 378 "/usr/local/cuda/bin/..//include/vector_types.h"
# 379 "/usr/local/cuda/bin/..//include/vector_types.h"
# 380 "/usr/local/cuda/bin/..//include/vector_types.h"
# 381 "/usr/local/cuda/bin/..//include/vector_types.h"
# 382 "/usr/local/cuda/bin/..//include/vector_types.h"
# 383 "/usr/local/cuda/bin/..//include/vector_types.h"
# 384 "/usr/local/cuda/bin/..//include/vector_types.h"
# 385 "/usr/local/cuda/bin/..//include/vector_types.h"
# 386 "/usr/local/cuda/bin/..//include/vector_types.h"
# 387 "/usr/local/cuda/bin/..//include/vector_types.h"
# 388 "/usr/local/cuda/bin/..//include/vector_types.h"
# 389 "/usr/local/cuda/bin/..//include/vector_types.h"
# 390 "/usr/local/cuda/bin/..//include/vector_types.h"
# 391 "/usr/local/cuda/bin/..//include/vector_types.h"
# 392 "/usr/local/cuda/bin/..//include/vector_types.h"
# 393 "/usr/local/cuda/bin/..//include/vector_types.h"
# 394 "/usr/local/cuda/bin/..//include/vector_types.h"
# 395 "/usr/local/cuda/bin/..//include/vector_types.h"
# 396 "/usr/local/cuda/bin/..//include/vector_types.h"
# 397 "/usr/local/cuda/bin/..//include/vector_types.h"
# 398 "/usr/local/cuda/bin/..//include/vector_types.h"
# 399 "/usr/local/cuda/bin/..//include/vector_types.h"
# 400 "/usr/local/cuda/bin/..//include/vector_types.h"
# 401 "/usr/local/cuda/bin/..//include/vector_types.h"
# 402 "/usr/local/cuda/bin/..//include/vector_types.h"
# 403 "/usr/local/cuda/bin/..//include/vector_types.h"
# 404 "/usr/local/cuda/bin/..//include/vector_types.h"
# 405 "/usr/local/cuda/bin/..//include/vector_types.h"
# 406 "/usr/local/cuda/bin/..//include/vector_types.h"
# 407 "/usr/local/cuda/bin/..//include/vector_types.h"
# 408 "/usr/local/cuda/bin/..//include/vector_types.h"
# 416 "/usr/local/cuda/bin/..//include/vector_types.h"
# 426 "/usr/local/cuda/bin/..//include/vector_types.h"
# 147 "/usr/lib/gcc/x86_64-redhat-linux/4.8.5/include/stddef.h" 3
typedef long ptrdiff_t;
# 212 "/usr/lib/gcc/x86_64-redhat-linux/4.8.5/include/stddef.h" 3
typedef unsigned long size_t;



# 1 "/usr/local/cuda/bin/..//include/crt/host_runtime.h" 1 3
# 58 "/usr/local/cuda/bin/..//include/crt/host_runtime.h" 3
# 1 "/usr/local/cuda/bin/..//include/builtin_types.h" 1 3
# 56 "/usr/local/cuda/bin/..//include/builtin_types.h" 3
# 1 "/usr/local/cuda-10.0/include/device_types.h" 1 3
# 58 "/usr/local/cuda-10.0/include/device_types.h" 3
# 1 "/usr/local/cuda-10.0/include/crt/host_defines.h" 1 3
# 59 "/usr/local/cuda-10.0/include/device_types.h" 2 3







enum cudaRoundMode
{
    cudaRoundNearest,
    cudaRoundZero,
    cudaRoundPosInf,
    cudaRoundMinInf
};
# 57 "/usr/local/cuda/bin/..//include/builtin_types.h" 2 3


# 1 "/usr/local/cuda-10.0/include/driver_types.h" 1 3
# 58 "/usr/local/cuda-10.0/include/driver_types.h" 3
# 1 "/usr/local/cuda-10.0/include/crt/host_defines.h" 1 3
# 59 "/usr/local/cuda-10.0/include/driver_types.h" 2 3
# 1 "/usr/local/cuda-10.0/include/vector_types.h" 1 3
# 64 "/usr/local/cuda-10.0/include/vector_types.h" 3
# 1 "/usr/local/cuda-10.0/include/crt/host_defines.h" 1 3
# 65 "/usr/local/cuda-10.0/include/vector_types.h" 2 3
# 98 "/usr/local/cuda-10.0/include/vector_types.h" 3
struct char1
{
    signed char x;
};

struct uchar1
{
    unsigned char x;
};


struct __attribute__((aligned(2))) char2
{
    signed char x, y;
};

struct __attribute__((aligned(2))) uchar2
{
    unsigned char x, y;
};

struct char3
{
    signed char x, y, z;
};

struct uchar3
{
    unsigned char x, y, z;
};

struct __attribute__((aligned(4))) char4
{
    signed char x, y, z, w;
};

struct __attribute__((aligned(4))) uchar4
{
    unsigned char x, y, z, w;
};

struct short1
{
    short x;
};

struct ushort1
{
    unsigned short x;
};

struct __attribute__((aligned(4))) short2
{
    short x, y;
};

struct __attribute__((aligned(4))) ushort2
{
    unsigned short x, y;
};

struct short3
{
    short x, y, z;
};

struct ushort3
{
    unsigned short x, y, z;
};

struct __attribute__((aligned(8))) short4 { short x; short y; short z; short w; };
struct __attribute__((aligned(8))) ushort4 { unsigned short x; unsigned short y; unsigned short z; unsigned short w; };

struct int1
{
    int x;
};

struct uint1
{
    unsigned int x;
};

struct __attribute__((aligned(8))) int2 { int x; int y; };
struct __attribute__((aligned(8))) uint2 { unsigned int x; unsigned int y; };

struct int3
{
    int x, y, z;
};

struct uint3
{
    unsigned int x, y, z;
};

struct __attribute__((aligned(16))) int4
{
    int x, y, z, w;
};

struct __attribute__((aligned(16))) uint4
{
    unsigned int x, y, z, w;
};

struct long1
{
    long int x;
};

struct ulong1
{
    unsigned long x;
};






struct __attribute__((aligned(2*sizeof(long int)))) long2
{
    long int x, y;
};

struct __attribute__((aligned(2*sizeof(unsigned long int)))) ulong2
{
    unsigned long int x, y;
};



struct long3
{
    long int x, y, z;
};

struct ulong3
{
    unsigned long int x, y, z;
};

struct __attribute__((aligned(16))) long4
{
    long int x, y, z, w;
};

struct __attribute__((aligned(16))) ulong4
{
    unsigned long int x, y, z, w;
};

struct float1
{
    float x;
};
# 274 "/usr/local/cuda-10.0/include/vector_types.h" 3
struct __attribute__((aligned(8))) float2 { float x; float y; };




struct float3
{
    float x, y, z;
};

struct __attribute__((aligned(16))) float4
{
    float x, y, z, w;
};

struct longlong1
{
    long long int x;
};

struct ulonglong1
{
    unsigned long long int x;
};

struct __attribute__((aligned(16))) longlong2
{
    long long int x, y;
};

struct __attribute__((aligned(16))) ulonglong2
{
    unsigned long long int x, y;
};

struct longlong3
{
    long long int x, y, z;
};

struct ulonglong3
{
    unsigned long long int x, y, z;
};

struct __attribute__((aligned(16))) longlong4
{
    long long int x, y, z ,w;
};

struct __attribute__((aligned(16))) ulonglong4
{
    unsigned long long int x, y, z, w;
};

struct double1
{
    double x;
};

struct __attribute__((aligned(16))) double2
{
    double x, y;
};

struct double3
{
    double x, y, z;
};

struct __attribute__((aligned(16))) double4
{
    double x, y, z, w;
};
# 361 "/usr/local/cuda-10.0/include/vector_types.h" 3
typedef struct char1 char1;
typedef struct uchar1 uchar1;
typedef struct char2 char2;
typedef struct uchar2 uchar2;
typedef struct char3 char3;
typedef struct uchar3 uchar3;
typedef struct char4 char4;
typedef struct uchar4 uchar4;
typedef struct short1 short1;
typedef struct ushort1 ushort1;
typedef struct short2 short2;
typedef struct ushort2 ushort2;
typedef struct short3 short3;
typedef struct ushort3 ushort3;
typedef struct short4 short4;
typedef struct ushort4 ushort4;
typedef struct int1 int1;
typedef struct uint1 uint1;
typedef struct int2 int2;
typedef struct uint2 uint2;
typedef struct int3 int3;
typedef struct uint3 uint3;
typedef struct int4 int4;
typedef struct uint4 uint4;
typedef struct long1 long1;
typedef struct ulong1 ulong1;
typedef struct long2 long2;
typedef struct ulong2 ulong2;
typedef struct long3 long3;
typedef struct ulong3 ulong3;
typedef struct long4 long4;
typedef struct ulong4 ulong4;
typedef struct float1 float1;
typedef struct float2 float2;
typedef struct float3 float3;
typedef struct float4 float4;
typedef struct longlong1 longlong1;
typedef struct ulonglong1 ulonglong1;
typedef struct longlong2 longlong2;
typedef struct ulonglong2 ulonglong2;
typedef struct longlong3 longlong3;
typedef struct ulonglong3 ulonglong3;
typedef struct longlong4 longlong4;
typedef struct ulonglong4 ulonglong4;
typedef struct double1 double1;
typedef struct double2 double2;
typedef struct double3 double3;
typedef struct double4 double4;







struct dim3
{
    unsigned int x, y, z;

    dim3(unsigned int vx = 1, unsigned int vy = 1, unsigned int vz = 1) : x(vx), y(vy), z(vz) {}
    dim3(uint3 v) : x(v.x), y(v.y), z(v.z) {}
    operator uint3(void) { uint3 t; t.x = x; t.y = y; t.z = z; return t; }

};

typedef struct dim3 dim3;
# 60 "/usr/local/cuda-10.0/include/driver_types.h" 2 3
# 189 "/usr/local/cuda-10.0/include/driver_types.h" 3
enum cudaError
{





    cudaSuccess = 0,





    cudaErrorMissingConfiguration = 1,





    cudaErrorMemoryAllocation = 2,





    cudaErrorInitializationError = 3,
# 223 "/usr/local/cuda-10.0/include/driver_types.h" 3
    cudaErrorLaunchFailure = 4,
# 232 "/usr/local/cuda-10.0/include/driver_types.h" 3
    cudaErrorPriorLaunchFailure = 5,
# 243 "/usr/local/cuda-10.0/include/driver_types.h" 3
    cudaErrorLaunchTimeout = 6,
# 252 "/usr/local/cuda-10.0/include/driver_types.h" 3
    cudaErrorLaunchOutOfResources = 7,





    cudaErrorInvalidDeviceFunction = 8,
# 267 "/usr/local/cuda-10.0/include/driver_types.h" 3
    cudaErrorInvalidConfiguration = 9,





    cudaErrorInvalidDevice = 10,





    cudaErrorInvalidValue = 11,





    cudaErrorInvalidPitchValue = 12,





    cudaErrorInvalidSymbol = 13,




    cudaErrorMapBufferObjectFailed = 14,




    cudaErrorUnmapBufferObjectFailed = 15,





    cudaErrorInvalidHostPointer = 16,





    cudaErrorInvalidDevicePointer = 17,





    cudaErrorInvalidTexture = 18,





    cudaErrorInvalidTextureBinding = 19,






    cudaErrorInvalidChannelDescriptor = 20,





    cudaErrorInvalidMemcpyDirection = 21,
# 348 "/usr/local/cuda-10.0/include/driver_types.h" 3
    cudaErrorAddressOfConstant = 22,
# 357 "/usr/local/cuda-10.0/include/driver_types.h" 3
    cudaErrorTextureFetchFailed = 23,
# 366 "/usr/local/cuda-10.0/include/driver_types.h" 3
    cudaErrorTextureNotBound = 24,
# 375 "/usr/local/cuda-10.0/include/driver_types.h" 3
    cudaErrorSynchronizationError = 25,





    cudaErrorInvalidFilterSetting = 26,





    cudaErrorInvalidNormSetting = 27,







    cudaErrorMixedDeviceExecution = 28,






    cudaErrorCudartUnloading = 29,




    cudaErrorUnknown = 30,







    cudaErrorNotYetImplemented = 31,
# 424 "/usr/local/cuda-10.0/include/driver_types.h" 3
    cudaErrorMemoryValueTooLarge = 32,






    cudaErrorInvalidResourceHandle = 33,







    cudaErrorNotReady = 34,






    cudaErrorInsufficientDriver = 35,
# 459 "/usr/local/cuda-10.0/include/driver_types.h" 3
    cudaErrorSetOnActiveProcess = 36,





    cudaErrorInvalidSurface = 37,





    cudaErrorNoDevice = 38,





    cudaErrorECCUncorrectable = 39,




    cudaErrorSharedObjectSymbolNotFound = 40,




    cudaErrorSharedObjectInitFailed = 41,





    cudaErrorUnsupportedLimit = 42,





    cudaErrorDuplicateVariableName = 43,





    cudaErrorDuplicateTextureName = 44,





    cudaErrorDuplicateSurfaceName = 45,
# 521 "/usr/local/cuda-10.0/include/driver_types.h" 3
    cudaErrorDevicesUnavailable = 46,




    cudaErrorInvalidKernelImage = 47,







    cudaErrorNoKernelImageForDevice = 48,
# 547 "/usr/local/cuda-10.0/include/driver_types.h" 3
    cudaErrorIncompatibleDriverContext = 49,






    cudaErrorPeerAccessAlreadyEnabled = 50,






    cudaErrorPeerAccessNotEnabled = 51,





    cudaErrorDeviceAlreadyInUse = 54,






    cudaErrorProfilerDisabled = 55,







    cudaErrorProfilerNotInitialized = 56,






    cudaErrorProfilerAlreadyStarted = 57,






     cudaErrorProfilerAlreadyStopped = 58,






    cudaErrorAssert = 59,






    cudaErrorTooManyPeers = 60,





    cudaErrorHostMemoryAlreadyRegistered = 61,





    cudaErrorHostMemoryNotRegistered = 62,




    cudaErrorOperatingSystem = 63,





    cudaErrorPeerAccessUnsupported = 64,






    cudaErrorLaunchMaxDepthExceeded = 65,







    cudaErrorLaunchFileScopedTex = 66,







    cudaErrorLaunchFileScopedSurf = 67,
# 671 "/usr/local/cuda-10.0/include/driver_types.h" 3
    cudaErrorSyncDepthExceeded = 68,
# 683 "/usr/local/cuda-10.0/include/driver_types.h" 3
    cudaErrorLaunchPendingCountExceeded = 69,




    cudaErrorNotPermitted = 70,





    cudaErrorNotSupported = 71,
# 703 "/usr/local/cuda-10.0/include/driver_types.h" 3
    cudaErrorHardwareStackError = 72,







    cudaErrorIllegalInstruction = 73,
# 720 "/usr/local/cuda-10.0/include/driver_types.h" 3
    cudaErrorMisalignedAddress = 74,
# 731 "/usr/local/cuda-10.0/include/driver_types.h" 3
    cudaErrorInvalidAddressSpace = 75,







    cudaErrorInvalidPc = 76,







    cudaErrorIllegalAddress = 77,





    cudaErrorInvalidPtx = 78,




    cudaErrorInvalidGraphicsContext = 79,





    cudaErrorNvlinkUncorrectable = 80,






    cudaErrorJitCompilerNotFound = 81,
# 780 "/usr/local/cuda-10.0/include/driver_types.h" 3
    cudaErrorCooperativeLaunchTooLarge = 82,






    cudaErrorSystemNotReady = 83,





    cudaErrorIllegalState = 84,




    cudaErrorStartupFailure = 127,




    cudaErrorStreamCaptureUnsupported = 900,





    cudaErrorStreamCaptureInvalidated = 901,





    cudaErrorStreamCaptureMerge = 902,




    cudaErrorStreamCaptureUnmatched = 903,





    cudaErrorStreamCaptureUnjoined = 904,






    cudaErrorStreamCaptureIsolation = 905,





    cudaErrorStreamCaptureImplicit = 906,





    cudaErrorCapturedEvent = 907,







    cudaErrorApiFailureBase = 10000
};




enum cudaChannelFormatKind
{
    cudaChannelFormatKindSigned = 0,
    cudaChannelFormatKindUnsigned = 1,
    cudaChannelFormatKindFloat = 2,
    cudaChannelFormatKindNone = 3
};




struct cudaChannelFormatDesc
{
    int x;
    int y;
    int z;
    int w;
    enum cudaChannelFormatKind f;
};




typedef struct cudaArray *cudaArray_t;




typedef const struct cudaArray *cudaArray_const_t;

struct cudaArray;




typedef struct cudaMipmappedArray *cudaMipmappedArray_t;




typedef const struct cudaMipmappedArray *cudaMipmappedArray_const_t;

struct cudaMipmappedArray;




enum cudaMemoryType
{
    cudaMemoryTypeUnregistered = 0,
    cudaMemoryTypeHost = 1,
    cudaMemoryTypeDevice = 2,
    cudaMemoryTypeManaged = 3
};




enum cudaMemcpyKind
{
    cudaMemcpyHostToHost = 0,
    cudaMemcpyHostToDevice = 1,
    cudaMemcpyDeviceToHost = 2,
    cudaMemcpyDeviceToDevice = 3,
    cudaMemcpyDefault = 4
};






struct cudaPitchedPtr
{
    void *ptr;
    size_t pitch;
    size_t xsize;
    size_t ysize;
};






struct cudaExtent
{
    size_t width;
    size_t height;
    size_t depth;
};






struct cudaPos
{
    size_t x;
    size_t y;
    size_t z;
};




struct cudaMemcpy3DParms
{
    cudaArray_t srcArray;
    struct cudaPos srcPos;
    struct cudaPitchedPtr srcPtr;

    cudaArray_t dstArray;
    struct cudaPos dstPos;
    struct cudaPitchedPtr dstPtr;

    struct cudaExtent extent;
    enum cudaMemcpyKind kind;
};




struct cudaMemcpy3DPeerParms
{
    cudaArray_t srcArray;
    struct cudaPos srcPos;
    struct cudaPitchedPtr srcPtr;
    int srcDevice;

    cudaArray_t dstArray;
    struct cudaPos dstPos;
    struct cudaPitchedPtr dstPtr;
    int dstDevice;

    struct cudaExtent extent;
};




struct cudaMemsetParams {
    void *dst;
    size_t pitch;
    unsigned int value;
    unsigned int elementSize;
    size_t width;
    size_t height;
};
# 1020 "/usr/local/cuda-10.0/include/driver_types.h" 3
typedef void ( *cudaHostFn_t)(void *userData);




struct cudaHostNodeParams {
    cudaHostFn_t fn;
    void* userData;
};




enum cudaStreamCaptureStatus {
    cudaStreamCaptureStatusNone = 0,
    cudaStreamCaptureStatusActive = 1,
    cudaStreamCaptureStatusInvalidated = 2

};




struct cudaGraphicsResource;




enum cudaGraphicsRegisterFlags
{
    cudaGraphicsRegisterFlagsNone = 0,
    cudaGraphicsRegisterFlagsReadOnly = 1,
    cudaGraphicsRegisterFlagsWriteDiscard = 2,
    cudaGraphicsRegisterFlagsSurfaceLoadStore = 4,
    cudaGraphicsRegisterFlagsTextureGather = 8
};




enum cudaGraphicsMapFlags
{
    cudaGraphicsMapFlagsNone = 0,
    cudaGraphicsMapFlagsReadOnly = 1,
    cudaGraphicsMapFlagsWriteDiscard = 2
};




enum cudaGraphicsCubeFace
{
    cudaGraphicsCubeFacePositiveX = 0x00,
    cudaGraphicsCubeFaceNegativeX = 0x01,
    cudaGraphicsCubeFacePositiveY = 0x02,
    cudaGraphicsCubeFaceNegativeY = 0x03,
    cudaGraphicsCubeFacePositiveZ = 0x04,
    cudaGraphicsCubeFaceNegativeZ = 0x05
};




enum cudaResourceType
{
    cudaResourceTypeArray = 0x00,
    cudaResourceTypeMipmappedArray = 0x01,
    cudaResourceTypeLinear = 0x02,
    cudaResourceTypePitch2D = 0x03
};




enum cudaResourceViewFormat
{
    cudaResViewFormatNone = 0x00,
    cudaResViewFormatUnsignedChar1 = 0x01,
    cudaResViewFormatUnsignedChar2 = 0x02,
    cudaResViewFormatUnsignedChar4 = 0x03,
    cudaResViewFormatSignedChar1 = 0x04,
    cudaResViewFormatSignedChar2 = 0x05,
    cudaResViewFormatSignedChar4 = 0x06,
    cudaResViewFormatUnsignedShort1 = 0x07,
    cudaResViewFormatUnsignedShort2 = 0x08,
    cudaResViewFormatUnsignedShort4 = 0x09,
    cudaResViewFormatSignedShort1 = 0x0a,
    cudaResViewFormatSignedShort2 = 0x0b,
    cudaResViewFormatSignedShort4 = 0x0c,
    cudaResViewFormatUnsignedInt1 = 0x0d,
    cudaResViewFormatUnsignedInt2 = 0x0e,
    cudaResViewFormatUnsignedInt4 = 0x0f,
    cudaResViewFormatSignedInt1 = 0x10,
    cudaResViewFormatSignedInt2 = 0x11,
    cudaResViewFormatSignedInt4 = 0x12,
    cudaResViewFormatHalf1 = 0x13,
    cudaResViewFormatHalf2 = 0x14,
    cudaResViewFormatHalf4 = 0x15,
    cudaResViewFormatFloat1 = 0x16,
    cudaResViewFormatFloat2 = 0x17,
    cudaResViewFormatFloat4 = 0x18,
    cudaResViewFormatUnsignedBlockCompressed1 = 0x19,
    cudaResViewFormatUnsignedBlockCompressed2 = 0x1a,
    cudaResViewFormatUnsignedBlockCompressed3 = 0x1b,
    cudaResViewFormatUnsignedBlockCompressed4 = 0x1c,
    cudaResViewFormatSignedBlockCompressed4 = 0x1d,
    cudaResViewFormatUnsignedBlockCompressed5 = 0x1e,
    cudaResViewFormatSignedBlockCompressed5 = 0x1f,
    cudaResViewFormatUnsignedBlockCompressed6H = 0x20,
    cudaResViewFormatSignedBlockCompressed6H = 0x21,
    cudaResViewFormatUnsignedBlockCompressed7 = 0x22
};




struct cudaResourceDesc {
    enum cudaResourceType resType;

    union {
        struct {
            cudaArray_t array;
        } array;
        struct {
            cudaMipmappedArray_t mipmap;
        } mipmap;
        struct {
            void *devPtr;
            struct cudaChannelFormatDesc desc;
            size_t sizeInBytes;
        } linear;
        struct {
            void *devPtr;
            struct cudaChannelFormatDesc desc;
            size_t width;
            size_t height;
            size_t pitchInBytes;
        } pitch2D;
    } res;
};




struct cudaResourceViewDesc
{
    enum cudaResourceViewFormat format;
    size_t width;
    size_t height;
    size_t depth;
    unsigned int firstMipmapLevel;
    unsigned int lastMipmapLevel;
    unsigned int firstLayer;
    unsigned int lastLayer;
};




struct cudaPointerAttributes
{
# 1189 "/usr/local/cuda-10.0/include/driver_types.h" 3
    __attribute__((deprecated)) enum cudaMemoryType memoryType;





    enum cudaMemoryType type;
# 1206 "/usr/local/cuda-10.0/include/driver_types.h" 3
    int device;





    void *devicePointer;
# 1221 "/usr/local/cuda-10.0/include/driver_types.h" 3
    void *hostPointer;






    __attribute__((deprecated)) int isManaged;
};




struct cudaFuncAttributes
{





   size_t sharedSizeBytes;





   size_t constSizeBytes;




   size_t localSizeBytes;






   int maxThreadsPerBlock;




   int numRegs;






   int ptxVersion;






   int binaryVersion;





   int cacheModeCA;






   int maxDynamicSharedSizeBytes;






   int preferredShmemCarveout;
};




enum cudaFuncAttribute
{
    cudaFuncAttributeMaxDynamicSharedMemorySize = 8,
    cudaFuncAttributePreferredSharedMemoryCarveout = 9,
    cudaFuncAttributeMax
};




enum cudaFuncCache
{
    cudaFuncCachePreferNone = 0,
    cudaFuncCachePreferShared = 1,
    cudaFuncCachePreferL1 = 2,
    cudaFuncCachePreferEqual = 3
};





enum cudaSharedMemConfig
{
    cudaSharedMemBankSizeDefault = 0,
    cudaSharedMemBankSizeFourByte = 1,
    cudaSharedMemBankSizeEightByte = 2
};




enum cudaSharedCarveout {
    cudaSharedmemCarveoutDefault = -1,
    cudaSharedmemCarveoutMaxShared = 100,
    cudaSharedmemCarveoutMaxL1 = 0
};




enum cudaComputeMode
{
    cudaComputeModeDefault = 0,
    cudaComputeModeExclusive = 1,
    cudaComputeModeProhibited = 2,
    cudaComputeModeExclusiveProcess = 3
};




enum cudaLimit
{
    cudaLimitStackSize = 0x00,
    cudaLimitPrintfFifoSize = 0x01,
    cudaLimitMallocHeapSize = 0x02,
    cudaLimitDevRuntimeSyncDepth = 0x03,
    cudaLimitDevRuntimePendingLaunchCount = 0x04,
    cudaLimitMaxL2FetchGranularity = 0x05
};




enum cudaMemoryAdvise
{
    cudaMemAdviseSetReadMostly = 1,
    cudaMemAdviseUnsetReadMostly = 2,
    cudaMemAdviseSetPreferredLocation = 3,
    cudaMemAdviseUnsetPreferredLocation = 4,
    cudaMemAdviseSetAccessedBy = 5,
    cudaMemAdviseUnsetAccessedBy = 6
};




enum cudaMemRangeAttribute
{
    cudaMemRangeAttributeReadMostly = 1,
    cudaMemRangeAttributePreferredLocation = 2,
    cudaMemRangeAttributeAccessedBy = 3,
    cudaMemRangeAttributeLastPrefetchLocation = 4
};




enum cudaOutputMode
{
    cudaKeyValuePair = 0x00,
    cudaCSV = 0x01
};




enum cudaDeviceAttr
{
    cudaDevAttrMaxThreadsPerBlock = 1,
    cudaDevAttrMaxBlockDimX = 2,
    cudaDevAttrMaxBlockDimY = 3,
    cudaDevAttrMaxBlockDimZ = 4,
    cudaDevAttrMaxGridDimX = 5,
    cudaDevAttrMaxGridDimY = 6,
    cudaDevAttrMaxGridDimZ = 7,
    cudaDevAttrMaxSharedMemoryPerBlock = 8,
    cudaDevAttrTotalConstantMemory = 9,
    cudaDevAttrWarpSize = 10,
    cudaDevAttrMaxPitch = 11,
    cudaDevAttrMaxRegistersPerBlock = 12,
    cudaDevAttrClockRate = 13,
    cudaDevAttrTextureAlignment = 14,
    cudaDevAttrGpuOverlap = 15,
    cudaDevAttrMultiProcessorCount = 16,
    cudaDevAttrKernelExecTimeout = 17,
    cudaDevAttrIntegrated = 18,
    cudaDevAttrCanMapHostMemory = 19,
    cudaDevAttrComputeMode = 20,
    cudaDevAttrMaxTexture1DWidth = 21,
    cudaDevAttrMaxTexture2DWidth = 22,
    cudaDevAttrMaxTexture2DHeight = 23,
    cudaDevAttrMaxTexture3DWidth = 24,
    cudaDevAttrMaxTexture3DHeight = 25,
    cudaDevAttrMaxTexture3DDepth = 26,
    cudaDevAttrMaxTexture2DLayeredWidth = 27,
    cudaDevAttrMaxTexture2DLayeredHeight = 28,
    cudaDevAttrMaxTexture2DLayeredLayers = 29,
    cudaDevAttrSurfaceAlignment = 30,
    cudaDevAttrConcurrentKernels = 31,
    cudaDevAttrEccEnabled = 32,
    cudaDevAttrPciBusId = 33,
    cudaDevAttrPciDeviceId = 34,
    cudaDevAttrTccDriver = 35,
    cudaDevAttrMemoryClockRate = 36,
    cudaDevAttrGlobalMemoryBusWidth = 37,
    cudaDevAttrL2CacheSize = 38,
    cudaDevAttrMaxThreadsPerMultiProcessor = 39,
    cudaDevAttrAsyncEngineCount = 40,
    cudaDevAttrUnifiedAddressing = 41,
    cudaDevAttrMaxTexture1DLayeredWidth = 42,
    cudaDevAttrMaxTexture1DLayeredLayers = 43,
    cudaDevAttrMaxTexture2DGatherWidth = 45,
    cudaDevAttrMaxTexture2DGatherHeight = 46,
    cudaDevAttrMaxTexture3DWidthAlt = 47,
    cudaDevAttrMaxTexture3DHeightAlt = 48,
    cudaDevAttrMaxTexture3DDepthAlt = 49,
    cudaDevAttrPciDomainId = 50,
    cudaDevAttrTexturePitchAlignment = 51,
    cudaDevAttrMaxTextureCubemapWidth = 52,
    cudaDevAttrMaxTextureCubemapLayeredWidth = 53,
    cudaDevAttrMaxTextureCubemapLayeredLayers = 54,
    cudaDevAttrMaxSurface1DWidth = 55,
    cudaDevAttrMaxSurface2DWidth = 56,
    cudaDevAttrMaxSurface2DHeight = 57,
    cudaDevAttrMaxSurface3DWidth = 58,
    cudaDevAttrMaxSurface3DHeight = 59,
    cudaDevAttrMaxSurface3DDepth = 60,
    cudaDevAttrMaxSurface1DLayeredWidth = 61,
    cudaDevAttrMaxSurface1DLayeredLayers = 62,
    cudaDevAttrMaxSurface2DLayeredWidth = 63,
    cudaDevAttrMaxSurface2DLayeredHeight = 64,
    cudaDevAttrMaxSurface2DLayeredLayers = 65,
    cudaDevAttrMaxSurfaceCubemapWidth = 66,
    cudaDevAttrMaxSurfaceCubemapLayeredWidth = 67,
    cudaDevAttrMaxSurfaceCubemapLayeredLayers = 68,
    cudaDevAttrMaxTexture1DLinearWidth = 69,
    cudaDevAttrMaxTexture2DLinearWidth = 70,
    cudaDevAttrMaxTexture2DLinearHeight = 71,
    cudaDevAttrMaxTexture2DLinearPitch = 72,
    cudaDevAttrMaxTexture2DMipmappedWidth = 73,
    cudaDevAttrMaxTexture2DMipmappedHeight = 74,
    cudaDevAttrComputeCapabilityMajor = 75,
    cudaDevAttrComputeCapabilityMinor = 76,
    cudaDevAttrMaxTexture1DMipmappedWidth = 77,
    cudaDevAttrStreamPrioritiesSupported = 78,
    cudaDevAttrGlobalL1CacheSupported = 79,
    cudaDevAttrLocalL1CacheSupported = 80,
    cudaDevAttrMaxSharedMemoryPerMultiprocessor = 81,
    cudaDevAttrMaxRegistersPerMultiprocessor = 82,
    cudaDevAttrManagedMemory = 83,
    cudaDevAttrIsMultiGpuBoard = 84,
    cudaDevAttrMultiGpuBoardGroupID = 85,
    cudaDevAttrHostNativeAtomicSupported = 86,
    cudaDevAttrSingleToDoublePrecisionPerfRatio = 87,
    cudaDevAttrPageableMemoryAccess = 88,
    cudaDevAttrConcurrentManagedAccess = 89,
    cudaDevAttrComputePreemptionSupported = 90,
    cudaDevAttrCanUseHostPointerForRegisteredMem = 91,
    cudaDevAttrReserved92 = 92,
    cudaDevAttrReserved93 = 93,
    cudaDevAttrReserved94 = 94,
    cudaDevAttrCooperativeLaunch = 95,
    cudaDevAttrCooperativeMultiDeviceLaunch = 96,
    cudaDevAttrMaxSharedMemoryPerBlockOptin = 97,
    cudaDevAttrCanFlushRemoteWrites = 98,
    cudaDevAttrHostRegisterSupported = 99,
    cudaDevAttrPageableMemoryAccessUsesHostPageTables = 100,
    cudaDevAttrDirectManagedMemAccessFromHost = 101
};





enum cudaDeviceP2PAttr {
    cudaDevP2PAttrPerformanceRank = 1,
    cudaDevP2PAttrAccessSupported = 2,
    cudaDevP2PAttrNativeAtomicSupported = 3,
    cudaDevP2PAttrCudaArrayAccessSupported = 4
};






struct CUuuid_st {
    char bytes[16];
};
typedef struct CUuuid_st CUuuid;

typedef struct CUuuid_st cudaUUID_t;




struct cudaDeviceProp
{
    char name[256];
    cudaUUID_t uuid;
    char luid[8];
    unsigned int luidDeviceNodeMask;
    size_t totalGlobalMem;
    size_t sharedMemPerBlock;
    int regsPerBlock;
    int warpSize;
    size_t memPitch;
    int maxThreadsPerBlock;
    int maxThreadsDim[3];
    int maxGridSize[3];
    int clockRate;
    size_t totalConstMem;
    int major;
    int minor;
    size_t textureAlignment;
    size_t texturePitchAlignment;
    int deviceOverlap;
    int multiProcessorCount;
    int kernelExecTimeoutEnabled;
    int integrated;
    int canMapHostMemory;
    int computeMode;
    int maxTexture1D;
    int maxTexture1DMipmap;
    int maxTexture1DLinear;
    int maxTexture2D[2];
    int maxTexture2DMipmap[2];
    int maxTexture2DLinear[3];
    int maxTexture2DGather[2];
    int maxTexture3D[3];
    int maxTexture3DAlt[3];
    int maxTextureCubemap;
    int maxTexture1DLayered[2];
    int maxTexture2DLayered[3];
    int maxTextureCubemapLayered[2];
    int maxSurface1D;
    int maxSurface2D[2];
    int maxSurface3D[3];
    int maxSurface1DLayered[2];
    int maxSurface2DLayered[3];
    int maxSurfaceCubemap;
    int maxSurfaceCubemapLayered[2];
    size_t surfaceAlignment;
    int concurrentKernels;
    int ECCEnabled;
    int pciBusID;
    int pciDeviceID;
    int pciDomainID;
    int tccDriver;
    int asyncEngineCount;
    int unifiedAddressing;
    int memoryClockRate;
    int memoryBusWidth;
    int l2CacheSize;
    int maxThreadsPerMultiProcessor;
    int streamPrioritiesSupported;
    int globalL1CacheSupported;
    int localL1CacheSupported;
    size_t sharedMemPerMultiprocessor;
    int regsPerMultiprocessor;
    int managedMemory;
    int isMultiGpuBoard;
    int multiGpuBoardGroupID;
    int hostNativeAtomicSupported;
    int singleToDoublePrecisionPerfRatio;
    int pageableMemoryAccess;
    int concurrentManagedAccess;
    int computePreemptionSupported;
    int canUseHostPointerForRegisteredMem;
    int cooperativeLaunch;
    int cooperativeMultiDeviceLaunch;
    size_t sharedMemPerBlockOptin;
    int pageableMemoryAccessUsesHostPageTables;
    int directManagedMemAccessFromHost;
};
# 1700 "/usr/local/cuda-10.0/include/driver_types.h" 3
typedef struct cudaIpcEventHandle_st
{
    char reserved[64];
}cudaIpcEventHandle_t;




typedef struct cudaIpcMemHandle_st
{
    char reserved[64];
}cudaIpcMemHandle_t;




enum cudaExternalMemoryHandleType {



    cudaExternalMemoryHandleTypeOpaqueFd = 1,



    cudaExternalMemoryHandleTypeOpaqueWin32 = 2,



    cudaExternalMemoryHandleTypeOpaqueWin32Kmt = 3,



    cudaExternalMemoryHandleTypeD3D12Heap = 4,



    cudaExternalMemoryHandleTypeD3D12Resource = 5
};
# 1747 "/usr/local/cuda-10.0/include/driver_types.h" 3
struct cudaExternalMemoryHandleDesc {



    enum cudaExternalMemoryHandleType type;
    union {





        int fd;
# 1770 "/usr/local/cuda-10.0/include/driver_types.h" 3
        struct {



            void *handle;




            const void *name;
        } win32;
    } handle;



    unsigned long long size;



    unsigned int flags;
};




struct cudaExternalMemoryBufferDesc {



    unsigned long long offset;



    unsigned long long size;



    unsigned int flags;
};




struct cudaExternalMemoryMipmappedArrayDesc {




    unsigned long long offset;



    struct cudaChannelFormatDesc formatDesc;



    struct cudaExtent extent;




    unsigned int flags;



    unsigned int numLevels;
};




enum cudaExternalSemaphoreHandleType {



    cudaExternalSemaphoreHandleTypeOpaqueFd = 1,



    cudaExternalSemaphoreHandleTypeOpaqueWin32 = 2,



    cudaExternalSemaphoreHandleTypeOpaqueWin32Kmt = 3,



    cudaExternalSemaphoreHandleTypeD3D12Fence = 4
};




struct cudaExternalSemaphoreHandleDesc {



    enum cudaExternalSemaphoreHandleType type;
    union {




        int fd;
# 1884 "/usr/local/cuda-10.0/include/driver_types.h" 3
        struct {



            void *handle;




            const void *name;
        } win32;
    } handle;



    unsigned int flags;
};




struct cudaExternalSemaphoreSignalParams {
    union {



        struct {



            unsigned long long value;
        } fence;
    } params;



    unsigned int flags;
};




struct cudaExternalSemaphoreWaitParams {
    union {



        struct {



            unsigned long long value;
        } fence;
    } params;



    unsigned int flags;
};
# 1954 "/usr/local/cuda-10.0/include/driver_types.h" 3
typedef enum cudaError cudaError_t;




typedef struct CUstream_st *cudaStream_t;




typedef struct CUevent_st *cudaEvent_t;




typedef struct cudaGraphicsResource *cudaGraphicsResource_t;




typedef enum cudaOutputMode cudaOutputMode_t;




typedef struct CUexternalMemory_st *cudaExternalMemory_t;




typedef struct CUexternalSemaphore_st *cudaExternalSemaphore_t;




typedef struct CUgraph_st *cudaGraph_t;




typedef struct CUgraphNode_st *cudaGraphNode_t;




enum cudaCGScope {
    cudaCGScopeInvalid = 0,
    cudaCGScopeGrid = 1,
    cudaCGScopeMultiGrid = 2
};




struct cudaLaunchParams
{
    void *func;
    dim3 gridDim;
    dim3 blockDim;
    void **args;
    size_t sharedMem;
    cudaStream_t stream;
};




struct cudaKernelNodeParams {
    void* func;
    dim3 gridDim;
    dim3 blockDim;
    unsigned int sharedMemBytes;
    void **kernelParams;
    void **extra;
};




enum cudaGraphNodeType {
    cudaGraphNodeTypeKernel = 0x00,
    cudaGraphNodeTypeMemcpy = 0x01,
    cudaGraphNodeTypeMemset = 0x02,
    cudaGraphNodeTypeHost = 0x03,
    cudaGraphNodeTypeGraph = 0x04,
    cudaGraphNodeTypeEmpty = 0x05,
    cudaGraphNodeTypeCount
};




typedef struct CUgraphExec_st* cudaGraphExec_t;
# 60 "/usr/local/cuda/bin/..//include/builtin_types.h" 2 3


# 1 "/usr/local/cuda-10.0/include/surface_types.h" 1 3
# 59 "/usr/local/cuda-10.0/include/surface_types.h" 3
# 1 "/usr/local/cuda-10.0/include/driver_types.h" 1 3
# 60 "/usr/local/cuda-10.0/include/surface_types.h" 2 3
# 84 "/usr/local/cuda-10.0/include/surface_types.h" 3
enum cudaSurfaceBoundaryMode
{
    cudaBoundaryModeZero = 0,
    cudaBoundaryModeClamp = 1,
    cudaBoundaryModeTrap = 2
};




enum cudaSurfaceFormatMode
{
    cudaFormatModeForced = 0,
    cudaFormatModeAuto = 1
};




struct surfaceReference
{



    struct cudaChannelFormatDesc channelDesc;
};




typedef unsigned long long cudaSurfaceObject_t;
# 63 "/usr/local/cuda/bin/..//include/builtin_types.h" 2 3
# 1 "/usr/local/cuda-10.0/include/texture_types.h" 1 3
# 84 "/usr/local/cuda-10.0/include/texture_types.h" 3
enum cudaTextureAddressMode
{
    cudaAddressModeWrap = 0,
    cudaAddressModeClamp = 1,
    cudaAddressModeMirror = 2,
    cudaAddressModeBorder = 3
};




enum cudaTextureFilterMode
{
    cudaFilterModePoint = 0,
    cudaFilterModeLinear = 1
};




enum cudaTextureReadMode
{
    cudaReadModeElementType = 0,
    cudaReadModeNormalizedFloat = 1
};




struct textureReference
{



    int normalized;



    enum cudaTextureFilterMode filterMode;



    enum cudaTextureAddressMode addressMode[3];



    struct cudaChannelFormatDesc channelDesc;



    int sRGB;



    unsigned int maxAnisotropy;



    enum cudaTextureFilterMode mipmapFilterMode;



    float mipmapLevelBias;



    float minMipmapLevelClamp;



    float maxMipmapLevelClamp;
    int __cudaReserved[15];
};




struct cudaTextureDesc
{



    enum cudaTextureAddressMode addressMode[3];



    enum cudaTextureFilterMode filterMode;



    enum cudaTextureReadMode readMode;



    int sRGB;



    float borderColor[4];



    int normalizedCoords;



    unsigned int maxAnisotropy;



    enum cudaTextureFilterMode mipmapFilterMode;



    float mipmapLevelBias;



    float minMipmapLevelClamp;



    float maxMipmapLevelClamp;
};




typedef unsigned long long cudaTextureObject_t;
# 64 "/usr/local/cuda/bin/..//include/builtin_types.h" 2 3
# 1 "/usr/local/cuda-10.0/include/vector_types.h" 1 3
# 64 "/usr/local/cuda/bin/..//include/builtin_types.h" 2 3
# 59 "/usr/local/cuda/bin/..//include/crt/host_runtime.h" 2 3
# 1 "/usr/local/cuda-10.0/include/crt/storage_class.h" 1 3
# 60 "/usr/local/cuda/bin/..//include/crt/host_runtime.h" 2 3
# 217 "/usr/lib/gcc/x86_64-redhat-linux/4.8.5/include/stddef.h" 2 3
# 189 "/usr/local/cuda/bin/..//include/driver_types.h"
# 859 "/usr/local/cuda/bin/..//include/driver_types.h"
# 870 "/usr/local/cuda/bin/..//include/driver_types.h"
# 882 "/usr/local/cuda/bin/..//include/driver_types.h"
typedef struct cudaArray *cudaArray_t;
# 887 "/usr/local/cuda/bin/..//include/driver_types.h"
typedef const cudaArray *cudaArray_const_t;
# 889 "/usr/local/cuda/bin/..//include/driver_types.h"
struct cudaArray;
# 894 "/usr/local/cuda/bin/..//include/driver_types.h"
typedef struct cudaMipmappedArray *cudaMipmappedArray_t;
# 899 "/usr/local/cuda/bin/..//include/driver_types.h"
typedef const cudaMipmappedArray *cudaMipmappedArray_const_t;
# 901 "/usr/local/cuda/bin/..//include/driver_types.h"
struct cudaMipmappedArray;
# 906 "/usr/local/cuda/bin/..//include/driver_types.h"
# 917 "/usr/local/cuda/bin/..//include/driver_types.h"
# 931 "/usr/local/cuda/bin/..//include/driver_types.h"
# 944 "/usr/local/cuda/bin/..//include/driver_types.h"
# 956 "/usr/local/cuda/bin/..//include/driver_types.h"
# 966 "/usr/local/cuda/bin/..//include/driver_types.h"
# 983 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1001 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1020 "/usr/local/cuda/bin/..//include/driver_types.h"
typedef void (*cudaHostFn_t)(void * userData);
# 1025 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1033 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1043 "/usr/local/cuda/bin/..//include/driver_types.h"
struct cudaGraphicsResource;
# 1048 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1060 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1070 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1083 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1094 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1136 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1164 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1179 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1234 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1304 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1314 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1326 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1336 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1345 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1356 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1369 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1382 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1393 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1402 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1510 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1522 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1525 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1527 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1532 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1703 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1711 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1716 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1747 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1795 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1813 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1841 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1863 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1905 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1926 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1954 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1959 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1964 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1969 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1974 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1979 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1984 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1989 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1994 "/usr/local/cuda/bin/..//include/driver_types.h"
# 1999 "/usr/local/cuda/bin/..//include/driver_types.h"
# 2008 "/usr/local/cuda/bin/..//include/driver_types.h"
# 2021 "/usr/local/cuda/bin/..//include/driver_types.h"
# 2033 "/usr/local/cuda/bin/..//include/driver_types.h"
# 2046 "/usr/local/cuda/bin/..//include/driver_types.h"
typedef struct CUgraphExec_st *cudaGraphExec_t;
# 84 "/usr/local/cuda/bin/..//include/surface_types.h"
# 94 "/usr/local/cuda/bin/..//include/surface_types.h"
# 103 "/usr/local/cuda/bin/..//include/surface_types.h"
# 114 "/usr/local/cuda/bin/..//include/surface_types.h"
# 84 "/usr/local/cuda/bin/..//include/texture_types.h"
# 95 "/usr/local/cuda/bin/..//include/texture_types.h"
# 104 "/usr/local/cuda/bin/..//include/texture_types.h"
# 113 "/usr/local/cuda/bin/..//include/texture_types.h"
# 161 "/usr/local/cuda/bin/..//include/texture_types.h"
# 212 "/usr/local/cuda/bin/..//include/texture_types.h"
# 70 "/usr/local/cuda/bin/..//include/library_types.h"
typedef
# 54 "/usr/local/cuda/bin/..//include/library_types.h"
enum cudaDataType_t {
# 56 "/usr/local/cuda/bin/..//include/library_types.h"
CUDA_R_16F = 2,
# 57 "/usr/local/cuda/bin/..//include/library_types.h"
CUDA_C_16F = 6,
# 58 "/usr/local/cuda/bin/..//include/library_types.h"
CUDA_R_32F = 0,
# 59 "/usr/local/cuda/bin/..//include/library_types.h"
CUDA_C_32F = 4,
# 60 "/usr/local/cuda/bin/..//include/library_types.h"
CUDA_R_64F = 1,
# 61 "/usr/local/cuda/bin/..//include/library_types.h"
CUDA_C_64F = 5,
# 62 "/usr/local/cuda/bin/..//include/library_types.h"
CUDA_R_8I = 3,
# 63 "/usr/local/cuda/bin/..//include/library_types.h"
CUDA_C_8I = 7,
# 64 "/usr/local/cuda/bin/..//include/library_types.h"
CUDA_R_8U,
# 65 "/usr/local/cuda/bin/..//include/library_types.h"
CUDA_C_8U,
# 66 "/usr/local/cuda/bin/..//include/library_types.h"
CUDA_R_32I,
# 67 "/usr/local/cuda/bin/..//include/library_types.h"
CUDA_C_32I,
# 68 "/usr/local/cuda/bin/..//include/library_types.h"
CUDA_R_32U,
# 69 "/usr/local/cuda/bin/..//include/library_types.h"
CUDA_C_32U
# 70 "/usr/local/cuda/bin/..//include/library_types.h"
} cudaDataType;
# 78 "/usr/local/cuda/bin/..//include/library_types.h"
typedef
# 73 "/usr/local/cuda/bin/..//include/library_types.h"
enum libraryPropertyType_t {
# 75 "/usr/local/cuda/bin/..//include/library_types.h"
MAJOR_VERSION,
# 76 "/usr/local/cuda/bin/..//include/library_types.h"
MINOR_VERSION,
# 77 "/usr/local/cuda/bin/..//include/library_types.h"
PATCH_LEVEL
# 78 "/usr/local/cuda/bin/..//include/library_types.h"
} libraryPropertyType;
# 121 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
extern "C" {
# 123 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaDeviceGetAttribute(int * value, cudaDeviceAttr attr, int device);
# 124 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaDeviceGetLimit(size_t * pValue, cudaLimit limit);
# 125 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaDeviceGetCacheConfig(cudaFuncCache * pCacheConfig);
# 126 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaDeviceGetSharedMemConfig(cudaSharedMemConfig * pConfig);
# 127 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaDeviceSynchronize();
# 128 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaGetLastError();
# 129 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaPeekAtLastError();
# 130 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
extern const char *cudaGetErrorString(cudaError_t error);
# 131 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
extern const char *cudaGetErrorName(cudaError_t error);
# 132 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaGetDeviceCount(int * count);
# 133 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaGetDevice(int * device);
# 134 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaStreamCreateWithFlags(cudaStream_t * pStream, unsigned flags);
# 135 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaStreamDestroy(cudaStream_t stream);
# 136 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaStreamWaitEvent(cudaStream_t stream, cudaEvent_t event, unsigned flags);
# 137 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
__attribute__((unused)) extern cudaError_t cudaStreamWaitEvent_ptsz(cudaStream_t stream, cudaEvent_t event, unsigned flags);
# 138 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaEventCreateWithFlags(cudaEvent_t * event, unsigned flags);
# 139 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaEventRecord(cudaEvent_t event, cudaStream_t stream);
# 140 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
__attribute__((unused)) extern cudaError_t cudaEventRecord_ptsz(cudaEvent_t event, cudaStream_t stream);
# 141 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaEventDestroy(cudaEvent_t event);
# 142 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaFuncGetAttributes(cudaFuncAttributes * attr, const void * func);
# 143 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaFree(void * devPtr);
# 144 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaMalloc(void ** devPtr, size_t size);
# 145 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaMemcpyAsync(void * dst, const void * src, size_t count, cudaMemcpyKind kind, cudaStream_t stream);
# 146 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
__attribute__((unused)) extern cudaError_t cudaMemcpyAsync_ptsz(void * dst, const void * src, size_t count, cudaMemcpyKind kind, cudaStream_t stream);
# 147 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaMemcpy2DAsync(void * dst, size_t dpitch, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind, cudaStream_t stream);
# 148 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
__attribute__((unused)) extern cudaError_t cudaMemcpy2DAsync_ptsz(void * dst, size_t dpitch, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind, cudaStream_t stream);
# 149 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaMemcpy3DAsync(const cudaMemcpy3DParms * p, cudaStream_t stream);
# 150 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
__attribute__((unused)) extern cudaError_t cudaMemcpy3DAsync_ptsz(const cudaMemcpy3DParms * p, cudaStream_t stream);
# 151 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaMemsetAsync(void * devPtr, int value, size_t count, cudaStream_t stream);
# 152 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
__attribute__((unused)) extern cudaError_t cudaMemsetAsync_ptsz(void * devPtr, int value, size_t count, cudaStream_t stream);
# 153 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaMemset2DAsync(void * devPtr, size_t pitch, int value, size_t width, size_t height, cudaStream_t stream);
# 154 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
__attribute__((unused)) extern cudaError_t cudaMemset2DAsync_ptsz(void * devPtr, size_t pitch, int value, size_t width, size_t height, cudaStream_t stream);
# 155 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaMemset3DAsync(cudaPitchedPtr pitchedDevPtr, int value, cudaExtent extent, cudaStream_t stream);
# 156 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
__attribute__((unused)) extern cudaError_t cudaMemset3DAsync_ptsz(cudaPitchedPtr pitchedDevPtr, int value, cudaExtent extent, cudaStream_t stream);
# 157 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaRuntimeGetVersion(int * runtimeVersion);
# 178 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
__attribute__((unused)) extern void *cudaGetParameterBuffer(size_t alignment, size_t size);
# 206 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
__attribute__((unused)) extern void *cudaGetParameterBufferV2(void * func, dim3 gridDimension, dim3 blockDimension, unsigned sharedMemSize);
# 207 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
__attribute__((unused)) extern cudaError_t cudaLaunchDevice_ptsz(void * func, void * parameterBuffer, dim3 gridDimension, dim3 blockDimension, unsigned sharedMemSize, cudaStream_t stream);
# 208 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
__attribute__((unused)) extern cudaError_t cudaLaunchDeviceV2_ptsz(void * parameterBuffer, cudaStream_t stream);
# 226 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
__attribute__((unused)) extern cudaError_t cudaLaunchDevice(void * func, void * parameterBuffer, dim3 gridDimension, dim3 blockDimension, unsigned sharedMemSize, cudaStream_t stream);
# 227 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
__attribute__((unused)) extern cudaError_t cudaLaunchDeviceV2(void * parameterBuffer, cudaStream_t stream);
# 230 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessor(int * numBlocks, const void * func, int blockSize, size_t dynamicSmemSize);
# 231 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int * numBlocks, const void * func, int blockSize, size_t dynamicSmemSize, unsigned flags);
# 233 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
__attribute__((unused)) extern unsigned long long cudaCGGetIntrinsicHandle(cudaCGScope scope);
# 234 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
__attribute__((unused)) extern cudaError_t cudaCGSynchronize(unsigned long long handle, unsigned flags);
# 235 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
__attribute__((unused)) extern cudaError_t cudaCGSynchronizeGrid(unsigned long long handle, unsigned flags);
# 236 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
__attribute__((unused)) extern cudaError_t cudaCGGetSize(unsigned * numThreads, unsigned * numGrids, unsigned long long handle);
# 237 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
__attribute__((unused)) extern cudaError_t cudaCGGetRank(unsigned * threadRank, unsigned * gridRank, unsigned long long handle);
# 238 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
}
# 240 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
template< class T> static inline cudaError_t cudaMalloc(T ** devPtr, size_t size);
# 241 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
template< class T> static inline cudaError_t cudaFuncGetAttributes(cudaFuncAttributes * attr, T * entry);
# 242 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
template< class T> static inline cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessor(int * numBlocks, T func, int blockSize, size_t dynamicSmemSize);
# 243 "/usr/local/cuda/bin/..//include/cuda_device_runtime_api.h"
template< class T> static inline cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int * numBlocks, T func, int blockSize, size_t dynamicSmemSize, unsigned flags);
# 245 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern "C" {
# 280 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceReset();
# 301 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceSynchronize();
# 380 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceSetLimit(cudaLimit limit, size_t value);
# 413 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceGetLimit(size_t * pValue, cudaLimit limit);
# 446 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceGetCacheConfig(cudaFuncCache * pCacheConfig);
# 483 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceGetStreamPriorityRange(int * leastPriority, int * greatestPriority);
# 527 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceSetCacheConfig(cudaFuncCache cacheConfig);
# 558 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceGetSharedMemConfig(cudaSharedMemConfig * pConfig);
# 602 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceSetSharedMemConfig(cudaSharedMemConfig config);
# 629 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceGetByPCIBusId(int * device, const char * pciBusId);
# 659 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceGetPCIBusId(char * pciBusId, int len, int device);
# 706 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaIpcGetEventHandle(cudaIpcEventHandle_t * handle, cudaEvent_t event);
# 746 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaIpcOpenEventHandle(cudaEvent_t * event, cudaIpcEventHandle_t handle);
# 789 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaIpcGetMemHandle(cudaIpcMemHandle_t * handle, void * devPtr);
# 844 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaIpcOpenMemHandle(void ** devPtr, cudaIpcMemHandle_t handle, unsigned flags);
# 879 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaIpcCloseMemHandle(void * devPtr);
# 921 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
__attribute((deprecated)) extern cudaError_t cudaThreadExit();
# 947 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
__attribute((deprecated)) extern cudaError_t cudaThreadSynchronize();
# 996 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
__attribute((deprecated)) extern cudaError_t cudaThreadSetLimit(cudaLimit limit, size_t value);
# 1029 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
__attribute((deprecated)) extern cudaError_t cudaThreadGetLimit(size_t * pValue, cudaLimit limit);
# 1065 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
__attribute((deprecated)) extern cudaError_t cudaThreadGetCacheConfig(cudaFuncCache * pCacheConfig);
# 1112 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
__attribute((deprecated)) extern cudaError_t cudaThreadSetCacheConfig(cudaFuncCache cacheConfig);
# 1171 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGetLastError();
# 1217 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaPeekAtLastError();
# 1233 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern const char *cudaGetErrorName(cudaError_t error);
# 1249 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern const char *cudaGetErrorString(cudaError_t error);
# 1277 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGetDeviceCount(int * count);
# 1548 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGetDeviceProperties(cudaDeviceProp * prop, int device);
# 1735 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceGetAttribute(int * value, cudaDeviceAttr attr, int device);
# 1775 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceGetP2PAttribute(int * value, cudaDeviceP2PAttr attr, int srcDevice, int dstDevice);
# 1796 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaChooseDevice(int * device, const cudaDeviceProp * prop);
# 1833 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaSetDevice(int device);
# 1854 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGetDevice(int * device);
# 1885 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaSetValidDevices(int * device_arr, int len);
# 1951 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaSetDeviceFlags(unsigned flags);
# 1997 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGetDeviceFlags(unsigned * flags);
# 2037 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaStreamCreate(cudaStream_t * pStream);
# 2069 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaStreamCreateWithFlags(cudaStream_t * pStream, unsigned flags);
# 2115 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaStreamCreateWithPriority(cudaStream_t * pStream, unsigned flags, int priority);
# 2142 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaStreamGetPriority(cudaStream_t hStream, int * priority);
# 2167 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaStreamGetFlags(cudaStream_t hStream, unsigned * flags);
# 2198 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaStreamDestroy(cudaStream_t stream);
# 2224 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaStreamWaitEvent(cudaStream_t stream, cudaEvent_t event, unsigned flags);
# 2232 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
typedef void (*cudaStreamCallback_t)(cudaStream_t stream, cudaError_t status, void * userData);
# 2299 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaStreamAddCallback(cudaStream_t stream, cudaStreamCallback_t callback, void * userData, unsigned flags);
# 2323 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaStreamSynchronize(cudaStream_t stream);
# 2348 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaStreamQuery(cudaStream_t stream);
# 2431 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaStreamAttachMemAsync(cudaStream_t stream, void * devPtr, size_t length = 0, unsigned flags = 4);
# 2460 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaStreamBeginCapture(cudaStream_t stream);
# 2484 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaStreamEndCapture(cudaStream_t stream, cudaGraph_t * pGraph);
# 2523 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaStreamIsCapturing(cudaStream_t stream, cudaStreamCaptureStatus * pCaptureStatus);
# 2561 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaEventCreate(cudaEvent_t * event);
# 2598 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaEventCreateWithFlags(cudaEvent_t * event, unsigned flags);
# 2637 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaEventRecord(cudaEvent_t event, cudaStream_t stream = 0);
# 2668 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaEventQuery(cudaEvent_t event);
# 2698 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaEventSynchronize(cudaEvent_t event);
# 2725 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaEventDestroy(cudaEvent_t event);
# 2768 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaEventElapsedTime(float * ms, cudaEvent_t start, cudaEvent_t end);
# 2903 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaImportExternalMemory(cudaExternalMemory_t * extMem_out, const cudaExternalMemoryHandleDesc * memHandleDesc);
# 2955 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaExternalMemoryGetMappedBuffer(void ** devPtr, cudaExternalMemory_t extMem, const cudaExternalMemoryBufferDesc * bufferDesc);
# 3009 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaExternalMemoryGetMappedMipmappedArray(cudaMipmappedArray_t * mipmap, cudaExternalMemory_t extMem, const cudaExternalMemoryMipmappedArrayDesc * mipmapDesc);
# 3032 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaDestroyExternalMemory(cudaExternalMemory_t extMem);
# 3126 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaImportExternalSemaphore(cudaExternalSemaphore_t * extSem_out, const cudaExternalSemaphoreHandleDesc * semHandleDesc);
# 3165 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaSignalExternalSemaphoresAsync(const cudaExternalSemaphore_t * extSemArray, const cudaExternalSemaphoreSignalParams * paramsArray, unsigned numExtSems, cudaStream_t stream = 0);
# 3208 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaWaitExternalSemaphoresAsync(const cudaExternalSemaphore_t * extSemArray, const cudaExternalSemaphoreWaitParams * paramsArray, unsigned numExtSems, cudaStream_t stream = 0);
# 3230 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaDestroyExternalSemaphore(cudaExternalSemaphore_t extSem);
# 3295 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaLaunchKernel(const void * func, dim3 gridDim, dim3 blockDim, void ** args, size_t sharedMem, cudaStream_t stream);
# 3352 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaLaunchCooperativeKernel(const void * func, dim3 gridDim, dim3 blockDim, void ** args, size_t sharedMem, cudaStream_t stream);
# 3451 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaLaunchCooperativeKernelMultiDevice(cudaLaunchParams * launchParamsList, unsigned numDevices, unsigned flags = 0);
# 3501 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaFuncSetCacheConfig(const void * func, cudaFuncCache cacheConfig);
# 3557 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaFuncSetSharedMemConfig(const void * func, cudaSharedMemConfig config);
# 3593 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaFuncGetAttributes(cudaFuncAttributes * attr, const void * func);
# 3630 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaFuncSetAttribute(const void * func, cudaFuncAttribute attr, int value);
# 3656 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
__attribute((deprecated)) extern cudaError_t cudaSetDoubleForDevice(double * d);
# 3682 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
__attribute((deprecated)) extern cudaError_t cudaSetDoubleForHost(double * d);
# 3748 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaLaunchHostFunc(cudaStream_t stream, cudaHostFn_t fn, void * userData);
# 3803 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessor(int * numBlocks, const void * func, int blockSize, size_t dynamicSMemSize);
# 3847 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int * numBlocks, const void * func, int blockSize, size_t dynamicSMemSize, unsigned flags);
# 3899 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaConfigureCall(dim3 gridDim, dim3 blockDim, size_t sharedMem = 0, cudaStream_t stream = 0);
# 3930 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaSetupArgument(const void * arg, size_t size, size_t offset);
# 3973 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaLaunch(const void * func);
# 4095 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMallocManaged(void ** devPtr, size_t size, unsigned flags = 1);
# 4126 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMalloc(void ** devPtr, size_t size);
# 4159 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMallocHost(void ** ptr, size_t size);
# 4202 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMallocPitch(void ** devPtr, size_t * pitch, size_t width, size_t height);
# 4248 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMallocArray(cudaArray_t * array, const cudaChannelFormatDesc * desc, size_t width, size_t height = 0, unsigned flags = 0);
# 4277 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaFree(void * devPtr);
# 4300 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaFreeHost(void * ptr);
# 4323 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaFreeArray(cudaArray_t array);
# 4346 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaFreeMipmappedArray(cudaMipmappedArray_t mipmappedArray);
# 4412 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaHostAlloc(void ** pHost, size_t size, unsigned flags);
# 4496 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaHostRegister(void * ptr, size_t size, unsigned flags);
# 4519 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaHostUnregister(void * ptr);
# 4564 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaHostGetDevicePointer(void ** pDevice, void * pHost, unsigned flags);
# 4586 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaHostGetFlags(unsigned * pFlags, void * pHost);
# 4625 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMalloc3D(cudaPitchedPtr * pitchedDevPtr, cudaExtent extent);
# 4764 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMalloc3DArray(cudaArray_t * array, const cudaChannelFormatDesc * desc, cudaExtent extent, unsigned flags = 0);
# 4903 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMallocMipmappedArray(cudaMipmappedArray_t * mipmappedArray, const cudaChannelFormatDesc * desc, cudaExtent extent, unsigned numLevels, unsigned flags = 0);
# 4932 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGetMipmappedArrayLevel(cudaArray_t * levelArray, cudaMipmappedArray_const_t mipmappedArray, unsigned level);
# 5037 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpy3D(const cudaMemcpy3DParms * p);
# 5068 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpy3DPeer(const cudaMemcpy3DPeerParms * p);
# 5186 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpy3DAsync(const cudaMemcpy3DParms * p, cudaStream_t stream = 0);
# 5212 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpy3DPeerAsync(const cudaMemcpy3DPeerParms * p, cudaStream_t stream = 0);
# 5234 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemGetInfo(size_t * free, size_t * total);
# 5260 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaArrayGetInfo(cudaChannelFormatDesc * desc, cudaExtent * extent, unsigned * flags, cudaArray_t array);
# 5303 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpy(void * dst, const void * src, size_t count, cudaMemcpyKind kind);
# 5338 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpyPeer(void * dst, int dstDevice, const void * src, int srcDevice, size_t count);
# 5379 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpyToArray(cudaArray_t dst, size_t wOffset, size_t hOffset, const void * src, size_t count, cudaMemcpyKind kind);
# 5419 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpyFromArray(void * dst, cudaArray_const_t src, size_t wOffset, size_t hOffset, size_t count, cudaMemcpyKind kind);
# 5460 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpyArrayToArray(cudaArray_t dst, size_t wOffsetDst, size_t hOffsetDst, cudaArray_const_t src, size_t wOffsetSrc, size_t hOffsetSrc, size_t count, cudaMemcpyKind kind = cudaMemcpyDeviceToDevice);
# 5508 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpy2D(void * dst, size_t dpitch, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind);
# 5557 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpy2DToArray(cudaArray_t dst, size_t wOffset, size_t hOffset, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind);
# 5606 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpy2DFromArray(void * dst, size_t dpitch, cudaArray_const_t src, size_t wOffset, size_t hOffset, size_t width, size_t height, cudaMemcpyKind kind);
# 5653 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpy2DArrayToArray(cudaArray_t dst, size_t wOffsetDst, size_t hOffsetDst, cudaArray_const_t src, size_t wOffsetSrc, size_t hOffsetSrc, size_t width, size_t height, cudaMemcpyKind kind = cudaMemcpyDeviceToDevice);
# 5696 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpyToSymbol(const void * symbol, const void * src, size_t count, size_t offset = 0, cudaMemcpyKind kind = cudaMemcpyHostToDevice);
# 5739 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpyFromSymbol(void * dst, const void * symbol, size_t count, size_t offset = 0, cudaMemcpyKind kind = cudaMemcpyDeviceToHost);
# 5795 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpyAsync(void * dst, const void * src, size_t count, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 5830 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpyPeerAsync(void * dst, int dstDevice, const void * src, int srcDevice, size_t count, cudaStream_t stream = 0);
# 5879 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpyToArrayAsync(cudaArray_t dst, size_t wOffset, size_t hOffset, const void * src, size_t count, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 5927 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpyFromArrayAsync(void * dst, cudaArray_const_t src, size_t wOffset, size_t hOffset, size_t count, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 5989 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpy2DAsync(void * dst, size_t dpitch, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 6046 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpy2DToArrayAsync(cudaArray_t dst, size_t wOffset, size_t hOffset, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 6102 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpy2DFromArrayAsync(void * dst, size_t dpitch, cudaArray_const_t src, size_t wOffset, size_t hOffset, size_t width, size_t height, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 6153 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpyToSymbolAsync(const void * symbol, const void * src, size_t count, size_t offset, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 6204 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpyFromSymbolAsync(void * dst, const void * symbol, size_t count, size_t offset, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 6233 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemset(void * devPtr, int value, size_t count);
# 6267 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemset2D(void * devPtr, size_t pitch, int value, size_t width, size_t height);
# 6311 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemset3D(cudaPitchedPtr pitchedDevPtr, int value, cudaExtent extent);
# 6347 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemsetAsync(void * devPtr, int value, size_t count, cudaStream_t stream = 0);
# 6388 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemset2DAsync(void * devPtr, size_t pitch, int value, size_t width, size_t height, cudaStream_t stream = 0);
# 6439 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemset3DAsync(cudaPitchedPtr pitchedDevPtr, int value, cudaExtent extent, cudaStream_t stream = 0);
# 6467 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGetSymbolAddress(void ** devPtr, const void * symbol);
# 6494 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGetSymbolSize(size_t * size, const void * symbol);
# 6564 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemPrefetchAsync(const void * devPtr, size_t count, int dstDevice, cudaStream_t stream = 0);
# 6680 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemAdvise(const void * devPtr, size_t count, cudaMemoryAdvise advice, int device);
# 6739 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemRangeGetAttribute(void * data, size_t dataSize, cudaMemRangeAttribute attribute, const void * devPtr, size_t count);
# 6778 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemRangeGetAttributes(void ** data, size_t * dataSizes, cudaMemRangeAttribute * attributes, size_t numAttributes, const void * devPtr, size_t count);
# 6944 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaPointerGetAttributes(cudaPointerAttributes * attributes, const void * ptr);
# 6985 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceCanAccessPeer(int * canAccessPeer, int device, int peerDevice);
# 7027 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceEnablePeerAccess(int peerDevice, unsigned flags);
# 7049 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceDisablePeerAccess(int peerDevice);
# 7112 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphicsUnregisterResource(cudaGraphicsResource_t resource);
# 7147 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphicsResourceSetMapFlags(cudaGraphicsResource_t resource, unsigned flags);
# 7186 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphicsMapResources(int count, cudaGraphicsResource_t * resources, cudaStream_t stream = 0);
# 7221 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphicsUnmapResources(int count, cudaGraphicsResource_t * resources, cudaStream_t stream = 0);
# 7253 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphicsResourceGetMappedPointer(void ** devPtr, size_t * size, cudaGraphicsResource_t resource);
# 7291 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphicsSubResourceGetMappedArray(cudaArray_t * array, cudaGraphicsResource_t resource, unsigned arrayIndex, unsigned mipLevel);
# 7320 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphicsResourceGetMappedMipmappedArray(cudaMipmappedArray_t * mipmappedArray, cudaGraphicsResource_t resource);
# 7362 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGetChannelDesc(cudaChannelFormatDesc * desc, cudaArray_const_t array);
# 7398 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaChannelFormatDesc cudaCreateChannelDesc(int x, int y, int z, int w, cudaChannelFormatKind f);
# 7451 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaBindTexture(size_t * offset, const textureReference * texref, const void * devPtr, const cudaChannelFormatDesc * desc, size_t size = ((2147483647) * 2U) + 1U);
# 7508 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaBindTexture2D(size_t * offset, const textureReference * texref, const void * devPtr, const cudaChannelFormatDesc * desc, size_t width, size_t height, size_t pitch);
# 7544 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaBindTextureToArray(const textureReference * texref, cudaArray_const_t array, const cudaChannelFormatDesc * desc);
# 7582 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaBindTextureToMipmappedArray(const textureReference * texref, cudaMipmappedArray_const_t mipmappedArray, const cudaChannelFormatDesc * desc);
# 7606 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaUnbindTexture(const textureReference * texref);
# 7633 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGetTextureAlignmentOffset(size_t * offset, const textureReference * texref);
# 7661 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGetTextureReference(const textureReference ** texref, const void * symbol);
# 7704 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaBindSurfaceToArray(const surfaceReference * surfref, cudaArray_const_t array, const cudaChannelFormatDesc * desc);
# 7727 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGetSurfaceReference(const surfaceReference ** surfref, const void * symbol);
# 7957 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaCreateTextureObject(cudaTextureObject_t * pTexObject, const cudaResourceDesc * pResDesc, const cudaTextureDesc * pTexDesc, const cudaResourceViewDesc * pResViewDesc);
# 7976 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaDestroyTextureObject(cudaTextureObject_t texObject);
# 7996 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGetTextureObjectResourceDesc(cudaResourceDesc * pResDesc, cudaTextureObject_t texObject);
# 8016 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGetTextureObjectTextureDesc(cudaTextureDesc * pTexDesc, cudaTextureObject_t texObject);
# 8037 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGetTextureObjectResourceViewDesc(cudaResourceViewDesc * pResViewDesc, cudaTextureObject_t texObject);
# 8080 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaCreateSurfaceObject(cudaSurfaceObject_t * pSurfObject, const cudaResourceDesc * pResDesc);
# 8099 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaDestroySurfaceObject(cudaSurfaceObject_t surfObject);
# 8118 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGetSurfaceObjectResourceDesc(cudaResourceDesc * pResDesc, cudaSurfaceObject_t surfObject);
# 8152 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaDriverGetVersion(int * driverVersion);
# 8177 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaRuntimeGetVersion(int * runtimeVersion);
# 8224 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphCreate(cudaGraph_t * pGraph, unsigned flags);
# 8321 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphAddKernelNode(cudaGraphNode_t * pGraphNode, cudaGraph_t graph, cudaGraphNode_t * pDependencies, size_t numDependencies, const cudaKernelNodeParams * pNodeParams);
# 8354 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphKernelNodeGetParams(cudaGraphNode_t node, cudaKernelNodeParams * pNodeParams);
# 8379 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphKernelNodeSetParams(cudaGraphNode_t node, const cudaKernelNodeParams * pNodeParams);
# 8423 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphAddMemcpyNode(cudaGraphNode_t * pGraphNode, cudaGraph_t graph, cudaGraphNode_t * pDependencies, size_t numDependencies, const cudaMemcpy3DParms * pCopyParams);
# 8446 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphMemcpyNodeGetParams(cudaGraphNode_t node, cudaMemcpy3DParms * pNodeParams);
# 8469 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphMemcpyNodeSetParams(cudaGraphNode_t node, const cudaMemcpy3DParms * pNodeParams);
# 8511 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphAddMemsetNode(cudaGraphNode_t * pGraphNode, cudaGraph_t graph, cudaGraphNode_t * pDependencies, size_t numDependencies, const cudaMemsetParams * pMemsetParams);
# 8534 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphMemsetNodeGetParams(cudaGraphNode_t node, cudaMemsetParams * pNodeParams);
# 8557 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphMemsetNodeSetParams(cudaGraphNode_t node, const cudaMemsetParams * pNodeParams);
# 8596 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphAddHostNode(cudaGraphNode_t * pGraphNode, cudaGraph_t graph, cudaGraphNode_t * pDependencies, size_t numDependencies, const cudaHostNodeParams * pNodeParams);
# 8619 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphHostNodeGetParams(cudaGraphNode_t node, cudaHostNodeParams * pNodeParams);
# 8642 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphHostNodeSetParams(cudaGraphNode_t node, const cudaHostNodeParams * pNodeParams);
# 8680 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphAddChildGraphNode(cudaGraphNode_t * pGraphNode, cudaGraph_t graph, cudaGraphNode_t * pDependencies, size_t numDependencies, cudaGraph_t childGraph);
# 8704 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphChildGraphNodeGetGraph(cudaGraphNode_t node, cudaGraph_t * pGraph);
# 8741 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphAddEmptyNode(cudaGraphNode_t * pGraphNode, cudaGraph_t graph, cudaGraphNode_t * pDependencies, size_t numDependencies);
# 8768 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphClone(cudaGraph_t * pGraphClone, cudaGraph_t originalGraph);
# 8796 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphNodeFindInClone(cudaGraphNode_t * pNode, cudaGraphNode_t originalNode, cudaGraph_t clonedGraph);
# 8827 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphNodeGetType(cudaGraphNode_t node, cudaGraphNodeType * pType);
# 8858 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphGetNodes(cudaGraph_t graph, cudaGraphNode_t * nodes, size_t * numNodes);
# 8889 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphGetRootNodes(cudaGraph_t graph, cudaGraphNode_t * pRootNodes, size_t * pNumRootNodes);
# 8923 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphGetEdges(cudaGraph_t graph, cudaGraphNode_t * from, cudaGraphNode_t * to, size_t * numEdges);
# 8954 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphNodeGetDependencies(cudaGraphNode_t node, cudaGraphNode_t * pDependencies, size_t * pNumDependencies);
# 8986 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphNodeGetDependentNodes(cudaGraphNode_t node, cudaGraphNode_t * pDependentNodes, size_t * pNumDependentNodes);
# 9017 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphAddDependencies(cudaGraph_t graph, cudaGraphNode_t * from, cudaGraphNode_t * to, size_t numDependencies);
# 9048 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphRemoveDependencies(cudaGraph_t graph, cudaGraphNode_t * from, cudaGraphNode_t * to, size_t numDependencies);
# 9074 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphDestroyNode(cudaGraphNode_t node);
# 9110 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphInstantiate(cudaGraphExec_t * pGraphExec, cudaGraph_t graph, cudaGraphNode_t * pErrorNode, char * pLogBuffer, size_t bufferSize);
# 9135 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphLaunch(cudaGraphExec_t graphExec, cudaStream_t stream);
# 9156 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphExecDestroy(cudaGraphExec_t graphExec);
# 9176 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphDestroy(cudaGraph_t graph);
# 9181 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGetExportTable(const void ** ppExportTable, const cudaUUID_t * pExportTableId);
# 9432 "/usr/local/cuda/bin/..//include/cuda_runtime_api.h"
}
# 104 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
template< class T> inline cudaChannelFormatDesc cudaCreateChannelDesc()
# 105 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
{
# 106 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(0, 0, 0, 0, cudaChannelFormatKindNone);
# 107 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
}
# 109 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf()
# 110 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
{
# 111 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 113 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 114 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
}
# 116 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf1()
# 117 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
{
# 118 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 120 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 121 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
}
# 123 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf2()
# 124 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
{
# 125 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 127 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindFloat);
# 128 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
}
# 130 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf4()
# 131 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
{
# 132 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 134 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindFloat);
# 135 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
}
# 137 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char> ()
# 138 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
{
# 139 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(char)) * 8);
# 144 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 146 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
}
# 148 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< signed char> ()
# 149 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
{
# 150 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 152 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 153 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
}
# 155 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned char> ()
# 156 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
{
# 157 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 159 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 160 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
}
# 162 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char1> ()
# 163 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
{
# 164 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 166 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 167 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
}
# 169 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar1> ()
# 170 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
{
# 171 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 173 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 174 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
}
# 176 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char2> ()
# 177 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
{
# 178 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 180 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 181 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
}
# 183 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar2> ()
# 184 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
{
# 185 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 187 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 188 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
}
# 190 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char4> ()
# 191 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
{
# 192 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 194 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 195 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
}
# 197 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar4> ()
# 198 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
{
# 199 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 201 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 202 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
}
# 204 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short> ()
# 205 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
{
# 206 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 208 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 209 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
}
# 211 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned short> ()
# 212 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
{
# 213 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 215 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 216 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
}
# 218 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short1> ()
# 219 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
{
# 220 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 222 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 223 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
}
# 225 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort1> ()
# 226 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
{
# 227 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 229 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 230 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
}
# 232 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short2> ()
# 233 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
{
# 234 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 236 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 237 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
}
# 239 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort2> ()
# 240 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
{
# 241 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 243 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 244 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
}
# 246 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short4> ()
# 247 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
{
# 248 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 250 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 251 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
}
# 253 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort4> ()
# 254 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
{
# 255 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 257 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 258 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
}
# 260 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int> ()
# 261 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
{
# 262 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 264 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 265 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
}
# 267 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned> ()
# 268 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
{
# 269 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 271 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 272 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
}
# 274 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int1> ()
# 275 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
{
# 276 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 278 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 279 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
}
# 281 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint1> ()
# 282 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
{
# 283 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 285 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 286 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
}
# 288 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int2> ()
# 289 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
{
# 290 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 292 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 293 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
}
# 295 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint2> ()
# 296 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
{
# 297 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 299 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 300 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
}
# 302 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int4> ()
# 303 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
{
# 304 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 306 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 307 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
}
# 309 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint4> ()
# 310 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
{
# 311 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 313 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 314 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
}
# 376 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float> ()
# 377 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
{
# 378 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 380 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 381 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
}
# 383 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float1> ()
# 384 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
{
# 385 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 387 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 388 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
}
# 390 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float2> ()
# 391 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
{
# 392 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 394 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindFloat);
# 395 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
}
# 397 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float4> ()
# 398 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
{
# 399 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 401 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindFloat);
# 402 "/usr/local/cuda/bin/..//include/channel_descriptor.h"
}
# 79 "/usr/local/cuda/bin/..//include/driver_functions.h"
static inline cudaPitchedPtr make_cudaPitchedPtr(void *d, size_t p, size_t xsz, size_t ysz)
# 80 "/usr/local/cuda/bin/..//include/driver_functions.h"
{
# 81 "/usr/local/cuda/bin/..//include/driver_functions.h"
cudaPitchedPtr s;
# 83 "/usr/local/cuda/bin/..//include/driver_functions.h"
(s.ptr) = d;
# 84 "/usr/local/cuda/bin/..//include/driver_functions.h"
(s.pitch) = p;
# 85 "/usr/local/cuda/bin/..//include/driver_functions.h"
(s.xsize) = xsz;
# 86 "/usr/local/cuda/bin/..//include/driver_functions.h"
(s.ysize) = ysz;
# 88 "/usr/local/cuda/bin/..//include/driver_functions.h"
return s;
# 89 "/usr/local/cuda/bin/..//include/driver_functions.h"
}
# 106 "/usr/local/cuda/bin/..//include/driver_functions.h"
static inline cudaPos make_cudaPos(size_t x, size_t y, size_t z)
# 107 "/usr/local/cuda/bin/..//include/driver_functions.h"
{
# 108 "/usr/local/cuda/bin/..//include/driver_functions.h"
cudaPos p;
# 110 "/usr/local/cuda/bin/..//include/driver_functions.h"
(p.x) = x;
# 111 "/usr/local/cuda/bin/..//include/driver_functions.h"
(p.y) = y;
# 112 "/usr/local/cuda/bin/..//include/driver_functions.h"
(p.z) = z;
# 114 "/usr/local/cuda/bin/..//include/driver_functions.h"
return p;
# 115 "/usr/local/cuda/bin/..//include/driver_functions.h"
}
# 132 "/usr/local/cuda/bin/..//include/driver_functions.h"
static inline cudaExtent make_cudaExtent(size_t w, size_t h, size_t d)
# 133 "/usr/local/cuda/bin/..//include/driver_functions.h"
{
# 134 "/usr/local/cuda/bin/..//include/driver_functions.h"
cudaExtent e;
# 136 "/usr/local/cuda/bin/..//include/driver_functions.h"
(e.width) = w;
# 137 "/usr/local/cuda/bin/..//include/driver_functions.h"
(e.height) = h;
# 138 "/usr/local/cuda/bin/..//include/driver_functions.h"
(e.depth) = d;
# 140 "/usr/local/cuda/bin/..//include/driver_functions.h"
return e;
# 141 "/usr/local/cuda/bin/..//include/driver_functions.h"
}
# 73 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline char1 make_char1(signed char x);
# 75 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline uchar1 make_uchar1(unsigned char x);
# 77 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline char2 make_char2(signed char x, signed char y);
# 79 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline uchar2 make_uchar2(unsigned char x, unsigned char y);
# 81 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline char3 make_char3(signed char x, signed char y, signed char z);
# 83 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline uchar3 make_uchar3(unsigned char x, unsigned char y, unsigned char z);
# 85 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline char4 make_char4(signed char x, signed char y, signed char z, signed char w);
# 87 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline uchar4 make_uchar4(unsigned char x, unsigned char y, unsigned char z, unsigned char w);
# 89 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline short1 make_short1(short x);
# 91 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline ushort1 make_ushort1(unsigned short x);
# 93 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline short2 make_short2(short x, short y);
# 95 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline ushort2 make_ushort2(unsigned short x, unsigned short y);
# 97 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline short3 make_short3(short x, short y, short z);
# 99 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline ushort3 make_ushort3(unsigned short x, unsigned short y, unsigned short z);
# 101 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline short4 make_short4(short x, short y, short z, short w);
# 103 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline ushort4 make_ushort4(unsigned short x, unsigned short y, unsigned short z, unsigned short w);
# 105 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline int1 make_int1(int x);
# 107 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline uint1 make_uint1(unsigned x);
# 109 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline int2 make_int2(int x, int y);
# 111 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline uint2 make_uint2(unsigned x, unsigned y);
# 113 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline int3 make_int3(int x, int y, int z);
# 115 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline uint3 make_uint3(unsigned x, unsigned y, unsigned z);
# 117 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline int4 make_int4(int x, int y, int z, int w);
# 119 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline uint4 make_uint4(unsigned x, unsigned y, unsigned z, unsigned w);
# 121 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline long1 make_long1(long x);
# 123 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline ulong1 make_ulong1(unsigned long x);
# 125 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline long2 make_long2(long x, long y);
# 127 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline ulong2 make_ulong2(unsigned long x, unsigned long y);
# 129 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline long3 make_long3(long x, long y, long z);
# 131 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline ulong3 make_ulong3(unsigned long x, unsigned long y, unsigned long z);
# 133 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline long4 make_long4(long x, long y, long z, long w);
# 135 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline ulong4 make_ulong4(unsigned long x, unsigned long y, unsigned long z, unsigned long w);
# 137 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline float1 make_float1(float x);
# 139 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline float2 make_float2(float x, float y);
# 141 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline float3 make_float3(float x, float y, float z);
# 143 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline float4 make_float4(float x, float y, float z, float w);
# 145 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline longlong1 make_longlong1(long long x);
# 147 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline ulonglong1 make_ulonglong1(unsigned long long x);
# 149 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline longlong2 make_longlong2(long long x, long long y);
# 151 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline ulonglong2 make_ulonglong2(unsigned long long x, unsigned long long y);
# 153 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline longlong3 make_longlong3(long long x, long long y, long long z);
# 155 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline ulonglong3 make_ulonglong3(unsigned long long x, unsigned long long y, unsigned long long z);
# 157 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline longlong4 make_longlong4(long long x, long long y, long long z, long long w);
# 159 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline ulonglong4 make_ulonglong4(unsigned long long x, unsigned long long y, unsigned long long z, unsigned long long w);
# 161 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline double1 make_double1(double x);
# 163 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline double2 make_double2(double x, double y);
# 165 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline double3 make_double3(double x, double y, double z);
# 167 "/usr/local/cuda/bin/..//include/vector_functions.h"
static inline double4 make_double4(double x, double y, double z, double w);
# 73 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline char1 make_char1(signed char x)
# 74 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 75 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
char1 t; (t.x) = x; return t;
# 76 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 78 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline uchar1 make_uchar1(unsigned char x)
# 79 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 80 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
uchar1 t; (t.x) = x; return t;
# 81 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 83 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline char2 make_char2(signed char x, signed char y)
# 84 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 85 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
char2 t; (t.x) = x; (t.y) = y; return t;
# 86 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 88 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline uchar2 make_uchar2(unsigned char x, unsigned char y)
# 89 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 90 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
uchar2 t; (t.x) = x; (t.y) = y; return t;
# 91 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 93 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline char3 make_char3(signed char x, signed char y, signed char z)
# 94 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 95 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
char3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 96 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 98 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline uchar3 make_uchar3(unsigned char x, unsigned char y, unsigned char z)
# 99 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 100 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
uchar3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 101 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 103 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline char4 make_char4(signed char x, signed char y, signed char z, signed char w)
# 104 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 105 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
char4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 106 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 108 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline uchar4 make_uchar4(unsigned char x, unsigned char y, unsigned char z, unsigned char w)
# 109 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 110 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
uchar4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 111 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 113 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline short1 make_short1(short x)
# 114 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 115 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
short1 t; (t.x) = x; return t;
# 116 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 118 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline ushort1 make_ushort1(unsigned short x)
# 119 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 120 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
ushort1 t; (t.x) = x; return t;
# 121 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 123 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline short2 make_short2(short x, short y)
# 124 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 125 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
short2 t; (t.x) = x; (t.y) = y; return t;
# 126 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 128 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline ushort2 make_ushort2(unsigned short x, unsigned short y)
# 129 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 130 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
ushort2 t; (t.x) = x; (t.y) = y; return t;
# 131 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 133 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline short3 make_short3(short x, short y, short z)
# 134 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 135 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
short3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 136 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 138 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline ushort3 make_ushort3(unsigned short x, unsigned short y, unsigned short z)
# 139 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 140 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
ushort3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 141 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 143 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline short4 make_short4(short x, short y, short z, short w)
# 144 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 145 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
short4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 146 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 148 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline ushort4 make_ushort4(unsigned short x, unsigned short y, unsigned short z, unsigned short w)
# 149 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 150 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
ushort4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 151 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 153 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline int1 make_int1(int x)
# 154 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 155 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
int1 t; (t.x) = x; return t;
# 156 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 158 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline uint1 make_uint1(unsigned x)
# 159 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 160 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
uint1 t; (t.x) = x; return t;
# 161 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 163 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline int2 make_int2(int x, int y)
# 164 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 165 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
int2 t; (t.x) = x; (t.y) = y; return t;
# 166 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 168 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline uint2 make_uint2(unsigned x, unsigned y)
# 169 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 170 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
uint2 t; (t.x) = x; (t.y) = y; return t;
# 171 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 173 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline int3 make_int3(int x, int y, int z)
# 174 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 175 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
int3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 176 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 178 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline uint3 make_uint3(unsigned x, unsigned y, unsigned z)
# 179 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 180 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
uint3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 181 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 183 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline int4 make_int4(int x, int y, int z, int w)
# 184 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 185 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
int4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 186 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 188 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline uint4 make_uint4(unsigned x, unsigned y, unsigned z, unsigned w)
# 189 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 190 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
uint4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 191 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 193 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline long1 make_long1(long x)
# 194 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 195 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
long1 t; (t.x) = x; return t;
# 196 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 198 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline ulong1 make_ulong1(unsigned long x)
# 199 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 200 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
ulong1 t; (t.x) = x; return t;
# 201 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 203 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline long2 make_long2(long x, long y)
# 204 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 205 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
long2 t; (t.x) = x; (t.y) = y; return t;
# 206 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 208 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline ulong2 make_ulong2(unsigned long x, unsigned long y)
# 209 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 210 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
ulong2 t; (t.x) = x; (t.y) = y; return t;
# 211 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 213 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline long3 make_long3(long x, long y, long z)
# 214 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 215 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
long3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 216 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 218 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline ulong3 make_ulong3(unsigned long x, unsigned long y, unsigned long z)
# 219 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 220 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
ulong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 221 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 223 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline long4 make_long4(long x, long y, long z, long w)
# 224 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 225 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
long4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 226 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 228 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline ulong4 make_ulong4(unsigned long x, unsigned long y, unsigned long z, unsigned long w)
# 229 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 230 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
ulong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 231 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 233 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline float1 make_float1(float x)
# 234 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 235 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
float1 t; (t.x) = x; return t;
# 236 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 238 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline float2 make_float2(float x, float y)
# 239 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 240 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
float2 t; (t.x) = x; (t.y) = y; return t;
# 241 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 243 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline float3 make_float3(float x, float y, float z)
# 244 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 245 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
float3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 246 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 248 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline float4 make_float4(float x, float y, float z, float w)
# 249 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 250 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
float4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 251 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 253 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline longlong1 make_longlong1(long long x)
# 254 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 255 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
longlong1 t; (t.x) = x; return t;
# 256 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 258 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline ulonglong1 make_ulonglong1(unsigned long long x)
# 259 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 260 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
ulonglong1 t; (t.x) = x; return t;
# 261 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 263 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline longlong2 make_longlong2(long long x, long long y)
# 264 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 265 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
longlong2 t; (t.x) = x; (t.y) = y; return t;
# 266 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 268 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline ulonglong2 make_ulonglong2(unsigned long long x, unsigned long long y)
# 269 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 270 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
ulonglong2 t; (t.x) = x; (t.y) = y; return t;
# 271 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 273 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline longlong3 make_longlong3(long long x, long long y, long long z)
# 274 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 275 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
longlong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 276 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 278 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline ulonglong3 make_ulonglong3(unsigned long long x, unsigned long long y, unsigned long long z)
# 279 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 280 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
ulonglong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 281 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 283 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline longlong4 make_longlong4(long long x, long long y, long long z, long long w)
# 284 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 285 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
longlong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 286 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 288 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline ulonglong4 make_ulonglong4(unsigned long long x, unsigned long long y, unsigned long long z, unsigned long long w)
# 289 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 290 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
ulonglong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 291 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 293 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline double1 make_double1(double x)
# 294 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 295 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
double1 t; (t.x) = x; return t;
# 296 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 298 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline double2 make_double2(double x, double y)
# 299 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 300 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
double2 t; (t.x) = x; (t.y) = y; return t;
# 301 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 303 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline double3 make_double3(double x, double y, double z)
# 304 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 305 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
double3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 306 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 308 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
static inline double4 make_double4(double x, double y, double z, double w)
# 309 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
{
# 310 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
double4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 311 "/usr/local/cuda/bin/..//include/vector_functions.hpp"
}
# 27 "/usr/include/string.h" 3
extern "C" {
# 42 "/usr/include/string.h" 3
extern void *memcpy(void *__restrict__ __dest, const void *__restrict__ __src, size_t __n) throw()
# 43 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 46 "/usr/include/string.h" 3
extern void *memmove(void * __dest, const void * __src, size_t __n) throw()
# 47 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 54 "/usr/include/string.h" 3
extern void *memccpy(void *__restrict__ __dest, const void *__restrict__ __src, int __c, size_t __n) throw()
# 56 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 62 "/usr/include/string.h" 3
extern void *memset(void * __s, int __c, size_t __n) throw() __attribute((__nonnull__(1)));
# 65 "/usr/include/string.h" 3
extern int memcmp(const void * __s1, const void * __s2, size_t __n) throw()
# 66 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 70 "/usr/include/string.h" 3
extern "C++" {
# 72 "/usr/include/string.h" 3
extern void *memchr(void * __s, int __c, size_t __n) throw() __asm__("memchr")
# 73 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 74 "/usr/include/string.h" 3
extern const void *memchr(const void * __s, int __c, size_t __n) throw() __asm__("memchr")
# 75 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 90 "/usr/include/string.h" 3
}
# 101 "/usr/include/string.h" 3
extern "C++" void *rawmemchr(void * __s, int __c) throw() __asm__("rawmemchr")
# 102 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 103 "/usr/include/string.h" 3
extern "C++" const void *rawmemchr(const void * __s, int __c) throw() __asm__("rawmemchr")
# 104 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 112 "/usr/include/string.h" 3
extern "C++" void *memrchr(void * __s, int __c, size_t __n) throw() __asm__("memrchr")
# 113 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 114 "/usr/include/string.h" 3
extern "C++" const void *memrchr(const void * __s, int __c, size_t __n) throw() __asm__("memrchr")
# 115 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 125 "/usr/include/string.h" 3
extern char *strcpy(char *__restrict__ __dest, const char *__restrict__ __src) throw()
# 126 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 128 "/usr/include/string.h" 3
extern char *strncpy(char *__restrict__ __dest, const char *__restrict__ __src, size_t __n) throw()
# 130 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 133 "/usr/include/string.h" 3
extern char *strcat(char *__restrict__ __dest, const char *__restrict__ __src) throw()
# 134 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 136 "/usr/include/string.h" 3
extern char *strncat(char *__restrict__ __dest, const char *__restrict__ __src, size_t __n) throw()
# 137 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 140 "/usr/include/string.h" 3
extern int strcmp(const char * __s1, const char * __s2) throw()
# 141 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 143 "/usr/include/string.h" 3
extern int strncmp(const char * __s1, const char * __s2, size_t __n) throw()
# 144 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 147 "/usr/include/string.h" 3
extern int strcoll(const char * __s1, const char * __s2) throw()
# 148 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 150 "/usr/include/string.h" 3
extern size_t strxfrm(char *__restrict__ __dest, const char *__restrict__ __src, size_t __n) throw()
# 152 "/usr/include/string.h" 3
 __attribute((__nonnull__(2)));
# 39 "/usr/include/xlocale.h" 3
typedef
# 27 "/usr/include/xlocale.h" 3
struct __locale_struct {
# 30 "/usr/include/xlocale.h" 3
struct __locale_data *__locales[13];
# 33 "/usr/include/xlocale.h" 3
const unsigned short *__ctype_b;
# 34 "/usr/include/xlocale.h" 3
const int *__ctype_tolower;
# 35 "/usr/include/xlocale.h" 3
const int *__ctype_toupper;
# 38 "/usr/include/xlocale.h" 3
const char *__names[13];
# 39 "/usr/include/xlocale.h" 3
} *__locale_t;
# 42 "/usr/include/xlocale.h" 3
typedef __locale_t locale_t;
# 162 "/usr/include/string.h" 3
extern int strcoll_l(const char * __s1, const char * __s2, __locale_t __l) throw()
# 163 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2, 3)));
# 165 "/usr/include/string.h" 3
extern size_t strxfrm_l(char * __dest, const char * __src, size_t __n, __locale_t __l) throw()
# 166 "/usr/include/string.h" 3
 __attribute((__nonnull__(2, 4)));
# 172 "/usr/include/string.h" 3
extern char *strdup(const char * __s) throw()
# 173 "/usr/include/string.h" 3
 __attribute((__malloc__)) __attribute((__nonnull__(1)));
# 180 "/usr/include/string.h" 3
extern char *strndup(const char * __string, size_t __n) throw()
# 181 "/usr/include/string.h" 3
 __attribute((__malloc__)) __attribute((__nonnull__(1)));
# 210 "/usr/include/string.h" 3
extern "C++" {
# 212 "/usr/include/string.h" 3
extern char *strchr(char * __s, int __c) throw() __asm__("strchr")
# 213 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 214 "/usr/include/string.h" 3
extern const char *strchr(const char * __s, int __c) throw() __asm__("strchr")
# 215 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 230 "/usr/include/string.h" 3
}
# 237 "/usr/include/string.h" 3
extern "C++" {
# 239 "/usr/include/string.h" 3
extern char *strrchr(char * __s, int __c) throw() __asm__("strrchr")
# 240 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 241 "/usr/include/string.h" 3
extern const char *strrchr(const char * __s, int __c) throw() __asm__("strrchr")
# 242 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 257 "/usr/include/string.h" 3
}
# 268 "/usr/include/string.h" 3
extern "C++" char *strchrnul(char * __s, int __c) throw() __asm__("strchrnul")
# 269 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 270 "/usr/include/string.h" 3
extern "C++" const char *strchrnul(const char * __s, int __c) throw() __asm__("strchrnul")
# 271 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 281 "/usr/include/string.h" 3
extern size_t strcspn(const char * __s, const char * __reject) throw()
# 282 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 285 "/usr/include/string.h" 3
extern size_t strspn(const char * __s, const char * __accept) throw()
# 286 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 289 "/usr/include/string.h" 3
extern "C++" {
# 291 "/usr/include/string.h" 3
extern char *strpbrk(char * __s, const char * __accept) throw() __asm__("strpbrk")
# 292 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 293 "/usr/include/string.h" 3
extern const char *strpbrk(const char * __s, const char * __accept) throw() __asm__("strpbrk")
# 294 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 309 "/usr/include/string.h" 3
}
# 316 "/usr/include/string.h" 3
extern "C++" {
# 318 "/usr/include/string.h" 3
extern char *strstr(char * __haystack, const char * __needle) throw() __asm__("strstr")
# 319 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 320 "/usr/include/string.h" 3
extern const char *strstr(const char * __haystack, const char * __needle) throw() __asm__("strstr")
# 321 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 336 "/usr/include/string.h" 3
}
# 344 "/usr/include/string.h" 3
extern char *strtok(char *__restrict__ __s, const char *__restrict__ __delim) throw()
# 345 "/usr/include/string.h" 3
 __attribute((__nonnull__(2)));
# 350 "/usr/include/string.h" 3
extern char *__strtok_r(char *__restrict__ __s, const char *__restrict__ __delim, char **__restrict__ __save_ptr) throw()
# 353 "/usr/include/string.h" 3
 __attribute((__nonnull__(2, 3)));
# 355 "/usr/include/string.h" 3
extern char *strtok_r(char *__restrict__ __s, const char *__restrict__ __delim, char **__restrict__ __save_ptr) throw()
# 357 "/usr/include/string.h" 3
 __attribute((__nonnull__(2, 3)));
# 363 "/usr/include/string.h" 3
extern "C++" char *strcasestr(char * __haystack, const char * __needle) throw() __asm__("strcasestr")
# 364 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 365 "/usr/include/string.h" 3
extern "C++" const char *strcasestr(const char * __haystack, const char * __needle) throw() __asm__("strcasestr")
# 367 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 378 "/usr/include/string.h" 3
extern void *memmem(const void * __haystack, size_t __haystacklen, const void * __needle, size_t __needlelen) throw()
# 380 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 3)));
# 384 "/usr/include/string.h" 3
extern void *__mempcpy(void *__restrict__ __dest, const void *__restrict__ __src, size_t __n) throw()
# 386 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 387 "/usr/include/string.h" 3
extern void *mempcpy(void *__restrict__ __dest, const void *__restrict__ __src, size_t __n) throw()
# 389 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 395 "/usr/include/string.h" 3
extern size_t strlen(const char * __s) throw()
# 396 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 402 "/usr/include/string.h" 3
extern size_t strnlen(const char * __string, size_t __maxlen) throw()
# 403 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 409 "/usr/include/string.h" 3
extern char *strerror(int __errnum) throw();
# 434 "/usr/include/string.h" 3
extern char *strerror_r(int __errnum, char * __buf, size_t __buflen) throw()
# 435 "/usr/include/string.h" 3
 __attribute((__nonnull__(2)));
# 441 "/usr/include/string.h" 3
extern char *strerror_l(int __errnum, __locale_t __l) throw();
# 447 "/usr/include/string.h" 3
extern void __bzero(void * __s, size_t __n) throw() __attribute((__nonnull__(1)));
# 451 "/usr/include/string.h" 3
extern void bcopy(const void * __src, void * __dest, size_t __n) throw()
# 452 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 455 "/usr/include/string.h" 3
extern void bzero(void * __s, size_t __n) throw() __attribute((__nonnull__(1)));
# 458 "/usr/include/string.h" 3
extern int bcmp(const void * __s1, const void * __s2, size_t __n) throw()
# 459 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 463 "/usr/include/string.h" 3
extern "C++" {
# 465 "/usr/include/string.h" 3
extern char *index(char * __s, int __c) throw() __asm__("index")
# 466 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 467 "/usr/include/string.h" 3
extern const char *index(const char * __s, int __c) throw() __asm__("index")
# 468 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 483 "/usr/include/string.h" 3
}
# 491 "/usr/include/string.h" 3
extern "C++" {
# 493 "/usr/include/string.h" 3
extern char *rindex(char * __s, int __c) throw() __asm__("rindex")
# 494 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 495 "/usr/include/string.h" 3
extern const char *rindex(const char * __s, int __c) throw() __asm__("rindex")
# 496 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 511 "/usr/include/string.h" 3
}
# 519 "/usr/include/string.h" 3
extern int ffs(int __i) throw() __attribute((const));
# 524 "/usr/include/string.h" 3
extern int ffsl(long __l) throw() __attribute((const));
# 526 "/usr/include/string.h" 3
__extension__ extern int ffsll(long long __ll) throw()
# 527 "/usr/include/string.h" 3
 __attribute((const));
# 532 "/usr/include/string.h" 3
extern int strcasecmp(const char * __s1, const char * __s2) throw()
# 533 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 536 "/usr/include/string.h" 3
extern int strncasecmp(const char * __s1, const char * __s2, size_t __n) throw()
# 537 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 543 "/usr/include/string.h" 3
extern int strcasecmp_l(const char * __s1, const char * __s2, __locale_t __loc) throw()
# 545 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2, 3)));
# 547 "/usr/include/string.h" 3
extern int strncasecmp_l(const char * __s1, const char * __s2, size_t __n, __locale_t __loc) throw()
# 549 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2, 4)));
# 555 "/usr/include/string.h" 3
extern char *strsep(char **__restrict__ __stringp, const char *__restrict__ __delim) throw()
# 557 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 562 "/usr/include/string.h" 3
extern char *strsignal(int __sig) throw();
# 565 "/usr/include/string.h" 3
extern char *__stpcpy(char *__restrict__ __dest, const char *__restrict__ __src) throw()
# 566 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 567 "/usr/include/string.h" 3
extern char *stpcpy(char *__restrict__ __dest, const char *__restrict__ __src) throw()
# 568 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 572 "/usr/include/string.h" 3
extern char *__stpncpy(char *__restrict__ __dest, const char *__restrict__ __src, size_t __n) throw()
# 574 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 575 "/usr/include/string.h" 3
extern char *stpncpy(char *__restrict__ __dest, const char *__restrict__ __src, size_t __n) throw()
# 577 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 582 "/usr/include/string.h" 3
extern int strverscmp(const char * __s1, const char * __s2) throw()
# 583 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 586 "/usr/include/string.h" 3
extern char *strfry(char * __string) throw() __attribute((__nonnull__(1)));
# 589 "/usr/include/string.h" 3
extern void *memfrob(void * __s, size_t __n) throw() __attribute((__nonnull__(1)));
# 597 "/usr/include/string.h" 3
extern "C++" char *basename(char * __filename) throw() __asm__("basename")
# 598 "/usr/include/string.h" 3
 __attribute((__nonnull__(1)));
# 599 "/usr/include/string.h" 3
extern "C++" const char *basename(const char * __filename) throw() __asm__("basename")
# 600 "/usr/include/string.h" 3
 __attribute((__nonnull__(1)));
# 642 "/usr/include/string.h" 3
}
# 29 "/usr/include/time.h" 3
extern "C" {
# 30 "/usr/include/bits/types.h" 3
typedef unsigned char __u_char;
# 31 "/usr/include/bits/types.h" 3
typedef unsigned short __u_short;
# 32 "/usr/include/bits/types.h" 3
typedef unsigned __u_int;
# 33 "/usr/include/bits/types.h" 3
typedef unsigned long __u_long;
# 36 "/usr/include/bits/types.h" 3
typedef signed char __int8_t;
# 37 "/usr/include/bits/types.h" 3
typedef unsigned char __uint8_t;
# 38 "/usr/include/bits/types.h" 3
typedef signed short __int16_t;
# 39 "/usr/include/bits/types.h" 3
typedef unsigned short __uint16_t;
# 40 "/usr/include/bits/types.h" 3
typedef signed int __int32_t;
# 41 "/usr/include/bits/types.h" 3
typedef unsigned __uint32_t;
# 43 "/usr/include/bits/types.h" 3
typedef signed long __int64_t;
# 44 "/usr/include/bits/types.h" 3
typedef unsigned long __uint64_t;
# 52 "/usr/include/bits/types.h" 3
typedef long __quad_t;
# 53 "/usr/include/bits/types.h" 3
typedef unsigned long __u_quad_t;
# 133 "/usr/include/bits/types.h" 3
typedef unsigned long __dev_t;
# 134 "/usr/include/bits/types.h" 3
typedef unsigned __uid_t;
# 135 "/usr/include/bits/types.h" 3
typedef unsigned __gid_t;
# 136 "/usr/include/bits/types.h" 3
typedef unsigned long __ino_t;
# 137 "/usr/include/bits/types.h" 3
typedef unsigned long __ino64_t;
# 138 "/usr/include/bits/types.h" 3
typedef unsigned __mode_t;
# 139 "/usr/include/bits/types.h" 3
typedef unsigned long __nlink_t;
# 140 "/usr/include/bits/types.h" 3
typedef long __off_t;
# 141 "/usr/include/bits/types.h" 3
typedef long __off64_t;
# 142 "/usr/include/bits/types.h" 3
typedef int __pid_t;
# 143 "/usr/include/bits/types.h" 3
typedef struct { int __val[2]; } __fsid_t;
# 144 "/usr/include/bits/types.h" 3
typedef long __clock_t;
# 145 "/usr/include/bits/types.h" 3
typedef unsigned long __rlim_t;
# 146 "/usr/include/bits/types.h" 3
typedef unsigned long __rlim64_t;
# 147 "/usr/include/bits/types.h" 3
typedef unsigned __id_t;
# 148 "/usr/include/bits/types.h" 3
typedef long __time_t;
# 149 "/usr/include/bits/types.h" 3
typedef unsigned __useconds_t;
# 150 "/usr/include/bits/types.h" 3
typedef long __suseconds_t;
# 152 "/usr/include/bits/types.h" 3
typedef int __daddr_t;
# 153 "/usr/include/bits/types.h" 3
typedef int __key_t;
# 156 "/usr/include/bits/types.h" 3
typedef int __clockid_t;
# 159 "/usr/include/bits/types.h" 3
typedef void *__timer_t;
# 162 "/usr/include/bits/types.h" 3
typedef long __blksize_t;
# 167 "/usr/include/bits/types.h" 3
typedef long __blkcnt_t;
# 168 "/usr/include/bits/types.h" 3
typedef long __blkcnt64_t;
# 171 "/usr/include/bits/types.h" 3
typedef unsigned long __fsblkcnt_t;
# 172 "/usr/include/bits/types.h" 3
typedef unsigned long __fsblkcnt64_t;
# 175 "/usr/include/bits/types.h" 3
typedef unsigned long __fsfilcnt_t;
# 176 "/usr/include/bits/types.h" 3
typedef unsigned long __fsfilcnt64_t;
# 179 "/usr/include/bits/types.h" 3
typedef long __fsword_t;
# 181 "/usr/include/bits/types.h" 3
typedef long __ssize_t;
# 184 "/usr/include/bits/types.h" 3
typedef long __syscall_slong_t;
# 186 "/usr/include/bits/types.h" 3
typedef unsigned long __syscall_ulong_t;
# 190 "/usr/include/bits/types.h" 3
typedef __off64_t __loff_t;
# 191 "/usr/include/bits/types.h" 3
typedef __quad_t *__qaddr_t;
# 192 "/usr/include/bits/types.h" 3
typedef char *__caddr_t;
# 195 "/usr/include/bits/types.h" 3
typedef long __intptr_t;
# 198 "/usr/include/bits/types.h" 3
typedef unsigned __socklen_t;
# 30 "/usr/include/bits/time.h" 3
struct timeval {
# 32 "/usr/include/bits/time.h" 3
__time_t tv_sec;
# 33 "/usr/include/bits/time.h" 3
__suseconds_t tv_usec;
# 34 "/usr/include/bits/time.h" 3
};
# 25 "/usr/include/bits/timex.h" 3
struct timex {
# 27 "/usr/include/bits/timex.h" 3
unsigned modes;
# 28 "/usr/include/bits/timex.h" 3
__syscall_slong_t offset;
# 29 "/usr/include/bits/timex.h" 3
__syscall_slong_t freq;
# 30 "/usr/include/bits/timex.h" 3
__syscall_slong_t maxerror;
# 31 "/usr/include/bits/timex.h" 3
__syscall_slong_t esterror;
# 32 "/usr/include/bits/timex.h" 3
int status;
# 33 "/usr/include/bits/timex.h" 3
__syscall_slong_t constant;
# 34 "/usr/include/bits/timex.h" 3
__syscall_slong_t precision;
# 35 "/usr/include/bits/timex.h" 3
__syscall_slong_t tolerance;
# 36 "/usr/include/bits/timex.h" 3
timeval time;
# 37 "/usr/include/bits/timex.h" 3
__syscall_slong_t tick;
# 38 "/usr/include/bits/timex.h" 3
__syscall_slong_t ppsfreq;
# 39 "/usr/include/bits/timex.h" 3
__syscall_slong_t jitter;
# 40 "/usr/include/bits/timex.h" 3
int shift;
# 41 "/usr/include/bits/timex.h" 3
__syscall_slong_t stabil;
# 42 "/usr/include/bits/timex.h" 3
__syscall_slong_t jitcnt;
# 43 "/usr/include/bits/timex.h" 3
__syscall_slong_t calcnt;
# 44 "/usr/include/bits/timex.h" 3
__syscall_slong_t errcnt;
# 45 "/usr/include/bits/timex.h" 3
__syscall_slong_t stbcnt;
# 47 "/usr/include/bits/timex.h" 3
int tai;
# 50 "/usr/include/bits/timex.h" 3
int:32; int:32; int:32; int:32;
# 51 "/usr/include/bits/timex.h" 3
int:32; int:32; int:32; int:32;
# 52 "/usr/include/bits/timex.h" 3
int:32; int:32; int:32;
# 53 "/usr/include/bits/timex.h" 3
};
# 90 "/usr/include/bits/time.h" 3
extern "C" {
# 93 "/usr/include/bits/time.h" 3
extern int clock_adjtime(__clockid_t __clock_id, timex * __utx) throw();
# 95 "/usr/include/bits/time.h" 3
}
# 59 "/usr/include/time.h" 3
typedef __clock_t clock_t;
# 75 "/usr/include/time.h" 3
typedef __time_t time_t;
# 91 "/usr/include/time.h" 3
typedef __clockid_t clockid_t;
# 103 "/usr/include/time.h" 3
typedef __timer_t timer_t;
# 120 "/usr/include/time.h" 3
struct timespec {
# 122 "/usr/include/time.h" 3
__time_t tv_sec;
# 123 "/usr/include/time.h" 3
__syscall_slong_t tv_nsec;
# 124 "/usr/include/time.h" 3
};
# 133 "/usr/include/time.h" 3
struct tm {
# 135 "/usr/include/time.h" 3
int tm_sec;
# 136 "/usr/include/time.h" 3
int tm_min;
# 137 "/usr/include/time.h" 3
int tm_hour;
# 138 "/usr/include/time.h" 3
int tm_mday;
# 139 "/usr/include/time.h" 3
int tm_mon;
# 140 "/usr/include/time.h" 3
int tm_year;
# 141 "/usr/include/time.h" 3
int tm_wday;
# 142 "/usr/include/time.h" 3
int tm_yday;
# 143 "/usr/include/time.h" 3
int tm_isdst;
# 146 "/usr/include/time.h" 3
long tm_gmtoff;
# 147 "/usr/include/time.h" 3
const char *tm_zone;
# 152 "/usr/include/time.h" 3
};
# 161 "/usr/include/time.h" 3
struct itimerspec {
# 163 "/usr/include/time.h" 3
timespec it_interval;
# 164 "/usr/include/time.h" 3
timespec it_value;
# 165 "/usr/include/time.h" 3
};
# 168 "/usr/include/time.h" 3
struct sigevent;
# 174 "/usr/include/time.h" 3
typedef __pid_t pid_t;
# 189 "/usr/include/time.h" 3
extern clock_t clock() throw();
# 192 "/usr/include/time.h" 3
extern time_t time(time_t * __timer) throw();
# 195 "/usr/include/time.h" 3
extern double difftime(time_t __time1, time_t __time0) throw()
# 196 "/usr/include/time.h" 3
 __attribute((const));
# 199 "/usr/include/time.h" 3
extern time_t mktime(tm * __tp) throw();
# 205 "/usr/include/time.h" 3
extern size_t strftime(char *__restrict__ __s, size_t __maxsize, const char *__restrict__ __format, const tm *__restrict__ __tp) throw();
# 213 "/usr/include/time.h" 3
extern char *strptime(const char *__restrict__ __s, const char *__restrict__ __fmt, tm * __tp) throw();
# 223 "/usr/include/time.h" 3
extern size_t strftime_l(char *__restrict__ __s, size_t __maxsize, const char *__restrict__ __format, const tm *__restrict__ __tp, __locale_t __loc) throw();
# 230 "/usr/include/time.h" 3
extern char *strptime_l(const char *__restrict__ __s, const char *__restrict__ __fmt, tm * __tp, __locale_t __loc) throw();
# 239 "/usr/include/time.h" 3
extern tm *gmtime(const time_t * __timer) throw();
# 243 "/usr/include/time.h" 3
extern tm *localtime(const time_t * __timer) throw();
# 249 "/usr/include/time.h" 3
extern tm *gmtime_r(const time_t *__restrict__ __timer, tm *__restrict__ __tp) throw();
# 254 "/usr/include/time.h" 3
extern tm *localtime_r(const time_t *__restrict__ __timer, tm *__restrict__ __tp) throw();
# 261 "/usr/include/time.h" 3
extern char *asctime(const tm * __tp) throw();
# 264 "/usr/include/time.h" 3
extern char *ctime(const time_t * __timer) throw();
# 272 "/usr/include/time.h" 3
extern char *asctime_r(const tm *__restrict__ __tp, char *__restrict__ __buf) throw();
# 276 "/usr/include/time.h" 3
extern char *ctime_r(const time_t *__restrict__ __timer, char *__restrict__ __buf) throw();
# 282 "/usr/include/time.h" 3
extern char *__tzname[2];
# 283 "/usr/include/time.h" 3
extern int __daylight;
# 284 "/usr/include/time.h" 3
extern long __timezone;
# 289 "/usr/include/time.h" 3
extern char *tzname[2];
# 293 "/usr/include/time.h" 3
extern void tzset() throw();
# 297 "/usr/include/time.h" 3
extern int daylight;
# 298 "/usr/include/time.h" 3
extern long timezone;
# 304 "/usr/include/time.h" 3
extern int stime(const time_t * __when) throw();
# 319 "/usr/include/time.h" 3
extern time_t timegm(tm * __tp) throw();
# 322 "/usr/include/time.h" 3
extern time_t timelocal(tm * __tp) throw();
# 325 "/usr/include/time.h" 3
extern int dysize(int __year) throw() __attribute((const));
# 334 "/usr/include/time.h" 3
extern int nanosleep(const timespec * __requested_time, timespec * __remaining);
# 339 "/usr/include/time.h" 3
extern int clock_getres(clockid_t __clock_id, timespec * __res) throw();
# 342 "/usr/include/time.h" 3
extern int clock_gettime(clockid_t __clock_id, timespec * __tp) throw();
# 345 "/usr/include/time.h" 3
extern int clock_settime(clockid_t __clock_id, const timespec * __tp) throw();
# 353 "/usr/include/time.h" 3
extern int clock_nanosleep(clockid_t __clock_id, int __flags, const timespec * __req, timespec * __rem);
# 358 "/usr/include/time.h" 3
extern int clock_getcpuclockid(pid_t __pid, clockid_t * __clock_id) throw();
# 363 "/usr/include/time.h" 3
extern int timer_create(clockid_t __clock_id, sigevent *__restrict__ __evp, timer_t *__restrict__ __timerid) throw();
# 368 "/usr/include/time.h" 3
extern int timer_delete(timer_t __timerid) throw();
# 371 "/usr/include/time.h" 3
extern int timer_settime(timer_t __timerid, int __flags, const itimerspec *__restrict__ __value, itimerspec *__restrict__ __ovalue) throw();
# 376 "/usr/include/time.h" 3
extern int timer_gettime(timer_t __timerid, itimerspec * __value) throw();
# 380 "/usr/include/time.h" 3
extern int timer_getoverrun(timer_t __timerid) throw();
# 386 "/usr/include/time.h" 3
extern int timespec_get(timespec * __ts, int __base) throw()
# 387 "/usr/include/time.h" 3
 __attribute((__nonnull__(1)));
# 403 "/usr/include/time.h" 3
extern int getdate_err;
# 412 "/usr/include/time.h" 3
extern tm *getdate(const char * __string);
# 426 "/usr/include/time.h" 3
extern int getdate_r(const char *__restrict__ __string, tm *__restrict__ __resbufp);
# 430 "/usr/include/time.h" 3
}
# 80 "/usr/local/cuda/bin/..//include/crt/common_functions.h"
extern "C" {
# 83 "/usr/local/cuda/bin/..//include/crt/common_functions.h"
extern clock_t clock() throw();
# 88 "/usr/local/cuda/bin/..//include/crt/common_functions.h"
extern void *memset(void *, int, size_t) throw();
# 89 "/usr/local/cuda/bin/..//include/crt/common_functions.h"
extern void *memcpy(void *, const void *, size_t) throw();
# 91 "/usr/local/cuda/bin/..//include/crt/common_functions.h"
}
# 108 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern "C" {
# 192 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern int abs(int) throw();
# 193 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern long labs(long) throw();
# 194 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern long long llabs(long long) throw();
# 244 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double fabs(double x) throw();
# 285 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float fabsf(float x) throw();
# 289 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern inline int min(int, int);
# 291 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern inline unsigned umin(unsigned, unsigned);
# 292 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern inline long long llmin(long long, long long);
# 293 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern inline unsigned long long ullmin(unsigned long long, unsigned long long);
# 314 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float fminf(float x, float y) throw();
# 334 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double fmin(double x, double y) throw();
# 341 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern inline int max(int, int);
# 343 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern inline unsigned umax(unsigned, unsigned);
# 344 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern inline long long llmax(long long, long long);
# 345 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern inline unsigned long long ullmax(unsigned long long, unsigned long long);
# 366 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float fmaxf(float x, float y) throw();
# 386 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double fmax(double, double) throw();
# 430 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double sin(double x) throw();
# 463 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double cos(double x) throw();
# 482 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern void sincos(double x, double * sptr, double * cptr) throw();
# 498 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern void sincosf(float x, float * sptr, float * cptr) throw();
# 543 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double tan(double x) throw();
# 612 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double sqrt(double x) throw();
# 684 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double rsqrt(double x);
# 754 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float rsqrtf(float x);
# 810 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double log2(double x) throw();
# 835 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double exp2(double x) throw();
# 860 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float exp2f(float x) throw();
# 887 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double exp10(double x) throw();
# 910 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float exp10f(float x) throw();
# 956 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double expm1(double x) throw();
# 1001 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float expm1f(float x) throw();
# 1056 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float log2f(float x) throw();
# 1110 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double log10(double x) throw();
# 1181 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double log(double x) throw();
# 1275 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double log1p(double x) throw();
# 1372 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float log1pf(float x) throw();
# 1447 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double floor(double x) throw();
# 1486 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double exp(double x) throw();
# 1517 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double cosh(double x) throw();
# 1547 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double sinh(double x) throw();
# 1577 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double tanh(double x) throw();
# 1612 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double acosh(double x) throw();
# 1650 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float acoshf(float x) throw();
# 1666 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double asinh(double x) throw();
# 1682 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float asinhf(float x) throw();
# 1736 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double atanh(double x) throw();
# 1790 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float atanhf(float x) throw();
# 1849 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double ldexp(double x, int exp) throw();
# 1905 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float ldexpf(float x, int exp) throw();
# 1957 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double logb(double x) throw();
# 2012 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float logbf(float x) throw();
# 2042 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern int ilogb(double x) throw();
# 2072 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern int ilogbf(float x) throw();
# 2148 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double scalbn(double x, int n) throw();
# 2224 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float scalbnf(float x, int n) throw();
# 2300 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double scalbln(double x, long n) throw();
# 2376 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float scalblnf(float x, long n) throw();
# 2454 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double frexp(double x, int * nptr) throw();
# 2529 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float frexpf(float x, int * nptr) throw();
# 2543 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double round(double x) throw();
# 2560 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float roundf(float x) throw();
# 2578 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern long lround(double x) throw();
# 2596 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern long lroundf(float x) throw();
# 2614 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern long long llround(double x) throw();
# 2632 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern long long llroundf(float x) throw();
# 2684 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float rintf(float x) throw();
# 2701 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern long lrint(double x) throw();
# 2718 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern long lrintf(float x) throw();
# 2735 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern long long llrint(double x) throw();
# 2752 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern long long llrintf(float x) throw();
# 2805 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double nearbyint(double x) throw();
# 2858 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float nearbyintf(float x) throw();
# 2920 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double ceil(double x) throw();
# 2932 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double trunc(double x) throw();
# 2947 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float truncf(float x) throw();
# 2973 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double fdim(double x, double y) throw();
# 2999 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float fdimf(float x, float y) throw();
# 3035 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double atan2(double y, double x) throw();
# 3066 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double atan(double x) throw();
# 3089 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double acos(double x) throw();
# 3121 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double asin(double x) throw();
# 3167 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double hypot(double x, double y) throw();
# 3219 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double rhypot(double x, double y) throw();
# 3265 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float hypotf(float x, float y) throw();
# 3317 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float rhypotf(float x, float y) throw();
# 3361 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double norm3d(double a, double b, double c) throw();
# 3412 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double rnorm3d(double a, double b, double c) throw();
# 3461 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double norm4d(double a, double b, double c, double d) throw();
# 3517 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double rnorm4d(double a, double b, double c, double d) throw();
# 3562 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double norm(int dim, const double * t) throw();
# 3613 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double rnorm(int dim, const double * t) throw();
# 3665 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float rnormf(int dim, const float * a) throw();
# 3709 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float normf(int dim, const float * a) throw();
# 3754 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float norm3df(float a, float b, float c) throw();
# 3805 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float rnorm3df(float a, float b, float c) throw();
# 3854 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float norm4df(float a, float b, float c, float d) throw();
# 3910 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float rnorm4df(float a, float b, float c, float d) throw();
# 3997 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double cbrt(double x) throw();
# 4083 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float cbrtf(float x) throw();
# 4138 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double rcbrt(double x);
# 4188 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float rcbrtf(float x);
# 4248 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double sinpi(double x);
# 4308 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float sinpif(float x);
# 4360 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double cospi(double x);
# 4412 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float cospif(float x);
# 4442 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern void sincospi(double x, double * sptr, double * cptr);
# 4472 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern void sincospif(float x, float * sptr, float * cptr);
# 4784 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double pow(double x, double y) throw();
# 4840 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double modf(double x, double * iptr) throw();
# 4899 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double fmod(double x, double y) throw();
# 4985 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double remainder(double x, double y) throw();
# 5075 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float remainderf(float x, float y) throw();
# 5129 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double remquo(double x, double y, int * quo) throw();
# 5183 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float remquof(float x, float y, int * quo) throw();
# 5224 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double j0(double x) throw();
# 5266 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float j0f(float x) throw();
# 5327 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double j1(double x) throw();
# 5388 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float j1f(float x) throw();
# 5431 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double jn(int n, double x) throw();
# 5474 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float jnf(int n, float x) throw();
# 5526 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double y0(double x) throw();
# 5578 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float y0f(float x) throw();
# 5630 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double y1(double x) throw();
# 5682 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float y1f(float x) throw();
# 5735 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double yn(int n, double x) throw();
# 5788 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float ynf(int n, float x) throw();
# 5815 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double cyl_bessel_i0(double x) throw();
# 5841 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float cyl_bessel_i0f(float x) throw();
# 5868 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double cyl_bessel_i1(double x) throw();
# 5894 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float cyl_bessel_i1f(float x) throw();
# 5977 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double erf(double x) throw();
# 6059 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float erff(float x) throw();
# 6123 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double erfinv(double y);
# 6180 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float erfinvf(float y);
# 6219 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double erfc(double x) throw();
# 6257 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float erfcf(float x) throw();
# 6385 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double lgamma(double x) throw();
# 6448 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double erfcinv(double y);
# 6504 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float erfcinvf(float y);
# 6562 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double normcdfinv(double y);
# 6620 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float normcdfinvf(float y);
# 6663 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double normcdf(double y);
# 6706 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float normcdff(float y);
# 6781 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double erfcx(double x);
# 6856 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float erfcxf(float x);
# 6990 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float lgammaf(float x) throw();
# 7099 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double tgamma(double x) throw();
# 7208 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float tgammaf(float x) throw();
# 7221 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double copysign(double x, double y) throw();
# 7234 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float copysignf(float x, float y) throw();
# 7271 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double nextafter(double x, double y) throw();
# 7308 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float nextafterf(float x, float y) throw();
# 7324 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double nan(const char * tagp) throw();
# 7340 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float nanf(const char * tagp) throw();
# 7347 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern int __isinff(float) throw();
# 7348 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern int __isnanf(float) throw();
# 7358 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern int __finite(double) throw();
# 7359 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern int __finitef(float) throw();
# 7360 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern int __signbit(double) throw();
# 7361 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern int __isnan(double) throw();
# 7362 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern int __isinf(double) throw();
# 7365 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern int __signbitf(float) throw();
# 7524 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern double fma(double x, double y, double z) throw();
# 7682 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float fmaf(float x, float y, float z) throw();
# 7693 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern int __signbitl(long double) throw();
# 7699 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern int __finitel(long double) throw();
# 7700 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern int __isinfl(long double) throw();
# 7701 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern int __isnanl(long double) throw();
# 7751 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float acosf(float x) throw();
# 7791 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float asinf(float x) throw();
# 7831 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float atanf(float x) throw();
# 7864 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float atan2f(float y, float x) throw();
# 7888 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float cosf(float x) throw();
# 7930 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float sinf(float x) throw();
# 7972 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float tanf(float x) throw();
# 7996 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float coshf(float x) throw();
# 8037 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float sinhf(float x) throw();
# 8067 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float tanhf(float x) throw();
# 8118 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float logf(float x) throw();
# 8168 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float expf(float x) throw();
# 8219 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float log10f(float x) throw();
# 8274 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float modff(float x, float * iptr) throw();
# 8582 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float powf(float x, float y) throw();
# 8651 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float sqrtf(float x) throw();
# 8710 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float ceilf(float x) throw();
# 8782 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float floorf(float x) throw();
# 8841 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern float fmodf(float x, float y) throw();
# 8856 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
}
# 29 "/usr/include/math.h" 3
extern "C" {
# 28 "/usr/include/bits/mathdef.h" 3
typedef float float_t;
# 29 "/usr/include/bits/mathdef.h" 3
typedef double double_t;
# 54 "/usr/include/bits/mathcalls.h" 3
extern double acos(double __x) throw(); extern double __acos(double __x) throw();
# 56 "/usr/include/bits/mathcalls.h" 3
extern double asin(double __x) throw(); extern double __asin(double __x) throw();
# 58 "/usr/include/bits/mathcalls.h" 3
extern double atan(double __x) throw(); extern double __atan(double __x) throw();
# 60 "/usr/include/bits/mathcalls.h" 3
extern double atan2(double __y, double __x) throw(); extern double __atan2(double __y, double __x) throw();
# 63 "/usr/include/bits/mathcalls.h" 3
extern double cos(double __x) throw(); extern double __cos(double __x) throw();
# 65 "/usr/include/bits/mathcalls.h" 3
extern double sin(double __x) throw(); extern double __sin(double __x) throw();
# 67 "/usr/include/bits/mathcalls.h" 3
extern double tan(double __x) throw(); extern double __tan(double __x) throw();
# 72 "/usr/include/bits/mathcalls.h" 3
extern double cosh(double __x) throw(); extern double __cosh(double __x) throw();
# 74 "/usr/include/bits/mathcalls.h" 3
extern double sinh(double __x) throw(); extern double __sinh(double __x) throw();
# 76 "/usr/include/bits/mathcalls.h" 3
extern double tanh(double __x) throw(); extern double __tanh(double __x) throw();
# 81 "/usr/include/bits/mathcalls.h" 3
extern void sincos(double __x, double * __sinx, double * __cosx) throw(); extern void __sincos(double __x, double * __sinx, double * __cosx) throw();
# 88 "/usr/include/bits/mathcalls.h" 3
extern double acosh(double __x) throw(); extern double __acosh(double __x) throw();
# 90 "/usr/include/bits/mathcalls.h" 3
extern double asinh(double __x) throw(); extern double __asinh(double __x) throw();
# 92 "/usr/include/bits/mathcalls.h" 3
extern double atanh(double __x) throw(); extern double __atanh(double __x) throw();
# 100 "/usr/include/bits/mathcalls.h" 3
extern double exp(double __x) throw(); extern double __exp(double __x) throw();
# 103 "/usr/include/bits/mathcalls.h" 3
extern double frexp(double __x, int * __exponent) throw(); extern double __frexp(double __x, int * __exponent) throw();
# 106 "/usr/include/bits/mathcalls.h" 3
extern double ldexp(double __x, int __exponent) throw(); extern double __ldexp(double __x, int __exponent) throw();
# 109 "/usr/include/bits/mathcalls.h" 3
extern double log(double __x) throw(); extern double __log(double __x) throw();
# 112 "/usr/include/bits/mathcalls.h" 3
extern double log10(double __x) throw(); extern double __log10(double __x) throw();
# 115 "/usr/include/bits/mathcalls.h" 3
extern double modf(double __x, double * __iptr) throw(); extern double __modf(double __x, double * __iptr) throw()
# 116 "/usr/include/bits/mathcalls.h" 3
 __attribute((__nonnull__(2)));
# 121 "/usr/include/bits/mathcalls.h" 3
extern double exp10(double __x) throw(); extern double __exp10(double __x) throw();
# 123 "/usr/include/bits/mathcalls.h" 3
extern double pow10(double __x) throw(); extern double __pow10(double __x) throw();
# 129 "/usr/include/bits/mathcalls.h" 3
extern double expm1(double __x) throw(); extern double __expm1(double __x) throw();
# 132 "/usr/include/bits/mathcalls.h" 3
extern double log1p(double __x) throw(); extern double __log1p(double __x) throw();
# 135 "/usr/include/bits/mathcalls.h" 3
extern double logb(double __x) throw(); extern double __logb(double __x) throw();
# 142 "/usr/include/bits/mathcalls.h" 3
extern double exp2(double __x) throw(); extern double __exp2(double __x) throw();
# 145 "/usr/include/bits/mathcalls.h" 3
extern double log2(double __x) throw(); extern double __log2(double __x) throw();
# 154 "/usr/include/bits/mathcalls.h" 3
extern double pow(double __x, double __y) throw(); extern double __pow(double __x, double __y) throw();
# 157 "/usr/include/bits/mathcalls.h" 3
extern double sqrt(double __x) throw(); extern double __sqrt(double __x) throw();
# 163 "/usr/include/bits/mathcalls.h" 3
extern double hypot(double __x, double __y) throw(); extern double __hypot(double __x, double __y) throw();
# 170 "/usr/include/bits/mathcalls.h" 3
extern double cbrt(double __x) throw(); extern double __cbrt(double __x) throw();
# 179 "/usr/include/bits/mathcalls.h" 3
extern double ceil(double __x) throw() __attribute((const)); extern double __ceil(double __x) throw() __attribute((const));
# 182 "/usr/include/bits/mathcalls.h" 3
extern double fabs(double __x) throw() __attribute((const)); extern double __fabs(double __x) throw() __attribute((const));
# 185 "/usr/include/bits/mathcalls.h" 3
extern double floor(double __x) throw() __attribute((const)); extern double __floor(double __x) throw() __attribute((const));
# 188 "/usr/include/bits/mathcalls.h" 3
extern double fmod(double __x, double __y) throw(); extern double __fmod(double __x, double __y) throw();
# 193 "/usr/include/bits/mathcalls.h" 3
extern int __isinf(double __value) throw() __attribute((const));
# 196 "/usr/include/bits/mathcalls.h" 3
extern int __finite(double __value) throw() __attribute((const));
# 202 "/usr/include/bits/mathcalls.h" 3
extern inline int isinf(double __value) throw() __attribute((const));
# 205 "/usr/include/bits/mathcalls.h" 3
extern int finite(double __value) throw() __attribute((const));
# 208 "/usr/include/bits/mathcalls.h" 3
extern double drem(double __x, double __y) throw(); extern double __drem(double __x, double __y) throw();
# 212 "/usr/include/bits/mathcalls.h" 3
extern double significand(double __x) throw(); extern double __significand(double __x) throw();
# 218 "/usr/include/bits/mathcalls.h" 3
extern double copysign(double __x, double __y) throw() __attribute((const)); extern double __copysign(double __x, double __y) throw() __attribute((const));
# 225 "/usr/include/bits/mathcalls.h" 3
extern double nan(const char * __tagb) throw() __attribute((const)); extern double __nan(const char * __tagb) throw() __attribute((const));
# 231 "/usr/include/bits/mathcalls.h" 3
extern int __isnan(double __value) throw() __attribute((const));
# 235 "/usr/include/bits/mathcalls.h" 3
extern inline int isnan(double __value) throw() __attribute((const));
# 238 "/usr/include/bits/mathcalls.h" 3
extern double j0(double) throw(); extern double __j0(double) throw();
# 239 "/usr/include/bits/mathcalls.h" 3
extern double j1(double) throw(); extern double __j1(double) throw();
# 240 "/usr/include/bits/mathcalls.h" 3
extern double jn(int, double) throw(); extern double __jn(int, double) throw();
# 241 "/usr/include/bits/mathcalls.h" 3
extern double y0(double) throw(); extern double __y0(double) throw();
# 242 "/usr/include/bits/mathcalls.h" 3
extern double y1(double) throw(); extern double __y1(double) throw();
# 243 "/usr/include/bits/mathcalls.h" 3
extern double yn(int, double) throw(); extern double __yn(int, double) throw();
# 250 "/usr/include/bits/mathcalls.h" 3
extern double erf(double) throw(); extern double __erf(double) throw();
# 251 "/usr/include/bits/mathcalls.h" 3
extern double erfc(double) throw(); extern double __erfc(double) throw();
# 252 "/usr/include/bits/mathcalls.h" 3
extern double lgamma(double) throw(); extern double __lgamma(double) throw();
# 259 "/usr/include/bits/mathcalls.h" 3
extern double tgamma(double) throw(); extern double __tgamma(double) throw();
# 265 "/usr/include/bits/mathcalls.h" 3
extern double gamma(double) throw(); extern double __gamma(double) throw();
# 272 "/usr/include/bits/mathcalls.h" 3
extern double lgamma_r(double, int * __signgamp) throw(); extern double __lgamma_r(double, int * __signgamp) throw();
# 280 "/usr/include/bits/mathcalls.h" 3
extern double rint(double __x) throw(); extern double __rint(double __x) throw();
# 283 "/usr/include/bits/mathcalls.h" 3
extern double nextafter(double __x, double __y) throw() __attribute((const)); extern double __nextafter(double __x, double __y) throw() __attribute((const));
# 285 "/usr/include/bits/mathcalls.h" 3
extern double nexttoward(double __x, long double __y) throw() __attribute((const)); extern double __nexttoward(double __x, long double __y) throw() __attribute((const));
# 289 "/usr/include/bits/mathcalls.h" 3
extern double remainder(double __x, double __y) throw(); extern double __remainder(double __x, double __y) throw();
# 293 "/usr/include/bits/mathcalls.h" 3
extern double scalbn(double __x, int __n) throw(); extern double __scalbn(double __x, int __n) throw();
# 297 "/usr/include/bits/mathcalls.h" 3
extern int ilogb(double __x) throw(); extern int __ilogb(double __x) throw();
# 302 "/usr/include/bits/mathcalls.h" 3
extern double scalbln(double __x, long __n) throw(); extern double __scalbln(double __x, long __n) throw();
# 306 "/usr/include/bits/mathcalls.h" 3
extern double nearbyint(double __x) throw(); extern double __nearbyint(double __x) throw();
# 310 "/usr/include/bits/mathcalls.h" 3
extern double round(double __x) throw() __attribute((const)); extern double __round(double __x) throw() __attribute((const));
# 314 "/usr/include/bits/mathcalls.h" 3
extern double trunc(double __x) throw() __attribute((const)); extern double __trunc(double __x) throw() __attribute((const));
# 319 "/usr/include/bits/mathcalls.h" 3
extern double remquo(double __x, double __y, int * __quo) throw(); extern double __remquo(double __x, double __y, int * __quo) throw();
# 326 "/usr/include/bits/mathcalls.h" 3
extern long lrint(double __x) throw(); extern long __lrint(double __x) throw();
# 327 "/usr/include/bits/mathcalls.h" 3
extern long long llrint(double __x) throw(); extern long long __llrint(double __x) throw();
# 331 "/usr/include/bits/mathcalls.h" 3
extern long lround(double __x) throw(); extern long __lround(double __x) throw();
# 332 "/usr/include/bits/mathcalls.h" 3
extern long long llround(double __x) throw(); extern long long __llround(double __x) throw();
# 336 "/usr/include/bits/mathcalls.h" 3
extern double fdim(double __x, double __y) throw(); extern double __fdim(double __x, double __y) throw();
# 339 "/usr/include/bits/mathcalls.h" 3
extern double fmax(double __x, double __y) throw() __attribute((const)); extern double __fmax(double __x, double __y) throw() __attribute((const));
# 342 "/usr/include/bits/mathcalls.h" 3
extern double fmin(double __x, double __y) throw() __attribute((const)); extern double __fmin(double __x, double __y) throw() __attribute((const));
# 346 "/usr/include/bits/mathcalls.h" 3
extern int __fpclassify(double __value) throw()
# 347 "/usr/include/bits/mathcalls.h" 3
 __attribute((const));
# 350 "/usr/include/bits/mathcalls.h" 3
extern int __signbit(double __value) throw()
# 351 "/usr/include/bits/mathcalls.h" 3
 __attribute((const));
# 355 "/usr/include/bits/mathcalls.h" 3
extern double fma(double __x, double __y, double __z) throw(); extern double __fma(double __x, double __y, double __z) throw();
# 364 "/usr/include/bits/mathcalls.h" 3
extern double scalb(double __x, double __n) throw(); extern double __scalb(double __x, double __n) throw();
# 54 "/usr/include/bits/mathcalls.h" 3
extern float acosf(float __x) throw(); extern float __acosf(float __x) throw();
# 56 "/usr/include/bits/mathcalls.h" 3
extern float asinf(float __x) throw(); extern float __asinf(float __x) throw();
# 58 "/usr/include/bits/mathcalls.h" 3
extern float atanf(float __x) throw(); extern float __atanf(float __x) throw();
# 60 "/usr/include/bits/mathcalls.h" 3
extern float atan2f(float __y, float __x) throw(); extern float __atan2f(float __y, float __x) throw();
# 63 "/usr/include/bits/mathcalls.h" 3
extern float cosf(float __x) throw();
# 65 "/usr/include/bits/mathcalls.h" 3
extern float sinf(float __x) throw();
# 67 "/usr/include/bits/mathcalls.h" 3
extern float tanf(float __x) throw();
# 72 "/usr/include/bits/mathcalls.h" 3
extern float coshf(float __x) throw(); extern float __coshf(float __x) throw();
# 74 "/usr/include/bits/mathcalls.h" 3
extern float sinhf(float __x) throw(); extern float __sinhf(float __x) throw();
# 76 "/usr/include/bits/mathcalls.h" 3
extern float tanhf(float __x) throw(); extern float __tanhf(float __x) throw();
# 81 "/usr/include/bits/mathcalls.h" 3
extern void sincosf(float __x, float * __sinx, float * __cosx) throw();
# 88 "/usr/include/bits/mathcalls.h" 3
extern float acoshf(float __x) throw(); extern float __acoshf(float __x) throw();
# 90 "/usr/include/bits/mathcalls.h" 3
extern float asinhf(float __x) throw(); extern float __asinhf(float __x) throw();
# 92 "/usr/include/bits/mathcalls.h" 3
extern float atanhf(float __x) throw(); extern float __atanhf(float __x) throw();
# 100 "/usr/include/bits/mathcalls.h" 3
extern float expf(float __x) throw();
# 103 "/usr/include/bits/mathcalls.h" 3
extern float frexpf(float __x, int * __exponent) throw(); extern float __frexpf(float __x, int * __exponent) throw();
# 106 "/usr/include/bits/mathcalls.h" 3
extern float ldexpf(float __x, int __exponent) throw(); extern float __ldexpf(float __x, int __exponent) throw();
# 109 "/usr/include/bits/mathcalls.h" 3
extern float logf(float __x) throw();
# 112 "/usr/include/bits/mathcalls.h" 3
extern float log10f(float __x) throw();
# 115 "/usr/include/bits/mathcalls.h" 3
extern float modff(float __x, float * __iptr) throw(); extern float __modff(float __x, float * __iptr) throw()
# 116 "/usr/include/bits/mathcalls.h" 3
 __attribute((__nonnull__(2)));
# 121 "/usr/include/bits/mathcalls.h" 3
extern float exp10f(float __x) throw();
# 123 "/usr/include/bits/mathcalls.h" 3
extern float pow10f(float __x) throw(); extern float __pow10f(float __x) throw();
# 129 "/usr/include/bits/mathcalls.h" 3
extern float expm1f(float __x) throw(); extern float __expm1f(float __x) throw();
# 132 "/usr/include/bits/mathcalls.h" 3
extern float log1pf(float __x) throw(); extern float __log1pf(float __x) throw();
# 135 "/usr/include/bits/mathcalls.h" 3
extern float logbf(float __x) throw(); extern float __logbf(float __x) throw();
# 142 "/usr/include/bits/mathcalls.h" 3
extern float exp2f(float __x) throw(); extern float __exp2f(float __x) throw();
# 145 "/usr/include/bits/mathcalls.h" 3
extern float log2f(float __x) throw();
# 154 "/usr/include/bits/mathcalls.h" 3
extern float powf(float __x, float __y) throw();
# 157 "/usr/include/bits/mathcalls.h" 3
extern float sqrtf(float __x) throw(); extern float __sqrtf(float __x) throw();
# 163 "/usr/include/bits/mathcalls.h" 3
extern float hypotf(float __x, float __y) throw(); extern float __hypotf(float __x, float __y) throw();
# 170 "/usr/include/bits/mathcalls.h" 3
extern float cbrtf(float __x) throw(); extern float __cbrtf(float __x) throw();
# 179 "/usr/include/bits/mathcalls.h" 3
extern float ceilf(float __x) throw() __attribute((const)); extern float __ceilf(float __x) throw() __attribute((const));
# 182 "/usr/include/bits/mathcalls.h" 3
extern float fabsf(float __x) throw() __attribute((const)); extern float __fabsf(float __x) throw() __attribute((const));
# 185 "/usr/include/bits/mathcalls.h" 3
extern float floorf(float __x) throw() __attribute((const)); extern float __floorf(float __x) throw() __attribute((const));
# 188 "/usr/include/bits/mathcalls.h" 3
extern float fmodf(float __x, float __y) throw(); extern float __fmodf(float __x, float __y) throw();
# 193 "/usr/include/bits/mathcalls.h" 3
extern int __isinff(float __value) throw() __attribute((const));
# 196 "/usr/include/bits/mathcalls.h" 3
extern int __finitef(float __value) throw() __attribute((const));
# 202 "/usr/include/bits/mathcalls.h" 3
extern int isinff(float __value) throw() __attribute((const));
# 205 "/usr/include/bits/mathcalls.h" 3
extern int finitef(float __value) throw() __attribute((const));
# 208 "/usr/include/bits/mathcalls.h" 3
extern float dremf(float __x, float __y) throw(); extern float __dremf(float __x, float __y) throw();
# 212 "/usr/include/bits/mathcalls.h" 3
extern float significandf(float __x) throw(); extern float __significandf(float __x) throw();
# 218 "/usr/include/bits/mathcalls.h" 3
extern float copysignf(float __x, float __y) throw() __attribute((const)); extern float __copysignf(float __x, float __y) throw() __attribute((const));
# 225 "/usr/include/bits/mathcalls.h" 3
extern float nanf(const char * __tagb) throw() __attribute((const)); extern float __nanf(const char * __tagb) throw() __attribute((const));
# 231 "/usr/include/bits/mathcalls.h" 3
extern int __isnanf(float __value) throw() __attribute((const));
# 235 "/usr/include/bits/mathcalls.h" 3
extern int isnanf(float __value) throw() __attribute((const));
# 238 "/usr/include/bits/mathcalls.h" 3
extern float j0f(float) throw(); extern float __j0f(float) throw();
# 239 "/usr/include/bits/mathcalls.h" 3
extern float j1f(float) throw(); extern float __j1f(float) throw();
# 240 "/usr/include/bits/mathcalls.h" 3
extern float jnf(int, float) throw(); extern float __jnf(int, float) throw();
# 241 "/usr/include/bits/mathcalls.h" 3
extern float y0f(float) throw(); extern float __y0f(float) throw();
# 242 "/usr/include/bits/mathcalls.h" 3
extern float y1f(float) throw(); extern float __y1f(float) throw();
# 243 "/usr/include/bits/mathcalls.h" 3
extern float ynf(int, float) throw(); extern float __ynf(int, float) throw();
# 250 "/usr/include/bits/mathcalls.h" 3
extern float erff(float) throw(); extern float __erff(float) throw();
# 251 "/usr/include/bits/mathcalls.h" 3
extern float erfcf(float) throw(); extern float __erfcf(float) throw();
# 252 "/usr/include/bits/mathcalls.h" 3
extern float lgammaf(float) throw(); extern float __lgammaf(float) throw();
# 259 "/usr/include/bits/mathcalls.h" 3
extern float tgammaf(float) throw(); extern float __tgammaf(float) throw();
# 265 "/usr/include/bits/mathcalls.h" 3
extern float gammaf(float) throw(); extern float __gammaf(float) throw();
# 272 "/usr/include/bits/mathcalls.h" 3
extern float lgammaf_r(float, int * __signgamp) throw(); extern float __lgammaf_r(float, int * __signgamp) throw();
# 280 "/usr/include/bits/mathcalls.h" 3
extern float rintf(float __x) throw(); extern float __rintf(float __x) throw();
# 283 "/usr/include/bits/mathcalls.h" 3
extern float nextafterf(float __x, float __y) throw() __attribute((const)); extern float __nextafterf(float __x, float __y) throw() __attribute((const));
# 285 "/usr/include/bits/mathcalls.h" 3
extern float nexttowardf(float __x, long double __y) throw() __attribute((const)); extern float __nexttowardf(float __x, long double __y) throw() __attribute((const));
# 289 "/usr/include/bits/mathcalls.h" 3
extern float remainderf(float __x, float __y) throw(); extern float __remainderf(float __x, float __y) throw();
# 293 "/usr/include/bits/mathcalls.h" 3
extern float scalbnf(float __x, int __n) throw(); extern float __scalbnf(float __x, int __n) throw();
# 297 "/usr/include/bits/mathcalls.h" 3
extern int ilogbf(float __x) throw(); extern int __ilogbf(float __x) throw();
# 302 "/usr/include/bits/mathcalls.h" 3
extern float scalblnf(float __x, long __n) throw(); extern float __scalblnf(float __x, long __n) throw();
# 306 "/usr/include/bits/mathcalls.h" 3
extern float nearbyintf(float __x) throw(); extern float __nearbyintf(float __x) throw();
# 310 "/usr/include/bits/mathcalls.h" 3
extern float roundf(float __x) throw() __attribute((const)); extern float __roundf(float __x) throw() __attribute((const));
# 314 "/usr/include/bits/mathcalls.h" 3
extern float truncf(float __x) throw() __attribute((const)); extern float __truncf(float __x) throw() __attribute((const));
# 319 "/usr/include/bits/mathcalls.h" 3
extern float remquof(float __x, float __y, int * __quo) throw(); extern float __remquof(float __x, float __y, int * __quo) throw();
# 326 "/usr/include/bits/mathcalls.h" 3
extern long lrintf(float __x) throw(); extern long __lrintf(float __x) throw();
# 327 "/usr/include/bits/mathcalls.h" 3
extern long long llrintf(float __x) throw(); extern long long __llrintf(float __x) throw();
# 331 "/usr/include/bits/mathcalls.h" 3
extern long lroundf(float __x) throw(); extern long __lroundf(float __x) throw();
# 332 "/usr/include/bits/mathcalls.h" 3
extern long long llroundf(float __x) throw(); extern long long __llroundf(float __x) throw();
# 336 "/usr/include/bits/mathcalls.h" 3
extern float fdimf(float __x, float __y) throw(); extern float __fdimf(float __x, float __y) throw();
# 339 "/usr/include/bits/mathcalls.h" 3
extern float fmaxf(float __x, float __y) throw() __attribute((const)); extern float __fmaxf(float __x, float __y) throw() __attribute((const));
# 342 "/usr/include/bits/mathcalls.h" 3
extern float fminf(float __x, float __y) throw() __attribute((const)); extern float __fminf(float __x, float __y) throw() __attribute((const));
# 346 "/usr/include/bits/mathcalls.h" 3
extern int __fpclassifyf(float __value) throw()
# 347 "/usr/include/bits/mathcalls.h" 3
 __attribute((const));
# 350 "/usr/include/bits/mathcalls.h" 3
extern int __signbitf(float __value) throw()
# 351 "/usr/include/bits/mathcalls.h" 3
 __attribute((const));
# 355 "/usr/include/bits/mathcalls.h" 3
extern float fmaf(float __x, float __y, float __z) throw(); extern float __fmaf(float __x, float __y, float __z) throw();
# 364 "/usr/include/bits/mathcalls.h" 3
extern float scalbf(float __x, float __n) throw(); extern float __scalbf(float __x, float __n) throw();
# 54 "/usr/include/bits/mathcalls.h" 3
extern long double acosl(long double __x) throw(); extern long double __acosl(long double __x) throw();
# 56 "/usr/include/bits/mathcalls.h" 3
extern long double asinl(long double __x) throw(); extern long double __asinl(long double __x) throw();
# 58 "/usr/include/bits/mathcalls.h" 3
extern long double atanl(long double __x) throw(); extern long double __atanl(long double __x) throw();
# 60 "/usr/include/bits/mathcalls.h" 3
extern long double atan2l(long double __y, long double __x) throw(); extern long double __atan2l(long double __y, long double __x) throw();
# 63 "/usr/include/bits/mathcalls.h" 3
extern long double cosl(long double __x) throw(); extern long double __cosl(long double __x) throw();
# 65 "/usr/include/bits/mathcalls.h" 3
extern long double sinl(long double __x) throw(); extern long double __sinl(long double __x) throw();
# 67 "/usr/include/bits/mathcalls.h" 3
extern long double tanl(long double __x) throw(); extern long double __tanl(long double __x) throw();
# 72 "/usr/include/bits/mathcalls.h" 3
extern long double coshl(long double __x) throw(); extern long double __coshl(long double __x) throw();
# 74 "/usr/include/bits/mathcalls.h" 3
extern long double sinhl(long double __x) throw(); extern long double __sinhl(long double __x) throw();
# 76 "/usr/include/bits/mathcalls.h" 3
extern long double tanhl(long double __x) throw(); extern long double __tanhl(long double __x) throw();
# 81 "/usr/include/bits/mathcalls.h" 3
extern void sincosl(long double __x, long double * __sinx, long double * __cosx) throw(); extern void __sincosl(long double __x, long double * __sinx, long double * __cosx) throw();
# 88 "/usr/include/bits/mathcalls.h" 3
extern long double acoshl(long double __x) throw(); extern long double __acoshl(long double __x) throw();
# 90 "/usr/include/bits/mathcalls.h" 3
extern long double asinhl(long double __x) throw(); extern long double __asinhl(long double __x) throw();
# 92 "/usr/include/bits/mathcalls.h" 3
extern long double atanhl(long double __x) throw(); extern long double __atanhl(long double __x) throw();
# 100 "/usr/include/bits/mathcalls.h" 3
extern long double expl(long double __x) throw(); extern long double __expl(long double __x) throw();
# 103 "/usr/include/bits/mathcalls.h" 3
extern long double frexpl(long double __x, int * __exponent) throw(); extern long double __frexpl(long double __x, int * __exponent) throw();
# 106 "/usr/include/bits/mathcalls.h" 3
extern long double ldexpl(long double __x, int __exponent) throw(); extern long double __ldexpl(long double __x, int __exponent) throw();
# 109 "/usr/include/bits/mathcalls.h" 3
extern long double logl(long double __x) throw(); extern long double __logl(long double __x) throw();
# 112 "/usr/include/bits/mathcalls.h" 3
extern long double log10l(long double __x) throw(); extern long double __log10l(long double __x) throw();
# 115 "/usr/include/bits/mathcalls.h" 3
extern long double modfl(long double __x, long double * __iptr) throw(); extern long double __modfl(long double __x, long double * __iptr) throw()
# 116 "/usr/include/bits/mathcalls.h" 3
 __attribute((__nonnull__(2)));
# 121 "/usr/include/bits/mathcalls.h" 3
extern long double exp10l(long double __x) throw(); extern long double __exp10l(long double __x) throw();
# 123 "/usr/include/bits/mathcalls.h" 3
extern long double pow10l(long double __x) throw(); extern long double __pow10l(long double __x) throw();
# 129 "/usr/include/bits/mathcalls.h" 3
extern long double expm1l(long double __x) throw(); extern long double __expm1l(long double __x) throw();
# 132 "/usr/include/bits/mathcalls.h" 3
extern long double log1pl(long double __x) throw(); extern long double __log1pl(long double __x) throw();
# 135 "/usr/include/bits/mathcalls.h" 3
extern long double logbl(long double __x) throw(); extern long double __logbl(long double __x) throw();
# 142 "/usr/include/bits/mathcalls.h" 3
extern long double exp2l(long double __x) throw(); extern long double __exp2l(long double __x) throw();
# 145 "/usr/include/bits/mathcalls.h" 3
extern long double log2l(long double __x) throw(); extern long double __log2l(long double __x) throw();
# 154 "/usr/include/bits/mathcalls.h" 3
extern long double powl(long double __x, long double __y) throw(); extern long double __powl(long double __x, long double __y) throw();
# 157 "/usr/include/bits/mathcalls.h" 3
extern long double sqrtl(long double __x) throw(); extern long double __sqrtl(long double __x) throw();
# 163 "/usr/include/bits/mathcalls.h" 3
extern long double hypotl(long double __x, long double __y) throw(); extern long double __hypotl(long double __x, long double __y) throw();
# 170 "/usr/include/bits/mathcalls.h" 3
extern long double cbrtl(long double __x) throw(); extern long double __cbrtl(long double __x) throw();
# 179 "/usr/include/bits/mathcalls.h" 3
extern long double ceill(long double __x) throw() __attribute((const)); extern long double __ceill(long double __x) throw() __attribute((const));
# 182 "/usr/include/bits/mathcalls.h" 3
extern long double fabsl(long double __x) throw() __attribute((const)); extern long double __fabsl(long double __x) throw() __attribute((const));
# 185 "/usr/include/bits/mathcalls.h" 3
extern long double floorl(long double __x) throw() __attribute((const)); extern long double __floorl(long double __x) throw() __attribute((const));
# 188 "/usr/include/bits/mathcalls.h" 3
extern long double fmodl(long double __x, long double __y) throw(); extern long double __fmodl(long double __x, long double __y) throw();
# 193 "/usr/include/bits/mathcalls.h" 3
extern int __isinfl(long double __value) throw() __attribute((const));
# 196 "/usr/include/bits/mathcalls.h" 3
extern int __finitel(long double __value) throw() __attribute((const));
# 202 "/usr/include/bits/mathcalls.h" 3
extern int isinfl(long double __value) throw() __attribute((const));
# 205 "/usr/include/bits/mathcalls.h" 3
extern int finitel(long double __value) throw() __attribute((const));
# 208 "/usr/include/bits/mathcalls.h" 3
extern long double dreml(long double __x, long double __y) throw(); extern long double __dreml(long double __x, long double __y) throw();
# 212 "/usr/include/bits/mathcalls.h" 3
extern long double significandl(long double __x) throw(); extern long double __significandl(long double __x) throw();
# 218 "/usr/include/bits/mathcalls.h" 3
extern long double copysignl(long double __x, long double __y) throw() __attribute((const)); extern long double __copysignl(long double __x, long double __y) throw() __attribute((const));
# 225 "/usr/include/bits/mathcalls.h" 3
extern long double nanl(const char * __tagb) throw() __attribute((const)); extern long double __nanl(const char * __tagb) throw() __attribute((const));
# 231 "/usr/include/bits/mathcalls.h" 3
extern int __isnanl(long double __value) throw() __attribute((const));
# 235 "/usr/include/bits/mathcalls.h" 3
extern int isnanl(long double __value) throw() __attribute((const));
# 238 "/usr/include/bits/mathcalls.h" 3
extern long double j0l(long double) throw(); extern long double __j0l(long double) throw();
# 239 "/usr/include/bits/mathcalls.h" 3
extern long double j1l(long double) throw(); extern long double __j1l(long double) throw();
# 240 "/usr/include/bits/mathcalls.h" 3
extern long double jnl(int, long double) throw(); extern long double __jnl(int, long double) throw();
# 241 "/usr/include/bits/mathcalls.h" 3
extern long double y0l(long double) throw(); extern long double __y0l(long double) throw();
# 242 "/usr/include/bits/mathcalls.h" 3
extern long double y1l(long double) throw(); extern long double __y1l(long double) throw();
# 243 "/usr/include/bits/mathcalls.h" 3
extern long double ynl(int, long double) throw(); extern long double __ynl(int, long double) throw();
# 250 "/usr/include/bits/mathcalls.h" 3
extern long double erfl(long double) throw(); extern long double __erfl(long double) throw();
# 251 "/usr/include/bits/mathcalls.h" 3
extern long double erfcl(long double) throw(); extern long double __erfcl(long double) throw();
# 252 "/usr/include/bits/mathcalls.h" 3
extern long double lgammal(long double) throw(); extern long double __lgammal(long double) throw();
# 259 "/usr/include/bits/mathcalls.h" 3
extern long double tgammal(long double) throw(); extern long double __tgammal(long double) throw();
# 265 "/usr/include/bits/mathcalls.h" 3
extern long double gammal(long double) throw(); extern long double __gammal(long double) throw();
# 272 "/usr/include/bits/mathcalls.h" 3
extern long double lgammal_r(long double, int * __signgamp) throw(); extern long double __lgammal_r(long double, int * __signgamp) throw();
# 280 "/usr/include/bits/mathcalls.h" 3
extern long double rintl(long double __x) throw(); extern long double __rintl(long double __x) throw();
# 283 "/usr/include/bits/mathcalls.h" 3
extern long double nextafterl(long double __x, long double __y) throw() __attribute((const)); extern long double __nextafterl(long double __x, long double __y) throw() __attribute((const));
# 285 "/usr/include/bits/mathcalls.h" 3
extern long double nexttowardl(long double __x, long double __y) throw() __attribute((const)); extern long double __nexttowardl(long double __x, long double __y) throw() __attribute((const));
# 289 "/usr/include/bits/mathcalls.h" 3
extern long double remainderl(long double __x, long double __y) throw(); extern long double __remainderl(long double __x, long double __y) throw();
# 293 "/usr/include/bits/mathcalls.h" 3
extern long double scalbnl(long double __x, int __n) throw(); extern long double __scalbnl(long double __x, int __n) throw();
# 297 "/usr/include/bits/mathcalls.h" 3
extern int ilogbl(long double __x) throw(); extern int __ilogbl(long double __x) throw();
# 302 "/usr/include/bits/mathcalls.h" 3
extern long double scalblnl(long double __x, long __n) throw(); extern long double __scalblnl(long double __x, long __n) throw();
# 306 "/usr/include/bits/mathcalls.h" 3
extern long double nearbyintl(long double __x) throw(); extern long double __nearbyintl(long double __x) throw();
# 310 "/usr/include/bits/mathcalls.h" 3
extern long double roundl(long double __x) throw() __attribute((const)); extern long double __roundl(long double __x) throw() __attribute((const));
# 314 "/usr/include/bits/mathcalls.h" 3
extern long double truncl(long double __x) throw() __attribute((const)); extern long double __truncl(long double __x) throw() __attribute((const));
# 319 "/usr/include/bits/mathcalls.h" 3
extern long double remquol(long double __x, long double __y, int * __quo) throw(); extern long double __remquol(long double __x, long double __y, int * __quo) throw();
# 326 "/usr/include/bits/mathcalls.h" 3
extern long lrintl(long double __x) throw(); extern long __lrintl(long double __x) throw();
# 327 "/usr/include/bits/mathcalls.h" 3
extern long long llrintl(long double __x) throw(); extern long long __llrintl(long double __x) throw();
# 331 "/usr/include/bits/mathcalls.h" 3
extern long lroundl(long double __x) throw(); extern long __lroundl(long double __x) throw();
# 332 "/usr/include/bits/mathcalls.h" 3
extern long long llroundl(long double __x) throw(); extern long long __llroundl(long double __x) throw();
# 336 "/usr/include/bits/mathcalls.h" 3
extern long double fdiml(long double __x, long double __y) throw(); extern long double __fdiml(long double __x, long double __y) throw();
# 339 "/usr/include/bits/mathcalls.h" 3
extern long double fmaxl(long double __x, long double __y) throw() __attribute((const)); extern long double __fmaxl(long double __x, long double __y) throw() __attribute((const));
# 342 "/usr/include/bits/mathcalls.h" 3
extern long double fminl(long double __x, long double __y) throw() __attribute((const)); extern long double __fminl(long double __x, long double __y) throw() __attribute((const));
# 346 "/usr/include/bits/mathcalls.h" 3
extern int __fpclassifyl(long double __value) throw()
# 347 "/usr/include/bits/mathcalls.h" 3
 __attribute((const));
# 350 "/usr/include/bits/mathcalls.h" 3
extern int __signbitl(long double __value) throw()
# 351 "/usr/include/bits/mathcalls.h" 3
 __attribute((const));
# 355 "/usr/include/bits/mathcalls.h" 3
extern long double fmal(long double __x, long double __y, long double __z) throw(); extern long double __fmal(long double __x, long double __y, long double __z) throw();
# 364 "/usr/include/bits/mathcalls.h" 3
extern long double scalbl(long double __x, long double __n) throw(); extern long double __scalbl(long double __x, long double __n) throw();
# 149 "/usr/include/math.h" 3
extern int signgam;
# 191 "/usr/include/math.h" 3
enum {
# 192 "/usr/include/math.h" 3
FP_NAN,
# 195 "/usr/include/math.h" 3
FP_INFINITE,
# 198 "/usr/include/math.h" 3
FP_ZERO,
# 201 "/usr/include/math.h" 3
FP_SUBNORMAL,
# 204 "/usr/include/math.h" 3
FP_NORMAL
# 207 "/usr/include/math.h" 3
};
# 295 "/usr/include/math.h" 3
typedef
# 289 "/usr/include/math.h" 3
enum {
# 290 "/usr/include/math.h" 3
_IEEE_ = (-1),
# 291 "/usr/include/math.h" 3
_SVID_ = 0,
# 292 "/usr/include/math.h" 3
_XOPEN_,
# 293 "/usr/include/math.h" 3
_POSIX_,
# 294 "/usr/include/math.h" 3
_ISOC_
# 295 "/usr/include/math.h" 3
} _LIB_VERSION_TYPE;
# 300 "/usr/include/math.h" 3
extern _LIB_VERSION_TYPE _LIB_VERSION;
# 311 "/usr/include/math.h" 3
struct __exception {
# 316 "/usr/include/math.h" 3
int type;
# 317 "/usr/include/math.h" 3
char *name;
# 318 "/usr/include/math.h" 3
double arg1;
# 319 "/usr/include/math.h" 3
double arg2;
# 320 "/usr/include/math.h" 3
double retval;
# 321 "/usr/include/math.h" 3
};
# 324 "/usr/include/math.h" 3
extern int matherr(__exception * __exc) throw();
# 475 "/usr/include/math.h" 3
}
# 34 "/usr/include/stdlib.h" 3
extern "C" {
# 45 "/usr/include/bits/byteswap.h" 3
static inline unsigned __bswap_32(unsigned __bsx)
# 46 "/usr/include/bits/byteswap.h" 3
{
# 47 "/usr/include/bits/byteswap.h" 3
return __builtin_bswap32(__bsx);
# 48 "/usr/include/bits/byteswap.h" 3
}
# 109 "/usr/include/bits/byteswap.h" 3
static inline __uint64_t __bswap_64(__uint64_t __bsx)
# 110 "/usr/include/bits/byteswap.h" 3
{
# 111 "/usr/include/bits/byteswap.h" 3
return __builtin_bswap64(__bsx);
# 112 "/usr/include/bits/byteswap.h" 3
}
# 66 "/usr/include/bits/waitstatus.h" 3
union wait {
# 68 "/usr/include/bits/waitstatus.h" 3
int w_status;
# 70 "/usr/include/bits/waitstatus.h" 3
struct {
# 72 "/usr/include/bits/waitstatus.h" 3
unsigned __w_termsig:7;
# 73 "/usr/include/bits/waitstatus.h" 3
unsigned __w_coredump:1;
# 74 "/usr/include/bits/waitstatus.h" 3
unsigned __w_retcode:8;
# 75 "/usr/include/bits/waitstatus.h" 3
unsigned:16;
# 83 "/usr/include/bits/waitstatus.h" 3
} __wait_terminated;
# 85 "/usr/include/bits/waitstatus.h" 3
struct {
# 87 "/usr/include/bits/waitstatus.h" 3
unsigned __w_stopval:8;
# 88 "/usr/include/bits/waitstatus.h" 3
unsigned __w_stopsig:8;
# 89 "/usr/include/bits/waitstatus.h" 3
unsigned:16;
# 96 "/usr/include/bits/waitstatus.h" 3
} __wait_stopped;
# 97 "/usr/include/bits/waitstatus.h" 3
};
# 101 "/usr/include/stdlib.h" 3
typedef
# 98 "/usr/include/stdlib.h" 3
struct {
# 99 "/usr/include/stdlib.h" 3
int quot;
# 100 "/usr/include/stdlib.h" 3
int rem;
# 101 "/usr/include/stdlib.h" 3
} div_t;
# 109 "/usr/include/stdlib.h" 3
typedef
# 106 "/usr/include/stdlib.h" 3
struct {
# 107 "/usr/include/stdlib.h" 3
long quot;
# 108 "/usr/include/stdlib.h" 3
long rem;
# 109 "/usr/include/stdlib.h" 3
} ldiv_t;
# 121 "/usr/include/stdlib.h" 3
__extension__ typedef
# 118 "/usr/include/stdlib.h" 3
struct {
# 119 "/usr/include/stdlib.h" 3
long long quot;
# 120 "/usr/include/stdlib.h" 3
long long rem;
# 121 "/usr/include/stdlib.h" 3
} lldiv_t;
# 139 "/usr/include/stdlib.h" 3
extern size_t __ctype_get_mb_cur_max() throw();
# 144 "/usr/include/stdlib.h" 3
extern double atof(const char * __nptr) throw()
# 145 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 147 "/usr/include/stdlib.h" 3
extern int atoi(const char * __nptr) throw()
# 148 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 150 "/usr/include/stdlib.h" 3
extern long atol(const char * __nptr) throw()
# 151 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 157 "/usr/include/stdlib.h" 3
__extension__ extern long long atoll(const char * __nptr) throw()
# 158 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 164 "/usr/include/stdlib.h" 3
extern double strtod(const char *__restrict__ __nptr, char **__restrict__ __endptr) throw()
# 166 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 172 "/usr/include/stdlib.h" 3
extern float strtof(const char *__restrict__ __nptr, char **__restrict__ __endptr) throw()
# 173 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 175 "/usr/include/stdlib.h" 3
extern long double strtold(const char *__restrict__ __nptr, char **__restrict__ __endptr) throw()
# 177 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 183 "/usr/include/stdlib.h" 3
extern long strtol(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) throw()
# 185 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 187 "/usr/include/stdlib.h" 3
extern unsigned long strtoul(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) throw()
# 189 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 195 "/usr/include/stdlib.h" 3
__extension__ extern long long strtoq(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) throw()
# 197 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 200 "/usr/include/stdlib.h" 3
__extension__ extern unsigned long long strtouq(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) throw()
# 202 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 209 "/usr/include/stdlib.h" 3
__extension__ extern long long strtoll(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) throw()
# 211 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 214 "/usr/include/stdlib.h" 3
__extension__ extern unsigned long long strtoull(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) throw()
# 216 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 239 "/usr/include/stdlib.h" 3
extern long strtol_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base, __locale_t __loc) throw()
# 241 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 243 "/usr/include/stdlib.h" 3
extern unsigned long strtoul_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base, __locale_t __loc) throw()
# 246 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 249 "/usr/include/stdlib.h" 3
__extension__ extern long long strtoll_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base, __locale_t __loc) throw()
# 252 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 255 "/usr/include/stdlib.h" 3
__extension__ extern unsigned long long strtoull_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base, __locale_t __loc) throw()
# 258 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 260 "/usr/include/stdlib.h" 3
extern double strtod_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, __locale_t __loc) throw()
# 262 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 264 "/usr/include/stdlib.h" 3
extern float strtof_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, __locale_t __loc) throw()
# 266 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 268 "/usr/include/stdlib.h" 3
extern long double strtold_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, __locale_t __loc) throw()
# 271 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 305 "/usr/include/stdlib.h" 3
extern char *l64a(long __n) throw();
# 308 "/usr/include/stdlib.h" 3
extern long a64l(const char * __s) throw()
# 309 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 27 "/usr/include/sys/types.h" 3
extern "C" {
# 33 "/usr/include/sys/types.h" 3
typedef __u_char u_char;
# 34 "/usr/include/sys/types.h" 3
typedef __u_short u_short;
# 35 "/usr/include/sys/types.h" 3
typedef __u_int u_int;
# 36 "/usr/include/sys/types.h" 3
typedef __u_long u_long;
# 37 "/usr/include/sys/types.h" 3
typedef __quad_t quad_t;
# 38 "/usr/include/sys/types.h" 3
typedef __u_quad_t u_quad_t;
# 39 "/usr/include/sys/types.h" 3
typedef __fsid_t fsid_t;
# 44 "/usr/include/sys/types.h" 3
typedef __loff_t loff_t;
# 48 "/usr/include/sys/types.h" 3
typedef __ino_t ino_t;
# 55 "/usr/include/sys/types.h" 3
typedef __ino64_t ino64_t;
# 60 "/usr/include/sys/types.h" 3
typedef __dev_t dev_t;
# 65 "/usr/include/sys/types.h" 3
typedef __gid_t gid_t;
# 70 "/usr/include/sys/types.h" 3
typedef __mode_t mode_t;
# 75 "/usr/include/sys/types.h" 3
typedef __nlink_t nlink_t;
# 80 "/usr/include/sys/types.h" 3
typedef __uid_t uid_t;
# 86 "/usr/include/sys/types.h" 3
typedef __off_t off_t;
# 93 "/usr/include/sys/types.h" 3
typedef __off64_t off64_t;
# 104 "/usr/include/sys/types.h" 3
typedef __id_t id_t;
# 109 "/usr/include/sys/types.h" 3
typedef __ssize_t ssize_t;
# 115 "/usr/include/sys/types.h" 3
typedef __daddr_t daddr_t;
# 116 "/usr/include/sys/types.h" 3
typedef __caddr_t caddr_t;
# 122 "/usr/include/sys/types.h" 3
typedef __key_t key_t;
# 136 "/usr/include/sys/types.h" 3
typedef __useconds_t useconds_t;
# 140 "/usr/include/sys/types.h" 3
typedef __suseconds_t suseconds_t;
# 150 "/usr/include/sys/types.h" 3
typedef unsigned long ulong;
# 151 "/usr/include/sys/types.h" 3
typedef unsigned short ushort;
# 152 "/usr/include/sys/types.h" 3
typedef unsigned uint;
# 194 "/usr/include/sys/types.h" 3
typedef signed char int8_t __attribute((__mode__(__QI__)));
# 195 "/usr/include/sys/types.h" 3
typedef short int16_t __attribute((__mode__(__HI__)));
# 196 "/usr/include/sys/types.h" 3
typedef int int32_t __attribute((__mode__(__SI__)));
# 197 "/usr/include/sys/types.h" 3
typedef long int64_t __attribute((__mode__(__DI__)));
# 200 "/usr/include/sys/types.h" 3
typedef unsigned char u_int8_t __attribute((__mode__(__QI__)));
# 201 "/usr/include/sys/types.h" 3
typedef unsigned short u_int16_t __attribute((__mode__(__HI__)));
# 202 "/usr/include/sys/types.h" 3
typedef unsigned u_int32_t __attribute((__mode__(__SI__)));
# 203 "/usr/include/sys/types.h" 3
typedef unsigned long u_int64_t __attribute((__mode__(__DI__)));
# 205 "/usr/include/sys/types.h" 3
typedef long register_t __attribute((__mode__(__word__)));
# 23 "/usr/include/bits/sigset.h" 3
typedef int __sig_atomic_t;
# 31 "/usr/include/bits/sigset.h" 3
typedef
# 29 "/usr/include/bits/sigset.h" 3
struct {
# 30 "/usr/include/bits/sigset.h" 3
unsigned long __val[(1024) / ((8) * sizeof(unsigned long))];
# 31 "/usr/include/bits/sigset.h" 3
} __sigset_t;
# 37 "/usr/include/sys/select.h" 3
typedef __sigset_t sigset_t;
# 54 "/usr/include/sys/select.h" 3
typedef long __fd_mask;
# 75 "/usr/include/sys/select.h" 3
typedef
# 65 "/usr/include/sys/select.h" 3
struct {
# 69 "/usr/include/sys/select.h" 3
__fd_mask fds_bits[1024 / (8 * ((int)sizeof(__fd_mask)))];
# 75 "/usr/include/sys/select.h" 3
} fd_set;
# 82 "/usr/include/sys/select.h" 3
typedef __fd_mask fd_mask;
# 96 "/usr/include/sys/select.h" 3
extern "C" {
# 106 "/usr/include/sys/select.h" 3
extern int select(int __nfds, fd_set *__restrict__ __readfds, fd_set *__restrict__ __writefds, fd_set *__restrict__ __exceptfds, timeval *__restrict__ __timeout);
# 118 "/usr/include/sys/select.h" 3
extern int pselect(int __nfds, fd_set *__restrict__ __readfds, fd_set *__restrict__ __writefds, fd_set *__restrict__ __exceptfds, const timespec *__restrict__ __timeout, const __sigset_t *__restrict__ __sigmask);
# 131 "/usr/include/sys/select.h" 3
}
# 29 "/usr/include/sys/sysmacros.h" 3
extern "C" {
# 32 "/usr/include/sys/sysmacros.h" 3
__extension__ extern unsigned gnu_dev_major(unsigned long long __dev) throw()
# 33 "/usr/include/sys/sysmacros.h" 3
 __attribute((const));
# 35 "/usr/include/sys/sysmacros.h" 3
__extension__ extern unsigned gnu_dev_minor(unsigned long long __dev) throw()
# 36 "/usr/include/sys/sysmacros.h" 3
 __attribute((const));
# 38 "/usr/include/sys/sysmacros.h" 3
__extension__ extern unsigned long long gnu_dev_makedev(unsigned __major, unsigned __minor) throw()
# 40 "/usr/include/sys/sysmacros.h" 3
 __attribute((const));
# 63 "/usr/include/sys/sysmacros.h" 3
}
# 228 "/usr/include/sys/types.h" 3
typedef __blksize_t blksize_t;
# 235 "/usr/include/sys/types.h" 3
typedef __blkcnt_t blkcnt_t;
# 239 "/usr/include/sys/types.h" 3
typedef __fsblkcnt_t fsblkcnt_t;
# 243 "/usr/include/sys/types.h" 3
typedef __fsfilcnt_t fsfilcnt_t;
# 262 "/usr/include/sys/types.h" 3
typedef __blkcnt64_t blkcnt64_t;
# 263 "/usr/include/sys/types.h" 3
typedef __fsblkcnt64_t fsblkcnt64_t;
# 264 "/usr/include/sys/types.h" 3
typedef __fsfilcnt64_t fsfilcnt64_t;
# 60 "/usr/include/bits/pthreadtypes.h" 3
typedef unsigned long pthread_t;
# 63 "/usr/include/bits/pthreadtypes.h" 3
union pthread_attr_t {
# 65 "/usr/include/bits/pthreadtypes.h" 3
char __size[56];
# 66 "/usr/include/bits/pthreadtypes.h" 3
long __align;
# 67 "/usr/include/bits/pthreadtypes.h" 3
};
# 69 "/usr/include/bits/pthreadtypes.h" 3
typedef pthread_attr_t pthread_attr_t;
# 79 "/usr/include/bits/pthreadtypes.h" 3
typedef
# 75 "/usr/include/bits/pthreadtypes.h" 3
struct __pthread_internal_list {
# 77 "/usr/include/bits/pthreadtypes.h" 3
__pthread_internal_list *__prev;
# 78 "/usr/include/bits/pthreadtypes.h" 3
__pthread_internal_list *__next;
# 79 "/usr/include/bits/pthreadtypes.h" 3
} __pthread_list_t;
# 127 "/usr/include/bits/pthreadtypes.h" 3
typedef
# 91 "/usr/include/bits/pthreadtypes.h" 3
union {
# 92 "/usr/include/bits/pthreadtypes.h" 3
struct __pthread_mutex_s {
# 94 "/usr/include/bits/pthreadtypes.h" 3
int __lock;
# 95 "/usr/include/bits/pthreadtypes.h" 3
unsigned __count;
# 96 "/usr/include/bits/pthreadtypes.h" 3
int __owner;
# 98 "/usr/include/bits/pthreadtypes.h" 3
unsigned __nusers;
# 102 "/usr/include/bits/pthreadtypes.h" 3
int __kind;
# 104 "/usr/include/bits/pthreadtypes.h" 3
short __spins;
# 105 "/usr/include/bits/pthreadtypes.h" 3
short __elision;
# 106 "/usr/include/bits/pthreadtypes.h" 3
__pthread_list_t __list;
# 124 "/usr/include/bits/pthreadtypes.h" 3
} __data;
# 125 "/usr/include/bits/pthreadtypes.h" 3
char __size[40];
# 126 "/usr/include/bits/pthreadtypes.h" 3
long __align;
# 127 "/usr/include/bits/pthreadtypes.h" 3
} pthread_mutex_t;
# 133 "/usr/include/bits/pthreadtypes.h" 3
typedef
# 130 "/usr/include/bits/pthreadtypes.h" 3
union {
# 131 "/usr/include/bits/pthreadtypes.h" 3
char __size[4];
# 132 "/usr/include/bits/pthreadtypes.h" 3
int __align;
# 133 "/usr/include/bits/pthreadtypes.h" 3
} pthread_mutexattr_t;
# 153 "/usr/include/bits/pthreadtypes.h" 3
typedef
# 139 "/usr/include/bits/pthreadtypes.h" 3
union {
# 141 "/usr/include/bits/pthreadtypes.h" 3
struct {
# 142 "/usr/include/bits/pthreadtypes.h" 3
int __lock;
# 143 "/usr/include/bits/pthreadtypes.h" 3
unsigned __futex;
# 144 "/usr/include/bits/pthreadtypes.h" 3
__extension__ unsigned long long __total_seq;
# 145 "/usr/include/bits/pthreadtypes.h" 3
__extension__ unsigned long long __wakeup_seq;
# 146 "/usr/include/bits/pthreadtypes.h" 3
__extension__ unsigned long long __woken_seq;
# 147 "/usr/include/bits/pthreadtypes.h" 3
void *__mutex;
# 148 "/usr/include/bits/pthreadtypes.h" 3
unsigned __nwaiters;
# 149 "/usr/include/bits/pthreadtypes.h" 3
unsigned __broadcast_seq;
# 150 "/usr/include/bits/pthreadtypes.h" 3
} __data;
# 151 "/usr/include/bits/pthreadtypes.h" 3
char __size[48];
# 152 "/usr/include/bits/pthreadtypes.h" 3
__extension__ long long __align;
# 153 "/usr/include/bits/pthreadtypes.h" 3
} pthread_cond_t;
# 159 "/usr/include/bits/pthreadtypes.h" 3
typedef
# 156 "/usr/include/bits/pthreadtypes.h" 3
union {
# 157 "/usr/include/bits/pthreadtypes.h" 3
char __size[4];
# 158 "/usr/include/bits/pthreadtypes.h" 3
int __align;
# 159 "/usr/include/bits/pthreadtypes.h" 3
} pthread_condattr_t;
# 163 "/usr/include/bits/pthreadtypes.h" 3
typedef unsigned pthread_key_t;
# 167 "/usr/include/bits/pthreadtypes.h" 3
typedef int pthread_once_t;
# 213 "/usr/include/bits/pthreadtypes.h" 3
typedef
# 174 "/usr/include/bits/pthreadtypes.h" 3
union {
# 177 "/usr/include/bits/pthreadtypes.h" 3
struct {
# 178 "/usr/include/bits/pthreadtypes.h" 3
int __lock;
# 179 "/usr/include/bits/pthreadtypes.h" 3
unsigned __nr_readers;
# 180 "/usr/include/bits/pthreadtypes.h" 3
unsigned __readers_wakeup;
# 181 "/usr/include/bits/pthreadtypes.h" 3
unsigned __writer_wakeup;
# 182 "/usr/include/bits/pthreadtypes.h" 3
unsigned __nr_readers_queued;
# 183 "/usr/include/bits/pthreadtypes.h" 3
unsigned __nr_writers_queued;
# 184 "/usr/include/bits/pthreadtypes.h" 3
int __writer;
# 185 "/usr/include/bits/pthreadtypes.h" 3
int __shared;
# 186 "/usr/include/bits/pthreadtypes.h" 3
unsigned long __pad1;
# 187 "/usr/include/bits/pthreadtypes.h" 3
unsigned long __pad2;
# 190 "/usr/include/bits/pthreadtypes.h" 3
unsigned __flags;
# 192 "/usr/include/bits/pthreadtypes.h" 3
} __data;
# 211 "/usr/include/bits/pthreadtypes.h" 3
char __size[56];
# 212 "/usr/include/bits/pthreadtypes.h" 3
long __align;
# 213 "/usr/include/bits/pthreadtypes.h" 3
} pthread_rwlock_t;
# 219 "/usr/include/bits/pthreadtypes.h" 3
typedef
# 216 "/usr/include/bits/pthreadtypes.h" 3
union {
# 217 "/usr/include/bits/pthreadtypes.h" 3
char __size[8];
# 218 "/usr/include/bits/pthreadtypes.h" 3
long __align;
# 219 "/usr/include/bits/pthreadtypes.h" 3
} pthread_rwlockattr_t;
# 225 "/usr/include/bits/pthreadtypes.h" 3
typedef volatile int pthread_spinlock_t;
# 234 "/usr/include/bits/pthreadtypes.h" 3
typedef
# 231 "/usr/include/bits/pthreadtypes.h" 3
union {
# 232 "/usr/include/bits/pthreadtypes.h" 3
char __size[32];
# 233 "/usr/include/bits/pthreadtypes.h" 3
long __align;
# 234 "/usr/include/bits/pthreadtypes.h" 3
} pthread_barrier_t;
# 240 "/usr/include/bits/pthreadtypes.h" 3
typedef
# 237 "/usr/include/bits/pthreadtypes.h" 3
union {
# 238 "/usr/include/bits/pthreadtypes.h" 3
char __size[4];
# 239 "/usr/include/bits/pthreadtypes.h" 3
int __align;
# 240 "/usr/include/bits/pthreadtypes.h" 3
} pthread_barrierattr_t;
# 273 "/usr/include/sys/types.h" 3
}
# 321 "/usr/include/stdlib.h" 3
extern long random() throw();
# 324 "/usr/include/stdlib.h" 3
extern void srandom(unsigned __seed) throw();
# 330 "/usr/include/stdlib.h" 3
extern char *initstate(unsigned __seed, char * __statebuf, size_t __statelen) throw()
# 331 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 335 "/usr/include/stdlib.h" 3
extern char *setstate(char * __statebuf) throw() __attribute((__nonnull__(1)));
# 343 "/usr/include/stdlib.h" 3
struct random_data {
# 345 "/usr/include/stdlib.h" 3
int32_t *fptr;
# 346 "/usr/include/stdlib.h" 3
int32_t *rptr;
# 347 "/usr/include/stdlib.h" 3
int32_t *state;
# 348 "/usr/include/stdlib.h" 3
int rand_type;
# 349 "/usr/include/stdlib.h" 3
int rand_deg;
# 350 "/usr/include/stdlib.h" 3
int rand_sep;
# 351 "/usr/include/stdlib.h" 3
int32_t *end_ptr;
# 352 "/usr/include/stdlib.h" 3
};
# 354 "/usr/include/stdlib.h" 3
extern int random_r(random_data *__restrict__ __buf, int32_t *__restrict__ __result) throw()
# 355 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 357 "/usr/include/stdlib.h" 3
extern int srandom_r(unsigned __seed, random_data * __buf) throw()
# 358 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 360 "/usr/include/stdlib.h" 3
extern int initstate_r(unsigned __seed, char *__restrict__ __statebuf, size_t __statelen, random_data *__restrict__ __buf) throw()
# 363 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2, 4)));
# 365 "/usr/include/stdlib.h" 3
extern int setstate_r(char *__restrict__ __statebuf, random_data *__restrict__ __buf) throw()
# 367 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 374 "/usr/include/stdlib.h" 3
extern int rand() throw();
# 376 "/usr/include/stdlib.h" 3
extern void srand(unsigned __seed) throw();
# 381 "/usr/include/stdlib.h" 3
extern int rand_r(unsigned * __seed) throw();
# 389 "/usr/include/stdlib.h" 3
extern double drand48() throw();
# 390 "/usr/include/stdlib.h" 3
extern double erand48(unsigned short __xsubi[3]) throw() __attribute((__nonnull__(1)));
# 393 "/usr/include/stdlib.h" 3
extern long lrand48() throw();
# 394 "/usr/include/stdlib.h" 3
extern long nrand48(unsigned short __xsubi[3]) throw()
# 395 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 398 "/usr/include/stdlib.h" 3
extern long mrand48() throw();
# 399 "/usr/include/stdlib.h" 3
extern long jrand48(unsigned short __xsubi[3]) throw()
# 400 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 403 "/usr/include/stdlib.h" 3
extern void srand48(long __seedval) throw();
# 404 "/usr/include/stdlib.h" 3
extern unsigned short *seed48(unsigned short __seed16v[3]) throw()
# 405 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 406 "/usr/include/stdlib.h" 3
extern void lcong48(unsigned short __param[7]) throw() __attribute((__nonnull__(1)));
# 412 "/usr/include/stdlib.h" 3
struct drand48_data {
# 414 "/usr/include/stdlib.h" 3
unsigned short __x[3];
# 415 "/usr/include/stdlib.h" 3
unsigned short __old_x[3];
# 416 "/usr/include/stdlib.h" 3
unsigned short __c;
# 417 "/usr/include/stdlib.h" 3
unsigned short __init;
# 418 "/usr/include/stdlib.h" 3
unsigned long long __a;
# 419 "/usr/include/stdlib.h" 3
};
# 422 "/usr/include/stdlib.h" 3
extern int drand48_r(drand48_data *__restrict__ __buffer, double *__restrict__ __result) throw()
# 423 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 424 "/usr/include/stdlib.h" 3
extern int erand48_r(unsigned short __xsubi[3], drand48_data *__restrict__ __buffer, double *__restrict__ __result) throw()
# 426 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 429 "/usr/include/stdlib.h" 3
extern int lrand48_r(drand48_data *__restrict__ __buffer, long *__restrict__ __result) throw()
# 431 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 432 "/usr/include/stdlib.h" 3
extern int nrand48_r(unsigned short __xsubi[3], drand48_data *__restrict__ __buffer, long *__restrict__ __result) throw()
# 435 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 438 "/usr/include/stdlib.h" 3
extern int mrand48_r(drand48_data *__restrict__ __buffer, long *__restrict__ __result) throw()
# 440 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 441 "/usr/include/stdlib.h" 3
extern int jrand48_r(unsigned short __xsubi[3], drand48_data *__restrict__ __buffer, long *__restrict__ __result) throw()
# 444 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 447 "/usr/include/stdlib.h" 3
extern int srand48_r(long __seedval, drand48_data * __buffer) throw()
# 448 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 450 "/usr/include/stdlib.h" 3
extern int seed48_r(unsigned short __seed16v[3], drand48_data * __buffer) throw()
# 451 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 453 "/usr/include/stdlib.h" 3
extern int lcong48_r(unsigned short __param[7], drand48_data * __buffer) throw()
# 455 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 465 "/usr/include/stdlib.h" 3
extern void *malloc(size_t __size) throw() __attribute((__malloc__));
# 467 "/usr/include/stdlib.h" 3
extern void *calloc(size_t __nmemb, size_t __size) throw()
# 468 "/usr/include/stdlib.h" 3
 __attribute((__malloc__));
# 479 "/usr/include/stdlib.h" 3
extern void *realloc(void * __ptr, size_t __size) throw()
# 480 "/usr/include/stdlib.h" 3
 __attribute((__warn_unused_result__));
# 482 "/usr/include/stdlib.h" 3
extern void free(void * __ptr) throw();
# 487 "/usr/include/stdlib.h" 3
extern void cfree(void * __ptr) throw();
# 26 "/usr/include/alloca.h" 3
extern "C" {
# 32 "/usr/include/alloca.h" 3
extern void *alloca(size_t __size) throw();
# 38 "/usr/include/alloca.h" 3
}
# 497 "/usr/include/stdlib.h" 3
extern void *valloc(size_t __size) throw() __attribute((__malloc__));
# 502 "/usr/include/stdlib.h" 3
extern int posix_memalign(void ** __memptr, size_t __alignment, size_t __size) throw()
# 503 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 508 "/usr/include/stdlib.h" 3
extern void *aligned_alloc(size_t __alignment, size_t __size) throw()
# 509 "/usr/include/stdlib.h" 3
 __attribute((__malloc__, __alloc_size__(2)));
# 514 "/usr/include/stdlib.h" 3
extern void abort() throw() __attribute((__noreturn__));
# 518 "/usr/include/stdlib.h" 3
extern int atexit(void (* __func)(void)) throw() __attribute((__nonnull__(1)));
# 523 "/usr/include/stdlib.h" 3
extern "C++" int at_quick_exit(void (* __func)(void)) throw() __asm__("at_quick_exit")
# 524 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 534 "/usr/include/stdlib.h" 3
extern int on_exit(void (* __func)(int __status, void * __arg), void * __arg) throw()
# 535 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 542 "/usr/include/stdlib.h" 3
extern void exit(int __status) throw() __attribute((__noreturn__));
# 548 "/usr/include/stdlib.h" 3
extern void quick_exit(int __status) throw() __attribute((__noreturn__));
# 556 "/usr/include/stdlib.h" 3
extern void _Exit(int __status) throw() __attribute((__noreturn__));
# 563 "/usr/include/stdlib.h" 3
extern char *getenv(const char * __name) throw() __attribute((__nonnull__(1)));
# 569 "/usr/include/stdlib.h" 3
extern char *secure_getenv(const char * __name) throw()
# 570 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 577 "/usr/include/stdlib.h" 3
extern int putenv(char * __string) throw() __attribute((__nonnull__(1)));
# 583 "/usr/include/stdlib.h" 3
extern int setenv(const char * __name, const char * __value, int __replace) throw()
# 584 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 587 "/usr/include/stdlib.h" 3
extern int unsetenv(const char * __name) throw() __attribute((__nonnull__(1)));
# 594 "/usr/include/stdlib.h" 3
extern int clearenv() throw();
# 605 "/usr/include/stdlib.h" 3
extern char *mktemp(char * __template) throw() __attribute((__nonnull__(1)));
# 619 "/usr/include/stdlib.h" 3
extern int mkstemp(char * __template) __attribute((__nonnull__(1)));
# 629 "/usr/include/stdlib.h" 3
extern int mkstemp64(char * __template) __attribute((__nonnull__(1)));
# 641 "/usr/include/stdlib.h" 3
extern int mkstemps(char * __template, int __suffixlen) __attribute((__nonnull__(1)));
# 651 "/usr/include/stdlib.h" 3
extern int mkstemps64(char * __template, int __suffixlen)
# 652 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 662 "/usr/include/stdlib.h" 3
extern char *mkdtemp(char * __template) throw() __attribute((__nonnull__(1)));
# 673 "/usr/include/stdlib.h" 3
extern int mkostemp(char * __template, int __flags) __attribute((__nonnull__(1)));
# 683 "/usr/include/stdlib.h" 3
extern int mkostemp64(char * __template, int __flags) __attribute((__nonnull__(1)));
# 693 "/usr/include/stdlib.h" 3
extern int mkostemps(char * __template, int __suffixlen, int __flags)
# 694 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 705 "/usr/include/stdlib.h" 3
extern int mkostemps64(char * __template, int __suffixlen, int __flags)
# 706 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 716 "/usr/include/stdlib.h" 3
extern int system(const char * __command);
# 723 "/usr/include/stdlib.h" 3
extern char *canonicalize_file_name(const char * __name) throw()
# 724 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 733 "/usr/include/stdlib.h" 3
extern char *realpath(const char *__restrict__ __name, char *__restrict__ __resolved) throw();
# 741 "/usr/include/stdlib.h" 3
typedef int (*__compar_fn_t)(const void *, const void *);
# 744 "/usr/include/stdlib.h" 3
typedef __compar_fn_t comparison_fn_t;
# 748 "/usr/include/stdlib.h" 3
typedef int (*__compar_d_fn_t)(const void *, const void *, void *);
# 754 "/usr/include/stdlib.h" 3
extern void *bsearch(const void * __key, const void * __base, size_t __nmemb, size_t __size, __compar_fn_t __compar)
# 756 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2, 5)));
# 760 "/usr/include/stdlib.h" 3
extern void qsort(void * __base, size_t __nmemb, size_t __size, __compar_fn_t __compar)
# 761 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 763 "/usr/include/stdlib.h" 3
extern void qsort_r(void * __base, size_t __nmemb, size_t __size, __compar_d_fn_t __compar, void * __arg)
# 765 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 770 "/usr/include/stdlib.h" 3
extern int abs(int __x) throw() __attribute((const));
# 771 "/usr/include/stdlib.h" 3
extern long labs(long __x) throw() __attribute((const));
# 775 "/usr/include/stdlib.h" 3
__extension__ extern long long llabs(long long __x) throw()
# 776 "/usr/include/stdlib.h" 3
 __attribute((const));
# 784 "/usr/include/stdlib.h" 3
extern div_t div(int __numer, int __denom) throw()
# 785 "/usr/include/stdlib.h" 3
 __attribute((const));
# 786 "/usr/include/stdlib.h" 3
extern ldiv_t ldiv(long __numer, long __denom) throw()
# 787 "/usr/include/stdlib.h" 3
 __attribute((const));
# 792 "/usr/include/stdlib.h" 3
__extension__ extern lldiv_t lldiv(long long __numer, long long __denom) throw()
# 794 "/usr/include/stdlib.h" 3
 __attribute((const));
# 807 "/usr/include/stdlib.h" 3
extern char *ecvt(double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign) throw()
# 808 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4)));
# 813 "/usr/include/stdlib.h" 3
extern char *fcvt(double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign) throw()
# 814 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4)));
# 819 "/usr/include/stdlib.h" 3
extern char *gcvt(double __value, int __ndigit, char * __buf) throw()
# 820 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 825 "/usr/include/stdlib.h" 3
extern char *qecvt(long double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign) throw()
# 827 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4)));
# 828 "/usr/include/stdlib.h" 3
extern char *qfcvt(long double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign) throw()
# 830 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4)));
# 831 "/usr/include/stdlib.h" 3
extern char *qgcvt(long double __value, int __ndigit, char * __buf) throw()
# 832 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 837 "/usr/include/stdlib.h" 3
extern int ecvt_r(double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign, char *__restrict__ __buf, size_t __len) throw()
# 839 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 840 "/usr/include/stdlib.h" 3
extern int fcvt_r(double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign, char *__restrict__ __buf, size_t __len) throw()
# 842 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 844 "/usr/include/stdlib.h" 3
extern int qecvt_r(long double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign, char *__restrict__ __buf, size_t __len) throw()
# 847 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 848 "/usr/include/stdlib.h" 3
extern int qfcvt_r(long double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign, char *__restrict__ __buf, size_t __len) throw()
# 851 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 859 "/usr/include/stdlib.h" 3
extern int mblen(const char * __s, size_t __n) throw();
# 862 "/usr/include/stdlib.h" 3
extern int mbtowc(wchar_t *__restrict__ __pwc, const char *__restrict__ __s, size_t __n) throw();
# 866 "/usr/include/stdlib.h" 3
extern int wctomb(char * __s, wchar_t __wchar) throw();
# 870 "/usr/include/stdlib.h" 3
extern size_t mbstowcs(wchar_t *__restrict__ __pwcs, const char *__restrict__ __s, size_t __n) throw();
# 873 "/usr/include/stdlib.h" 3
extern size_t wcstombs(char *__restrict__ __s, const wchar_t *__restrict__ __pwcs, size_t __n) throw();
# 884 "/usr/include/stdlib.h" 3
extern int rpmatch(const char * __response) throw() __attribute((__nonnull__(1)));
# 895 "/usr/include/stdlib.h" 3
extern int getsubopt(char **__restrict__ __optionp, char *const *__restrict__ __tokens, char **__restrict__ __valuep) throw()
# 898 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2, 3)));
# 904 "/usr/include/stdlib.h" 3
extern void setkey(const char * __key) throw() __attribute((__nonnull__(1)));
# 912 "/usr/include/stdlib.h" 3
extern int posix_openpt(int __oflag);
# 920 "/usr/include/stdlib.h" 3
extern int grantpt(int __fd) throw();
# 924 "/usr/include/stdlib.h" 3
extern int unlockpt(int __fd) throw();
# 929 "/usr/include/stdlib.h" 3
extern char *ptsname(int __fd) throw();
# 936 "/usr/include/stdlib.h" 3
extern int ptsname_r(int __fd, char * __buf, size_t __buflen) throw()
# 937 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 940 "/usr/include/stdlib.h" 3
extern int getpt();
# 947 "/usr/include/stdlib.h" 3
extern int getloadavg(double __loadavg[], int __nelem) throw()
# 948 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 964 "/usr/include/stdlib.h" 3
}
# 1855 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/c++config.h" 3
namespace std {
# 1857 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/c++config.h" 3
typedef unsigned long size_t;
# 1858 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/c++config.h" 3
typedef long ptrdiff_t;
# 1863 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/c++config.h" 3
}
# 68 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 72 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
template< class _Iterator, class _Container> class __normal_iterator;
# 76 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
}
# 78 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
namespace std __attribute((__visibility__("default"))) {
# 82 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
struct __true_type { };
# 83 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
struct __false_type { };
# 85 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
template< bool >
# 86 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
struct __truth_type {
# 87 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
typedef __false_type __type; };
# 90 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
template<> struct __truth_type< true> {
# 91 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
typedef __true_type __type; };
# 95 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
template< class _Sp, class _Tp>
# 96 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
struct __traitor {
# 98 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
enum { __value = ((bool)_Sp::__value) || ((bool)_Tp::__value)};
# 99 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
typedef typename __truth_type< __value> ::__type __type;
# 100 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
};
# 103 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
template< class , class >
# 104 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
struct __are_same {
# 106 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
enum { __value};
# 107 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 108 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
};
# 110 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
template< class _Tp>
# 111 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
struct __are_same< _Tp, _Tp> {
# 113 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 114 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 115 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
};
# 118 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
template< class _Tp>
# 119 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
struct __is_void {
# 121 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
enum { __value};
# 122 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 123 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
};
# 126 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
template<> struct __is_void< void> {
# 128 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 129 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 130 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
};
# 135 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
template< class _Tp>
# 136 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
struct __is_integer {
# 138 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
enum { __value};
# 139 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 140 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
};
# 146 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
template<> struct __is_integer< bool> {
# 148 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 149 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 150 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
};
# 153 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
template<> struct __is_integer< char> {
# 155 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 156 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 157 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
};
# 160 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
template<> struct __is_integer< signed char> {
# 162 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 163 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 164 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
};
# 167 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned char> {
# 169 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 170 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 171 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
};
# 175 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
template<> struct __is_integer< wchar_t> {
# 177 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 178 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 179 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
};
# 199 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
template<> struct __is_integer< short> {
# 201 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 202 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 203 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
};
# 206 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned short> {
# 208 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 209 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 210 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
};
# 213 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
template<> struct __is_integer< int> {
# 215 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 216 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 217 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
};
# 220 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned> {
# 222 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 223 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 224 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
};
# 227 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
template<> struct __is_integer< long> {
# 229 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 230 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 231 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
};
# 234 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned long> {
# 236 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 237 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 238 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
};
# 241 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
template<> struct __is_integer< long long> {
# 243 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 244 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 245 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
};
# 248 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned long long> {
# 250 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 251 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 252 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
};
# 257 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
template< class _Tp>
# 258 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
struct __is_floating {
# 260 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
enum { __value};
# 261 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 262 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
};
# 266 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
template<> struct __is_floating< float> {
# 268 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 269 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 270 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
};
# 273 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
template<> struct __is_floating< double> {
# 275 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 276 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 277 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
};
# 280 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
template<> struct __is_floating< long double> {
# 282 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 283 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 284 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
};
# 289 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
template< class _Tp>
# 290 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
struct __is_pointer {
# 292 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
enum { __value};
# 293 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 294 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
};
# 296 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
template< class _Tp>
# 297 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
struct __is_pointer< _Tp *> {
# 299 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 300 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 301 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
};
# 306 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
template< class _Tp>
# 307 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
struct __is_normal_iterator {
# 309 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
enum { __value};
# 310 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 311 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
};
# 313 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
template< class _Iterator, class _Container>
# 314 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
struct __is_normal_iterator< __gnu_cxx::__normal_iterator< _Iterator, _Container> > {
# 317 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 318 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 319 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
};
# 324 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
template< class _Tp>
# 325 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
struct __is_arithmetic : public __traitor< __is_integer< _Tp> , __is_floating< _Tp> > {
# 327 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
};
# 332 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
template< class _Tp>
# 333 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
struct __is_fundamental : public __traitor< __is_void< _Tp> , __is_arithmetic< _Tp> > {
# 335 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
};
# 340 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
template< class _Tp>
# 341 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
struct __is_scalar : public __traitor< __is_arithmetic< _Tp> , __is_pointer< _Tp> > {
# 343 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
};
# 348 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
template< class _Tp>
# 349 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
struct __is_char {
# 351 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
enum { __value};
# 352 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 353 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
};
# 356 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
template<> struct __is_char< char> {
# 358 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 359 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 360 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
};
# 364 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
template<> struct __is_char< wchar_t> {
# 366 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 367 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 368 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
};
# 371 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
template< class _Tp>
# 372 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
struct __is_byte {
# 374 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
enum { __value};
# 375 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 376 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
};
# 379 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
template<> struct __is_byte< char> {
# 381 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 382 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 383 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
};
# 386 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
template<> struct __is_byte< signed char> {
# 388 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 389 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 390 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
};
# 393 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
template<> struct __is_byte< unsigned char> {
# 395 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 396 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 397 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
};
# 402 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
template< class _Tp>
# 403 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
struct __is_move_iterator {
# 405 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
enum { __value};
# 406 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 407 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
};
# 422 "/usr/include/c++/4.8.2/bits/cpp_type_traits.h" 3
}
# 37 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 42 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
template< bool , class >
# 43 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
struct __enable_if {
# 44 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
};
# 46 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
template< class _Tp>
# 47 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
struct __enable_if< true, _Tp> {
# 48 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
typedef _Tp __type; };
# 52 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
template< bool _Cond, class _Iftrue, class _Iffalse>
# 53 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
struct __conditional_type {
# 54 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
typedef _Iftrue __type; };
# 56 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
template< class _Iftrue, class _Iffalse>
# 57 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
struct __conditional_type< false, _Iftrue, _Iffalse> {
# 58 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
typedef _Iffalse __type; };
# 62 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
template< class _Tp>
# 63 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
struct __add_unsigned {
# 66 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
private: typedef __enable_if< std::__is_integer< _Tp> ::__value, _Tp> __if_type;
# 69 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
public: typedef typename __enable_if< std::__is_integer< _Tp> ::__value, _Tp> ::__type __type;
# 70 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
};
# 73 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
template<> struct __add_unsigned< char> {
# 74 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
typedef unsigned char __type; };
# 77 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
template<> struct __add_unsigned< signed char> {
# 78 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
typedef unsigned char __type; };
# 81 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
template<> struct __add_unsigned< short> {
# 82 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
typedef unsigned short __type; };
# 85 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
template<> struct __add_unsigned< int> {
# 86 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
typedef unsigned __type; };
# 89 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
template<> struct __add_unsigned< long> {
# 90 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
typedef unsigned long __type; };
# 93 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
template<> struct __add_unsigned< long long> {
# 94 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
typedef unsigned long long __type; };
# 98 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
template<> struct __add_unsigned< bool> ;
# 101 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
template<> struct __add_unsigned< wchar_t> ;
# 105 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
template< class _Tp>
# 106 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
struct __remove_unsigned {
# 109 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
private: typedef __enable_if< std::__is_integer< _Tp> ::__value, _Tp> __if_type;
# 112 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
public: typedef typename __enable_if< std::__is_integer< _Tp> ::__value, _Tp> ::__type __type;
# 113 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
};
# 116 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
template<> struct __remove_unsigned< char> {
# 117 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
typedef signed char __type; };
# 120 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned char> {
# 121 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
typedef signed char __type; };
# 124 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned short> {
# 125 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
typedef short __type; };
# 128 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned> {
# 129 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
typedef int __type; };
# 132 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned long> {
# 133 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
typedef long __type; };
# 136 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned long long> {
# 137 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
typedef long long __type; };
# 141 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
template<> struct __remove_unsigned< bool> ;
# 144 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
template<> struct __remove_unsigned< wchar_t> ;
# 148 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
template< class _Type> inline bool
# 150 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
__is_null_pointer(_Type *__ptr)
# 151 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
{ return __ptr == 0; }
# 153 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
template< class _Type> inline bool
# 155 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
__is_null_pointer(_Type)
# 156 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
{ return false; }
# 160 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
template< class _Tp, bool = std::__is_integer< _Tp> ::__value>
# 161 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
struct __promote {
# 162 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
typedef double __type; };
# 167 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
template< class _Tp>
# 168 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
struct __promote< _Tp, false> {
# 169 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
};
# 172 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
template<> struct __promote< long double> {
# 173 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
typedef long double __type; };
# 176 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
template<> struct __promote< double> {
# 177 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
typedef double __type; };
# 180 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
template<> struct __promote< float> {
# 181 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
typedef float __type; };
# 183 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
template< class _Tp, class _Up, class
# 184 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
_Tp2 = typename __promote< _Tp> ::__type, class
# 185 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
_Up2 = typename __promote< _Up> ::__type>
# 186 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
struct __promote_2 {
# 188 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
typedef __typeof__(_Tp2() + _Up2()) __type;
# 189 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
};
# 191 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
template< class _Tp, class _Up, class _Vp, class
# 192 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
_Tp2 = typename __promote< _Tp> ::__type, class
# 193 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
_Up2 = typename __promote< _Up> ::__type, class
# 194 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
_Vp2 = typename __promote< _Vp> ::__type>
# 195 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
struct __promote_3 {
# 197 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
typedef __typeof__((_Tp2() + _Up2()) + _Vp2()) __type;
# 198 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
};
# 200 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
template< class _Tp, class _Up, class _Vp, class _Wp, class
# 201 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
_Tp2 = typename __promote< _Tp> ::__type, class
# 202 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
_Up2 = typename __promote< _Up> ::__type, class
# 203 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
_Vp2 = typename __promote< _Vp> ::__type, class
# 204 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
_Wp2 = typename __promote< _Wp> ::__type>
# 205 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
struct __promote_4 {
# 207 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
typedef __typeof__(((_Tp2() + _Up2()) + _Vp2()) + _Wp2()) __type;
# 208 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
};
# 211 "/usr/include/c++/4.8.2/ext/type_traits.h" 3
}
# 75 "/usr/include/c++/4.8.2/cmath" 3
namespace std __attribute((__visibility__("default"))) {
# 81 "/usr/include/c++/4.8.2/cmath" 3
inline double abs(double __x)
# 82 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_fabs(__x); }
# 87 "/usr/include/c++/4.8.2/cmath" 3
inline float abs(float __x)
# 88 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_fabsf(__x); }
# 91 "/usr/include/c++/4.8.2/cmath" 3
inline long double abs(long double __x)
# 92 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_fabsl(__x); }
# 95 "/usr/include/c++/4.8.2/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 99 "/usr/include/c++/4.8.2/cmath" 3
abs(_Tp __x)
# 100 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_fabs(__x); }
# 102 "/usr/include/c++/4.8.2/cmath" 3
using ::acos;
# 106 "/usr/include/c++/4.8.2/cmath" 3
inline float acos(float __x)
# 107 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_acosf(__x); }
# 110 "/usr/include/c++/4.8.2/cmath" 3
inline long double acos(long double __x)
# 111 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_acosl(__x); }
# 114 "/usr/include/c++/4.8.2/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 118 "/usr/include/c++/4.8.2/cmath" 3
acos(_Tp __x)
# 119 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_acos(__x); }
# 121 "/usr/include/c++/4.8.2/cmath" 3
using ::asin;
# 125 "/usr/include/c++/4.8.2/cmath" 3
inline float asin(float __x)
# 126 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_asinf(__x); }
# 129 "/usr/include/c++/4.8.2/cmath" 3
inline long double asin(long double __x)
# 130 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_asinl(__x); }
# 133 "/usr/include/c++/4.8.2/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 137 "/usr/include/c++/4.8.2/cmath" 3
asin(_Tp __x)
# 138 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_asin(__x); }
# 140 "/usr/include/c++/4.8.2/cmath" 3
using ::atan;
# 144 "/usr/include/c++/4.8.2/cmath" 3
inline float atan(float __x)
# 145 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_atanf(__x); }
# 148 "/usr/include/c++/4.8.2/cmath" 3
inline long double atan(long double __x)
# 149 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_atanl(__x); }
# 152 "/usr/include/c++/4.8.2/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 156 "/usr/include/c++/4.8.2/cmath" 3
atan(_Tp __x)
# 157 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_atan(__x); }
# 159 "/usr/include/c++/4.8.2/cmath" 3
using ::atan2;
# 163 "/usr/include/c++/4.8.2/cmath" 3
inline float atan2(float __y, float __x)
# 164 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_atan2f(__y, __x); }
# 167 "/usr/include/c++/4.8.2/cmath" 3
inline long double atan2(long double __y, long double __x)
# 168 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_atan2l(__y, __x); }
# 171 "/usr/include/c++/4.8.2/cmath" 3
template< class _Tp, class _Up> inline typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 174 "/usr/include/c++/4.8.2/cmath" 3
atan2(_Tp __y, _Up __x)
# 175 "/usr/include/c++/4.8.2/cmath" 3
{
# 176 "/usr/include/c++/4.8.2/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 177 "/usr/include/c++/4.8.2/cmath" 3
return atan2((__type)__y, (__type)__x);
# 178 "/usr/include/c++/4.8.2/cmath" 3
}
# 180 "/usr/include/c++/4.8.2/cmath" 3
using ::ceil;
# 184 "/usr/include/c++/4.8.2/cmath" 3
inline float ceil(float __x)
# 185 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_ceilf(__x); }
# 188 "/usr/include/c++/4.8.2/cmath" 3
inline long double ceil(long double __x)
# 189 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_ceill(__x); }
# 192 "/usr/include/c++/4.8.2/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 196 "/usr/include/c++/4.8.2/cmath" 3
ceil(_Tp __x)
# 197 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_ceil(__x); }
# 199 "/usr/include/c++/4.8.2/cmath" 3
using ::cos;
# 203 "/usr/include/c++/4.8.2/cmath" 3
inline float cos(float __x)
# 204 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_cosf(__x); }
# 207 "/usr/include/c++/4.8.2/cmath" 3
inline long double cos(long double __x)
# 208 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_cosl(__x); }
# 211 "/usr/include/c++/4.8.2/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 215 "/usr/include/c++/4.8.2/cmath" 3
cos(_Tp __x)
# 216 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_cos(__x); }
# 218 "/usr/include/c++/4.8.2/cmath" 3
using ::cosh;
# 222 "/usr/include/c++/4.8.2/cmath" 3
inline float cosh(float __x)
# 223 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_coshf(__x); }
# 226 "/usr/include/c++/4.8.2/cmath" 3
inline long double cosh(long double __x)
# 227 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_coshl(__x); }
# 230 "/usr/include/c++/4.8.2/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 234 "/usr/include/c++/4.8.2/cmath" 3
cosh(_Tp __x)
# 235 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_cosh(__x); }
# 237 "/usr/include/c++/4.8.2/cmath" 3
using ::exp;
# 241 "/usr/include/c++/4.8.2/cmath" 3
inline float exp(float __x)
# 242 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_expf(__x); }
# 245 "/usr/include/c++/4.8.2/cmath" 3
inline long double exp(long double __x)
# 246 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_expl(__x); }
# 249 "/usr/include/c++/4.8.2/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 253 "/usr/include/c++/4.8.2/cmath" 3
exp(_Tp __x)
# 254 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_exp(__x); }
# 256 "/usr/include/c++/4.8.2/cmath" 3
using ::fabs;
# 260 "/usr/include/c++/4.8.2/cmath" 3
inline float fabs(float __x)
# 261 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_fabsf(__x); }
# 264 "/usr/include/c++/4.8.2/cmath" 3
inline long double fabs(long double __x)
# 265 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_fabsl(__x); }
# 268 "/usr/include/c++/4.8.2/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 272 "/usr/include/c++/4.8.2/cmath" 3
fabs(_Tp __x)
# 273 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_fabs(__x); }
# 275 "/usr/include/c++/4.8.2/cmath" 3
using ::floor;
# 279 "/usr/include/c++/4.8.2/cmath" 3
inline float floor(float __x)
# 280 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_floorf(__x); }
# 283 "/usr/include/c++/4.8.2/cmath" 3
inline long double floor(long double __x)
# 284 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_floorl(__x); }
# 287 "/usr/include/c++/4.8.2/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 291 "/usr/include/c++/4.8.2/cmath" 3
floor(_Tp __x)
# 292 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_floor(__x); }
# 294 "/usr/include/c++/4.8.2/cmath" 3
using ::fmod;
# 298 "/usr/include/c++/4.8.2/cmath" 3
inline float fmod(float __x, float __y)
# 299 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_fmodf(__x, __y); }
# 302 "/usr/include/c++/4.8.2/cmath" 3
inline long double fmod(long double __x, long double __y)
# 303 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_fmodl(__x, __y); }
# 306 "/usr/include/c++/4.8.2/cmath" 3
template< class _Tp, class _Up> inline typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 309 "/usr/include/c++/4.8.2/cmath" 3
fmod(_Tp __x, _Up __y)
# 310 "/usr/include/c++/4.8.2/cmath" 3
{
# 311 "/usr/include/c++/4.8.2/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 312 "/usr/include/c++/4.8.2/cmath" 3
return fmod((__type)__x, (__type)__y);
# 313 "/usr/include/c++/4.8.2/cmath" 3
}
# 315 "/usr/include/c++/4.8.2/cmath" 3
using ::frexp;
# 319 "/usr/include/c++/4.8.2/cmath" 3
inline float frexp(float __x, int *__exp)
# 320 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_frexpf(__x, __exp); }
# 323 "/usr/include/c++/4.8.2/cmath" 3
inline long double frexp(long double __x, int *__exp)
# 324 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_frexpl(__x, __exp); }
# 327 "/usr/include/c++/4.8.2/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 331 "/usr/include/c++/4.8.2/cmath" 3
frexp(_Tp __x, int *__exp)
# 332 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_frexp(__x, __exp); }
# 334 "/usr/include/c++/4.8.2/cmath" 3
using ::ldexp;
# 338 "/usr/include/c++/4.8.2/cmath" 3
inline float ldexp(float __x, int __exp)
# 339 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_ldexpf(__x, __exp); }
# 342 "/usr/include/c++/4.8.2/cmath" 3
inline long double ldexp(long double __x, int __exp)
# 343 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_ldexpl(__x, __exp); }
# 346 "/usr/include/c++/4.8.2/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 350 "/usr/include/c++/4.8.2/cmath" 3
ldexp(_Tp __x, int __exp)
# 351 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_ldexp(__x, __exp); }
# 353 "/usr/include/c++/4.8.2/cmath" 3
using ::log;
# 357 "/usr/include/c++/4.8.2/cmath" 3
inline float log(float __x)
# 358 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_logf(__x); }
# 361 "/usr/include/c++/4.8.2/cmath" 3
inline long double log(long double __x)
# 362 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_logl(__x); }
# 365 "/usr/include/c++/4.8.2/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 369 "/usr/include/c++/4.8.2/cmath" 3
log(_Tp __x)
# 370 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_log(__x); }
# 372 "/usr/include/c++/4.8.2/cmath" 3
using ::log10;
# 376 "/usr/include/c++/4.8.2/cmath" 3
inline float log10(float __x)
# 377 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_log10f(__x); }
# 380 "/usr/include/c++/4.8.2/cmath" 3
inline long double log10(long double __x)
# 381 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_log10l(__x); }
# 384 "/usr/include/c++/4.8.2/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 388 "/usr/include/c++/4.8.2/cmath" 3
log10(_Tp __x)
# 389 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_log10(__x); }
# 391 "/usr/include/c++/4.8.2/cmath" 3
using ::modf;
# 395 "/usr/include/c++/4.8.2/cmath" 3
inline float modf(float __x, float *__iptr)
# 396 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_modff(__x, __iptr); }
# 399 "/usr/include/c++/4.8.2/cmath" 3
inline long double modf(long double __x, long double *__iptr)
# 400 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_modfl(__x, __iptr); }
# 403 "/usr/include/c++/4.8.2/cmath" 3
using ::pow;
# 407 "/usr/include/c++/4.8.2/cmath" 3
inline float pow(float __x, float __y)
# 408 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_powf(__x, __y); }
# 411 "/usr/include/c++/4.8.2/cmath" 3
inline long double pow(long double __x, long double __y)
# 412 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_powl(__x, __y); }
# 418 "/usr/include/c++/4.8.2/cmath" 3
inline double pow(double __x, int __i)
# 419 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_powi(__x, __i); }
# 422 "/usr/include/c++/4.8.2/cmath" 3
inline float pow(float __x, int __n)
# 423 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_powif(__x, __n); }
# 426 "/usr/include/c++/4.8.2/cmath" 3
inline long double pow(long double __x, int __n)
# 427 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_powil(__x, __n); }
# 431 "/usr/include/c++/4.8.2/cmath" 3
template< class _Tp, class _Up> inline typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 434 "/usr/include/c++/4.8.2/cmath" 3
pow(_Tp __x, _Up __y)
# 435 "/usr/include/c++/4.8.2/cmath" 3
{
# 436 "/usr/include/c++/4.8.2/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 437 "/usr/include/c++/4.8.2/cmath" 3
return pow((__type)__x, (__type)__y);
# 438 "/usr/include/c++/4.8.2/cmath" 3
}
# 440 "/usr/include/c++/4.8.2/cmath" 3
using ::sin;
# 444 "/usr/include/c++/4.8.2/cmath" 3
inline float sin(float __x)
# 445 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_sinf(__x); }
# 448 "/usr/include/c++/4.8.2/cmath" 3
inline long double sin(long double __x)
# 449 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_sinl(__x); }
# 452 "/usr/include/c++/4.8.2/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 456 "/usr/include/c++/4.8.2/cmath" 3
sin(_Tp __x)
# 457 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_sin(__x); }
# 459 "/usr/include/c++/4.8.2/cmath" 3
using ::sinh;
# 463 "/usr/include/c++/4.8.2/cmath" 3
inline float sinh(float __x)
# 464 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_sinhf(__x); }
# 467 "/usr/include/c++/4.8.2/cmath" 3
inline long double sinh(long double __x)
# 468 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_sinhl(__x); }
# 471 "/usr/include/c++/4.8.2/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 475 "/usr/include/c++/4.8.2/cmath" 3
sinh(_Tp __x)
# 476 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_sinh(__x); }
# 478 "/usr/include/c++/4.8.2/cmath" 3
using ::sqrt;
# 482 "/usr/include/c++/4.8.2/cmath" 3
inline float sqrt(float __x)
# 483 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_sqrtf(__x); }
# 486 "/usr/include/c++/4.8.2/cmath" 3
inline long double sqrt(long double __x)
# 487 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_sqrtl(__x); }
# 490 "/usr/include/c++/4.8.2/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 494 "/usr/include/c++/4.8.2/cmath" 3
sqrt(_Tp __x)
# 495 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_sqrt(__x); }
# 497 "/usr/include/c++/4.8.2/cmath" 3
using ::tan;
# 501 "/usr/include/c++/4.8.2/cmath" 3
inline float tan(float __x)
# 502 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_tanf(__x); }
# 505 "/usr/include/c++/4.8.2/cmath" 3
inline long double tan(long double __x)
# 506 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_tanl(__x); }
# 509 "/usr/include/c++/4.8.2/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 513 "/usr/include/c++/4.8.2/cmath" 3
tan(_Tp __x)
# 514 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_tan(__x); }
# 516 "/usr/include/c++/4.8.2/cmath" 3
using ::tanh;
# 520 "/usr/include/c++/4.8.2/cmath" 3
inline float tanh(float __x)
# 521 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_tanhf(__x); }
# 524 "/usr/include/c++/4.8.2/cmath" 3
inline long double tanh(long double __x)
# 525 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_tanhl(__x); }
# 528 "/usr/include/c++/4.8.2/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 532 "/usr/include/c++/4.8.2/cmath" 3
tanh(_Tp __x)
# 533 "/usr/include/c++/4.8.2/cmath" 3
{ return __builtin_tanh(__x); }
# 536 "/usr/include/c++/4.8.2/cmath" 3
}
# 555 "/usr/include/c++/4.8.2/cmath" 3
namespace std __attribute((__visibility__("default"))) {
# 805 "/usr/include/c++/4.8.2/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value, int> ::__type
# 808 "/usr/include/c++/4.8.2/cmath" 3
fpclassify(_Tp __f)
# 809 "/usr/include/c++/4.8.2/cmath" 3
{
# 810 "/usr/include/c++/4.8.2/cmath" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 811 "/usr/include/c++/4.8.2/cmath" 3
return __builtin_fpclassify(0, 1, 4, 3, 2, (__type)__f);
# 813 "/usr/include/c++/4.8.2/cmath" 3
}
# 815 "/usr/include/c++/4.8.2/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value, int> ::__type
# 818 "/usr/include/c++/4.8.2/cmath" 3
isfinite(_Tp __f)
# 819 "/usr/include/c++/4.8.2/cmath" 3
{
# 820 "/usr/include/c++/4.8.2/cmath" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 821 "/usr/include/c++/4.8.2/cmath" 3
return __builtin_isfinite((__type)__f);
# 822 "/usr/include/c++/4.8.2/cmath" 3
}
# 824 "/usr/include/c++/4.8.2/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value, int> ::__type
# 827 "/usr/include/c++/4.8.2/cmath" 3
isinf(_Tp __f)
# 828 "/usr/include/c++/4.8.2/cmath" 3
{
# 829 "/usr/include/c++/4.8.2/cmath" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 830 "/usr/include/c++/4.8.2/cmath" 3
return __builtin_isinf((__type)__f);
# 831 "/usr/include/c++/4.8.2/cmath" 3
}
# 833 "/usr/include/c++/4.8.2/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value, int> ::__type
# 836 "/usr/include/c++/4.8.2/cmath" 3
isnan(_Tp __f)
# 837 "/usr/include/c++/4.8.2/cmath" 3
{
# 838 "/usr/include/c++/4.8.2/cmath" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 839 "/usr/include/c++/4.8.2/cmath" 3
return __builtin_isnan((__type)__f);
# 840 "/usr/include/c++/4.8.2/cmath" 3
}
# 842 "/usr/include/c++/4.8.2/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value, int> ::__type
# 845 "/usr/include/c++/4.8.2/cmath" 3
isnormal(_Tp __f)
# 846 "/usr/include/c++/4.8.2/cmath" 3
{
# 847 "/usr/include/c++/4.8.2/cmath" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 848 "/usr/include/c++/4.8.2/cmath" 3
return __builtin_isnormal((__type)__f);
# 849 "/usr/include/c++/4.8.2/cmath" 3
}
# 851 "/usr/include/c++/4.8.2/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value, int> ::__type
# 854 "/usr/include/c++/4.8.2/cmath" 3
signbit(_Tp __f)
# 855 "/usr/include/c++/4.8.2/cmath" 3
{
# 856 "/usr/include/c++/4.8.2/cmath" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 857 "/usr/include/c++/4.8.2/cmath" 3
return __builtin_signbit((__type)__f);
# 858 "/usr/include/c++/4.8.2/cmath" 3
}
# 860 "/usr/include/c++/4.8.2/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value, int> ::__type
# 863 "/usr/include/c++/4.8.2/cmath" 3
isgreater(_Tp __f1, _Tp __f2)
# 864 "/usr/include/c++/4.8.2/cmath" 3
{
# 865 "/usr/include/c++/4.8.2/cmath" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 866 "/usr/include/c++/4.8.2/cmath" 3
return __builtin_isgreater((__type)__f1, (__type)__f2);
# 867 "/usr/include/c++/4.8.2/cmath" 3
}
# 869 "/usr/include/c++/4.8.2/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value, int> ::__type
# 872 "/usr/include/c++/4.8.2/cmath" 3
isgreaterequal(_Tp __f1, _Tp __f2)
# 873 "/usr/include/c++/4.8.2/cmath" 3
{
# 874 "/usr/include/c++/4.8.2/cmath" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 875 "/usr/include/c++/4.8.2/cmath" 3
return __builtin_isgreaterequal((__type)__f1, (__type)__f2);
# 876 "/usr/include/c++/4.8.2/cmath" 3
}
# 878 "/usr/include/c++/4.8.2/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value, int> ::__type
# 881 "/usr/include/c++/4.8.2/cmath" 3
isless(_Tp __f1, _Tp __f2)
# 882 "/usr/include/c++/4.8.2/cmath" 3
{
# 883 "/usr/include/c++/4.8.2/cmath" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 884 "/usr/include/c++/4.8.2/cmath" 3
return __builtin_isless((__type)__f1, (__type)__f2);
# 885 "/usr/include/c++/4.8.2/cmath" 3
}
# 887 "/usr/include/c++/4.8.2/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value, int> ::__type
# 890 "/usr/include/c++/4.8.2/cmath" 3
islessequal(_Tp __f1, _Tp __f2)
# 891 "/usr/include/c++/4.8.2/cmath" 3
{
# 892 "/usr/include/c++/4.8.2/cmath" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 893 "/usr/include/c++/4.8.2/cmath" 3
return __builtin_islessequal((__type)__f1, (__type)__f2);
# 894 "/usr/include/c++/4.8.2/cmath" 3
}
# 896 "/usr/include/c++/4.8.2/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value, int> ::__type
# 899 "/usr/include/c++/4.8.2/cmath" 3
islessgreater(_Tp __f1, _Tp __f2)
# 900 "/usr/include/c++/4.8.2/cmath" 3
{
# 901 "/usr/include/c++/4.8.2/cmath" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 902 "/usr/include/c++/4.8.2/cmath" 3
return __builtin_islessgreater((__type)__f1, (__type)__f2);
# 903 "/usr/include/c++/4.8.2/cmath" 3
}
# 905 "/usr/include/c++/4.8.2/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value, int> ::__type
# 908 "/usr/include/c++/4.8.2/cmath" 3
isunordered(_Tp __f1, _Tp __f2)
# 909 "/usr/include/c++/4.8.2/cmath" 3
{
# 910 "/usr/include/c++/4.8.2/cmath" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 911 "/usr/include/c++/4.8.2/cmath" 3
return __builtin_isunordered((__type)__f1, (__type)__f2);
# 912 "/usr/include/c++/4.8.2/cmath" 3
}
# 917 "/usr/include/c++/4.8.2/cmath" 3
}
# 114 "/usr/include/c++/4.8.2/cstdlib" 3
namespace std __attribute((__visibility__("default"))) {
# 118 "/usr/include/c++/4.8.2/cstdlib" 3
using ::div_t;
# 119 "/usr/include/c++/4.8.2/cstdlib" 3
using ::ldiv_t;
# 121 "/usr/include/c++/4.8.2/cstdlib" 3
using ::abort;
# 122 "/usr/include/c++/4.8.2/cstdlib" 3
using ::abs;
# 123 "/usr/include/c++/4.8.2/cstdlib" 3
using ::atexit;
# 129 "/usr/include/c++/4.8.2/cstdlib" 3
using ::atof;
# 130 "/usr/include/c++/4.8.2/cstdlib" 3
using ::atoi;
# 131 "/usr/include/c++/4.8.2/cstdlib" 3
using ::atol;
# 132 "/usr/include/c++/4.8.2/cstdlib" 3
using ::bsearch;
# 133 "/usr/include/c++/4.8.2/cstdlib" 3
using ::calloc;
# 134 "/usr/include/c++/4.8.2/cstdlib" 3
using ::div;
# 135 "/usr/include/c++/4.8.2/cstdlib" 3
using ::exit;
# 136 "/usr/include/c++/4.8.2/cstdlib" 3
using ::free;
# 137 "/usr/include/c++/4.8.2/cstdlib" 3
using ::getenv;
# 138 "/usr/include/c++/4.8.2/cstdlib" 3
using ::labs;
# 139 "/usr/include/c++/4.8.2/cstdlib" 3
using ::ldiv;
# 140 "/usr/include/c++/4.8.2/cstdlib" 3
using ::malloc;
# 142 "/usr/include/c++/4.8.2/cstdlib" 3
using ::mblen;
# 143 "/usr/include/c++/4.8.2/cstdlib" 3
using ::mbstowcs;
# 144 "/usr/include/c++/4.8.2/cstdlib" 3
using ::mbtowc;
# 146 "/usr/include/c++/4.8.2/cstdlib" 3
using ::qsort;
# 152 "/usr/include/c++/4.8.2/cstdlib" 3
using ::rand;
# 153 "/usr/include/c++/4.8.2/cstdlib" 3
using ::realloc;
# 154 "/usr/include/c++/4.8.2/cstdlib" 3
using ::srand;
# 155 "/usr/include/c++/4.8.2/cstdlib" 3
using ::strtod;
# 156 "/usr/include/c++/4.8.2/cstdlib" 3
using ::strtol;
# 157 "/usr/include/c++/4.8.2/cstdlib" 3
using ::strtoul;
# 158 "/usr/include/c++/4.8.2/cstdlib" 3
using ::system;
# 160 "/usr/include/c++/4.8.2/cstdlib" 3
using ::wcstombs;
# 161 "/usr/include/c++/4.8.2/cstdlib" 3
using ::wctomb;
# 166 "/usr/include/c++/4.8.2/cstdlib" 3
inline long abs(long __i) { return __builtin_labs(__i); }
# 169 "/usr/include/c++/4.8.2/cstdlib" 3
inline ldiv_t div(long __i, long __j) { return ldiv(__i, __j); }
# 174 "/usr/include/c++/4.8.2/cstdlib" 3
inline long long abs(long long __x) { return __builtin_llabs(__x); }
# 179 "/usr/include/c++/4.8.2/cstdlib" 3
inline __int128_t abs(__int128_t __x) { return (__x >= (0)) ? __x : (-__x); }
# 183 "/usr/include/c++/4.8.2/cstdlib" 3
}
# 196 "/usr/include/c++/4.8.2/cstdlib" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 201 "/usr/include/c++/4.8.2/cstdlib" 3
using ::lldiv_t;
# 207 "/usr/include/c++/4.8.2/cstdlib" 3
using ::_Exit;
# 211 "/usr/include/c++/4.8.2/cstdlib" 3
using ::llabs;
# 214 "/usr/include/c++/4.8.2/cstdlib" 3
inline lldiv_t div(long long __n, long long __d)
# 215 "/usr/include/c++/4.8.2/cstdlib" 3
{ lldiv_t __q; (__q.quot) = (__n / __d); (__q.rem) = (__n % __d); return __q; }
# 217 "/usr/include/c++/4.8.2/cstdlib" 3
using ::lldiv;
# 228 "/usr/include/c++/4.8.2/cstdlib" 3
using ::atoll;
# 229 "/usr/include/c++/4.8.2/cstdlib" 3
using ::strtoll;
# 230 "/usr/include/c++/4.8.2/cstdlib" 3
using ::strtoull;
# 232 "/usr/include/c++/4.8.2/cstdlib" 3
using ::strtof;
# 233 "/usr/include/c++/4.8.2/cstdlib" 3
using ::strtold;
# 236 "/usr/include/c++/4.8.2/cstdlib" 3
}
# 238 "/usr/include/c++/4.8.2/cstdlib" 3
namespace std {
# 241 "/usr/include/c++/4.8.2/cstdlib" 3
using __gnu_cxx::lldiv_t;
# 243 "/usr/include/c++/4.8.2/cstdlib" 3
using __gnu_cxx::_Exit;
# 245 "/usr/include/c++/4.8.2/cstdlib" 3
using __gnu_cxx::llabs;
# 246 "/usr/include/c++/4.8.2/cstdlib" 3
using __gnu_cxx::div;
# 247 "/usr/include/c++/4.8.2/cstdlib" 3
using __gnu_cxx::lldiv;
# 249 "/usr/include/c++/4.8.2/cstdlib" 3
using __gnu_cxx::atoll;
# 250 "/usr/include/c++/4.8.2/cstdlib" 3
using __gnu_cxx::strtof;
# 251 "/usr/include/c++/4.8.2/cstdlib" 3
using __gnu_cxx::strtoll;
# 252 "/usr/include/c++/4.8.2/cstdlib" 3
using __gnu_cxx::strtoull;
# 253 "/usr/include/c++/4.8.2/cstdlib" 3
using __gnu_cxx::strtold;
# 254 "/usr/include/c++/4.8.2/cstdlib" 3
}
# 8970 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
__attribute((always_inline)) inline int signbit(float x);
# 8974 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
__attribute((always_inline)) inline int signbit(double x);
# 8976 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
__attribute((always_inline)) inline int signbit(long double x);
# 8978 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
__attribute((always_inline)) inline int isfinite(float x);
# 8982 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
__attribute((always_inline)) inline int isfinite(double x);
# 8984 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
__attribute((always_inline)) inline int isfinite(long double x);
# 8986 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
__attribute((always_inline)) inline int isnan(float x);
# 8993 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern "C" __attribute((always_inline)) inline int isnan(double x) throw();
# 8995 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
__attribute((always_inline)) inline int isnan(long double x);
# 8997 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
__attribute((always_inline)) inline int isinf(float x);
# 9004 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern "C" __attribute((always_inline)) inline int isinf(double x) throw();
# 9006 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
__attribute((always_inline)) inline int isinf(long double x);
# 9063 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
namespace std {
# 9065 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
template< class T> extern T __pow_helper(T, int);
# 9066 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
template< class T> extern T __cmath_power(T, unsigned);
# 9067 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
}
# 9069 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
using std::abs;
# 9070 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
using std::fabs;
# 9071 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
using std::ceil;
# 9072 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
using std::floor;
# 9073 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
using std::sqrt;
# 9075 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
using std::pow;
# 9077 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
using std::log;
# 9078 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
using std::log10;
# 9079 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
using std::fmod;
# 9080 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
using std::modf;
# 9081 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
using std::exp;
# 9082 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
using std::frexp;
# 9083 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
using std::ldexp;
# 9084 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
using std::asin;
# 9085 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
using std::sin;
# 9086 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
using std::sinh;
# 9087 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
using std::acos;
# 9088 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
using std::cos;
# 9089 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
using std::cosh;
# 9090 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
using std::atan;
# 9091 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
using std::atan2;
# 9092 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
using std::tan;
# 9093 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
using std::tanh;
# 9458 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
namespace std {
# 9467 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern inline long long abs(long long);
# 9477 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern inline long abs(long);
# 9478 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern inline float abs(float);
# 9479 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern inline double abs(double);
# 9480 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern inline float fabs(float);
# 9481 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern inline float ceil(float);
# 9482 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern inline float floor(float);
# 9483 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern inline float sqrt(float);
# 9484 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern inline float pow(float, float);
# 9493 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern inline float pow(float, int);
# 9494 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern inline double pow(double, int);
# 9499 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern inline float log(float);
# 9500 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern inline float log10(float);
# 9501 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern inline float fmod(float, float);
# 9502 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern inline float modf(float, float *);
# 9503 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern inline float exp(float);
# 9504 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern inline float frexp(float, int *);
# 9505 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern inline float ldexp(float, int);
# 9506 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern inline float asin(float);
# 9507 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern inline float sin(float);
# 9508 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern inline float sinh(float);
# 9509 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern inline float acos(float);
# 9510 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern inline float cos(float);
# 9511 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern inline float cosh(float);
# 9512 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern inline float atan(float);
# 9513 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern inline float atan2(float, float);
# 9514 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern inline float tan(float);
# 9515 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
extern inline float tanh(float);
# 9589 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
}
# 9732 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float logb(float a);
# 9734 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline int ilogb(float a);
# 9736 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float scalbn(float a, int b);
# 9738 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float scalbln(float a, long b);
# 9740 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float exp2(float a);
# 9742 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float expm1(float a);
# 9744 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float log2(float a);
# 9746 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float log1p(float a);
# 9748 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float acosh(float a);
# 9750 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float asinh(float a);
# 9752 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float atanh(float a);
# 9754 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float hypot(float a, float b);
# 9756 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float norm3d(float a, float b, float c);
# 9758 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float norm4d(float a, float b, float c, float d);
# 9760 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float cbrt(float a);
# 9762 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float erf(float a);
# 9764 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float erfc(float a);
# 9766 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float lgamma(float a);
# 9768 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float tgamma(float a);
# 9770 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float copysign(float a, float b);
# 9772 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float nextafter(float a, float b);
# 9774 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float remainder(float a, float b);
# 9776 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float remquo(float a, float b, int * quo);
# 9778 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float round(float a);
# 9780 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline long lround(float a);
# 9782 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline long long llround(float a);
# 9784 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float trunc(float a);
# 9786 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float rint(float a);
# 9788 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline long lrint(float a);
# 9790 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline long long llrint(float a);
# 9792 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float nearbyint(float a);
# 9794 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float fdim(float a, float b);
# 9796 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float fma(float a, float b, float c);
# 9798 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float fmax(float a, float b);
# 9800 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float fmin(float a, float b);
# 9841 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float exp10(float a);
# 9843 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float rsqrt(float a);
# 9845 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float rcbrt(float a);
# 9847 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float sinpi(float a);
# 9849 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float cospi(float a);
# 9851 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline void sincospi(float a, float * sptr, float * cptr);
# 9853 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline void sincos(float a, float * sptr, float * cptr);
# 9855 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float j0(float a);
# 9857 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float j1(float a);
# 9859 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float jn(int n, float a);
# 9861 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float y0(float a);
# 9863 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float y1(float a);
# 9865 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float yn(int n, float a);
# 9867 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float cyl_bessel_i0(float a);
# 9869 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float cyl_bessel_i1(float a);
# 9871 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float erfinv(float a);
# 9873 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float erfcinv(float a);
# 9875 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float normcdfinv(float a);
# 9877 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float normcdf(float a);
# 9879 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float erfcx(float a);
# 9881 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline double copysign(double a, float b);
# 9883 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline double copysign(float a, double b);
# 9885 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline unsigned min(unsigned a, unsigned b);
# 9887 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline unsigned min(int a, unsigned b);
# 9889 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline unsigned min(unsigned a, int b);
# 9891 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline long min(long a, long b);
# 9893 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline unsigned long min(unsigned long a, unsigned long b);
# 9895 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline unsigned long min(long a, unsigned long b);
# 9897 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline unsigned long min(unsigned long a, long b);
# 9899 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline long long min(long long a, long long b);
# 9901 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline unsigned long long min(unsigned long long a, unsigned long long b);
# 9903 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline unsigned long long min(long long a, unsigned long long b);
# 9905 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline unsigned long long min(unsigned long long a, long long b);
# 9907 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float min(float a, float b);
# 9909 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline double min(double a, double b);
# 9911 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline double min(float a, double b);
# 9913 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline double min(double a, float b);
# 9915 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline unsigned max(unsigned a, unsigned b);
# 9917 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline unsigned max(int a, unsigned b);
# 9919 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline unsigned max(unsigned a, int b);
# 9921 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline long max(long a, long b);
# 9923 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline unsigned long max(unsigned long a, unsigned long b);
# 9925 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline unsigned long max(long a, unsigned long b);
# 9927 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline unsigned long max(unsigned long a, long b);
# 9929 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline long long max(long long a, long long b);
# 9931 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline unsigned long long max(unsigned long long a, unsigned long long b);
# 9933 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline unsigned long long max(long long a, unsigned long long b);
# 9935 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline unsigned long long max(unsigned long long a, long long b);
# 9937 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline float max(float a, float b);
# 9939 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline double max(double a, double b);
# 9941 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline double max(float a, double b);
# 9943 "/usr/local/cuda/bin/..//include/crt/math_functions.h"
static inline double max(double a, float b);
# 316 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
__attribute((always_inline)) inline int signbit(float x) { return __signbitf(x); }
# 320 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
__attribute((always_inline)) inline int signbit(double x) { return __signbit(x); }
# 322 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
__attribute((always_inline)) inline int signbit(long double x) { return __signbitl(x); }
# 333 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
__attribute((always_inline)) inline int isfinite(float x) { return __finitef(x); }
# 348 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
__attribute((always_inline)) inline int isfinite(double x) { return __finite(x); }
# 361 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
__attribute((always_inline)) inline int isfinite(long double x) { return __finitel(x); }
# 364 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
__attribute((always_inline)) inline int isnan(float x) { return __isnanf(x); }
# 368 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
__attribute((always_inline)) inline int isnan(double x) throw() { return __isnan(x); }
# 370 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
__attribute((always_inline)) inline int isnan(long double x) { return __isnanl(x); }
# 372 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
__attribute((always_inline)) inline int isinf(float x) { return __isinff(x); }
# 376 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
__attribute((always_inline)) inline int isinf(double x) throw() { return __isinf(x); }
# 378 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
__attribute((always_inline)) inline int isinf(long double x) { return __isinfl(x); }
# 584 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float logb(float a)
# 585 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 586 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return logbf(a);
# 587 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 589 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline int ilogb(float a)
# 590 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 591 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return ilogbf(a);
# 592 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 594 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float scalbn(float a, int b)
# 595 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 596 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return scalbnf(a, b);
# 597 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 599 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float scalbln(float a, long b)
# 600 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 601 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return scalblnf(a, b);
# 602 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 604 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float exp2(float a)
# 605 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 606 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return exp2f(a);
# 607 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 609 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float expm1(float a)
# 610 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 611 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return expm1f(a);
# 612 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 614 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float log2(float a)
# 615 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 616 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return log2f(a);
# 617 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 619 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float log1p(float a)
# 620 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 621 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return log1pf(a);
# 622 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 624 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float acosh(float a)
# 625 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 626 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return acoshf(a);
# 627 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 629 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float asinh(float a)
# 630 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 631 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return asinhf(a);
# 632 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 634 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float atanh(float a)
# 635 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 636 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return atanhf(a);
# 637 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 639 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float hypot(float a, float b)
# 640 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 641 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return hypotf(a, b);
# 642 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 644 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float norm3d(float a, float b, float c)
# 645 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 646 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return norm3df(a, b, c);
# 647 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 649 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float norm4d(float a, float b, float c, float d)
# 650 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 651 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return norm4df(a, b, c, d);
# 652 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 654 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float cbrt(float a)
# 655 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 656 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return cbrtf(a);
# 657 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 659 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float erf(float a)
# 660 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 661 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return erff(a);
# 662 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 664 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float erfc(float a)
# 665 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 666 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return erfcf(a);
# 667 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 669 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float lgamma(float a)
# 670 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 671 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return lgammaf(a);
# 672 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 674 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float tgamma(float a)
# 675 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 676 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return tgammaf(a);
# 677 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 679 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float copysign(float a, float b)
# 680 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 681 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return copysignf(a, b);
# 682 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 684 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float nextafter(float a, float b)
# 685 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 686 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return nextafterf(a, b);
# 687 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 689 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float remainder(float a, float b)
# 690 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 691 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return remainderf(a, b);
# 692 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 694 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float remquo(float a, float b, int *quo)
# 695 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 696 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return remquof(a, b, quo);
# 697 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 699 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float round(float a)
# 700 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 701 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return roundf(a);
# 702 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 704 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline long lround(float a)
# 705 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 706 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return lroundf(a);
# 707 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 709 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline long long llround(float a)
# 710 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 711 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return llroundf(a);
# 712 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 714 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float trunc(float a)
# 715 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 716 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return truncf(a);
# 717 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 719 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float rint(float a)
# 720 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 721 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return rintf(a);
# 722 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 724 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline long lrint(float a)
# 725 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 726 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return lrintf(a);
# 727 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 729 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline long long llrint(float a)
# 730 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 731 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return llrintf(a);
# 732 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 734 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float nearbyint(float a)
# 735 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 736 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return nearbyintf(a);
# 737 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 739 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float fdim(float a, float b)
# 740 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 741 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return fdimf(a, b);
# 742 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 744 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float fma(float a, float b, float c)
# 745 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 746 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return fmaf(a, b, c);
# 747 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 749 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float fmax(float a, float b)
# 750 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 751 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return fmaxf(a, b);
# 752 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 754 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float fmin(float a, float b)
# 755 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 756 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return fminf(a, b);
# 757 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 765 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float exp10(float a)
# 766 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 767 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return exp10f(a);
# 768 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 770 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float rsqrt(float a)
# 771 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 772 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return rsqrtf(a);
# 773 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 775 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float rcbrt(float a)
# 776 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 777 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return rcbrtf(a);
# 778 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 780 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float sinpi(float a)
# 781 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 782 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return sinpif(a);
# 783 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 785 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float cospi(float a)
# 786 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 787 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return cospif(a);
# 788 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 790 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline void sincospi(float a, float *sptr, float *cptr)
# 791 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 792 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
sincospif(a, sptr, cptr);
# 793 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 795 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline void sincos(float a, float *sptr, float *cptr)
# 796 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 797 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
sincosf(a, sptr, cptr);
# 798 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 800 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float j0(float a)
# 801 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 802 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return j0f(a);
# 803 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 805 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float j1(float a)
# 806 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 807 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return j1f(a);
# 808 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 810 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float jn(int n, float a)
# 811 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 812 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return jnf(n, a);
# 813 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 815 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float y0(float a)
# 816 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 817 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return y0f(a);
# 818 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 820 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float y1(float a)
# 821 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 822 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return y1f(a);
# 823 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 825 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float yn(int n, float a)
# 826 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 827 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return ynf(n, a);
# 828 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 830 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float cyl_bessel_i0(float a)
# 831 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 832 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return cyl_bessel_i0f(a);
# 833 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 835 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float cyl_bessel_i1(float a)
# 836 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 837 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return cyl_bessel_i1f(a);
# 838 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 840 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float erfinv(float a)
# 841 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 842 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return erfinvf(a);
# 843 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 845 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float erfcinv(float a)
# 846 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 847 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return erfcinvf(a);
# 848 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 850 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float normcdfinv(float a)
# 851 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 852 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return normcdfinvf(a);
# 853 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 855 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float normcdf(float a)
# 856 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 857 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return normcdff(a);
# 858 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 860 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float erfcx(float a)
# 861 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 862 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return erfcxf(a);
# 863 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 865 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline double copysign(double a, float b)
# 866 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 867 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return copysign(a, (double)b);
# 868 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 870 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline double copysign(float a, double b)
# 871 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 872 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return copysign((double)a, b);
# 873 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 875 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline unsigned min(unsigned a, unsigned b)
# 876 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 877 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return umin(a, b);
# 878 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 880 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline unsigned min(int a, unsigned b)
# 881 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 882 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return umin((unsigned)a, b);
# 883 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 885 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline unsigned min(unsigned a, int b)
# 886 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 887 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return umin(a, (unsigned)b);
# 888 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 890 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline long min(long a, long b)
# 891 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 897 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
if (sizeof(long) == sizeof(int)) {
# 901 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return (long)min((int)a, (int)b);
# 902 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
} else {
# 903 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return (long)llmin((long long)a, (long long)b);
# 904 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 905 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 907 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline unsigned long min(unsigned long a, unsigned long b)
# 908 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 912 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
if (sizeof(unsigned long) == sizeof(unsigned)) {
# 916 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return (unsigned long)umin((unsigned)a, (unsigned)b);
# 917 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
} else {
# 918 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return (unsigned long)ullmin((unsigned long long)a, (unsigned long long)b);
# 919 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 920 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 922 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline unsigned long min(long a, unsigned long b)
# 923 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 927 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
if (sizeof(unsigned long) == sizeof(unsigned)) {
# 931 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return (unsigned long)umin((unsigned)a, (unsigned)b);
# 932 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
} else {
# 933 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return (unsigned long)ullmin((unsigned long long)a, (unsigned long long)b);
# 934 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 935 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 937 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline unsigned long min(unsigned long a, long b)
# 938 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 942 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
if (sizeof(unsigned long) == sizeof(unsigned)) {
# 946 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return (unsigned long)umin((unsigned)a, (unsigned)b);
# 947 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
} else {
# 948 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return (unsigned long)ullmin((unsigned long long)a, (unsigned long long)b);
# 949 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 950 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 952 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline long long min(long long a, long long b)
# 953 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 954 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return llmin(a, b);
# 955 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 957 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline unsigned long long min(unsigned long long a, unsigned long long b)
# 958 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 959 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return ullmin(a, b);
# 960 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 962 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline unsigned long long min(long long a, unsigned long long b)
# 963 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 964 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return ullmin((unsigned long long)a, b);
# 965 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 967 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline unsigned long long min(unsigned long long a, long long b)
# 968 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 969 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return ullmin(a, (unsigned long long)b);
# 970 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 972 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float min(float a, float b)
# 973 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 974 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return fminf(a, b);
# 975 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 977 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline double min(double a, double b)
# 978 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 979 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return fmin(a, b);
# 980 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 982 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline double min(float a, double b)
# 983 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 984 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return fmin((double)a, b);
# 985 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 987 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline double min(double a, float b)
# 988 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 989 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return fmin(a, (double)b);
# 990 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 992 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline unsigned max(unsigned a, unsigned b)
# 993 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 994 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return umax(a, b);
# 995 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 997 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline unsigned max(int a, unsigned b)
# 998 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 999 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return umax((unsigned)a, b);
# 1000 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 1002 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline unsigned max(unsigned a, int b)
# 1003 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 1004 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return umax(a, (unsigned)b);
# 1005 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 1007 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline long max(long a, long b)
# 1008 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 1013 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
if (sizeof(long) == sizeof(int)) {
# 1017 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return (long)max((int)a, (int)b);
# 1018 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
} else {
# 1019 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return (long)llmax((long long)a, (long long)b);
# 1020 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 1021 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 1023 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline unsigned long max(unsigned long a, unsigned long b)
# 1024 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 1028 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
if (sizeof(unsigned long) == sizeof(unsigned)) {
# 1032 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return (unsigned long)umax((unsigned)a, (unsigned)b);
# 1033 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
} else {
# 1034 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return (unsigned long)ullmax((unsigned long long)a, (unsigned long long)b);
# 1035 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 1036 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 1038 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline unsigned long max(long a, unsigned long b)
# 1039 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 1043 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
if (sizeof(unsigned long) == sizeof(unsigned)) {
# 1047 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return (unsigned long)umax((unsigned)a, (unsigned)b);
# 1048 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
} else {
# 1049 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return (unsigned long)ullmax((unsigned long long)a, (unsigned long long)b);
# 1050 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 1051 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 1053 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline unsigned long max(unsigned long a, long b)
# 1054 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 1058 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
if (sizeof(unsigned long) == sizeof(unsigned)) {
# 1062 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return (unsigned long)umax((unsigned)a, (unsigned)b);
# 1063 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
} else {
# 1064 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return (unsigned long)ullmax((unsigned long long)a, (unsigned long long)b);
# 1065 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 1066 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 1068 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline long long max(long long a, long long b)
# 1069 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 1070 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return llmax(a, b);
# 1071 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 1073 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline unsigned long long max(unsigned long long a, unsigned long long b)
# 1074 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 1075 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return ullmax(a, b);
# 1076 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 1078 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline unsigned long long max(long long a, unsigned long long b)
# 1079 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 1080 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return ullmax((unsigned long long)a, b);
# 1081 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 1083 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline unsigned long long max(unsigned long long a, long long b)
# 1084 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 1085 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return ullmax(a, (unsigned long long)b);
# 1086 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 1088 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline float max(float a, float b)
# 1089 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 1090 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return fmaxf(a, b);
# 1091 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 1093 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline double max(double a, double b)
# 1094 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 1095 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return fmax(a, b);
# 1096 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 1098 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline double max(float a, double b)
# 1099 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 1100 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return fmax((double)a, b);
# 1101 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 1103 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
static inline double max(double a, float b)
# 1104 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 1105 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return fmax(a, (double)b);
# 1106 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 1117 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
inline int min(int a, int b)
# 1118 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 1119 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return (a < b) ? a : b;
# 1120 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 1122 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
inline unsigned umin(unsigned a, unsigned b)
# 1123 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 1124 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return (a < b) ? a : b;
# 1125 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 1127 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
inline long long llmin(long long a, long long b)
# 1128 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 1129 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return (a < b) ? a : b;
# 1130 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 1132 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
inline unsigned long long ullmin(unsigned long long a, unsigned long long
# 1133 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
b)
# 1134 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 1135 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return (a < b) ? a : b;
# 1136 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 1138 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
inline int max(int a, int b)
# 1139 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 1140 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return (a > b) ? a : b;
# 1141 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 1143 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
inline unsigned umax(unsigned a, unsigned b)
# 1144 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 1145 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return (a > b) ? a : b;
# 1146 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 1148 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
inline long long llmax(long long a, long long b)
# 1149 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 1150 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return (a > b) ? a : b;
# 1151 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 1153 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
inline unsigned long long ullmax(unsigned long long a, unsigned long long
# 1154 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
b)
# 1155 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
{
# 1156 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
return (a > b) ? a : b;
# 1157 "/usr/local/cuda/bin/..//include/crt/math_functions.hpp"
}
# 74 "/usr/local/cuda/bin/..//include/cuda_surface_types.h"
template< class T, int dim = 1>
# 75 "/usr/local/cuda/bin/..//include/cuda_surface_types.h"
struct surface : public surfaceReference {
# 78 "/usr/local/cuda/bin/..//include/cuda_surface_types.h"
surface()
# 79 "/usr/local/cuda/bin/..//include/cuda_surface_types.h"
{
# 80 "/usr/local/cuda/bin/..//include/cuda_surface_types.h"
(channelDesc) = cudaCreateChannelDesc< T> ();
# 81 "/usr/local/cuda/bin/..//include/cuda_surface_types.h"
}
# 83 "/usr/local/cuda/bin/..//include/cuda_surface_types.h"
surface(cudaChannelFormatDesc desc)
# 84 "/usr/local/cuda/bin/..//include/cuda_surface_types.h"
{
# 85 "/usr/local/cuda/bin/..//include/cuda_surface_types.h"
(channelDesc) = desc;
# 86 "/usr/local/cuda/bin/..//include/cuda_surface_types.h"
}
# 88 "/usr/local/cuda/bin/..//include/cuda_surface_types.h"
};
# 90 "/usr/local/cuda/bin/..//include/cuda_surface_types.h"
template< int dim>
# 91 "/usr/local/cuda/bin/..//include/cuda_surface_types.h"
struct surface< void, dim> : public surfaceReference {
# 94 "/usr/local/cuda/bin/..//include/cuda_surface_types.h"
surface()
# 95 "/usr/local/cuda/bin/..//include/cuda_surface_types.h"
{
# 96 "/usr/local/cuda/bin/..//include/cuda_surface_types.h"
(channelDesc) = cudaCreateChannelDesc< void> ();
# 97 "/usr/local/cuda/bin/..//include/cuda_surface_types.h"
}
# 99 "/usr/local/cuda/bin/..//include/cuda_surface_types.h"
};
# 74 "/usr/local/cuda/bin/..//include/cuda_texture_types.h"
template< class T, int texType = 1, cudaTextureReadMode mode = cudaReadModeElementType>
# 75 "/usr/local/cuda/bin/..//include/cuda_texture_types.h"
struct texture : public textureReference {
# 78 "/usr/local/cuda/bin/..//include/cuda_texture_types.h"
texture(int norm = 0, cudaTextureFilterMode
# 79 "/usr/local/cuda/bin/..//include/cuda_texture_types.h"
fMode = cudaFilterModePoint, cudaTextureAddressMode
# 80 "/usr/local/cuda/bin/..//include/cuda_texture_types.h"
aMode = cudaAddressModeClamp)
# 81 "/usr/local/cuda/bin/..//include/cuda_texture_types.h"
{
# 82 "/usr/local/cuda/bin/..//include/cuda_texture_types.h"
(normalized) = norm;
# 83 "/usr/local/cuda/bin/..//include/cuda_texture_types.h"
(filterMode) = fMode;
# 84 "/usr/local/cuda/bin/..//include/cuda_texture_types.h"
((addressMode)[0]) = aMode;
# 85 "/usr/local/cuda/bin/..//include/cuda_texture_types.h"
((addressMode)[1]) = aMode;
# 86 "/usr/local/cuda/bin/..//include/cuda_texture_types.h"
((addressMode)[2]) = aMode;
# 87 "/usr/local/cuda/bin/..//include/cuda_texture_types.h"
(channelDesc) = cudaCreateChannelDesc< T> ();
# 88 "/usr/local/cuda/bin/..//include/cuda_texture_types.h"
(sRGB) = 0;
# 89 "/usr/local/cuda/bin/..//include/cuda_texture_types.h"
}
# 91 "/usr/local/cuda/bin/..//include/cuda_texture_types.h"
texture(int norm, cudaTextureFilterMode
# 92 "/usr/local/cuda/bin/..//include/cuda_texture_types.h"
fMode, cudaTextureAddressMode
# 93 "/usr/local/cuda/bin/..//include/cuda_texture_types.h"
aMode, cudaChannelFormatDesc
# 94 "/usr/local/cuda/bin/..//include/cuda_texture_types.h"
desc)
# 95 "/usr/local/cuda/bin/..//include/cuda_texture_types.h"
{
# 96 "/usr/local/cuda/bin/..//include/cuda_texture_types.h"
(normalized) = norm;
# 97 "/usr/local/cuda/bin/..//include/cuda_texture_types.h"
(filterMode) = fMode;
# 98 "/usr/local/cuda/bin/..//include/cuda_texture_types.h"
((addressMode)[0]) = aMode;
# 99 "/usr/local/cuda/bin/..//include/cuda_texture_types.h"
((addressMode)[1]) = aMode;
# 100 "/usr/local/cuda/bin/..//include/cuda_texture_types.h"
((addressMode)[2]) = aMode;
# 101 "/usr/local/cuda/bin/..//include/cuda_texture_types.h"
(channelDesc) = desc;
# 102 "/usr/local/cuda/bin/..//include/cuda_texture_types.h"
(sRGB) = 0;
# 103 "/usr/local/cuda/bin/..//include/cuda_texture_types.h"
}
# 105 "/usr/local/cuda/bin/..//include/cuda_texture_types.h"
};
# 89 "/usr/local/cuda/bin/..//include/crt/device_functions.h"
extern "C" {
# 3211 "/usr/local/cuda/bin/..//include/crt/device_functions.h"
}
# 3219 "/usr/local/cuda/bin/..//include/crt/device_functions.h"
__attribute__((unused)) static inline int mulhi(int a, int b);
# 3221 "/usr/local/cuda/bin/..//include/crt/device_functions.h"
__attribute__((unused)) static inline unsigned mulhi(unsigned a, unsigned b);
# 3223 "/usr/local/cuda/bin/..//include/crt/device_functions.h"
__attribute__((unused)) static inline unsigned mulhi(int a, unsigned b);
# 3225 "/usr/local/cuda/bin/..//include/crt/device_functions.h"
__attribute__((unused)) static inline unsigned mulhi(unsigned a, int b);
# 3227 "/usr/local/cuda/bin/..//include/crt/device_functions.h"
__attribute__((unused)) static inline long long mul64hi(long long a, long long b);
# 3229 "/usr/local/cuda/bin/..//include/crt/device_functions.h"
__attribute__((unused)) static inline unsigned long long mul64hi(unsigned long long a, unsigned long long b);
# 3231 "/usr/local/cuda/bin/..//include/crt/device_functions.h"
__attribute__((unused)) static inline unsigned long long mul64hi(long long a, unsigned long long b);
# 3233 "/usr/local/cuda/bin/..//include/crt/device_functions.h"
__attribute__((unused)) static inline unsigned long long mul64hi(unsigned long long a, long long b);
# 3235 "/usr/local/cuda/bin/..//include/crt/device_functions.h"
__attribute__((unused)) static inline int float_as_int(float a);
# 3237 "/usr/local/cuda/bin/..//include/crt/device_functions.h"
__attribute__((unused)) static inline float int_as_float(int a);
# 3239 "/usr/local/cuda/bin/..//include/crt/device_functions.h"
__attribute__((unused)) static inline unsigned float_as_uint(float a);
# 3241 "/usr/local/cuda/bin/..//include/crt/device_functions.h"
__attribute__((unused)) static inline float uint_as_float(unsigned a);
# 3243 "/usr/local/cuda/bin/..//include/crt/device_functions.h"
__attribute__((unused)) static inline float saturate(float a);
# 3245 "/usr/local/cuda/bin/..//include/crt/device_functions.h"
__attribute__((unused)) static inline int mul24(int a, int b);
# 3247 "/usr/local/cuda/bin/..//include/crt/device_functions.h"
__attribute__((unused)) static inline unsigned umul24(unsigned a, unsigned b);
# 3249 "/usr/local/cuda/bin/..//include/crt/device_functions.h"
__attribute__((unused)) static inline int float2int(float a, cudaRoundMode mode = cudaRoundZero);
# 3251 "/usr/local/cuda/bin/..//include/crt/device_functions.h"
__attribute__((unused)) static inline unsigned float2uint(float a, cudaRoundMode mode = cudaRoundZero);
# 3253 "/usr/local/cuda/bin/..//include/crt/device_functions.h"
__attribute__((unused)) static inline float int2float(int a, cudaRoundMode mode = cudaRoundNearest);
# 3255 "/usr/local/cuda/bin/..//include/crt/device_functions.h"
__attribute__((unused)) static inline float uint2float(unsigned a, cudaRoundMode mode = cudaRoundNearest);
# 90 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
__attribute__((unused)) static inline int mulhi(int a, int b)
# 91 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 93 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
::exit(___);}
# 95 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
__attribute__((unused)) static inline unsigned mulhi(unsigned a, unsigned b)
# 96 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 98 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
::exit(___);}
# 100 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
__attribute__((unused)) static inline unsigned mulhi(int a, unsigned b)
# 101 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 103 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
::exit(___);}
# 105 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
__attribute__((unused)) static inline unsigned mulhi(unsigned a, int b)
# 106 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 108 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
::exit(___);}
# 110 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
__attribute__((unused)) static inline long long mul64hi(long long a, long long b)
# 111 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 113 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
::exit(___);}
# 115 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
__attribute__((unused)) static inline unsigned long long mul64hi(unsigned long long a, unsigned long long b)
# 116 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 118 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
::exit(___);}
# 120 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
__attribute__((unused)) static inline unsigned long long mul64hi(long long a, unsigned long long b)
# 121 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 123 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
::exit(___);}
# 125 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
__attribute__((unused)) static inline unsigned long long mul64hi(unsigned long long a, long long b)
# 126 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 128 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
::exit(___);}
# 130 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
__attribute__((unused)) static inline int float_as_int(float a)
# 131 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
{int volatile ___ = 1;(void)a;
# 133 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
::exit(___);}
# 135 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
__attribute__((unused)) static inline float int_as_float(int a)
# 136 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
{int volatile ___ = 1;(void)a;
# 138 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
::exit(___);}
# 140 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
__attribute__((unused)) static inline unsigned float_as_uint(float a)
# 141 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
{int volatile ___ = 1;(void)a;
# 143 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
::exit(___);}
# 145 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
__attribute__((unused)) static inline float uint_as_float(unsigned a)
# 146 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
{int volatile ___ = 1;(void)a;
# 148 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
::exit(___);}
# 149 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
__attribute__((unused)) static inline float saturate(float a)
# 150 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
{int volatile ___ = 1;(void)a;
# 152 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
::exit(___);}
# 154 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
__attribute__((unused)) static inline int mul24(int a, int b)
# 155 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 157 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
::exit(___);}
# 159 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
__attribute__((unused)) static inline unsigned umul24(unsigned a, unsigned b)
# 160 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 162 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
::exit(___);}
# 164 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
__attribute__((unused)) static inline int float2int(float a, cudaRoundMode mode)
# 165 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
# 170 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
::exit(___);}
# 172 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
__attribute__((unused)) static inline unsigned float2uint(float a, cudaRoundMode mode)
# 173 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
# 178 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
::exit(___);}
# 180 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
__attribute__((unused)) static inline float int2float(int a, cudaRoundMode mode)
# 181 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
# 186 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
::exit(___);}
# 188 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
__attribute__((unused)) static inline float uint2float(unsigned a, cudaRoundMode mode)
# 189 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
# 194 "/usr/local/cuda/bin/..//include/crt/device_functions.hpp"
::exit(___);}
# 106 "/usr/local/cuda/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline int atomicAdd(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 108 "/usr/local/cuda/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicAdd(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 110 "/usr/local/cuda/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline int atomicSub(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 112 "/usr/local/cuda/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicSub(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 114 "/usr/local/cuda/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline int atomicExch(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 116 "/usr/local/cuda/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicExch(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 118 "/usr/local/cuda/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline float atomicExch(float *address, float val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 120 "/usr/local/cuda/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline int atomicMin(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 122 "/usr/local/cuda/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicMin(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 124 "/usr/local/cuda/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline int atomicMax(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 126 "/usr/local/cuda/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicMax(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 128 "/usr/local/cuda/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicInc(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 130 "/usr/local/cuda/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicDec(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 132 "/usr/local/cuda/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline int atomicAnd(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 134 "/usr/local/cuda/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicAnd(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 136 "/usr/local/cuda/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline int atomicOr(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 138 "/usr/local/cuda/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicOr(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 140 "/usr/local/cuda/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline int atomicXor(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 142 "/usr/local/cuda/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicXor(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 144 "/usr/local/cuda/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline int atomicCAS(int *address, int compare, int val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 146 "/usr/local/cuda/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicCAS(unsigned *address, unsigned compare, unsigned val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 171 "/usr/local/cuda/bin/..//include/device_atomic_functions.h"
extern "C" {
# 180 "/usr/local/cuda/bin/..//include/device_atomic_functions.h"
}
# 189 "/usr/local/cuda/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicAdd(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 191 "/usr/local/cuda/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicExch(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 193 "/usr/local/cuda/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicCAS(unsigned long long *address, unsigned long long compare, unsigned long long val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 195 "/usr/local/cuda/bin/..//include/device_atomic_functions.h"
__attribute((deprecated("__any() is deprecated in favor of __any_sync() and may be removed in a future release (Use -Wno-deprecated-declarations to suppr" "ess this warning)."))) __attribute__((unused)) static inline bool any(bool cond) {int volatile ___ = 1;(void)cond;::exit(___);}
# 197 "/usr/local/cuda/bin/..//include/device_atomic_functions.h"
__attribute((deprecated("__all() is deprecated in favor of __all_sync() and may be removed in a future release (Use -Wno-deprecated-declarations to suppr" "ess this warning)."))) __attribute__((unused)) static inline bool all(bool cond) {int volatile ___ = 1;(void)cond;::exit(___);}
# 87 "/usr/local/cuda/bin/..//include/crt/device_double_functions.h"
extern "C" {
# 1139 "/usr/local/cuda/bin/..//include/crt/device_double_functions.h"
}
# 1147 "/usr/local/cuda/bin/..//include/crt/device_double_functions.h"
__attribute__((unused)) static inline double fma(double a, double b, double c, cudaRoundMode mode);
# 1149 "/usr/local/cuda/bin/..//include/crt/device_double_functions.h"
__attribute__((unused)) static inline double dmul(double a, double b, cudaRoundMode mode = cudaRoundNearest);
# 1151 "/usr/local/cuda/bin/..//include/crt/device_double_functions.h"
__attribute__((unused)) static inline double dadd(double a, double b, cudaRoundMode mode = cudaRoundNearest);
# 1153 "/usr/local/cuda/bin/..//include/crt/device_double_functions.h"
__attribute__((unused)) static inline double dsub(double a, double b, cudaRoundMode mode = cudaRoundNearest);
# 1155 "/usr/local/cuda/bin/..//include/crt/device_double_functions.h"
__attribute__((unused)) static inline int double2int(double a, cudaRoundMode mode = cudaRoundZero);
# 1157 "/usr/local/cuda/bin/..//include/crt/device_double_functions.h"
__attribute__((unused)) static inline unsigned double2uint(double a, cudaRoundMode mode = cudaRoundZero);
# 1159 "/usr/local/cuda/bin/..//include/crt/device_double_functions.h"
__attribute__((unused)) static inline long long double2ll(double a, cudaRoundMode mode = cudaRoundZero);
# 1161 "/usr/local/cuda/bin/..//include/crt/device_double_functions.h"
__attribute__((unused)) static inline unsigned long long double2ull(double a, cudaRoundMode mode = cudaRoundZero);
# 1163 "/usr/local/cuda/bin/..//include/crt/device_double_functions.h"
__attribute__((unused)) static inline double ll2double(long long a, cudaRoundMode mode = cudaRoundNearest);
# 1165 "/usr/local/cuda/bin/..//include/crt/device_double_functions.h"
__attribute__((unused)) static inline double ull2double(unsigned long long a, cudaRoundMode mode = cudaRoundNearest);
# 1167 "/usr/local/cuda/bin/..//include/crt/device_double_functions.h"
__attribute__((unused)) static inline double int2double(int a, cudaRoundMode mode = cudaRoundNearest);
# 1169 "/usr/local/cuda/bin/..//include/crt/device_double_functions.h"
__attribute__((unused)) static inline double uint2double(unsigned a, cudaRoundMode mode = cudaRoundNearest);
# 1171 "/usr/local/cuda/bin/..//include/crt/device_double_functions.h"
__attribute__((unused)) static inline double float2double(float a, cudaRoundMode mode = cudaRoundNearest);
# 93 "/usr/local/cuda/bin/..//include/crt/device_double_functions.hpp"
__attribute__((unused)) static inline double fma(double a, double b, double c, cudaRoundMode mode)
# 94 "/usr/local/cuda/bin/..//include/crt/device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;(void)c;(void)mode;
# 99 "/usr/local/cuda/bin/..//include/crt/device_double_functions.hpp"
::exit(___);}
# 101 "/usr/local/cuda/bin/..//include/crt/device_double_functions.hpp"
__attribute__((unused)) static inline double dmul(double a, double b, cudaRoundMode mode)
# 102 "/usr/local/cuda/bin/..//include/crt/device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
# 107 "/usr/local/cuda/bin/..//include/crt/device_double_functions.hpp"
::exit(___);}
# 109 "/usr/local/cuda/bin/..//include/crt/device_double_functions.hpp"
__attribute__((unused)) static inline double dadd(double a, double b, cudaRoundMode mode)
# 110 "/usr/local/cuda/bin/..//include/crt/device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
# 115 "/usr/local/cuda/bin/..//include/crt/device_double_functions.hpp"
::exit(___);}
# 117 "/usr/local/cuda/bin/..//include/crt/device_double_functions.hpp"
__attribute__((unused)) static inline double dsub(double a, double b, cudaRoundMode mode)
# 118 "/usr/local/cuda/bin/..//include/crt/device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
# 123 "/usr/local/cuda/bin/..//include/crt/device_double_functions.hpp"
::exit(___);}
# 125 "/usr/local/cuda/bin/..//include/crt/device_double_functions.hpp"
__attribute__((unused)) static inline int double2int(double a, cudaRoundMode mode)
# 126 "/usr/local/cuda/bin/..//include/crt/device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
# 131 "/usr/local/cuda/bin/..//include/crt/device_double_functions.hpp"
::exit(___);}
# 133 "/usr/local/cuda/bin/..//include/crt/device_double_functions.hpp"
__attribute__((unused)) static inline unsigned double2uint(double a, cudaRoundMode mode)
# 134 "/usr/local/cuda/bin/..//include/crt/device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
# 139 "/usr/local/cuda/bin/..//include/crt/device_double_functions.hpp"
::exit(___);}
# 141 "/usr/local/cuda/bin/..//include/crt/device_double_functions.hpp"
__attribute__((unused)) static inline long long double2ll(double a, cudaRoundMode mode)
# 142 "/usr/local/cuda/bin/..//include/crt/device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
# 147 "/usr/local/cuda/bin/..//include/crt/device_double_functions.hpp"
::exit(___);}
# 149 "/usr/local/cuda/bin/..//include/crt/device_double_functions.hpp"
__attribute__((unused)) static inline unsigned long long double2ull(double a, cudaRoundMode mode)
# 150 "/usr/local/cuda/bin/..//include/crt/device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
# 155 "/usr/local/cuda/bin/..//include/crt/device_double_functions.hpp"
::exit(___);}
# 157 "/usr/local/cuda/bin/..//include/crt/device_double_functions.hpp"
__attribute__((unused)) static inline double ll2double(long long a, cudaRoundMode mode)
# 158 "/usr/local/cuda/bin/..//include/crt/device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
# 163 "/usr/local/cuda/bin/..//include/crt/device_double_functions.hpp"
::exit(___);}
# 165 "/usr/local/cuda/bin/..//include/crt/device_double_functions.hpp"
__attribute__((unused)) static inline double ull2double(unsigned long long a, cudaRoundMode mode)
# 166 "/usr/local/cuda/bin/..//include/crt/device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
# 171 "/usr/local/cuda/bin/..//include/crt/device_double_functions.hpp"
::exit(___);}
# 173 "/usr/local/cuda/bin/..//include/crt/device_double_functions.hpp"
__attribute__((unused)) static inline double int2double(int a, cudaRoundMode mode)
# 174 "/usr/local/cuda/bin/..//include/crt/device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
# 176 "/usr/local/cuda/bin/..//include/crt/device_double_functions.hpp"
::exit(___);}
# 178 "/usr/local/cuda/bin/..//include/crt/device_double_functions.hpp"
__attribute__((unused)) static inline double uint2double(unsigned a, cudaRoundMode mode)
# 179 "/usr/local/cuda/bin/..//include/crt/device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
# 181 "/usr/local/cuda/bin/..//include/crt/device_double_functions.hpp"
::exit(___);}
# 183 "/usr/local/cuda/bin/..//include/crt/device_double_functions.hpp"
__attribute__((unused)) static inline double float2double(float a, cudaRoundMode mode)
# 184 "/usr/local/cuda/bin/..//include/crt/device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
# 186 "/usr/local/cuda/bin/..//include/crt/device_double_functions.hpp"
::exit(___);}
# 89 "/usr/local/cuda/bin/..//include/sm_20_atomic_functions.h"
__attribute__((unused)) static inline float atomicAdd(float *address, float val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 100 "/usr/local/cuda/bin/..//include/sm_32_atomic_functions.h"
__attribute__((unused)) static inline long long atomicMin(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 102 "/usr/local/cuda/bin/..//include/sm_32_atomic_functions.h"
__attribute__((unused)) static inline long long atomicMax(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 104 "/usr/local/cuda/bin/..//include/sm_32_atomic_functions.h"
__attribute__((unused)) static inline long long atomicAnd(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 106 "/usr/local/cuda/bin/..//include/sm_32_atomic_functions.h"
__attribute__((unused)) static inline long long atomicOr(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 108 "/usr/local/cuda/bin/..//include/sm_32_atomic_functions.h"
__attribute__((unused)) static inline long long atomicXor(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 110 "/usr/local/cuda/bin/..//include/sm_32_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicMin(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 112 "/usr/local/cuda/bin/..//include/sm_32_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicMax(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 114 "/usr/local/cuda/bin/..//include/sm_32_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicAnd(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 116 "/usr/local/cuda/bin/..//include/sm_32_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicOr(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 118 "/usr/local/cuda/bin/..//include/sm_32_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicXor(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 303 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline double atomicAdd(double *address, double val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 306 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicAdd_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 309 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicAdd_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 312 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicAdd_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 315 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicAdd_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 318 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicAdd_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 321 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicAdd_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 324 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline float atomicAdd_block(float *address, float val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 327 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline float atomicAdd_system(float *address, float val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 330 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline double atomicAdd_block(double *address, double val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 333 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline double atomicAdd_system(double *address, double val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 336 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicSub_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 339 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicSub_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 342 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicSub_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 345 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicSub_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 348 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicExch_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 351 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicExch_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 354 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicExch_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 357 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicExch_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 360 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicExch_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 363 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicExch_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 366 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline float atomicExch_block(float *address, float val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 369 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline float atomicExch_system(float *address, float val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 372 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicMin_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 375 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicMin_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 378 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline long long atomicMin_block(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 381 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline long long atomicMin_system(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 384 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicMin_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 387 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicMin_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 390 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicMin_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 393 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicMin_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 396 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicMax_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 399 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicMax_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 402 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline long long atomicMax_block(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 405 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline long long atomicMax_system(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 408 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicMax_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 411 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicMax_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 414 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicMax_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 417 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicMax_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 420 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicInc_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 423 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicInc_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 426 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicDec_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 429 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicDec_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 432 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicCAS_block(int *address, int compare, int val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 435 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicCAS_system(int *address, int compare, int val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 438 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicCAS_block(unsigned *address, unsigned compare, unsigned
# 439 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 442 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicCAS_system(unsigned *address, unsigned compare, unsigned
# 443 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 446 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicCAS_block(unsigned long long *address, unsigned long long
# 447 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
compare, unsigned long long
# 448 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 451 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicCAS_system(unsigned long long *address, unsigned long long
# 452 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
compare, unsigned long long
# 453 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 456 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicAnd_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 459 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicAnd_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 462 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline long long atomicAnd_block(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 465 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline long long atomicAnd_system(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 468 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicAnd_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 471 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicAnd_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 474 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicAnd_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 477 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicAnd_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 480 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicOr_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 483 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicOr_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 486 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline long long atomicOr_block(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 489 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline long long atomicOr_system(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 492 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicOr_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 495 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicOr_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 498 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicOr_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 501 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicOr_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 504 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicXor_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 507 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicXor_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 510 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline long long atomicXor_block(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 513 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline long long atomicXor_system(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 516 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicXor_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 519 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicXor_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 522 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicXor_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 525 "/usr/local/cuda/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicXor_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 90 "/usr/local/cuda/bin/..//include/sm_20_intrinsics.h"
extern "C" {
# 1475 "/usr/local/cuda/bin/..//include/sm_20_intrinsics.h"
}
# 1482 "/usr/local/cuda/bin/..//include/sm_20_intrinsics.h"
__attribute((deprecated("__ballot() is deprecated in favor of __ballot_sync() and may be removed in a future release (Use -Wno-deprecated-declarations to" " suppress this warning)."))) __attribute__((unused)) static inline unsigned ballot(bool pred) {int volatile ___ = 1;(void)pred;::exit(___);}
# 1484 "/usr/local/cuda/bin/..//include/sm_20_intrinsics.h"
__attribute__((unused)) static inline int syncthreads_count(bool pred) {int volatile ___ = 1;(void)pred;::exit(___);}
# 1486 "/usr/local/cuda/bin/..//include/sm_20_intrinsics.h"
__attribute__((unused)) static inline bool syncthreads_and(bool pred) {int volatile ___ = 1;(void)pred;::exit(___);}
# 1488 "/usr/local/cuda/bin/..//include/sm_20_intrinsics.h"
__attribute__((unused)) static inline bool syncthreads_or(bool pred) {int volatile ___ = 1;(void)pred;::exit(___);}
# 1495 "/usr/local/cuda/bin/..//include/sm_20_intrinsics.h"
__attribute__((unused)) static inline unsigned __isGlobal(const void *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 105 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline unsigned __fns(unsigned mask, unsigned base, int offset) {int volatile ___ = 1;(void)mask;(void)base;(void)offset;::exit(___);}
# 106 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline void __barrier_sync(unsigned id) {int volatile ___ = 1;(void)id;::exit(___);}
# 107 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline void __barrier_sync_count(unsigned id, unsigned cnt) {int volatile ___ = 1;(void)id;(void)cnt;::exit(___);}
# 108 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline void __syncwarp(unsigned mask = 4294967295U) {int volatile ___ = 1;(void)mask;::exit(___);}
# 109 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline int __all_sync(unsigned mask, int pred) {int volatile ___ = 1;(void)mask;(void)pred;::exit(___);}
# 110 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline int __any_sync(unsigned mask, int pred) {int volatile ___ = 1;(void)mask;(void)pred;::exit(___);}
# 111 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline int __uni_sync(unsigned mask, int pred) {int volatile ___ = 1;(void)mask;(void)pred;::exit(___);}
# 112 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline unsigned __ballot_sync(unsigned mask, int pred) {int volatile ___ = 1;(void)mask;(void)pred;::exit(___);}
# 113 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline unsigned __activemask() {int volatile ___ = 1;::exit(___);}
# 121 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute((deprecated("__shfl() is deprecated in favor of __shfl_sync() and may be removed in a future release (Use -Wno-deprecated-declarations to sup" "press this warning)."))) __attribute__((unused)) static inline int __shfl(int var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 122 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline int __shfl_sync(unsigned mask, int var, int srcLane, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)srcLane;(void)width;::exit(___);}
# 124 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute((deprecated("__shfl() is deprecated in favor of __shfl_sync() and may be removed in a future release (Use -Wno-deprecated-declarations to sup" "press this warning)."))) __attribute__((unused)) static inline unsigned __shfl(unsigned var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 125 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline unsigned __shfl_sync(unsigned mask, unsigned var, int srcLane, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)srcLane;(void)width;::exit(___);}
# 127 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute((deprecated("__shfl_up() is deprecated in favor of __shfl_up_sync() and may be removed in a future release (Use -Wno-deprecated-declarations " "to suppress this warning)."))) __attribute__((unused)) static inline int __shfl_up(int var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 128 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline int __shfl_up_sync(unsigned mask, int var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}
# 130 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute((deprecated("__shfl_up() is deprecated in favor of __shfl_up_sync() and may be removed in a future release (Use -Wno-deprecated-declarations " "to suppress this warning)."))) __attribute__((unused)) static inline unsigned __shfl_up(unsigned var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 131 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline unsigned __shfl_up_sync(unsigned mask, unsigned var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}
# 133 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute((deprecated("__shfl_down() is deprecated in favor of __shfl_down_sync() and may be removed in a future release (Use -Wno-deprecated-declarati" "ons to suppress this warning)."))) __attribute__((unused)) static inline int __shfl_down(int var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 134 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline int __shfl_down_sync(unsigned mask, int var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}
# 136 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute((deprecated("__shfl_down() is deprecated in favor of __shfl_down_sync() and may be removed in a future release (Use -Wno-deprecated-declarati" "ons to suppress this warning)."))) __attribute__((unused)) static inline unsigned __shfl_down(unsigned var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 137 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline unsigned __shfl_down_sync(unsigned mask, unsigned var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}
# 139 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute((deprecated("__shfl_xor() is deprecated in favor of __shfl_xor_sync() and may be removed in a future release (Use -Wno-deprecated-declaration" "s to suppress this warning)."))) __attribute__((unused)) static inline int __shfl_xor(int var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 140 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline int __shfl_xor_sync(unsigned mask, int var, int laneMask, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)laneMask;(void)width;::exit(___);}
# 142 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute((deprecated("__shfl_xor() is deprecated in favor of __shfl_xor_sync() and may be removed in a future release (Use -Wno-deprecated-declaration" "s to suppress this warning)."))) __attribute__((unused)) static inline unsigned __shfl_xor(unsigned var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 143 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline unsigned __shfl_xor_sync(unsigned mask, unsigned var, int laneMask, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)laneMask;(void)width;::exit(___);}
# 145 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute((deprecated("__shfl() is deprecated in favor of __shfl_sync() and may be removed in a future release (Use -Wno-deprecated-declarations to sup" "press this warning)."))) __attribute__((unused)) static inline float __shfl(float var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 146 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline float __shfl_sync(unsigned mask, float var, int srcLane, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)srcLane;(void)width;::exit(___);}
# 148 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute((deprecated("__shfl_up() is deprecated in favor of __shfl_up_sync() and may be removed in a future release (Use -Wno-deprecated-declarations " "to suppress this warning)."))) __attribute__((unused)) static inline float __shfl_up(float var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 149 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline float __shfl_up_sync(unsigned mask, float var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}
# 151 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute((deprecated("__shfl_down() is deprecated in favor of __shfl_down_sync() and may be removed in a future release (Use -Wno-deprecated-declarati" "ons to suppress this warning)."))) __attribute__((unused)) static inline float __shfl_down(float var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 152 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline float __shfl_down_sync(unsigned mask, float var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}
# 154 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute((deprecated("__shfl_xor() is deprecated in favor of __shfl_xor_sync() and may be removed in a future release (Use -Wno-deprecated-declaration" "s to suppress this warning)."))) __attribute__((unused)) static inline float __shfl_xor(float var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 155 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline float __shfl_xor_sync(unsigned mask, float var, int laneMask, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)laneMask;(void)width;::exit(___);}
# 158 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute((deprecated("__shfl() is deprecated in favor of __shfl_sync() and may be removed in a future release (Use -Wno-deprecated-declarations to sup" "press this warning)."))) __attribute__((unused)) static inline long long __shfl(long long var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 159 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline long long __shfl_sync(unsigned mask, long long var, int srcLane, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)srcLane;(void)width;::exit(___);}
# 161 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute((deprecated("__shfl() is deprecated in favor of __shfl_sync() and may be removed in a future release (Use -Wno-deprecated-declarations to sup" "press this warning)."))) __attribute__((unused)) static inline unsigned long long __shfl(unsigned long long var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 162 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline unsigned long long __shfl_sync(unsigned mask, unsigned long long var, int srcLane, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)srcLane;(void)width;::exit(___);}
# 164 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute((deprecated("__shfl_up() is deprecated in favor of __shfl_up_sync() and may be removed in a future release (Use -Wno-deprecated-declarations " "to suppress this warning)."))) __attribute__((unused)) static inline long long __shfl_up(long long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 165 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline long long __shfl_up_sync(unsigned mask, long long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}
# 167 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute((deprecated("__shfl_up() is deprecated in favor of __shfl_up_sync() and may be removed in a future release (Use -Wno-deprecated-declarations " "to suppress this warning)."))) __attribute__((unused)) static inline unsigned long long __shfl_up(unsigned long long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 168 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline unsigned long long __shfl_up_sync(unsigned mask, unsigned long long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}
# 170 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute((deprecated("__shfl_down() is deprecated in favor of __shfl_down_sync() and may be removed in a future release (Use -Wno-deprecated-declarati" "ons to suppress this warning)."))) __attribute__((unused)) static inline long long __shfl_down(long long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 171 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline long long __shfl_down_sync(unsigned mask, long long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}
# 173 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute((deprecated("__shfl_down() is deprecated in favor of __shfl_down_sync() and may be removed in a future release (Use -Wno-deprecated-declarati" "ons to suppress this warning)."))) __attribute__((unused)) static inline unsigned long long __shfl_down(unsigned long long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 174 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline unsigned long long __shfl_down_sync(unsigned mask, unsigned long long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}
# 176 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute((deprecated("__shfl_xor() is deprecated in favor of __shfl_xor_sync() and may be removed in a future release (Use -Wno-deprecated-declaration" "s to suppress this warning)."))) __attribute__((unused)) static inline long long __shfl_xor(long long var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 177 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline long long __shfl_xor_sync(unsigned mask, long long var, int laneMask, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)laneMask;(void)width;::exit(___);}
# 179 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute((deprecated("__shfl_xor() is deprecated in favor of __shfl_xor_sync() and may be removed in a future release (Use -Wno-deprecated-declaration" "s to suppress this warning)."))) __attribute__((unused)) static inline unsigned long long __shfl_xor(unsigned long long var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 180 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline unsigned long long __shfl_xor_sync(unsigned mask, unsigned long long var, int laneMask, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)laneMask;(void)width;::exit(___);}
# 182 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute((deprecated("__shfl() is deprecated in favor of __shfl_sync() and may be removed in a future release (Use -Wno-deprecated-declarations to sup" "press this warning)."))) __attribute__((unused)) static inline double __shfl(double var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 183 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline double __shfl_sync(unsigned mask, double var, int srcLane, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)srcLane;(void)width;::exit(___);}
# 185 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute((deprecated("__shfl_up() is deprecated in favor of __shfl_up_sync() and may be removed in a future release (Use -Wno-deprecated-declarations " "to suppress this warning)."))) __attribute__((unused)) static inline double __shfl_up(double var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 186 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline double __shfl_up_sync(unsigned mask, double var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}
# 188 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute((deprecated("__shfl_down() is deprecated in favor of __shfl_down_sync() and may be removed in a future release (Use -Wno-deprecated-declarati" "ons to suppress this warning)."))) __attribute__((unused)) static inline double __shfl_down(double var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 189 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline double __shfl_down_sync(unsigned mask, double var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}
# 191 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute((deprecated("__shfl_xor() is deprecated in favor of __shfl_xor_sync() and may be removed in a future release (Use -Wno-deprecated-declaration" "s to suppress this warning)."))) __attribute__((unused)) static inline double __shfl_xor(double var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 192 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline double __shfl_xor_sync(unsigned mask, double var, int laneMask, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)laneMask;(void)width;::exit(___);}
# 196 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute((deprecated("__shfl() is deprecated in favor of __shfl_sync() and may be removed in a future release (Use -Wno-deprecated-declarations to sup" "press this warning)."))) __attribute__((unused)) static inline long __shfl(long var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 197 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline long __shfl_sync(unsigned mask, long var, int srcLane, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)srcLane;(void)width;::exit(___);}
# 199 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute((deprecated("__shfl() is deprecated in favor of __shfl_sync() and may be removed in a future release (Use -Wno-deprecated-declarations to sup" "press this warning)."))) __attribute__((unused)) static inline unsigned long __shfl(unsigned long var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 200 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline unsigned long __shfl_sync(unsigned mask, unsigned long var, int srcLane, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)srcLane;(void)width;::exit(___);}
# 202 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute((deprecated("__shfl_up() is deprecated in favor of __shfl_up_sync() and may be removed in a future release (Use -Wno-deprecated-declarations " "to suppress this warning)."))) __attribute__((unused)) static inline long __shfl_up(long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 203 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline long __shfl_up_sync(unsigned mask, long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}
# 205 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute((deprecated("__shfl_up() is deprecated in favor of __shfl_up_sync() and may be removed in a future release (Use -Wno-deprecated-declarations " "to suppress this warning)."))) __attribute__((unused)) static inline unsigned long __shfl_up(unsigned long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 206 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline unsigned long __shfl_up_sync(unsigned mask, unsigned long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}
# 208 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute((deprecated("__shfl_down() is deprecated in favor of __shfl_down_sync() and may be removed in a future release (Use -Wno-deprecated-declarati" "ons to suppress this warning)."))) __attribute__((unused)) static inline long __shfl_down(long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 209 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline long __shfl_down_sync(unsigned mask, long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}
# 211 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute((deprecated("__shfl_down() is deprecated in favor of __shfl_down_sync() and may be removed in a future release (Use -Wno-deprecated-declarati" "ons to suppress this warning)."))) __attribute__((unused)) static inline unsigned long __shfl_down(unsigned long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 212 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline unsigned long __shfl_down_sync(unsigned mask, unsigned long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}
# 214 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute((deprecated("__shfl_xor() is deprecated in favor of __shfl_xor_sync() and may be removed in a future release (Use -Wno-deprecated-declaration" "s to suppress this warning)."))) __attribute__((unused)) static inline long __shfl_xor(long var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 215 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline long __shfl_xor_sync(unsigned mask, long var, int laneMask, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)laneMask;(void)width;::exit(___);}
# 217 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute((deprecated("__shfl_xor() is deprecated in favor of __shfl_xor_sync() and may be removed in a future release (Use -Wno-deprecated-declaration" "s to suppress this warning)."))) __attribute__((unused)) static inline unsigned long __shfl_xor(unsigned long var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 218 "/usr/local/cuda/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline unsigned long __shfl_xor_sync(unsigned mask, unsigned long var, int laneMask, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)laneMask;(void)width;::exit(___);}
# 87 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline long __ldg(const long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 88 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned long __ldg(const unsigned long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 90 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline char __ldg(const char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 91 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline signed char __ldg(const signed char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 92 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline short __ldg(const short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 93 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline int __ldg(const int *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 94 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline long long __ldg(const long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 95 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline char2 __ldg(const char2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 96 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline char4 __ldg(const char4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 97 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline short2 __ldg(const short2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 98 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline short4 __ldg(const short4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 99 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline int2 __ldg(const int2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 100 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline int4 __ldg(const int4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 101 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline longlong2 __ldg(const longlong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 103 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned char __ldg(const unsigned char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 104 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned short __ldg(const unsigned short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 105 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned __ldg(const unsigned *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 106 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned long long __ldg(const unsigned long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 107 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uchar2 __ldg(const uchar2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 108 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uchar4 __ldg(const uchar4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 109 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline ushort2 __ldg(const ushort2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 110 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline ushort4 __ldg(const ushort4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 111 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uint2 __ldg(const uint2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 112 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uint4 __ldg(const uint4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 113 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline ulonglong2 __ldg(const ulonglong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 115 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline float __ldg(const float *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 116 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline double __ldg(const double *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 117 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline float2 __ldg(const float2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 118 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline float4 __ldg(const float4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 119 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline double2 __ldg(const double2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 123 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline long __ldcg(const long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 124 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned long __ldcg(const unsigned long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 126 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline char __ldcg(const char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 127 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline signed char __ldcg(const signed char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 128 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline short __ldcg(const short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 129 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline int __ldcg(const int *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 130 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline long long __ldcg(const long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 131 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline char2 __ldcg(const char2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 132 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline char4 __ldcg(const char4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 133 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline short2 __ldcg(const short2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 134 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline short4 __ldcg(const short4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 135 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline int2 __ldcg(const int2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 136 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline int4 __ldcg(const int4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 137 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline longlong2 __ldcg(const longlong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 139 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned char __ldcg(const unsigned char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 140 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned short __ldcg(const unsigned short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 141 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned __ldcg(const unsigned *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 142 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned long long __ldcg(const unsigned long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 143 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uchar2 __ldcg(const uchar2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 144 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uchar4 __ldcg(const uchar4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 145 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline ushort2 __ldcg(const ushort2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 146 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline ushort4 __ldcg(const ushort4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 147 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uint2 __ldcg(const uint2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 148 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uint4 __ldcg(const uint4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 149 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline ulonglong2 __ldcg(const ulonglong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 151 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline float __ldcg(const float *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 152 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline double __ldcg(const double *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 153 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline float2 __ldcg(const float2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 154 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline float4 __ldcg(const float4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 155 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline double2 __ldcg(const double2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 159 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline long __ldca(const long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 160 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned long __ldca(const unsigned long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 162 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline char __ldca(const char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 163 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline signed char __ldca(const signed char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 164 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline short __ldca(const short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 165 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline int __ldca(const int *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 166 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline long long __ldca(const long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 167 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline char2 __ldca(const char2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 168 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline char4 __ldca(const char4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 169 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline short2 __ldca(const short2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 170 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline short4 __ldca(const short4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 171 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline int2 __ldca(const int2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 172 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline int4 __ldca(const int4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 173 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline longlong2 __ldca(const longlong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 175 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned char __ldca(const unsigned char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 176 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned short __ldca(const unsigned short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 177 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned __ldca(const unsigned *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 178 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned long long __ldca(const unsigned long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 179 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uchar2 __ldca(const uchar2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 180 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uchar4 __ldca(const uchar4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 181 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline ushort2 __ldca(const ushort2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 182 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline ushort4 __ldca(const ushort4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 183 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uint2 __ldca(const uint2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 184 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uint4 __ldca(const uint4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 185 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline ulonglong2 __ldca(const ulonglong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 187 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline float __ldca(const float *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 188 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline double __ldca(const double *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 189 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline float2 __ldca(const float2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 190 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline float4 __ldca(const float4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 191 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline double2 __ldca(const double2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 195 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline long __ldcs(const long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 196 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned long __ldcs(const unsigned long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 198 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline char __ldcs(const char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 199 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline signed char __ldcs(const signed char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 200 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline short __ldcs(const short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 201 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline int __ldcs(const int *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 202 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline long long __ldcs(const long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 203 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline char2 __ldcs(const char2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 204 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline char4 __ldcs(const char4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 205 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline short2 __ldcs(const short2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 206 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline short4 __ldcs(const short4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 207 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline int2 __ldcs(const int2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 208 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline int4 __ldcs(const int4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 209 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline longlong2 __ldcs(const longlong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 211 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned char __ldcs(const unsigned char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 212 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned short __ldcs(const unsigned short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 213 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned __ldcs(const unsigned *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 214 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned long long __ldcs(const unsigned long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 215 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uchar2 __ldcs(const uchar2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 216 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uchar4 __ldcs(const uchar4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 217 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline ushort2 __ldcs(const ushort2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 218 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline ushort4 __ldcs(const ushort4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 219 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uint2 __ldcs(const uint2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 220 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uint4 __ldcs(const uint4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 221 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline ulonglong2 __ldcs(const ulonglong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 223 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline float __ldcs(const float *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 224 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline double __ldcs(const double *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 225 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline float2 __ldcs(const float2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 226 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline float4 __ldcs(const float4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 227 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline double2 __ldcs(const double2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 244 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned __funnelshift_l(unsigned lo, unsigned hi, unsigned shift) {int volatile ___ = 1;(void)lo;(void)hi;(void)shift;::exit(___);}
# 256 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned __funnelshift_lc(unsigned lo, unsigned hi, unsigned shift) {int volatile ___ = 1;(void)lo;(void)hi;(void)shift;::exit(___);}
# 269 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned __funnelshift_r(unsigned lo, unsigned hi, unsigned shift) {int volatile ___ = 1;(void)lo;(void)hi;(void)shift;::exit(___);}
# 281 "/usr/local/cuda/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned __funnelshift_rc(unsigned lo, unsigned hi, unsigned shift) {int volatile ___ = 1;(void)lo;(void)hi;(void)shift;::exit(___);}
# 89 "/usr/local/cuda/bin/..//include/sm_61_intrinsics.h"
__attribute__((unused)) static inline int __dp2a_lo(int srcA, int srcB, int c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 90 "/usr/local/cuda/bin/..//include/sm_61_intrinsics.h"
__attribute__((unused)) static inline unsigned __dp2a_lo(unsigned srcA, unsigned srcB, unsigned c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 92 "/usr/local/cuda/bin/..//include/sm_61_intrinsics.h"
__attribute__((unused)) static inline int __dp2a_lo(short2 srcA, char4 srcB, int c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 93 "/usr/local/cuda/bin/..//include/sm_61_intrinsics.h"
__attribute__((unused)) static inline unsigned __dp2a_lo(ushort2 srcA, uchar4 srcB, unsigned c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 95 "/usr/local/cuda/bin/..//include/sm_61_intrinsics.h"
__attribute__((unused)) static inline int __dp2a_hi(int srcA, int srcB, int c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 96 "/usr/local/cuda/bin/..//include/sm_61_intrinsics.h"
__attribute__((unused)) static inline unsigned __dp2a_hi(unsigned srcA, unsigned srcB, unsigned c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 98 "/usr/local/cuda/bin/..//include/sm_61_intrinsics.h"
__attribute__((unused)) static inline int __dp2a_hi(short2 srcA, char4 srcB, int c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 99 "/usr/local/cuda/bin/..//include/sm_61_intrinsics.h"
__attribute__((unused)) static inline unsigned __dp2a_hi(ushort2 srcA, uchar4 srcB, unsigned c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 106 "/usr/local/cuda/bin/..//include/sm_61_intrinsics.h"
__attribute__((unused)) static inline int __dp4a(int srcA, int srcB, int c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 107 "/usr/local/cuda/bin/..//include/sm_61_intrinsics.h"
__attribute__((unused)) static inline unsigned __dp4a(unsigned srcA, unsigned srcB, unsigned c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 109 "/usr/local/cuda/bin/..//include/sm_61_intrinsics.h"
__attribute__((unused)) static inline int __dp4a(char4 srcA, char4 srcB, int c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 110 "/usr/local/cuda/bin/..//include/sm_61_intrinsics.h"
__attribute__((unused)) static inline unsigned __dp4a(uchar4 srcA, uchar4 srcB, unsigned c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 93 "/usr/local/cuda/bin/..//include/crt/sm_70_rt.h"
__attribute__((unused)) static inline unsigned __match_any_sync(unsigned mask, unsigned value) {int volatile ___ = 1;(void)mask;(void)value;::exit(___);}
# 94 "/usr/local/cuda/bin/..//include/crt/sm_70_rt.h"
__attribute__((unused)) static inline unsigned __match_any_sync(unsigned mask, int value) {int volatile ___ = 1;(void)mask;(void)value;::exit(___);}
# 95 "/usr/local/cuda/bin/..//include/crt/sm_70_rt.h"
__attribute__((unused)) static inline unsigned __match_any_sync(unsigned mask, unsigned long value) {int volatile ___ = 1;(void)mask;(void)value;::exit(___);}
# 96 "/usr/local/cuda/bin/..//include/crt/sm_70_rt.h"
__attribute__((unused)) static inline unsigned __match_any_sync(unsigned mask, long value) {int volatile ___ = 1;(void)mask;(void)value;::exit(___);}
# 97 "/usr/local/cuda/bin/..//include/crt/sm_70_rt.h"
__attribute__((unused)) static inline unsigned __match_any_sync(unsigned mask, unsigned long long value) {int volatile ___ = 1;(void)mask;(void)value;::exit(___);}
# 98 "/usr/local/cuda/bin/..//include/crt/sm_70_rt.h"
__attribute__((unused)) static inline unsigned __match_any_sync(unsigned mask, long long value) {int volatile ___ = 1;(void)mask;(void)value;::exit(___);}
# 99 "/usr/local/cuda/bin/..//include/crt/sm_70_rt.h"
__attribute__((unused)) static inline unsigned __match_any_sync(unsigned mask, float value) {int volatile ___ = 1;(void)mask;(void)value;::exit(___);}
# 100 "/usr/local/cuda/bin/..//include/crt/sm_70_rt.h"
__attribute__((unused)) static inline unsigned __match_any_sync(unsigned mask, double value) {int volatile ___ = 1;(void)mask;(void)value;::exit(___);}
# 102 "/usr/local/cuda/bin/..//include/crt/sm_70_rt.h"
__attribute__((unused)) static inline unsigned __match_all_sync(unsigned mask, unsigned value, int *pred) {int volatile ___ = 1;(void)mask;(void)value;(void)pred;::exit(___);}
# 103 "/usr/local/cuda/bin/..//include/crt/sm_70_rt.h"
__attribute__((unused)) static inline unsigned __match_all_sync(unsigned mask, int value, int *pred) {int volatile ___ = 1;(void)mask;(void)value;(void)pred;::exit(___);}
# 104 "/usr/local/cuda/bin/..//include/crt/sm_70_rt.h"
__attribute__((unused)) static inline unsigned __match_all_sync(unsigned mask, unsigned long value, int *pred) {int volatile ___ = 1;(void)mask;(void)value;(void)pred;::exit(___);}
# 105 "/usr/local/cuda/bin/..//include/crt/sm_70_rt.h"
__attribute__((unused)) static inline unsigned __match_all_sync(unsigned mask, long value, int *pred) {int volatile ___ = 1;(void)mask;(void)value;(void)pred;::exit(___);}
# 106 "/usr/local/cuda/bin/..//include/crt/sm_70_rt.h"
__attribute__((unused)) static inline unsigned __match_all_sync(unsigned mask, unsigned long long value, int *pred) {int volatile ___ = 1;(void)mask;(void)value;(void)pred;::exit(___);}
# 107 "/usr/local/cuda/bin/..//include/crt/sm_70_rt.h"
__attribute__((unused)) static inline unsigned __match_all_sync(unsigned mask, long long value, int *pred) {int volatile ___ = 1;(void)mask;(void)value;(void)pred;::exit(___);}
# 108 "/usr/local/cuda/bin/..//include/crt/sm_70_rt.h"
__attribute__((unused)) static inline unsigned __match_all_sync(unsigned mask, float value, int *pred) {int volatile ___ = 1;(void)mask;(void)value;(void)pred;::exit(___);}
# 109 "/usr/local/cuda/bin/..//include/crt/sm_70_rt.h"
__attribute__((unused)) static inline unsigned __match_all_sync(unsigned mask, double value, int *pred) {int volatile ___ = 1;(void)mask;(void)value;(void)pred;::exit(___);}
# 111 "/usr/local/cuda/bin/..//include/crt/sm_70_rt.h"
__attribute__((unused)) static inline void __nanosleep(unsigned ns) {int volatile ___ = 1;(void)ns;::exit(___);}
# 114 "/usr/local/cuda/bin/..//include/surface_functions.h"
template< class T>
# 115 "/usr/local/cuda/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(T *res, surface< void, 1> surf, int x, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 116 "/usr/local/cuda/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)s;(void)mode;
# 120 "/usr/local/cuda/bin/..//include/surface_functions.h"
::exit(___);}
# 122 "/usr/local/cuda/bin/..//include/surface_functions.h"
template< class T>
# 123 "/usr/local/cuda/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 124 "/usr/local/cuda/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 130 "/usr/local/cuda/bin/..//include/surface_functions.h"
::exit(___);}
# 132 "/usr/local/cuda/bin/..//include/surface_functions.h"
template< class T>
# 133 "/usr/local/cuda/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(T *res, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 134 "/usr/local/cuda/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)mode;
# 138 "/usr/local/cuda/bin/..//include/surface_functions.h"
::exit(___);}
# 141 "/usr/local/cuda/bin/..//include/surface_functions.h"
template< class T>
# 142 "/usr/local/cuda/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(T *res, surface< void, 2> surf, int x, int y, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 143 "/usr/local/cuda/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)s;(void)mode;
# 147 "/usr/local/cuda/bin/..//include/surface_functions.h"
::exit(___);}
# 149 "/usr/local/cuda/bin/..//include/surface_functions.h"
template< class T>
# 150 "/usr/local/cuda/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 151 "/usr/local/cuda/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 157 "/usr/local/cuda/bin/..//include/surface_functions.h"
::exit(___);}
# 159 "/usr/local/cuda/bin/..//include/surface_functions.h"
template< class T>
# 160 "/usr/local/cuda/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(T *res, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 161 "/usr/local/cuda/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)mode;
# 165 "/usr/local/cuda/bin/..//include/surface_functions.h"
::exit(___);}
# 168 "/usr/local/cuda/bin/..//include/surface_functions.h"
template< class T>
# 169 "/usr/local/cuda/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(T *res, surface< void, 3> surf, int x, int y, int z, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 170 "/usr/local/cuda/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)z;(void)s;(void)mode;
# 174 "/usr/local/cuda/bin/..//include/surface_functions.h"
::exit(___);}
# 176 "/usr/local/cuda/bin/..//include/surface_functions.h"
template< class T>
# 177 "/usr/local/cuda/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 178 "/usr/local/cuda/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 184 "/usr/local/cuda/bin/..//include/surface_functions.h"
::exit(___);}
# 186 "/usr/local/cuda/bin/..//include/surface_functions.h"
template< class T>
# 187 "/usr/local/cuda/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(T *res, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 188 "/usr/local/cuda/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 192 "/usr/local/cuda/bin/..//include/surface_functions.h"
::exit(___);}
# 196 "/usr/local/cuda/bin/..//include/surface_functions.h"
template< class T>
# 197 "/usr/local/cuda/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(T *res, surface< void, 241> surf, int x, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 198 "/usr/local/cuda/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)layer;(void)s;(void)mode;
# 202 "/usr/local/cuda/bin/..//include/surface_functions.h"
::exit(___);}
# 204 "/usr/local/cuda/bin/..//include/surface_functions.h"
template< class T>
# 205 "/usr/local/cuda/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 206 "/usr/local/cuda/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 212 "/usr/local/cuda/bin/..//include/surface_functions.h"
::exit(___);}
# 215 "/usr/local/cuda/bin/..//include/surface_functions.h"
template< class T>
# 216 "/usr/local/cuda/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(T *res, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 217 "/usr/local/cuda/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)layer;(void)mode;
# 221 "/usr/local/cuda/bin/..//include/surface_functions.h"
::exit(___);}
# 224 "/usr/local/cuda/bin/..//include/surface_functions.h"
template< class T>
# 225 "/usr/local/cuda/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(T *res, surface< void, 242> surf, int x, int y, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 226 "/usr/local/cuda/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layer;(void)s;(void)mode;
# 230 "/usr/local/cuda/bin/..//include/surface_functions.h"
::exit(___);}
# 232 "/usr/local/cuda/bin/..//include/surface_functions.h"
template< class T>
# 233 "/usr/local/cuda/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 234 "/usr/local/cuda/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 240 "/usr/local/cuda/bin/..//include/surface_functions.h"
::exit(___);}
# 243 "/usr/local/cuda/bin/..//include/surface_functions.h"
template< class T>
# 244 "/usr/local/cuda/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(T *res, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 245 "/usr/local/cuda/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 249 "/usr/local/cuda/bin/..//include/surface_functions.h"
::exit(___);}
# 252 "/usr/local/cuda/bin/..//include/surface_functions.h"
template< class T>
# 253 "/usr/local/cuda/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(T *res, surface< void, 12> surf, int x, int y, int face, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 254 "/usr/local/cuda/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)face;(void)s;(void)mode;
# 258 "/usr/local/cuda/bin/..//include/surface_functions.h"
::exit(___);}
# 260 "/usr/local/cuda/bin/..//include/surface_functions.h"
template< class T>
# 261 "/usr/local/cuda/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 262 "/usr/local/cuda/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 269 "/usr/local/cuda/bin/..//include/surface_functions.h"
::exit(___);}
# 271 "/usr/local/cuda/bin/..//include/surface_functions.h"
template< class T>
# 272 "/usr/local/cuda/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(T *res, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 273 "/usr/local/cuda/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 277 "/usr/local/cuda/bin/..//include/surface_functions.h"
::exit(___);}
# 280 "/usr/local/cuda/bin/..//include/surface_functions.h"
template< class T>
# 281 "/usr/local/cuda/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(T *res, surface< void, 252> surf, int x, int y, int layerFace, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 282 "/usr/local/cuda/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layerFace;(void)s;(void)mode;
# 286 "/usr/local/cuda/bin/..//include/surface_functions.h"
::exit(___);}
# 288 "/usr/local/cuda/bin/..//include/surface_functions.h"
template< class T>
# 289 "/usr/local/cuda/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline T surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 290 "/usr/local/cuda/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 296 "/usr/local/cuda/bin/..//include/surface_functions.h"
::exit(___);}
# 298 "/usr/local/cuda/bin/..//include/surface_functions.h"
template< class T>
# 299 "/usr/local/cuda/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(T *res, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 300 "/usr/local/cuda/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 304 "/usr/local/cuda/bin/..//include/surface_functions.h"
::exit(___);}
# 307 "/usr/local/cuda/bin/..//include/surface_functions.h"
template< class T>
# 308 "/usr/local/cuda/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(T val, surface< void, 1> surf, int x, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 309 "/usr/local/cuda/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)s;(void)mode;
# 313 "/usr/local/cuda/bin/..//include/surface_functions.h"
::exit(___);}
# 315 "/usr/local/cuda/bin/..//include/surface_functions.h"
template< class T>
# 316 "/usr/local/cuda/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(T val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 317 "/usr/local/cuda/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 321 "/usr/local/cuda/bin/..//include/surface_functions.h"
::exit(___);}
# 325 "/usr/local/cuda/bin/..//include/surface_functions.h"
template< class T>
# 326 "/usr/local/cuda/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(T val, surface< void, 2> surf, int x, int y, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 327 "/usr/local/cuda/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)s;(void)mode;
# 331 "/usr/local/cuda/bin/..//include/surface_functions.h"
::exit(___);}
# 333 "/usr/local/cuda/bin/..//include/surface_functions.h"
template< class T>
# 334 "/usr/local/cuda/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(T val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 335 "/usr/local/cuda/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 339 "/usr/local/cuda/bin/..//include/surface_functions.h"
::exit(___);}
# 342 "/usr/local/cuda/bin/..//include/surface_functions.h"
template< class T>
# 343 "/usr/local/cuda/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(T val, surface< void, 3> surf, int x, int y, int z, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 344 "/usr/local/cuda/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)s;(void)mode;
# 348 "/usr/local/cuda/bin/..//include/surface_functions.h"
::exit(___);}
# 350 "/usr/local/cuda/bin/..//include/surface_functions.h"
template< class T>
# 351 "/usr/local/cuda/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(T val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 352 "/usr/local/cuda/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 356 "/usr/local/cuda/bin/..//include/surface_functions.h"
::exit(___);}
# 359 "/usr/local/cuda/bin/..//include/surface_functions.h"
template< class T>
# 360 "/usr/local/cuda/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(T val, surface< void, 241> surf, int x, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 361 "/usr/local/cuda/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)s;(void)mode;
# 365 "/usr/local/cuda/bin/..//include/surface_functions.h"
::exit(___);}
# 367 "/usr/local/cuda/bin/..//include/surface_functions.h"
template< class T>
# 368 "/usr/local/cuda/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(T val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 369 "/usr/local/cuda/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 373 "/usr/local/cuda/bin/..//include/surface_functions.h"
::exit(___);}
# 376 "/usr/local/cuda/bin/..//include/surface_functions.h"
template< class T>
# 377 "/usr/local/cuda/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(T val, surface< void, 242> surf, int x, int y, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 378 "/usr/local/cuda/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)s;(void)mode;
# 382 "/usr/local/cuda/bin/..//include/surface_functions.h"
::exit(___);}
# 384 "/usr/local/cuda/bin/..//include/surface_functions.h"
template< class T>
# 385 "/usr/local/cuda/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(T val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 386 "/usr/local/cuda/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 390 "/usr/local/cuda/bin/..//include/surface_functions.h"
::exit(___);}
# 393 "/usr/local/cuda/bin/..//include/surface_functions.h"
template< class T>
# 394 "/usr/local/cuda/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(T val, surface< void, 12> surf, int x, int y, int face, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 395 "/usr/local/cuda/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)s;(void)mode;
# 399 "/usr/local/cuda/bin/..//include/surface_functions.h"
::exit(___);}
# 401 "/usr/local/cuda/bin/..//include/surface_functions.h"
template< class T>
# 402 "/usr/local/cuda/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(T val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 403 "/usr/local/cuda/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 407 "/usr/local/cuda/bin/..//include/surface_functions.h"
::exit(___);}
# 411 "/usr/local/cuda/bin/..//include/surface_functions.h"
template< class T>
# 412 "/usr/local/cuda/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(T val, surface< void, 252> surf, int x, int y, int layerFace, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 413 "/usr/local/cuda/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)s;(void)mode;
# 417 "/usr/local/cuda/bin/..//include/surface_functions.h"
::exit(___);}
# 419 "/usr/local/cuda/bin/..//include/surface_functions.h"
template< class T>
# 420 "/usr/local/cuda/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(T val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 421 "/usr/local/cuda/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 425 "/usr/local/cuda/bin/..//include/surface_functions.h"
::exit(___);}
# 66 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 67 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
struct __nv_tex_rmet_ret { };
# 69 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmet_ret< char> { typedef char type; };
# 70 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmet_ret< signed char> { typedef signed char type; };
# 71 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmet_ret< unsigned char> { typedef unsigned char type; };
# 72 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmet_ret< char1> { typedef char1 type; };
# 73 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmet_ret< uchar1> { typedef uchar1 type; };
# 74 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmet_ret< char2> { typedef char2 type; };
# 75 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmet_ret< uchar2> { typedef uchar2 type; };
# 76 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmet_ret< char4> { typedef char4 type; };
# 77 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmet_ret< uchar4> { typedef uchar4 type; };
# 79 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmet_ret< short> { typedef short type; };
# 80 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmet_ret< unsigned short> { typedef unsigned short type; };
# 81 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmet_ret< short1> { typedef short1 type; };
# 82 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmet_ret< ushort1> { typedef ushort1 type; };
# 83 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmet_ret< short2> { typedef short2 type; };
# 84 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmet_ret< ushort2> { typedef ushort2 type; };
# 85 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmet_ret< short4> { typedef short4 type; };
# 86 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmet_ret< ushort4> { typedef ushort4 type; };
# 88 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmet_ret< int> { typedef int type; };
# 89 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmet_ret< unsigned> { typedef unsigned type; };
# 90 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmet_ret< int1> { typedef int1 type; };
# 91 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmet_ret< uint1> { typedef uint1 type; };
# 92 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmet_ret< int2> { typedef int2 type; };
# 93 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmet_ret< uint2> { typedef uint2 type; };
# 94 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmet_ret< int4> { typedef int4 type; };
# 95 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmet_ret< uint4> { typedef uint4 type; };
# 107 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmet_ret< float> { typedef float type; };
# 108 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmet_ret< float1> { typedef float1 type; };
# 109 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmet_ret< float2> { typedef float2 type; };
# 110 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmet_ret< float4> { typedef float4 type; };
# 113 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T> struct __nv_tex_rmet_cast { typedef T *type; };
# 125 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 126 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type tex1Dfetch(texture< T, 1, cudaReadModeElementType> t, int x)
# 127 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 133 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 135 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 136 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
struct __nv_tex_rmnf_ret { };
# 138 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< char> { typedef float type; };
# 139 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< signed char> { typedef float type; };
# 140 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< unsigned char> { typedef float type; };
# 141 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< short> { typedef float type; };
# 142 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< unsigned short> { typedef float type; };
# 143 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< char1> { typedef float1 type; };
# 144 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< uchar1> { typedef float1 type; };
# 145 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< short1> { typedef float1 type; };
# 146 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< ushort1> { typedef float1 type; };
# 147 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< char2> { typedef float2 type; };
# 148 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< uchar2> { typedef float2 type; };
# 149 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< short2> { typedef float2 type; };
# 150 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< ushort2> { typedef float2 type; };
# 151 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< char4> { typedef float4 type; };
# 152 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< uchar4> { typedef float4 type; };
# 153 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< short4> { typedef float4 type; };
# 154 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< ushort4> { typedef float4 type; };
# 156 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 157 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type tex1Dfetch(texture< T, 1, cudaReadModeNormalizedFloat> t, int x)
# 158 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 165 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 168 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 169 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type tex1D(texture< T, 1, cudaReadModeElementType> t, float x)
# 170 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 176 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 178 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 179 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type tex1D(texture< T, 1, cudaReadModeNormalizedFloat> t, float x)
# 180 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 187 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 191 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 192 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type tex2D(texture< T, 2, cudaReadModeElementType> t, float x, float y)
# 193 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 200 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 202 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 203 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type tex2D(texture< T, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 204 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 211 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 215 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 216 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type tex1DLayered(texture< T, 241, cudaReadModeElementType> t, float x, int layer)
# 217 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 223 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 225 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 226 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type tex1DLayered(texture< T, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 227 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 234 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 238 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 239 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type tex2DLayered(texture< T, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 240 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 246 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 248 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 249 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type tex2DLayered(texture< T, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 250 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 257 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 260 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 261 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type tex3D(texture< T, 3, cudaReadModeElementType> t, float x, float y, float z)
# 262 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 268 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 270 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 271 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type tex3D(texture< T, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 272 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 279 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 282 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 283 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type texCubemap(texture< T, 12, cudaReadModeElementType> t, float x, float y, float z)
# 284 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 290 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 292 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 293 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type texCubemap(texture< T, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 294 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 301 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 304 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 305 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
struct __nv_tex2dgather_ret { };
# 306 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< char> { typedef char4 type; };
# 307 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< signed char> { typedef char4 type; };
# 308 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< char1> { typedef char4 type; };
# 309 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< char2> { typedef char4 type; };
# 310 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< char3> { typedef char4 type; };
# 311 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< char4> { typedef char4 type; };
# 312 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< unsigned char> { typedef uchar4 type; };
# 313 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< uchar1> { typedef uchar4 type; };
# 314 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< uchar2> { typedef uchar4 type; };
# 315 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< uchar3> { typedef uchar4 type; };
# 316 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< uchar4> { typedef uchar4 type; };
# 318 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< short> { typedef short4 type; };
# 319 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< short1> { typedef short4 type; };
# 320 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< short2> { typedef short4 type; };
# 321 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< short3> { typedef short4 type; };
# 322 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< short4> { typedef short4 type; };
# 323 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< unsigned short> { typedef ushort4 type; };
# 324 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< ushort1> { typedef ushort4 type; };
# 325 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< ushort2> { typedef ushort4 type; };
# 326 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< ushort3> { typedef ushort4 type; };
# 327 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< ushort4> { typedef ushort4 type; };
# 329 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< int> { typedef int4 type; };
# 330 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< int1> { typedef int4 type; };
# 331 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< int2> { typedef int4 type; };
# 332 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< int3> { typedef int4 type; };
# 333 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< int4> { typedef int4 type; };
# 334 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< unsigned> { typedef uint4 type; };
# 335 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< uint1> { typedef uint4 type; };
# 336 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< uint2> { typedef uint4 type; };
# 337 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< uint3> { typedef uint4 type; };
# 338 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< uint4> { typedef uint4 type; };
# 340 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< float> { typedef float4 type; };
# 341 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< float1> { typedef float4 type; };
# 342 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< float2> { typedef float4 type; };
# 343 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< float3> { typedef float4 type; };
# 344 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< float4> { typedef float4 type; };
# 346 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 347 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex2dgather_ret< T> ::type tex2Dgather(texture< T, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 348 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 355 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 358 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T> struct __nv_tex2dgather_rmnf_ret { };
# 359 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_rmnf_ret< char> { typedef float4 type; };
# 360 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_rmnf_ret< signed char> { typedef float4 type; };
# 361 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_rmnf_ret< unsigned char> { typedef float4 type; };
# 362 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_rmnf_ret< char1> { typedef float4 type; };
# 363 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_rmnf_ret< uchar1> { typedef float4 type; };
# 364 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_rmnf_ret< char2> { typedef float4 type; };
# 365 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_rmnf_ret< uchar2> { typedef float4 type; };
# 366 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_rmnf_ret< char3> { typedef float4 type; };
# 367 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_rmnf_ret< uchar3> { typedef float4 type; };
# 368 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_rmnf_ret< char4> { typedef float4 type; };
# 369 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_rmnf_ret< uchar4> { typedef float4 type; };
# 370 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_rmnf_ret< signed short> { typedef float4 type; };
# 371 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_rmnf_ret< unsigned short> { typedef float4 type; };
# 372 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_rmnf_ret< short1> { typedef float4 type; };
# 373 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_rmnf_ret< ushort1> { typedef float4 type; };
# 374 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_rmnf_ret< short2> { typedef float4 type; };
# 375 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_rmnf_ret< ushort2> { typedef float4 type; };
# 376 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_rmnf_ret< short3> { typedef float4 type; };
# 377 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_rmnf_ret< ushort3> { typedef float4 type; };
# 378 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_rmnf_ret< short4> { typedef float4 type; };
# 379 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_rmnf_ret< ushort4> { typedef float4 type; };
# 381 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 382 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex2dgather_rmnf_ret< T> ::type tex2Dgather(texture< T, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 383 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 390 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 394 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 395 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type tex1DLod(texture< T, 1, cudaReadModeElementType> t, float x, float level)
# 396 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 402 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 404 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 405 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type tex1DLod(texture< T, 1, cudaReadModeNormalizedFloat> t, float x, float level)
# 406 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
# 413 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 416 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 417 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type tex2DLod(texture< T, 2, cudaReadModeElementType> t, float x, float y, float level)
# 418 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 424 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 426 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 427 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type tex2DLod(texture< T, 2, cudaReadModeNormalizedFloat> t, float x, float y, float level)
# 428 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
# 435 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 438 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 439 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type tex1DLayeredLod(texture< T, 241, cudaReadModeElementType> t, float x, int layer, float level)
# 440 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 446 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 448 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 449 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type tex1DLayeredLod(texture< T, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float level)
# 450 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
# 457 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 460 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 461 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type tex2DLayeredLod(texture< T, 242, cudaReadModeElementType> t, float x, float y, int layer, float level)
# 462 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 468 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 470 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 471 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type tex2DLayeredLod(texture< T, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float level)
# 472 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
# 479 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 482 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 483 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type tex3DLod(texture< T, 3, cudaReadModeElementType> t, float x, float y, float z, float level)
# 484 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 490 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 492 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 493 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type tex3DLod(texture< T, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 494 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 501 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 504 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 505 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type texCubemapLod(texture< T, 12, cudaReadModeElementType> t, float x, float y, float z, float level)
# 506 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 512 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 514 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 515 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type texCubemapLod(texture< T, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float level)
# 516 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
# 523 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 527 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 528 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type texCubemapLayered(texture< T, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 529 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 535 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 537 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 538 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type texCubemapLayered(texture< T, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 539 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 546 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 550 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 551 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type texCubemapLayeredLod(texture< T, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float level)
# 552 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 558 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 560 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 561 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type texCubemapLayeredLod(texture< T, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float level)
# 562 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 569 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 573 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 574 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type texCubemapGrad(texture< T, 12, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 575 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 581 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 583 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 584 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type texCubemapGrad(texture< T, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 585 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 592 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 596 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 597 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type texCubemapLayeredGrad(texture< T, 252, cudaReadModeElementType> t, float x, float y, float z, int layer, float4 dPdx, float4 dPdy)
# 598 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)dPdx;(void)dPdy;
# 604 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 606 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 607 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type texCubemapLayeredGrad(texture< T, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer, float4 dPdx, float4 dPdy)
# 608 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)dPdx;(void)dPdy;
# 615 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 619 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 620 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type tex1DGrad(texture< T, 1, cudaReadModeElementType> t, float x, float dPdx, float dPdy)
# 621 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 627 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 629 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 630 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type tex1DGrad(texture< T, 1, cudaReadModeNormalizedFloat> t, float x, float dPdx, float dPdy)
# 631 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
# 638 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 642 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 643 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type tex2DGrad(texture< T, 2, cudaReadModeElementType> t, float x, float y, float2 dPdx, float2 dPdy)
# 644 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 650 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 652 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 653 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type tex2DGrad(texture< T, 2, cudaReadModeNormalizedFloat> t, float x, float y, float2 dPdx, float2 dPdy)
# 654 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 661 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 664 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 665 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type tex1DLayeredGrad(texture< T, 241, cudaReadModeElementType> t, float x, int layer, float dPdx, float dPdy)
# 666 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 672 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 674 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 675 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type tex1DLayeredGrad(texture< T, 241, cudaReadModeNormalizedFloat> t, float x, int layer, float dPdx, float dPdy)
# 676 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 683 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 686 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 687 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type tex2DLayeredGrad(texture< T, 242, cudaReadModeElementType> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 688 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 694 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 696 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 697 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type tex2DLayeredGrad(texture< T, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 698 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 705 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 708 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 709 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type tex3DGrad(texture< T, 3, cudaReadModeElementType> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 710 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 716 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 718 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
template< class T>
# 719 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type tex3DGrad(texture< T, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z, float4 dPdx, float4 dPdy)
# 720 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 727 "/usr/local/cuda/bin/..//include/texture_fetch_functions.h"
::exit(___);}
# 60 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> struct __nv_itex_trait { };
# 61 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template<> struct __nv_itex_trait< char> { typedef void type; };
# 62 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template<> struct __nv_itex_trait< signed char> { typedef void type; };
# 63 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template<> struct __nv_itex_trait< char1> { typedef void type; };
# 64 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template<> struct __nv_itex_trait< char2> { typedef void type; };
# 65 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template<> struct __nv_itex_trait< char4> { typedef void type; };
# 66 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template<> struct __nv_itex_trait< unsigned char> { typedef void type; };
# 67 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template<> struct __nv_itex_trait< uchar1> { typedef void type; };
# 68 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template<> struct __nv_itex_trait< uchar2> { typedef void type; };
# 69 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template<> struct __nv_itex_trait< uchar4> { typedef void type; };
# 70 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template<> struct __nv_itex_trait< short> { typedef void type; };
# 71 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template<> struct __nv_itex_trait< short1> { typedef void type; };
# 72 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template<> struct __nv_itex_trait< short2> { typedef void type; };
# 73 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template<> struct __nv_itex_trait< short4> { typedef void type; };
# 74 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template<> struct __nv_itex_trait< unsigned short> { typedef void type; };
# 75 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template<> struct __nv_itex_trait< ushort1> { typedef void type; };
# 76 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template<> struct __nv_itex_trait< ushort2> { typedef void type; };
# 77 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template<> struct __nv_itex_trait< ushort4> { typedef void type; };
# 78 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template<> struct __nv_itex_trait< int> { typedef void type; };
# 79 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template<> struct __nv_itex_trait< int1> { typedef void type; };
# 80 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template<> struct __nv_itex_trait< int2> { typedef void type; };
# 81 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template<> struct __nv_itex_trait< int4> { typedef void type; };
# 82 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template<> struct __nv_itex_trait< unsigned> { typedef void type; };
# 83 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template<> struct __nv_itex_trait< uint1> { typedef void type; };
# 84 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template<> struct __nv_itex_trait< uint2> { typedef void type; };
# 85 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template<> struct __nv_itex_trait< uint4> { typedef void type; };
# 96 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template<> struct __nv_itex_trait< float> { typedef void type; };
# 97 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template<> struct __nv_itex_trait< float1> { typedef void type; };
# 98 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template<> struct __nv_itex_trait< float2> { typedef void type; };
# 99 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template<> struct __nv_itex_trait< float4> { typedef void type; };
# 103 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 104 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
tex1Dfetch(T *ptr, cudaTextureObject_t obj, int x)
# 105 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;
# 109 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 111 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 112 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
tex1Dfetch(cudaTextureObject_t texObject, int x)
# 113 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;
# 119 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 121 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 122 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
tex1D(T *ptr, cudaTextureObject_t obj, float x)
# 123 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;
# 127 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 130 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 131 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
tex1D(cudaTextureObject_t texObject, float x)
# 132 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;
# 138 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 141 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 142 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
tex2D(T *ptr, cudaTextureObject_t obj, float x, float y)
# 143 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;
# 147 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 149 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 150 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
tex2D(cudaTextureObject_t texObject, float x, float y)
# 151 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;
# 157 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 159 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 160 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
tex3D(T *ptr, cudaTextureObject_t obj, float x, float y, float z)
# 161 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)z;
# 165 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 167 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 168 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
tex3D(cudaTextureObject_t texObject, float x, float y, float z)
# 169 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;
# 175 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 177 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 178 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
tex1DLayered(T *ptr, cudaTextureObject_t obj, float x, int layer)
# 179 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)layer;
# 183 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 185 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 186 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
tex1DLayered(cudaTextureObject_t texObject, float x, int layer)
# 187 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)layer;
# 193 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 195 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 196 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
tex2DLayered(T *ptr, cudaTextureObject_t obj, float x, float y, int layer)
# 197 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)layer;
# 201 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 203 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 204 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
tex2DLayered(cudaTextureObject_t texObject, float x, float y, int layer)
# 205 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)layer;
# 211 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 214 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 215 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
texCubemap(T *ptr, cudaTextureObject_t obj, float x, float y, float z)
# 216 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)z;
# 220 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 223 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 224 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
texCubemap(cudaTextureObject_t texObject, float x, float y, float z)
# 225 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;
# 231 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 234 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 235 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
texCubemapLayered(T *ptr, cudaTextureObject_t obj, float x, float y, float z, int layer)
# 236 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)z;(void)layer;
# 240 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 242 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 243 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
texCubemapLayered(cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 244 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 250 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 252 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 253 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
tex2Dgather(T *ptr, cudaTextureObject_t obj, float x, float y, int comp = 0)
# 254 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)comp;
# 258 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 260 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 261 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
tex2Dgather(cudaTextureObject_t to, float x, float y, int comp = 0)
# 262 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)to;(void)x;(void)y;(void)comp;
# 268 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 272 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 273 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
tex1DLod(T *ptr, cudaTextureObject_t obj, float x, float level)
# 274 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)level;
# 278 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 280 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 281 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
tex1DLod(cudaTextureObject_t texObject, float x, float level)
# 282 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)level;
# 288 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 291 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 292 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
tex2DLod(T *ptr, cudaTextureObject_t obj, float x, float y, float level)
# 293 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)level;
# 297 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 299 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 300 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
tex2DLod(cudaTextureObject_t texObject, float x, float y, float level)
# 301 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)level;
# 307 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 310 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 311 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
tex3DLod(T *ptr, cudaTextureObject_t obj, float x, float y, float z, float level)
# 312 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)z;(void)level;
# 316 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 318 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 319 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
tex3DLod(cudaTextureObject_t texObject, float x, float y, float z, float level)
# 320 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 326 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 329 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 330 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
tex1DLayeredLod(T *ptr, cudaTextureObject_t obj, float x, int layer, float level)
# 331 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)layer;(void)level;
# 335 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 337 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 338 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
tex1DLayeredLod(cudaTextureObject_t texObject, float x, int layer, float level)
# 339 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)layer;(void)level;
# 345 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 348 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 349 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
tex2DLayeredLod(T *ptr, cudaTextureObject_t obj, float x, float y, int layer, float level)
# 350 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)layer;(void)level;
# 354 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 356 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 357 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
tex2DLayeredLod(cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 358 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 364 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 367 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 368 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
texCubemapLod(T *ptr, cudaTextureObject_t obj, float x, float y, float z, float level)
# 369 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)z;(void)level;
# 373 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 375 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 376 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
texCubemapLod(cudaTextureObject_t texObject, float x, float y, float z, float level)
# 377 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 383 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 386 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 387 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
texCubemapGrad(T *ptr, cudaTextureObject_t obj, float x, float y, float z, float4 dPdx, float4 dPdy)
# 388 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 392 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 394 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 395 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
texCubemapGrad(cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 396 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 402 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 404 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 405 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
texCubemapLayeredLod(T *ptr, cudaTextureObject_t obj, float x, float y, float z, int layer, float level)
# 406 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 410 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 412 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 413 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
texCubemapLayeredLod(cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 414 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 420 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 422 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 423 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
tex1DGrad(T *ptr, cudaTextureObject_t obj, float x, float dPdx, float dPdy)
# 424 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)dPdx;(void)dPdy;
# 428 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 430 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 431 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
tex1DGrad(cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 432 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 438 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 441 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 442 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
tex2DGrad(T *ptr, cudaTextureObject_t obj, float x, float y, float2 dPdx, float2 dPdy)
# 443 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 448 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 450 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 451 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
tex2DGrad(cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 452 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 458 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 461 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 462 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
tex3DGrad(T *ptr, cudaTextureObject_t obj, float x, float y, float z, float4 dPdx, float4 dPdy)
# 463 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 467 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 469 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 470 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
tex3DGrad(cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 471 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 477 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 480 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 481 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
tex1DLayeredGrad(T *ptr, cudaTextureObject_t obj, float x, int layer, float dPdx, float dPdy)
# 482 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 486 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 488 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 489 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
tex1DLayeredGrad(cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 490 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 496 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 499 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 500 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
tex2DLayeredGrad(T *ptr, cudaTextureObject_t obj, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 501 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 505 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 507 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 508 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
tex2DLayeredGrad(cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 509 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 515 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 518 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 519 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
texCubemapLayeredGrad(T *ptr, cudaTextureObject_t obj, float x, float y, float z, int layer, float4 dPdx, float4 dPdy)
# 520 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)z;(void)layer;(void)dPdx;(void)dPdy;
# 524 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 526 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 527 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
texCubemapLayeredGrad(cudaTextureObject_t texObject, float x, float y, float z, int layer, float4 dPdx, float4 dPdy)
# 528 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)dPdx;(void)dPdy;
# 534 "/usr/local/cuda/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 59 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template< class T> struct __nv_isurf_trait { };
# 60 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template<> struct __nv_isurf_trait< char> { typedef void type; };
# 61 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template<> struct __nv_isurf_trait< signed char> { typedef void type; };
# 62 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template<> struct __nv_isurf_trait< char1> { typedef void type; };
# 63 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template<> struct __nv_isurf_trait< unsigned char> { typedef void type; };
# 64 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template<> struct __nv_isurf_trait< uchar1> { typedef void type; };
# 65 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template<> struct __nv_isurf_trait< short> { typedef void type; };
# 66 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template<> struct __nv_isurf_trait< short1> { typedef void type; };
# 67 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template<> struct __nv_isurf_trait< unsigned short> { typedef void type; };
# 68 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template<> struct __nv_isurf_trait< ushort1> { typedef void type; };
# 69 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template<> struct __nv_isurf_trait< int> { typedef void type; };
# 70 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template<> struct __nv_isurf_trait< int1> { typedef void type; };
# 71 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template<> struct __nv_isurf_trait< unsigned> { typedef void type; };
# 72 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template<> struct __nv_isurf_trait< uint1> { typedef void type; };
# 73 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template<> struct __nv_isurf_trait< long long> { typedef void type; };
# 74 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template<> struct __nv_isurf_trait< longlong1> { typedef void type; };
# 75 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template<> struct __nv_isurf_trait< unsigned long long> { typedef void type; };
# 76 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template<> struct __nv_isurf_trait< ulonglong1> { typedef void type; };
# 77 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template<> struct __nv_isurf_trait< float> { typedef void type; };
# 78 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template<> struct __nv_isurf_trait< float1> { typedef void type; };
# 80 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template<> struct __nv_isurf_trait< char2> { typedef void type; };
# 81 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template<> struct __nv_isurf_trait< uchar2> { typedef void type; };
# 82 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template<> struct __nv_isurf_trait< short2> { typedef void type; };
# 83 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template<> struct __nv_isurf_trait< ushort2> { typedef void type; };
# 84 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template<> struct __nv_isurf_trait< int2> { typedef void type; };
# 85 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template<> struct __nv_isurf_trait< uint2> { typedef void type; };
# 86 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template<> struct __nv_isurf_trait< longlong2> { typedef void type; };
# 87 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template<> struct __nv_isurf_trait< ulonglong2> { typedef void type; };
# 88 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template<> struct __nv_isurf_trait< float2> { typedef void type; };
# 90 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template<> struct __nv_isurf_trait< char4> { typedef void type; };
# 91 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template<> struct __nv_isurf_trait< uchar4> { typedef void type; };
# 92 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template<> struct __nv_isurf_trait< short4> { typedef void type; };
# 93 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template<> struct __nv_isurf_trait< ushort4> { typedef void type; };
# 94 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template<> struct __nv_isurf_trait< int4> { typedef void type; };
# 95 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template<> struct __nv_isurf_trait< uint4> { typedef void type; };
# 96 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template<> struct __nv_isurf_trait< float4> { typedef void type; };
# 99 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static typename __nv_isurf_trait< T> ::type
# 100 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
surf1Dread(T *ptr, cudaSurfaceObject_t obj, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 101 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)mode;
# 105 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
::exit(___);}
# 107 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 108 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
surf1Dread(cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 109 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)boundaryMode;
# 115 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
::exit(___);}
# 117 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static typename __nv_isurf_trait< T> ::type
# 118 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
surf2Dread(T *ptr, cudaSurfaceObject_t obj, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 119 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)mode;
# 123 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
::exit(___);}
# 125 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 126 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
surf2Dread(cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 127 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 133 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
::exit(___);}
# 136 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static typename __nv_isurf_trait< T> ::type
# 137 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
surf3Dread(T *ptr, cudaSurfaceObject_t obj, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 138 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)z;(void)mode;
# 142 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
::exit(___);}
# 144 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 145 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
surf3Dread(cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 146 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 152 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
::exit(___);}
# 154 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static typename __nv_isurf_trait< T> ::type
# 155 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
surf1DLayeredread(T *ptr, cudaSurfaceObject_t obj, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 156 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)layer;(void)mode;
# 160 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
::exit(___);}
# 162 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 163 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
surf1DLayeredread(cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 164 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 170 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
::exit(___);}
# 172 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static typename __nv_isurf_trait< T> ::type
# 173 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
surf2DLayeredread(T *ptr, cudaSurfaceObject_t obj, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 174 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)layer;(void)mode;
# 178 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
::exit(___);}
# 180 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 181 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
surf2DLayeredread(cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 182 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 188 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
::exit(___);}
# 190 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static typename __nv_isurf_trait< T> ::type
# 191 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
surfCubemapread(T *ptr, cudaSurfaceObject_t obj, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 192 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)face;(void)mode;
# 196 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
::exit(___);}
# 198 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 199 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
surfCubemapread(cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 200 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 206 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
::exit(___);}
# 208 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static typename __nv_isurf_trait< T> ::type
# 209 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
surfCubemapLayeredread(T *ptr, cudaSurfaceObject_t obj, int x, int y, int layerface, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 210 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)layerface;(void)mode;
# 214 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
::exit(___);}
# 216 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 217 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
surfCubemapLayeredread(cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 218 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 224 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
::exit(___);}
# 226 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static typename __nv_isurf_trait< T> ::type
# 227 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
surf1Dwrite(T val, cudaSurfaceObject_t obj, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 228 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)val;(void)obj;(void)x;(void)mode;
# 232 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
::exit(___);}
# 234 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static typename __nv_isurf_trait< T> ::type
# 235 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
surf2Dwrite(T val, cudaSurfaceObject_t obj, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 236 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)val;(void)obj;(void)x;(void)y;(void)mode;
# 240 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
::exit(___);}
# 242 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static typename __nv_isurf_trait< T> ::type
# 243 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
surf3Dwrite(T val, cudaSurfaceObject_t obj, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 244 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)val;(void)obj;(void)x;(void)y;(void)z;(void)mode;
# 248 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
::exit(___);}
# 250 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static typename __nv_isurf_trait< T> ::type
# 251 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
surf1DLayeredwrite(T val, cudaSurfaceObject_t obj, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 252 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)val;(void)obj;(void)x;(void)layer;(void)mode;
# 256 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
::exit(___);}
# 258 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static typename __nv_isurf_trait< T> ::type
# 259 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
surf2DLayeredwrite(T val, cudaSurfaceObject_t obj, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 260 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)val;(void)obj;(void)x;(void)y;(void)layer;(void)mode;
# 264 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
::exit(___);}
# 266 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static typename __nv_isurf_trait< T> ::type
# 267 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
surfCubemapwrite(T val, cudaSurfaceObject_t obj, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 268 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)val;(void)obj;(void)x;(void)y;(void)face;(void)mode;
# 272 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
::exit(___);}
# 274 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static typename __nv_isurf_trait< T> ::type
# 275 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
surfCubemapLayeredwrite(T val, cudaSurfaceObject_t obj, int x, int y, int layerface, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 276 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)val;(void)obj;(void)x;(void)y;(void)layerface;(void)mode;
# 280 "/usr/local/cuda/bin/..//include/surface_indirect_functions.h"
::exit(___);}
# 3290 "/usr/local/cuda/bin/..//include/crt/device_functions.h"
extern "C" unsigned __cudaPushCallConfiguration(dim3 gridDim, dim3 blockDim, size_t sharedMem = 0, void * stream = 0);
# 68 "/usr/local/cuda/bin/..//include/device_launch_parameters.h"
extern "C" {
# 71 "/usr/local/cuda/bin/..//include/device_launch_parameters.h"
extern const uint3 __device_builtin_variable_threadIdx;
# 72 "/usr/local/cuda/bin/..//include/device_launch_parameters.h"
extern const uint3 __device_builtin_variable_blockIdx;
# 73 "/usr/local/cuda/bin/..//include/device_launch_parameters.h"
extern const dim3 __device_builtin_variable_blockDim;
# 74 "/usr/local/cuda/bin/..//include/device_launch_parameters.h"
extern const dim3 __device_builtin_variable_gridDim;
# 75 "/usr/local/cuda/bin/..//include/device_launch_parameters.h"
extern const int __device_builtin_variable_warpSize;
# 80 "/usr/local/cuda/bin/..//include/device_launch_parameters.h"
}
# 192 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 193 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaLaunchKernel(const T *
# 194 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
func, dim3
# 195 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
gridDim, dim3
# 196 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
blockDim, void **
# 197 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
args, size_t
# 198 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
sharedMem = 0, cudaStream_t
# 199 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
stream = 0)
# 201 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
{
# 202 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return ::cudaLaunchKernel((const void *)func, gridDim, blockDim, args, sharedMem, stream);
# 203 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 254 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 255 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaLaunchCooperativeKernel(const T *
# 256 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
func, dim3
# 257 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
gridDim, dim3
# 258 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
blockDim, void **
# 259 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
args, size_t
# 260 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
sharedMem = 0, cudaStream_t
# 261 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
stream = 0)
# 263 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
{
# 264 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return ::cudaLaunchCooperativeKernel((const void *)func, gridDim, blockDim, args, sharedMem, stream);
# 265 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 294 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 295 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaSetupArgument(T
# 296 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
arg, size_t
# 297 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
offset)
# 299 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
{
# 300 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return ::cudaSetupArgument((const void *)(&arg), sizeof(T), offset);
# 301 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 334 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
static inline cudaError_t cudaEventCreate(cudaEvent_t *
# 335 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
event, unsigned
# 336 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
flags)
# 338 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
{
# 339 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return ::cudaEventCreateWithFlags(event, flags);
# 340 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 399 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
static inline cudaError_t cudaMallocHost(void **
# 400 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
ptr, size_t
# 401 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
size, unsigned
# 402 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
flags)
# 404 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
{
# 405 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return ::cudaHostAlloc(ptr, size, flags);
# 406 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 408 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 409 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaHostAlloc(T **
# 410 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
ptr, size_t
# 411 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
size, unsigned
# 412 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
flags)
# 414 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
{
# 415 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return ::cudaHostAlloc((void **)((void *)ptr), size, flags);
# 416 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 418 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 419 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaHostGetDevicePointer(T **
# 420 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
pDevice, void *
# 421 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
pHost, unsigned
# 422 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
flags)
# 424 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
{
# 425 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return ::cudaHostGetDevicePointer((void **)((void *)pDevice), pHost, flags);
# 426 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 528 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 529 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaMallocManaged(T **
# 530 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
devPtr, size_t
# 531 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
size, unsigned
# 532 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
flags = 1)
# 534 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
{
# 535 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return ::cudaMallocManaged((void **)((void *)devPtr), size, flags);
# 536 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 618 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 619 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaStreamAttachMemAsync(cudaStream_t
# 620 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
stream, T *
# 621 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
devPtr, size_t
# 622 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
length = 0, unsigned
# 623 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
flags = 4)
# 625 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
{
# 626 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return ::cudaStreamAttachMemAsync(stream, (void *)devPtr, length, flags);
# 627 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 629 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
template< class T> inline cudaError_t
# 630 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaMalloc(T **
# 631 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
devPtr, size_t
# 632 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
size)
# 634 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
{
# 635 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return ::cudaMalloc((void **)((void *)devPtr), size);
# 636 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 638 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 639 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaMallocHost(T **
# 640 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
ptr, size_t
# 641 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
size, unsigned
# 642 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
flags = 0)
# 644 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
{
# 645 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return cudaMallocHost((void **)((void *)ptr), size, flags);
# 646 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 648 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 649 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaMallocPitch(T **
# 650 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
devPtr, size_t *
# 651 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
pitch, size_t
# 652 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
width, size_t
# 653 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
height)
# 655 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
{
# 656 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return ::cudaMallocPitch((void **)((void *)devPtr), pitch, width, height);
# 657 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 696 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 697 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaMemcpyToSymbol(const T &
# 698 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
symbol, const void *
# 699 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
src, size_t
# 700 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
count, size_t
# 701 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
offset = 0, cudaMemcpyKind
# 702 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
kind = cudaMemcpyHostToDevice)
# 704 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
{
# 705 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return ::cudaMemcpyToSymbol((const void *)(&symbol), src, count, offset, kind);
# 706 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 750 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 751 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaMemcpyToSymbolAsync(const T &
# 752 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
symbol, const void *
# 753 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
src, size_t
# 754 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
count, size_t
# 755 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
offset = 0, cudaMemcpyKind
# 756 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
kind = cudaMemcpyHostToDevice, cudaStream_t
# 757 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
stream = 0)
# 759 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
{
# 760 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return ::cudaMemcpyToSymbolAsync((const void *)(&symbol), src, count, offset, kind, stream);
# 761 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 798 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 799 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaMemcpyFromSymbol(void *
# 800 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
dst, const T &
# 801 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
symbol, size_t
# 802 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
count, size_t
# 803 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
offset = 0, cudaMemcpyKind
# 804 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
kind = cudaMemcpyDeviceToHost)
# 806 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
{
# 807 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return ::cudaMemcpyFromSymbol(dst, (const void *)(&symbol), count, offset, kind);
# 808 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 852 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 853 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaMemcpyFromSymbolAsync(void *
# 854 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
dst, const T &
# 855 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
symbol, size_t
# 856 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
count, size_t
# 857 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
offset = 0, cudaMemcpyKind
# 858 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
kind = cudaMemcpyDeviceToHost, cudaStream_t
# 859 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
stream = 0)
# 861 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
{
# 862 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return ::cudaMemcpyFromSymbolAsync(dst, (const void *)(&symbol), count, offset, kind, stream);
# 863 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 888 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 889 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaGetSymbolAddress(void **
# 890 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
devPtr, const T &
# 891 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
symbol)
# 893 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
{
# 894 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return ::cudaGetSymbolAddress(devPtr, (const void *)(&symbol));
# 895 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 920 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 921 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaGetSymbolSize(size_t *
# 922 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
size, const T &
# 923 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
symbol)
# 925 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
{
# 926 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return ::cudaGetSymbolSize(size, (const void *)(&symbol));
# 927 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 964 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 965 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaBindTexture(size_t *
# 966 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 967 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
tex, const void *
# 968 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
devPtr, const cudaChannelFormatDesc &
# 969 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
desc, size_t
# 970 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
size = ((2147483647) * 2U) + 1U)
# 972 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
{
# 973 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return ::cudaBindTexture(offset, &tex, devPtr, &desc, size);
# 974 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 1010 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1011 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaBindTexture(size_t *
# 1012 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 1013 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
tex, const void *
# 1014 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
devPtr, size_t
# 1015 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
size = ((2147483647) * 2U) + 1U)
# 1017 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
{
# 1018 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return cudaBindTexture(offset, tex, devPtr, (tex.channelDesc), size);
# 1019 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 1067 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1068 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaBindTexture2D(size_t *
# 1069 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 1070 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
tex, const void *
# 1071 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
devPtr, const cudaChannelFormatDesc &
# 1072 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
desc, size_t
# 1073 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
width, size_t
# 1074 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
height, size_t
# 1075 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
pitch)
# 1077 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
{
# 1078 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return ::cudaBindTexture2D(offset, &tex, devPtr, &desc, width, height, pitch);
# 1079 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 1126 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1127 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaBindTexture2D(size_t *
# 1128 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 1129 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
tex, const void *
# 1130 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
devPtr, size_t
# 1131 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
width, size_t
# 1132 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
height, size_t
# 1133 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
pitch)
# 1135 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
{
# 1136 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return ::cudaBindTexture2D(offset, &tex, devPtr, &(tex.channelDesc), width, height, pitch);
# 1137 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 1169 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1170 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaBindTextureToArray(const texture< T, dim, readMode> &
# 1171 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
tex, cudaArray_const_t
# 1172 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
array, const cudaChannelFormatDesc &
# 1173 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
desc)
# 1175 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
{
# 1176 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return ::cudaBindTextureToArray(&tex, array, &desc);
# 1177 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 1208 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1209 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaBindTextureToArray(const texture< T, dim, readMode> &
# 1210 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
tex, cudaArray_const_t
# 1211 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
array)
# 1213 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
{
# 1214 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaChannelFormatDesc desc;
# 1215 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaError_t err = ::cudaGetChannelDesc(&desc, array);
# 1217 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return (err == (cudaSuccess)) ? cudaBindTextureToArray(tex, array, desc) : err;
# 1218 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 1250 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1251 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaBindTextureToMipmappedArray(const texture< T, dim, readMode> &
# 1252 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
tex, cudaMipmappedArray_const_t
# 1253 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
mipmappedArray, const cudaChannelFormatDesc &
# 1254 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
desc)
# 1256 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
{
# 1257 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return ::cudaBindTextureToMipmappedArray(&tex, mipmappedArray, &desc);
# 1258 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 1289 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1290 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaBindTextureToMipmappedArray(const texture< T, dim, readMode> &
# 1291 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
tex, cudaMipmappedArray_const_t
# 1292 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
mipmappedArray)
# 1294 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
{
# 1295 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaChannelFormatDesc desc;
# 1296 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaArray_t levelArray;
# 1297 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaError_t err = ::cudaGetMipmappedArrayLevel(&levelArray, mipmappedArray, 0);
# 1299 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
if (err != (cudaSuccess)) {
# 1300 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return err;
# 1301 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 1302 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
err = ::cudaGetChannelDesc(&desc, levelArray);
# 1304 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return (err == (cudaSuccess)) ? cudaBindTextureToMipmappedArray(tex, mipmappedArray, desc) : err;
# 1305 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 1332 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1333 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaUnbindTexture(const texture< T, dim, readMode> &
# 1334 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
tex)
# 1336 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
{
# 1337 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return ::cudaUnbindTexture(&tex);
# 1338 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 1368 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1369 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaGetTextureAlignmentOffset(size_t *
# 1370 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 1371 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
tex)
# 1373 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
{
# 1374 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return ::cudaGetTextureAlignmentOffset(offset, &tex);
# 1375 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 1421 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 1422 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaFuncSetCacheConfig(T *
# 1423 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
func, cudaFuncCache
# 1424 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cacheConfig)
# 1426 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
{
# 1427 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return ::cudaFuncSetCacheConfig((const void *)func, cacheConfig);
# 1428 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 1430 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 1431 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaFuncSetSharedMemConfig(T *
# 1432 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
func, cudaSharedMemConfig
# 1433 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
config)
# 1435 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
{
# 1436 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return ::cudaFuncSetSharedMemConfig((const void *)func, config);
# 1437 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 1466 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
template< class T> inline cudaError_t
# 1467 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaOccupancyMaxActiveBlocksPerMultiprocessor(int *
# 1468 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
numBlocks, T
# 1469 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
func, int
# 1470 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
blockSize, size_t
# 1471 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
dynamicSMemSize)
# 1472 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
{
# 1473 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return ::cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(numBlocks, (const void *)func, blockSize, dynamicSMemSize, 0);
# 1474 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 1517 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
template< class T> inline cudaError_t
# 1518 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int *
# 1519 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
numBlocks, T
# 1520 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
func, int
# 1521 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
blockSize, size_t
# 1522 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
dynamicSMemSize, unsigned
# 1523 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
flags)
# 1524 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
{
# 1525 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return ::cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(numBlocks, (const void *)func, blockSize, dynamicSMemSize, flags);
# 1526 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 1531 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
class __cudaOccupancyB2DHelper {
# 1532 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
size_t n;
# 1534 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
public: __cudaOccupancyB2DHelper(size_t n_) : n(n_) { }
# 1535 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
size_t operator()(int)
# 1536 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
{
# 1537 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return n;
# 1538 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 1539 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
};
# 1586 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
template< class UnaryFunction, class T> static inline cudaError_t
# 1587 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags(int *
# 1588 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
minGridSize, int *
# 1589 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
blockSize, T
# 1590 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
func, UnaryFunction
# 1591 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
blockSizeToDynamicSMemSize, int
# 1592 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
blockSizeLimit = 0, unsigned
# 1593 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
flags = 0)
# 1594 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
{
# 1595 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaError_t status;
# 1598 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
int device;
# 1599 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaFuncAttributes attr;
# 1602 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
int maxThreadsPerMultiProcessor;
# 1603 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
int warpSize;
# 1604 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
int devMaxThreadsPerBlock;
# 1605 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
int multiProcessorCount;
# 1606 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
int funcMaxThreadsPerBlock;
# 1607 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
int occupancyLimit;
# 1608 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
int granularity;
# 1611 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
int maxBlockSize = 0;
# 1612 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
int numBlocks = 0;
# 1613 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
int maxOccupancy = 0;
# 1616 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
int blockSizeToTryAligned;
# 1617 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
int blockSizeToTry;
# 1618 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
int blockSizeLimitAligned;
# 1619 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
int occupancyInBlocks;
# 1620 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
int occupancyInThreads;
# 1621 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
size_t dynamicSMemSize;
# 1627 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
if (((!minGridSize) || (!blockSize)) || (!func)) {
# 1628 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return cudaErrorInvalidValue;
# 1629 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 1635 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
status = ::cudaGetDevice(&device);
# 1636 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
if (status != (cudaSuccess)) {
# 1637 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return status;
# 1638 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 1640 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
status = cudaDeviceGetAttribute(&maxThreadsPerMultiProcessor, cudaDevAttrMaxThreadsPerMultiProcessor, device);
# 1644 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
if (status != (cudaSuccess)) {
# 1645 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return status;
# 1646 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 1648 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
status = cudaDeviceGetAttribute(&warpSize, cudaDevAttrWarpSize, device);
# 1652 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
if (status != (cudaSuccess)) {
# 1653 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return status;
# 1654 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 1656 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
status = cudaDeviceGetAttribute(&devMaxThreadsPerBlock, cudaDevAttrMaxThreadsPerBlock, device);
# 1660 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
if (status != (cudaSuccess)) {
# 1661 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return status;
# 1662 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 1664 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
status = cudaDeviceGetAttribute(&multiProcessorCount, cudaDevAttrMultiProcessorCount, device);
# 1668 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
if (status != (cudaSuccess)) {
# 1669 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return status;
# 1670 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 1672 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
status = cudaFuncGetAttributes(&attr, func);
# 1673 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
if (status != (cudaSuccess)) {
# 1674 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return status;
# 1675 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 1677 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
funcMaxThreadsPerBlock = (attr.maxThreadsPerBlock);
# 1683 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
occupancyLimit = maxThreadsPerMultiProcessor;
# 1684 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
granularity = warpSize;
# 1686 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
if (blockSizeLimit == 0) {
# 1687 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
blockSizeLimit = devMaxThreadsPerBlock;
# 1688 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 1690 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
if (devMaxThreadsPerBlock < blockSizeLimit) {
# 1691 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
blockSizeLimit = devMaxThreadsPerBlock;
# 1692 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 1694 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
if (funcMaxThreadsPerBlock < blockSizeLimit) {
# 1695 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
blockSizeLimit = funcMaxThreadsPerBlock;
# 1696 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 1698 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
blockSizeLimitAligned = (((blockSizeLimit + (granularity - 1)) / granularity) * granularity);
# 1700 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
for (blockSizeToTryAligned = blockSizeLimitAligned; blockSizeToTryAligned > 0; blockSizeToTryAligned -= granularity) {
# 1704 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
if (blockSizeLimit < blockSizeToTryAligned) {
# 1705 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
blockSizeToTry = blockSizeLimit;
# 1706 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
} else {
# 1707 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
blockSizeToTry = blockSizeToTryAligned;
# 1708 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 1710 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
dynamicSMemSize = blockSizeToDynamicSMemSize(blockSizeToTry);
# 1712 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
status = cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(&occupancyInBlocks, func, blockSizeToTry, dynamicSMemSize, flags);
# 1719 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
if (status != (cudaSuccess)) {
# 1720 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return status;
# 1721 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 1723 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
occupancyInThreads = (blockSizeToTry * occupancyInBlocks);
# 1725 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
if (occupancyInThreads > maxOccupancy) {
# 1726 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
maxBlockSize = blockSizeToTry;
# 1727 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
numBlocks = occupancyInBlocks;
# 1728 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
maxOccupancy = occupancyInThreads;
# 1729 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 1733 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
if (occupancyLimit == maxOccupancy) {
# 1734 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
break;
# 1735 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 1736 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 1744 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
(*minGridSize) = (numBlocks * multiProcessorCount);
# 1745 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
(*blockSize) = maxBlockSize;
# 1747 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return status;
# 1748 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 1781 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
template< class UnaryFunction, class T> static inline cudaError_t
# 1782 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaOccupancyMaxPotentialBlockSizeVariableSMem(int *
# 1783 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
minGridSize, int *
# 1784 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
blockSize, T
# 1785 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
func, UnaryFunction
# 1786 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
blockSizeToDynamicSMemSize, int
# 1787 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
blockSizeLimit = 0)
# 1788 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
{
# 1789 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags(minGridSize, blockSize, func, blockSizeToDynamicSMemSize, blockSizeLimit, 0);
# 1790 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 1826 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 1827 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaOccupancyMaxPotentialBlockSize(int *
# 1828 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
minGridSize, int *
# 1829 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
blockSize, T
# 1830 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
func, size_t
# 1831 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
dynamicSMemSize = 0, int
# 1832 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
blockSizeLimit = 0)
# 1833 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
{
# 1834 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags(minGridSize, blockSize, func, ((__cudaOccupancyB2DHelper)(dynamicSMemSize)), blockSizeLimit, 0);
# 1835 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 1885 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 1886 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaOccupancyMaxPotentialBlockSizeWithFlags(int *
# 1887 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
minGridSize, int *
# 1888 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
blockSize, T
# 1889 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
func, size_t
# 1890 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
dynamicSMemSize = 0, int
# 1891 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
blockSizeLimit = 0, unsigned
# 1892 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
flags = 0)
# 1893 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
{
# 1894 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags(minGridSize, blockSize, func, ((__cudaOccupancyB2DHelper)(dynamicSMemSize)), blockSizeLimit, flags);
# 1895 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 1938 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 1939 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaLaunch(T *
# 1940 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
func)
# 1942 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
{
# 1943 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return ::cudaLaunch((const void *)func);
# 1944 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 1976 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
template< class T> inline cudaError_t
# 1977 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaFuncGetAttributes(cudaFuncAttributes *
# 1978 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
attr, T *
# 1979 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
entry)
# 1981 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
{
# 1982 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return ::cudaFuncGetAttributes(attr, (const void *)entry);
# 1983 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 2019 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 2020 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaFuncSetAttribute(T *
# 2021 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
entry, cudaFuncAttribute
# 2022 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
attr, int
# 2023 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
value)
# 2025 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
{
# 2026 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return ::cudaFuncSetAttribute((const void *)entry, attr, value);
# 2027 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 2051 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
template< class T, int dim> static inline cudaError_t
# 2052 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaBindSurfaceToArray(const surface< T, dim> &
# 2053 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
surf, cudaArray_const_t
# 2054 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
array, const cudaChannelFormatDesc &
# 2055 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
desc)
# 2057 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
{
# 2058 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return ::cudaBindSurfaceToArray(&surf, array, &desc);
# 2059 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 2082 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
template< class T, int dim> static inline cudaError_t
# 2083 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaBindSurfaceToArray(const surface< T, dim> &
# 2084 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
surf, cudaArray_const_t
# 2085 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
array)
# 2087 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
{
# 2088 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaChannelFormatDesc desc;
# 2089 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
cudaError_t err = ::cudaGetChannelDesc(&desc, array);
# 2091 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
return (err == (cudaSuccess)) ? cudaBindSurfaceToArray(surf, array, desc) : err;
# 2092 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
}
# 2103 "/usr/local/cuda/bin/..//include/cuda_runtime.h"
#pragma GCC diagnostic pop
# 29 "/usr/include/stdio.h" 3
extern "C" {
# 44 "/usr/include/stdio.h" 3
struct _IO_FILE;
# 48 "/usr/include/stdio.h" 3
typedef _IO_FILE FILE;
# 64 "/usr/include/stdio.h" 3
typedef _IO_FILE __FILE;
# 94 "/usr/include/wchar.h" 3
typedef
# 83 "/usr/include/wchar.h" 3
struct {
# 84 "/usr/include/wchar.h" 3
int __count;
# 86 "/usr/include/wchar.h" 3
union {
# 88 "/usr/include/wchar.h" 3
unsigned __wch;
# 92 "/usr/include/wchar.h" 3
char __wchb[4];
# 93 "/usr/include/wchar.h" 3
} __value;
# 94 "/usr/include/wchar.h" 3
} __mbstate_t;
# 25 "/usr/include/_G_config.h" 3
typedef
# 22 "/usr/include/_G_config.h" 3
struct {
# 23 "/usr/include/_G_config.h" 3
__off_t __pos;
# 24 "/usr/include/_G_config.h" 3
__mbstate_t __state;
# 25 "/usr/include/_G_config.h" 3
} _G_fpos_t;
# 30 "/usr/include/_G_config.h" 3
typedef
# 27 "/usr/include/_G_config.h" 3
struct {
# 28 "/usr/include/_G_config.h" 3
__off64_t __pos;
# 29 "/usr/include/_G_config.h" 3
__mbstate_t __state;
# 30 "/usr/include/_G_config.h" 3
} _G_fpos64_t;
# 40 "/usr/lib/gcc/x86_64-redhat-linux/4.8.5/include/stdarg.h" 3
typedef __builtin_va_list __gnuc_va_list;
# 145 "/usr/include/libio.h" 3
struct _IO_jump_t; struct _IO_FILE;
# 155 "/usr/include/libio.h" 3
typedef void _IO_lock_t;
# 161 "/usr/include/libio.h" 3
struct _IO_marker {
# 162 "/usr/include/libio.h" 3
_IO_marker *_next;
# 163 "/usr/include/libio.h" 3
_IO_FILE *_sbuf;
# 167 "/usr/include/libio.h" 3
int _pos;
# 178 "/usr/include/libio.h" 3
};
# 181 "/usr/include/libio.h" 3
enum __codecvt_result {
# 183 "/usr/include/libio.h" 3
__codecvt_ok,
# 184 "/usr/include/libio.h" 3
__codecvt_partial,
# 185 "/usr/include/libio.h" 3
__codecvt_error,
# 186 "/usr/include/libio.h" 3
__codecvt_noconv
# 187 "/usr/include/libio.h" 3
};
# 246 "/usr/include/libio.h" 3
struct _IO_FILE {
# 247 "/usr/include/libio.h" 3
int _flags;
# 252 "/usr/include/libio.h" 3
char *_IO_read_ptr;
# 253 "/usr/include/libio.h" 3
char *_IO_read_end;
# 254 "/usr/include/libio.h" 3
char *_IO_read_base;
# 255 "/usr/include/libio.h" 3
char *_IO_write_base;
# 256 "/usr/include/libio.h" 3
char *_IO_write_ptr;
# 257 "/usr/include/libio.h" 3
char *_IO_write_end;
# 258 "/usr/include/libio.h" 3
char *_IO_buf_base;
# 259 "/usr/include/libio.h" 3
char *_IO_buf_end;
# 261 "/usr/include/libio.h" 3
char *_IO_save_base;
# 262 "/usr/include/libio.h" 3
char *_IO_backup_base;
# 263 "/usr/include/libio.h" 3
char *_IO_save_end;
# 265 "/usr/include/libio.h" 3
_IO_marker *_markers;
# 267 "/usr/include/libio.h" 3
_IO_FILE *_chain;
# 269 "/usr/include/libio.h" 3
int _fileno;
# 273 "/usr/include/libio.h" 3
int _flags2;
# 275 "/usr/include/libio.h" 3
__off_t _old_offset;
# 279 "/usr/include/libio.h" 3
unsigned short _cur_column;
# 280 "/usr/include/libio.h" 3
signed char _vtable_offset;
# 281 "/usr/include/libio.h" 3
char _shortbuf[1];
# 285 "/usr/include/libio.h" 3
_IO_lock_t *_lock;
# 294 "/usr/include/libio.h" 3
__off64_t _offset;
# 303 "/usr/include/libio.h" 3
void *__pad1;
# 304 "/usr/include/libio.h" 3
void *__pad2;
# 305 "/usr/include/libio.h" 3
void *__pad3;
# 306 "/usr/include/libio.h" 3
void *__pad4;
# 307 "/usr/include/libio.h" 3
size_t __pad5;
# 309 "/usr/include/libio.h" 3
int _mode;
# 311 "/usr/include/libio.h" 3
char _unused2[(((15) * sizeof(int)) - ((4) * sizeof(void *))) - sizeof(size_t)];
# 313 "/usr/include/libio.h" 3
};
# 319 "/usr/include/libio.h" 3
struct _IO_FILE_plus;
# 321 "/usr/include/libio.h" 3
extern _IO_FILE_plus _IO_2_1_stdin_;
# 322 "/usr/include/libio.h" 3
extern _IO_FILE_plus _IO_2_1_stdout_;
# 323 "/usr/include/libio.h" 3
extern _IO_FILE_plus _IO_2_1_stderr_;
# 339 "/usr/include/libio.h" 3
typedef __ssize_t __io_read_fn(void * __cookie, char * __buf, size_t __nbytes);
# 347 "/usr/include/libio.h" 3
typedef __ssize_t __io_write_fn(void * __cookie, const char * __buf, size_t __n);
# 356 "/usr/include/libio.h" 3
typedef int __io_seek_fn(void * __cookie, __off64_t * __pos, int __w);
# 359 "/usr/include/libio.h" 3
typedef int __io_close_fn(void * __cookie);
# 364 "/usr/include/libio.h" 3
typedef __io_read_fn cookie_read_function_t;
# 365 "/usr/include/libio.h" 3
typedef __io_write_fn cookie_write_function_t;
# 366 "/usr/include/libio.h" 3
typedef __io_seek_fn cookie_seek_function_t;
# 367 "/usr/include/libio.h" 3
typedef __io_close_fn cookie_close_function_t;
# 376 "/usr/include/libio.h" 3
typedef
# 371 "/usr/include/libio.h" 3
struct {
# 372 "/usr/include/libio.h" 3
__io_read_fn *read;
# 373 "/usr/include/libio.h" 3
__io_write_fn *write;
# 374 "/usr/include/libio.h" 3
__io_seek_fn *seek;
# 375 "/usr/include/libio.h" 3
__io_close_fn *close;
# 376 "/usr/include/libio.h" 3
} _IO_cookie_io_functions_t;
# 377 "/usr/include/libio.h" 3
typedef _IO_cookie_io_functions_t cookie_io_functions_t;
# 379 "/usr/include/libio.h" 3
struct _IO_cookie_file;
# 382 "/usr/include/libio.h" 3
extern void _IO_cookie_init(_IO_cookie_file * __cfile, int __read_write, void * __cookie, _IO_cookie_io_functions_t __fns);
# 388 "/usr/include/libio.h" 3
extern "C" {
# 391 "/usr/include/libio.h" 3
extern int __underflow(_IO_FILE *);
# 392 "/usr/include/libio.h" 3
extern int __uflow(_IO_FILE *);
# 393 "/usr/include/libio.h" 3
extern int __overflow(_IO_FILE *, int);
# 435 "/usr/include/libio.h" 3
extern int _IO_getc(_IO_FILE * __fp);
# 436 "/usr/include/libio.h" 3
extern int _IO_putc(int __c, _IO_FILE * __fp);
# 437 "/usr/include/libio.h" 3
extern int _IO_feof(_IO_FILE * __fp) throw();
# 438 "/usr/include/libio.h" 3
extern int _IO_ferror(_IO_FILE * __fp) throw();
# 440 "/usr/include/libio.h" 3
extern int _IO_peekc_locked(_IO_FILE * __fp);
# 446 "/usr/include/libio.h" 3
extern void _IO_flockfile(_IO_FILE *) throw();
# 447 "/usr/include/libio.h" 3
extern void _IO_funlockfile(_IO_FILE *) throw();
# 448 "/usr/include/libio.h" 3
extern int _IO_ftrylockfile(_IO_FILE *) throw();
# 465 "/usr/include/libio.h" 3
extern int _IO_vfscanf(_IO_FILE *__restrict__, const char *__restrict__, __gnuc_va_list, int *__restrict__);
# 467 "/usr/include/libio.h" 3
extern int _IO_vfprintf(_IO_FILE *__restrict__, const char *__restrict__, __gnuc_va_list);
# 469 "/usr/include/libio.h" 3
extern __ssize_t _IO_padn(_IO_FILE *, int, __ssize_t);
# 470 "/usr/include/libio.h" 3
extern size_t _IO_sgetn(_IO_FILE *, void *, size_t);
# 472 "/usr/include/libio.h" 3
extern __off64_t _IO_seekoff(_IO_FILE *, __off64_t, int, int);
# 473 "/usr/include/libio.h" 3
extern __off64_t _IO_seekpos(_IO_FILE *, __off64_t, int);
# 475 "/usr/include/libio.h" 3
extern void _IO_free_backup_area(_IO_FILE *) throw();
# 527 "/usr/include/libio.h" 3
}
# 79 "/usr/include/stdio.h" 3
typedef __gnuc_va_list va_list;
# 110 "/usr/include/stdio.h" 3
typedef _G_fpos_t fpos_t;
# 116 "/usr/include/stdio.h" 3
typedef _G_fpos64_t fpos64_t;
# 168 "/usr/include/stdio.h" 3
extern _IO_FILE *stdin;
# 169 "/usr/include/stdio.h" 3
extern _IO_FILE *stdout;
# 170 "/usr/include/stdio.h" 3
extern _IO_FILE *stderr;
# 178 "/usr/include/stdio.h" 3
extern int remove(const char * __filename) throw();
# 180 "/usr/include/stdio.h" 3
extern int rename(const char * __old, const char * __new) throw();
# 185 "/usr/include/stdio.h" 3
extern int renameat(int __oldfd, const char * __old, int __newfd, const char * __new) throw();
# 195 "/usr/include/stdio.h" 3
extern FILE *tmpfile();
# 205 "/usr/include/stdio.h" 3
extern FILE *tmpfile64();
# 209 "/usr/include/stdio.h" 3
extern char *tmpnam(char * __s) throw();
# 215 "/usr/include/stdio.h" 3
extern char *tmpnam_r(char * __s) throw();
# 227 "/usr/include/stdio.h" 3
extern char *tempnam(const char * __dir, const char * __pfx) throw()
# 228 "/usr/include/stdio.h" 3
 __attribute((__malloc__));
# 237 "/usr/include/stdio.h" 3
extern int fclose(FILE * __stream);
# 242 "/usr/include/stdio.h" 3
extern int fflush(FILE * __stream);
# 252 "/usr/include/stdio.h" 3
extern int fflush_unlocked(FILE * __stream);
# 262 "/usr/include/stdio.h" 3
extern int fcloseall();
# 272 "/usr/include/stdio.h" 3
extern FILE *fopen(const char *__restrict__ __filename, const char *__restrict__ __modes);
# 278 "/usr/include/stdio.h" 3
extern FILE *freopen(const char *__restrict__ __filename, const char *__restrict__ __modes, FILE *__restrict__ __stream);
# 297 "/usr/include/stdio.h" 3
extern FILE *fopen64(const char *__restrict__ __filename, const char *__restrict__ __modes);
# 299 "/usr/include/stdio.h" 3
extern FILE *freopen64(const char *__restrict__ __filename, const char *__restrict__ __modes, FILE *__restrict__ __stream);
# 306 "/usr/include/stdio.h" 3
extern FILE *fdopen(int __fd, const char * __modes) throw();
# 312 "/usr/include/stdio.h" 3
extern FILE *fopencookie(void *__restrict__ __magic_cookie, const char *__restrict__ __modes, _IO_cookie_io_functions_t __io_funcs) throw();
# 319 "/usr/include/stdio.h" 3
extern FILE *fmemopen(void * __s, size_t __len, const char * __modes) throw();
# 325 "/usr/include/stdio.h" 3
extern FILE *open_memstream(char ** __bufloc, size_t * __sizeloc) throw();
# 332 "/usr/include/stdio.h" 3
extern void setbuf(FILE *__restrict__ __stream, char *__restrict__ __buf) throw();
# 336 "/usr/include/stdio.h" 3
extern int setvbuf(FILE *__restrict__ __stream, char *__restrict__ __buf, int __modes, size_t __n) throw();
# 343 "/usr/include/stdio.h" 3
extern void setbuffer(FILE *__restrict__ __stream, char *__restrict__ __buf, size_t __size) throw();
# 347 "/usr/include/stdio.h" 3
extern void setlinebuf(FILE * __stream) throw();
# 356 "/usr/include/stdio.h" 3
extern int fprintf(FILE *__restrict__ __stream, const char *__restrict__ __format, ...);
# 362 "/usr/include/stdio.h" 3
extern int printf(const char *__restrict__ __format, ...);
# 364 "/usr/include/stdio.h" 3
extern int sprintf(char *__restrict__ __s, const char *__restrict__ __format, ...) throw();
# 371 "/usr/include/stdio.h" 3
extern int vfprintf(FILE *__restrict__ __s, const char *__restrict__ __format, __gnuc_va_list __arg);
# 377 "/usr/include/stdio.h" 3
extern int vprintf(const char *__restrict__ __format, __gnuc_va_list __arg);
# 379 "/usr/include/stdio.h" 3
extern int vsprintf(char *__restrict__ __s, const char *__restrict__ __format, __gnuc_va_list __arg) throw();
# 386 "/usr/include/stdio.h" 3
extern int snprintf(char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format, ...) throw()
# 388 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 3, 4)));
# 390 "/usr/include/stdio.h" 3
extern int vsnprintf(char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format, __gnuc_va_list __arg) throw()
# 392 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 3, 0)));
# 399 "/usr/include/stdio.h" 3
extern int vasprintf(char **__restrict__ __ptr, const char *__restrict__ __f, __gnuc_va_list __arg) throw()
# 401 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 0)));
# 402 "/usr/include/stdio.h" 3
extern int __asprintf(char **__restrict__ __ptr, const char *__restrict__ __fmt, ...) throw()
# 404 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3)));
# 405 "/usr/include/stdio.h" 3
extern int asprintf(char **__restrict__ __ptr, const char *__restrict__ __fmt, ...) throw()
# 407 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3)));
# 412 "/usr/include/stdio.h" 3
extern int vdprintf(int __fd, const char *__restrict__ __fmt, __gnuc_va_list __arg)
# 414 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 0)));
# 415 "/usr/include/stdio.h" 3
extern int dprintf(int __fd, const char *__restrict__ __fmt, ...)
# 416 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3)));
# 425 "/usr/include/stdio.h" 3
extern int fscanf(FILE *__restrict__ __stream, const char *__restrict__ __format, ...);
# 431 "/usr/include/stdio.h" 3
extern int scanf(const char *__restrict__ __format, ...);
# 433 "/usr/include/stdio.h" 3
extern int sscanf(const char *__restrict__ __s, const char *__restrict__ __format, ...) throw();
# 471 "/usr/include/stdio.h" 3
extern int vfscanf(FILE *__restrict__ __s, const char *__restrict__ __format, __gnuc_va_list __arg)
# 473 "/usr/include/stdio.h" 3
 __attribute((__format__(__scanf__, 2, 0)));
# 479 "/usr/include/stdio.h" 3
extern int vscanf(const char *__restrict__ __format, __gnuc_va_list __arg)
# 480 "/usr/include/stdio.h" 3
 __attribute((__format__(__scanf__, 1, 0)));
# 483 "/usr/include/stdio.h" 3
extern int vsscanf(const char *__restrict__ __s, const char *__restrict__ __format, __gnuc_va_list __arg) throw()
# 485 "/usr/include/stdio.h" 3
 __attribute((__format__(__scanf__, 2, 0)));
# 531 "/usr/include/stdio.h" 3
extern int fgetc(FILE * __stream);
# 532 "/usr/include/stdio.h" 3
extern int getc(FILE * __stream);
# 538 "/usr/include/stdio.h" 3
extern int getchar();
# 550 "/usr/include/stdio.h" 3
extern int getc_unlocked(FILE * __stream);
# 551 "/usr/include/stdio.h" 3
extern int getchar_unlocked();
# 561 "/usr/include/stdio.h" 3
extern int fgetc_unlocked(FILE * __stream);
# 573 "/usr/include/stdio.h" 3
extern int fputc(int __c, FILE * __stream);
# 574 "/usr/include/stdio.h" 3
extern int putc(int __c, FILE * __stream);
# 580 "/usr/include/stdio.h" 3
extern int putchar(int __c);
# 594 "/usr/include/stdio.h" 3
extern int fputc_unlocked(int __c, FILE * __stream);
# 602 "/usr/include/stdio.h" 3
extern int putc_unlocked(int __c, FILE * __stream);
# 603 "/usr/include/stdio.h" 3
extern int putchar_unlocked(int __c);
# 610 "/usr/include/stdio.h" 3
extern int getw(FILE * __stream);
# 613 "/usr/include/stdio.h" 3
extern int putw(int __w, FILE * __stream);
# 622 "/usr/include/stdio.h" 3
extern char *fgets(char *__restrict__ __s, int __n, FILE *__restrict__ __stream);
# 638 "/usr/include/stdio.h" 3
extern char *gets(char * __s) __attribute((__deprecated__));
# 649 "/usr/include/stdio.h" 3
extern char *fgets_unlocked(char *__restrict__ __s, int __n, FILE *__restrict__ __stream);
# 665 "/usr/include/stdio.h" 3
extern __ssize_t __getdelim(char **__restrict__ __lineptr, size_t *__restrict__ __n, int __delimiter, FILE *__restrict__ __stream);
# 668 "/usr/include/stdio.h" 3
extern __ssize_t getdelim(char **__restrict__ __lineptr, size_t *__restrict__ __n, int __delimiter, FILE *__restrict__ __stream);
# 678 "/usr/include/stdio.h" 3
extern __ssize_t getline(char **__restrict__ __lineptr, size_t *__restrict__ __n, FILE *__restrict__ __stream);
# 689 "/usr/include/stdio.h" 3
extern int fputs(const char *__restrict__ __s, FILE *__restrict__ __stream);
# 695 "/usr/include/stdio.h" 3
extern int puts(const char * __s);
# 702 "/usr/include/stdio.h" 3
extern int ungetc(int __c, FILE * __stream);
# 709 "/usr/include/stdio.h" 3
extern size_t fread(void *__restrict__ __ptr, size_t __size, size_t __n, FILE *__restrict__ __stream);
# 715 "/usr/include/stdio.h" 3
extern size_t fwrite(const void *__restrict__ __ptr, size_t __size, size_t __n, FILE *__restrict__ __s);
# 726 "/usr/include/stdio.h" 3
extern int fputs_unlocked(const char *__restrict__ __s, FILE *__restrict__ __stream);
# 737 "/usr/include/stdio.h" 3
extern size_t fread_unlocked(void *__restrict__ __ptr, size_t __size, size_t __n, FILE *__restrict__ __stream);
# 739 "/usr/include/stdio.h" 3
extern size_t fwrite_unlocked(const void *__restrict__ __ptr, size_t __size, size_t __n, FILE *__restrict__ __stream);
# 749 "/usr/include/stdio.h" 3
extern int fseek(FILE * __stream, long __off, int __whence);
# 754 "/usr/include/stdio.h" 3
extern long ftell(FILE * __stream);
# 759 "/usr/include/stdio.h" 3
extern void rewind(FILE * __stream);
# 773 "/usr/include/stdio.h" 3
extern int fseeko(FILE * __stream, __off_t __off, int __whence);
# 778 "/usr/include/stdio.h" 3
extern __off_t ftello(FILE * __stream);
# 798 "/usr/include/stdio.h" 3
extern int fgetpos(FILE *__restrict__ __stream, fpos_t *__restrict__ __pos);
# 803 "/usr/include/stdio.h" 3
extern int fsetpos(FILE * __stream, const fpos_t * __pos);
# 818 "/usr/include/stdio.h" 3
extern int fseeko64(FILE * __stream, __off64_t __off, int __whence);
# 819 "/usr/include/stdio.h" 3
extern __off64_t ftello64(FILE * __stream);
# 820 "/usr/include/stdio.h" 3
extern int fgetpos64(FILE *__restrict__ __stream, fpos64_t *__restrict__ __pos);
# 821 "/usr/include/stdio.h" 3
extern int fsetpos64(FILE * __stream, const fpos64_t * __pos);
# 826 "/usr/include/stdio.h" 3
extern void clearerr(FILE * __stream) throw();
# 828 "/usr/include/stdio.h" 3
extern int feof(FILE * __stream) throw();
# 830 "/usr/include/stdio.h" 3
extern int ferror(FILE * __stream) throw();
# 835 "/usr/include/stdio.h" 3
extern void clearerr_unlocked(FILE * __stream) throw();
# 836 "/usr/include/stdio.h" 3
extern int feof_unlocked(FILE * __stream) throw();
# 837 "/usr/include/stdio.h" 3
extern int ferror_unlocked(FILE * __stream) throw();
# 846 "/usr/include/stdio.h" 3
extern void perror(const char * __s);
# 26 "/usr/include/bits/sys_errlist.h" 3
extern int sys_nerr;
# 27 "/usr/include/bits/sys_errlist.h" 3
extern const char *const sys_errlist[];
# 30 "/usr/include/bits/sys_errlist.h" 3
extern int _sys_nerr;
# 31 "/usr/include/bits/sys_errlist.h" 3
extern const char *const _sys_errlist[];
# 858 "/usr/include/stdio.h" 3
extern int fileno(FILE * __stream) throw();
# 863 "/usr/include/stdio.h" 3
extern int fileno_unlocked(FILE * __stream) throw();
# 873 "/usr/include/stdio.h" 3
extern FILE *popen(const char * __command, const char * __modes);
# 879 "/usr/include/stdio.h" 3
extern int pclose(FILE * __stream);
# 885 "/usr/include/stdio.h" 3
extern char *ctermid(char * __s) throw();
# 891 "/usr/include/stdio.h" 3
extern char *cuserid(char * __s);
# 896 "/usr/include/stdio.h" 3
struct obstack;
# 899 "/usr/include/stdio.h" 3
extern int obstack_printf(obstack *__restrict__ __obstack, const char *__restrict__ __format, ...) throw()
# 901 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3)));
# 902 "/usr/include/stdio.h" 3
extern int obstack_vprintf(obstack *__restrict__ __obstack, const char *__restrict__ __format, __gnuc_va_list __args) throw()
# 905 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 0)));
# 913 "/usr/include/stdio.h" 3
extern void flockfile(FILE * __stream) throw();
# 917 "/usr/include/stdio.h" 3
extern int ftrylockfile(FILE * __stream) throw();
# 920 "/usr/include/stdio.h" 3
extern void funlockfile(FILE * __stream) throw();
# 943 "/usr/include/stdio.h" 3
}
# 38 "/usr/include/sys/time.h" 3
extern "C" {
# 56 "/usr/include/sys/time.h" 3
struct timezone {
# 58 "/usr/include/sys/time.h" 3
int tz_minuteswest;
# 59 "/usr/include/sys/time.h" 3
int tz_dsttime;
# 60 "/usr/include/sys/time.h" 3
};
# 62 "/usr/include/sys/time.h" 3
typedef struct timezone *__restrict__ __timezone_ptr_t;
# 72 "/usr/include/sys/time.h" 3
extern int gettimeofday(timeval *__restrict__ __tv, __timezone_ptr_t __tz) throw()
# 73 "/usr/include/sys/time.h" 3
 __attribute((__nonnull__(1)));
# 78 "/usr/include/sys/time.h" 3
extern int settimeofday(const timeval * __tv, const struct timezone * __tz) throw();
# 86 "/usr/include/sys/time.h" 3
extern int adjtime(const timeval * __delta, timeval * __olddelta) throw();
# 92 "/usr/include/sys/time.h" 3
enum __itimer_which {
# 95 "/usr/include/sys/time.h" 3
ITIMER_REAL,
# 98 "/usr/include/sys/time.h" 3
ITIMER_VIRTUAL,
# 102 "/usr/include/sys/time.h" 3
ITIMER_PROF
# 104 "/usr/include/sys/time.h" 3
};
# 108 "/usr/include/sys/time.h" 3
struct itimerval {
# 111 "/usr/include/sys/time.h" 3
timeval it_interval;
# 113 "/usr/include/sys/time.h" 3
timeval it_value;
# 114 "/usr/include/sys/time.h" 3
};
# 121 "/usr/include/sys/time.h" 3
typedef int __itimer_which_t;
# 126 "/usr/include/sys/time.h" 3
extern int getitimer(__itimer_which_t __which, itimerval * __value) throw();
# 132 "/usr/include/sys/time.h" 3
extern int setitimer(__itimer_which_t __which, const itimerval *__restrict__ __new, itimerval *__restrict__ __old) throw();
# 139 "/usr/include/sys/time.h" 3
extern int utimes(const char * __file, const timeval __tvp[2]) throw()
# 140 "/usr/include/sys/time.h" 3
 __attribute((__nonnull__(1)));
# 144 "/usr/include/sys/time.h" 3
extern int lutimes(const char * __file, const timeval __tvp[2]) throw()
# 145 "/usr/include/sys/time.h" 3
 __attribute((__nonnull__(1)));
# 148 "/usr/include/sys/time.h" 3
extern int futimes(int __fd, const timeval __tvp[2]) throw();
# 155 "/usr/include/sys/time.h" 3
extern int futimesat(int __fd, const char * __file, const timeval __tvp[2]) throw();
# 190 "/usr/include/sys/time.h" 3
}
# 42 "/usr/include/c++/4.8.2/bits/functexcept.h" 3
namespace std __attribute((__visibility__("default"))) {
# 48 "/usr/include/c++/4.8.2/bits/functexcept.h" 3
void __throw_bad_exception() __attribute((__noreturn__));
# 52 "/usr/include/c++/4.8.2/bits/functexcept.h" 3
void __throw_bad_alloc() __attribute((__noreturn__));
# 56 "/usr/include/c++/4.8.2/bits/functexcept.h" 3
void __throw_bad_cast() __attribute((__noreturn__));
# 59 "/usr/include/c++/4.8.2/bits/functexcept.h" 3
void __throw_bad_typeid() __attribute((__noreturn__));
# 63 "/usr/include/c++/4.8.2/bits/functexcept.h" 3
void __throw_logic_error(const char *) __attribute((__noreturn__));
# 66 "/usr/include/c++/4.8.2/bits/functexcept.h" 3
void __throw_domain_error(const char *) __attribute((__noreturn__));
# 69 "/usr/include/c++/4.8.2/bits/functexcept.h" 3
void __throw_invalid_argument(const char *) __attribute((__noreturn__));
# 72 "/usr/include/c++/4.8.2/bits/functexcept.h" 3
void __throw_length_error(const char *) __attribute((__noreturn__));
# 75 "/usr/include/c++/4.8.2/bits/functexcept.h" 3
void __throw_out_of_range(const char *) __attribute((__noreturn__));
# 78 "/usr/include/c++/4.8.2/bits/functexcept.h" 3
void __throw_runtime_error(const char *) __attribute((__noreturn__));
# 81 "/usr/include/c++/4.8.2/bits/functexcept.h" 3
void __throw_range_error(const char *) __attribute((__noreturn__));
# 84 "/usr/include/c++/4.8.2/bits/functexcept.h" 3
void __throw_overflow_error(const char *) __attribute((__noreturn__));
# 87 "/usr/include/c++/4.8.2/bits/functexcept.h" 3
void __throw_underflow_error(const char *) __attribute((__noreturn__));
# 91 "/usr/include/c++/4.8.2/bits/functexcept.h" 3
void __throw_ios_failure(const char *) __attribute((__noreturn__));
# 94 "/usr/include/c++/4.8.2/bits/functexcept.h" 3
void __throw_system_error(int) __attribute((__noreturn__));
# 97 "/usr/include/c++/4.8.2/bits/functexcept.h" 3
void __throw_future_error(int) __attribute((__noreturn__));
# 101 "/usr/include/c++/4.8.2/bits/functexcept.h" 3
void __throw_bad_function_call() __attribute((__noreturn__));
# 104 "/usr/include/c++/4.8.2/bits/functexcept.h" 3
}
# 37 "/usr/include/c++/4.8.2/ext/numeric_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 54 "/usr/include/c++/4.8.2/ext/numeric_traits.h" 3
template< class _Value>
# 55 "/usr/include/c++/4.8.2/ext/numeric_traits.h" 3
struct __numeric_traits_integer {
# 58 "/usr/include/c++/4.8.2/ext/numeric_traits.h" 3
static const _Value __min = ((((_Value)(-1)) < 0) ? ((_Value)1) << ((sizeof(_Value) * (8)) - (((_Value)(-1)) < 0)) : ((_Value)0));
# 59 "/usr/include/c++/4.8.2/ext/numeric_traits.h" 3
static const _Value __max = ((((_Value)(-1)) < 0) ? (((((_Value)1) << (((sizeof(_Value) * (8)) - (((_Value)(-1)) < 0)) - (1))) - 1) << 1) + 1 : (~((_Value)0)));
# 63 "/usr/include/c++/4.8.2/ext/numeric_traits.h" 3
static const bool __is_signed = (((_Value)(-1)) < 0);
# 64 "/usr/include/c++/4.8.2/ext/numeric_traits.h" 3
static const int __digits = ((sizeof(_Value) * (8)) - (((_Value)(-1)) < 0));
# 65 "/usr/include/c++/4.8.2/ext/numeric_traits.h" 3
};
# 67 "/usr/include/c++/4.8.2/ext/numeric_traits.h" 3
template< class _Value> const _Value
# 68 "/usr/include/c++/4.8.2/ext/numeric_traits.h" 3
__numeric_traits_integer< _Value> ::__min;
# 70 "/usr/include/c++/4.8.2/ext/numeric_traits.h" 3
template< class _Value> const _Value
# 71 "/usr/include/c++/4.8.2/ext/numeric_traits.h" 3
__numeric_traits_integer< _Value> ::__max;
# 73 "/usr/include/c++/4.8.2/ext/numeric_traits.h" 3
template< class _Value> const bool
# 74 "/usr/include/c++/4.8.2/ext/numeric_traits.h" 3
__numeric_traits_integer< _Value> ::__is_signed;
# 76 "/usr/include/c++/4.8.2/ext/numeric_traits.h" 3
template< class _Value> const int
# 77 "/usr/include/c++/4.8.2/ext/numeric_traits.h" 3
__numeric_traits_integer< _Value> ::__digits;
# 99 "/usr/include/c++/4.8.2/ext/numeric_traits.h" 3
template< class _Value>
# 100 "/usr/include/c++/4.8.2/ext/numeric_traits.h" 3
struct __numeric_traits_floating {
# 103 "/usr/include/c++/4.8.2/ext/numeric_traits.h" 3
static const int __max_digits10 = ((2) + ((((std::__are_same< _Value, float> ::__value) ? 24 : ((std::__are_same< _Value, double> ::__value) ? 53 : 64)) * 643L) / (2136)));
# 106 "/usr/include/c++/4.8.2/ext/numeric_traits.h" 3
static const bool __is_signed = true;
# 107 "/usr/include/c++/4.8.2/ext/numeric_traits.h" 3
static const int __digits10 = ((std::__are_same< _Value, float> ::__value) ? 6 : ((std::__are_same< _Value, double> ::__value) ? 15 : 18));
# 108 "/usr/include/c++/4.8.2/ext/numeric_traits.h" 3
static const int __max_exponent10 = ((std::__are_same< _Value, float> ::__value) ? 38 : ((std::__are_same< _Value, double> ::__value) ? 308 : 4932));
# 109 "/usr/include/c++/4.8.2/ext/numeric_traits.h" 3
};
# 111 "/usr/include/c++/4.8.2/ext/numeric_traits.h" 3
template< class _Value> const int
# 112 "/usr/include/c++/4.8.2/ext/numeric_traits.h" 3
__numeric_traits_floating< _Value> ::__max_digits10;
# 114 "/usr/include/c++/4.8.2/ext/numeric_traits.h" 3
template< class _Value> const bool
# 115 "/usr/include/c++/4.8.2/ext/numeric_traits.h" 3
__numeric_traits_floating< _Value> ::__is_signed;
# 117 "/usr/include/c++/4.8.2/ext/numeric_traits.h" 3
template< class _Value> const int
# 118 "/usr/include/c++/4.8.2/ext/numeric_traits.h" 3
__numeric_traits_floating< _Value> ::__digits10;
# 120 "/usr/include/c++/4.8.2/ext/numeric_traits.h" 3
template< class _Value> const int
# 121 "/usr/include/c++/4.8.2/ext/numeric_traits.h" 3
__numeric_traits_floating< _Value> ::__max_exponent10;
# 123 "/usr/include/c++/4.8.2/ext/numeric_traits.h" 3
template< class _Value>
# 124 "/usr/include/c++/4.8.2/ext/numeric_traits.h" 3
struct __numeric_traits : public __conditional_type< std::__is_integer< _Value> ::__value, __numeric_traits_integer< _Value> , __numeric_traits_floating< _Value> > ::__type {
# 128 "/usr/include/c++/4.8.2/ext/numeric_traits.h" 3
};
# 131 "/usr/include/c++/4.8.2/ext/numeric_traits.h" 3
}
# 36 "/usr/include/c++/4.8.2/bits/move.h" 3
namespace std __attribute((__visibility__("default"))) {
# 45 "/usr/include/c++/4.8.2/bits/move.h" 3
template< class _Tp> inline _Tp *
# 47 "/usr/include/c++/4.8.2/bits/move.h" 3
__addressof(_Tp &__r)
# 48 "/usr/include/c++/4.8.2/bits/move.h" 3
{
# 49 "/usr/include/c++/4.8.2/bits/move.h" 3
return reinterpret_cast< _Tp *>(&(const_cast< char &>(reinterpret_cast< const volatile char &>(__r))));
# 51 "/usr/include/c++/4.8.2/bits/move.h" 3
}
# 54 "/usr/include/c++/4.8.2/bits/move.h" 3
}
# 149 "/usr/include/c++/4.8.2/bits/move.h" 3
namespace std __attribute((__visibility__("default"))) {
# 164 "/usr/include/c++/4.8.2/bits/move.h" 3
template< class _Tp> inline void
# 166 "/usr/include/c++/4.8.2/bits/move.h" 3
swap(_Tp &__a, _Tp &__b)
# 171 "/usr/include/c++/4.8.2/bits/move.h" 3
{
# 175 "/usr/include/c++/4.8.2/bits/move.h" 3
_Tp __tmp = __a;
# 176 "/usr/include/c++/4.8.2/bits/move.h" 3
__a = __b;
# 177 "/usr/include/c++/4.8.2/bits/move.h" 3
__b = __tmp;
# 178 "/usr/include/c++/4.8.2/bits/move.h" 3
}
# 183 "/usr/include/c++/4.8.2/bits/move.h" 3
template< class _Tp, size_t _Nm> inline void
# 185 "/usr/include/c++/4.8.2/bits/move.h" 3
swap(_Tp (&__a)[_Nm], _Tp (&__b)[_Nm])
# 189 "/usr/include/c++/4.8.2/bits/move.h" 3
{
# 190 "/usr/include/c++/4.8.2/bits/move.h" 3
for (size_t __n = (0); __n < _Nm; ++__n) {
# 191 "/usr/include/c++/4.8.2/bits/move.h" 3
swap(__a[__n], __b[__n]); }
# 192 "/usr/include/c++/4.8.2/bits/move.h" 3
}
# 196 "/usr/include/c++/4.8.2/bits/move.h" 3
}
# 65 "/usr/include/c++/4.8.2/bits/stl_pair.h" 3
namespace std __attribute((__visibility__("default"))) {
# 95 "/usr/include/c++/4.8.2/bits/stl_pair.h" 3
template< class _T1, class _T2>
# 96 "/usr/include/c++/4.8.2/bits/stl_pair.h" 3
struct pair {
# 98 "/usr/include/c++/4.8.2/bits/stl_pair.h" 3
typedef _T1 first_type;
# 99 "/usr/include/c++/4.8.2/bits/stl_pair.h" 3
typedef _T2 second_type;
# 101 "/usr/include/c++/4.8.2/bits/stl_pair.h" 3
_T1 first;
# 102 "/usr/include/c++/4.8.2/bits/stl_pair.h" 3
_T2 second;
# 108 "/usr/include/c++/4.8.2/bits/stl_pair.h" 3
pair() : first(), second()
# 109 "/usr/include/c++/4.8.2/bits/stl_pair.h" 3
{ }
# 112 "/usr/include/c++/4.8.2/bits/stl_pair.h" 3
pair(const _T1 &__a, const _T2 &__b) : first(__a), second(__b)
# 113 "/usr/include/c++/4.8.2/bits/stl_pair.h" 3
{ }
# 117 "/usr/include/c++/4.8.2/bits/stl_pair.h" 3
template< class _U1, class _U2>
# 118 "/usr/include/c++/4.8.2/bits/stl_pair.h" 3
pair(const std::pair< _U1, _U2> &__p) : first((__p.first)), second((__p.second))
# 119 "/usr/include/c++/4.8.2/bits/stl_pair.h" 3
{ }
# 209 "/usr/include/c++/4.8.2/bits/stl_pair.h" 3
};
# 212 "/usr/include/c++/4.8.2/bits/stl_pair.h" 3
template< class _T1, class _T2> inline bool
# 214 "/usr/include/c++/4.8.2/bits/stl_pair.h" 3
operator==(const pair< _T1, _T2> &__x, const pair< _T1, _T2> &__y)
# 215 "/usr/include/c++/4.8.2/bits/stl_pair.h" 3
{ return ((__x.first) == (__y.first)) && ((__x.second) == (__y.second)); }
# 218 "/usr/include/c++/4.8.2/bits/stl_pair.h" 3
template< class _T1, class _T2> inline bool
# 220 "/usr/include/c++/4.8.2/bits/stl_pair.h" 3
operator<(const pair< _T1, _T2> &__x, const pair< _T1, _T2> &__y)
# 221 "/usr/include/c++/4.8.2/bits/stl_pair.h" 3
{ return ((__x.first) < (__y.first)) || ((!((__y.first) < (__x.first))) && ((__x.second) < (__y.second)));
# 222 "/usr/include/c++/4.8.2/bits/stl_pair.h" 3
}
# 225 "/usr/include/c++/4.8.2/bits/stl_pair.h" 3
template< class _T1, class _T2> inline bool
# 227 "/usr/include/c++/4.8.2/bits/stl_pair.h" 3
operator!=(const pair< _T1, _T2> &__x, const pair< _T1, _T2> &__y)
# 228 "/usr/include/c++/4.8.2/bits/stl_pair.h" 3
{ return !(__x == __y); }
# 231 "/usr/include/c++/4.8.2/bits/stl_pair.h" 3
template< class _T1, class _T2> inline bool
# 233 "/usr/include/c++/4.8.2/bits/stl_pair.h" 3
operator>(const pair< _T1, _T2> &__x, const pair< _T1, _T2> &__y)
# 234 "/usr/include/c++/4.8.2/bits/stl_pair.h" 3
{ return __y < __x; }
# 237 "/usr/include/c++/4.8.2/bits/stl_pair.h" 3
template< class _T1, class _T2> inline bool
# 239 "/usr/include/c++/4.8.2/bits/stl_pair.h" 3
operator<=(const pair< _T1, _T2> &__x, const pair< _T1, _T2> &__y)
# 240 "/usr/include/c++/4.8.2/bits/stl_pair.h" 3
{ return !(__y < __x); }
# 243 "/usr/include/c++/4.8.2/bits/stl_pair.h" 3
template< class _T1, class _T2> inline bool
# 245 "/usr/include/c++/4.8.2/bits/stl_pair.h" 3
operator>=(const pair< _T1, _T2> &__x, const pair< _T1, _T2> &__y)
# 246 "/usr/include/c++/4.8.2/bits/stl_pair.h" 3
{ return !(__x < __y); }
# 284 "/usr/include/c++/4.8.2/bits/stl_pair.h" 3
template< class _T1, class _T2> inline pair< _T1, _T2>
# 286 "/usr/include/c++/4.8.2/bits/stl_pair.h" 3
make_pair(_T1 __x, _T2 __y)
# 287 "/usr/include/c++/4.8.2/bits/stl_pair.h" 3
{ return pair< _T1, _T2> (__x, __y); }
# 293 "/usr/include/c++/4.8.2/bits/stl_pair.h" 3
}
# 70 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
namespace std __attribute((__visibility__("default"))) {
# 89 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
struct input_iterator_tag { };
# 92 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
struct output_iterator_tag { };
# 95 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
struct forward_iterator_tag : public input_iterator_tag { };
# 99 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
struct bidirectional_iterator_tag : public forward_iterator_tag { };
# 103 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
struct random_access_iterator_tag : public bidirectional_iterator_tag { };
# 116 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
template< class _Category, class _Tp, class _Distance = ptrdiff_t, class
# 117 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
_Pointer = _Tp *, class _Reference = _Tp &>
# 118 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
struct iterator {
# 121 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
typedef _Category iterator_category;
# 123 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
typedef _Tp value_type;
# 125 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
typedef _Distance difference_type;
# 127 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
typedef _Pointer pointer;
# 129 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
typedef _Reference reference;
# 130 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
};
# 162 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
template< class _Iterator>
# 163 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
struct iterator_traits {
# 165 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::iterator_category iterator_category;
# 166 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::value_type value_type;
# 167 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::difference_type difference_type;
# 168 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::pointer pointer;
# 169 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::reference reference;
# 170 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
};
# 174 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
template< class _Tp>
# 175 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
struct iterator_traits< _Tp *> {
# 177 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
typedef random_access_iterator_tag iterator_category;
# 178 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
typedef _Tp value_type;
# 179 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
typedef ptrdiff_t difference_type;
# 180 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
typedef _Tp *pointer;
# 181 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
typedef _Tp &reference;
# 182 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
};
# 185 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
template< class _Tp>
# 186 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
struct iterator_traits< const _Tp *> {
# 188 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
typedef random_access_iterator_tag iterator_category;
# 189 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
typedef _Tp value_type;
# 190 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
typedef ptrdiff_t difference_type;
# 191 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
typedef const _Tp *pointer;
# 192 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
typedef const _Tp &reference;
# 193 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
};
# 199 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
template< class _Iter> inline typename iterator_traits< _Iter> ::iterator_category
# 201 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
__iterator_category(const _Iter &)
# 202 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
{ return typename iterator_traits< _Iter> ::iterator_category(); }
# 208 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
template< class _Iterator, bool _HasBase>
# 209 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
struct _Iter_base {
# 211 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
typedef _Iterator iterator_type;
# 212 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
static iterator_type _S_base(_Iterator __it)
# 213 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
{ return __it; }
# 214 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
};
# 216 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
template< class _Iterator>
# 217 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
struct _Iter_base< _Iterator, true> {
# 219 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::iterator_type iterator_type;
# 220 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
static iterator_type _S_base(_Iterator __it)
# 221 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
{ return (__it.base()); }
# 222 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
};
# 233 "/usr/include/c++/4.8.2/bits/stl_iterator_base_types.h" 3
}
# 46 "/usr/include/c++/4.8.2/debug/debug.h" 3
namespace std {
# 48 "/usr/include/c++/4.8.2/debug/debug.h" 3
namespace __debug { }
# 49 "/usr/include/c++/4.8.2/debug/debug.h" 3
}
# 54 "/usr/include/c++/4.8.2/debug/debug.h" 3
namespace __gnu_debug {
# 56 "/usr/include/c++/4.8.2/debug/debug.h" 3
using namespace std::__debug;
# 57 "/usr/include/c++/4.8.2/debug/debug.h" 3
}
# 67 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
namespace std __attribute((__visibility__("default"))) {
# 71 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
template< class _InputIterator> inline typename iterator_traits< _InputIterator> ::difference_type
# 73 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
__distance(_InputIterator __first, _InputIterator __last, input_iterator_tag)
# 75 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
{
# 79 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
typename iterator_traits< _InputIterator> ::difference_type __n = (0);
# 80 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
while (__first != __last)
# 81 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
{
# 82 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
++__first;
# 83 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
++__n;
# 84 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
}
# 85 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
return __n;
# 86 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
}
# 88 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
template< class _RandomAccessIterator> inline typename iterator_traits< _RandomAccessIterator> ::difference_type
# 90 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
__distance(_RandomAccessIterator __first, _RandomAccessIterator __last, random_access_iterator_tag)
# 92 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
{
# 96 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
return __last - __first;
# 97 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
}
# 112 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
template< class _InputIterator> inline typename iterator_traits< _InputIterator> ::difference_type
# 114 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
distance(_InputIterator __first, _InputIterator __last)
# 115 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
{
# 117 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
return std::__distance(__first, __last, std::__iterator_category(__first));
# 119 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
}
# 121 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
template< class _InputIterator, class _Distance> inline void
# 123 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
__advance(_InputIterator &__i, _Distance __n, input_iterator_tag)
# 124 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
{
# 127 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
;
# 128 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
while (__n--) {
# 129 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
++__i; }
# 130 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
}
# 132 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
template< class _BidirectionalIterator, class _Distance> inline void
# 134 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
__advance(_BidirectionalIterator &__i, _Distance __n, bidirectional_iterator_tag)
# 136 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
{
# 140 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
if (__n > 0) {
# 141 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
while (__n--) {
# 142 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
++__i; } } else {
# 144 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
while (__n++) {
# 145 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
--__i; } }
# 146 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
}
# 148 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
template< class _RandomAccessIterator, class _Distance> inline void
# 150 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
__advance(_RandomAccessIterator &__i, _Distance __n, random_access_iterator_tag)
# 152 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
{
# 156 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
__i += __n;
# 157 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
}
# 171 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
template< class _InputIterator, class _Distance> inline void
# 173 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
advance(_InputIterator &__i, _Distance __n)
# 174 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
{
# 176 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
typename iterator_traits< _InputIterator> ::difference_type __d = __n;
# 177 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
std::__advance(__i, __d, std::__iterator_category(__i));
# 178 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
}
# 203 "/usr/include/c++/4.8.2/bits/stl_iterator_base_funcs.h" 3
}
# 67 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
namespace std __attribute((__visibility__("default"))) {
# 95 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
template< class _Iterator>
# 96 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
class reverse_iterator : public iterator< typename iterator_traits< _Iterator> ::iterator_category, typename iterator_traits< _Iterator> ::value_type, typename iterator_traits< _Iterator> ::difference_type, typename iterator_traits< _Iterator> ::pointer, typename iterator_traits< _Iterator> ::reference> {
# 104 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
protected: _Iterator current;
# 106 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
typedef iterator_traits< _Iterator> __traits_type;
# 109 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
public: typedef _Iterator iterator_type;
# 110 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
typedef typename iterator_traits< _Iterator> ::difference_type difference_type;
# 111 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
typedef typename iterator_traits< _Iterator> ::pointer pointer;
# 112 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
typedef typename iterator_traits< _Iterator> ::reference reference;
# 120 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
reverse_iterator() : current() { }
# 126 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
explicit reverse_iterator(iterator_type __x) : current(__x) { }
# 131 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
reverse_iterator(const reverse_iterator &__x) : current((__x.current))
# 132 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ }
# 138 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
template< class _Iter>
# 139 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
reverse_iterator(const std::reverse_iterator< _Iter> &__x) : current((__x.base()))
# 140 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ }
# 146 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
iterator_type base() const
# 147 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return current; }
# 160 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
reference operator*() const
# 161 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{
# 162 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
_Iterator __tmp = current;
# 163 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
return *(--__tmp);
# 164 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
}
# 172 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
pointer operator->() const
# 173 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return &operator*(); }
# 181 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
reverse_iterator &operator++()
# 182 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{
# 183 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
--(current);
# 184 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
return *this;
# 185 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
}
# 193 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
reverse_iterator operator++(int)
# 194 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{
# 195 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
reverse_iterator __tmp = *this;
# 196 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
--(current);
# 197 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
return __tmp;
# 198 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
}
# 206 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
reverse_iterator &operator--()
# 207 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{
# 208 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
++(current);
# 209 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
return *this;
# 210 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
}
# 218 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
reverse_iterator operator--(int)
# 219 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{
# 220 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
reverse_iterator __tmp = *this;
# 221 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
++(current);
# 222 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
return __tmp;
# 223 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
}
# 231 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
reverse_iterator operator+(difference_type __n) const
# 232 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return ((reverse_iterator)((current) - __n)); }
# 241 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
reverse_iterator &operator+=(difference_type __n)
# 242 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{
# 243 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
(current) -= __n;
# 244 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
return *this;
# 245 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
}
# 253 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
reverse_iterator operator-(difference_type __n) const
# 254 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return ((reverse_iterator)((current) + __n)); }
# 263 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
reverse_iterator &operator-=(difference_type __n)
# 264 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{
# 265 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
(current) += __n;
# 266 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
return *this;
# 267 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
}
# 275 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
reference operator[](difference_type __n) const
# 276 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return *((*this) + __n); }
# 277 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
};
# 289 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
template< class _Iterator> inline bool
# 291 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
operator==(const reverse_iterator< _Iterator> &__x, const reverse_iterator< _Iterator> &
# 292 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
__y)
# 293 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return (__x.base()) == (__y.base()); }
# 295 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
template< class _Iterator> inline bool
# 297 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
operator<(const reverse_iterator< _Iterator> &__x, const reverse_iterator< _Iterator> &
# 298 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
__y)
# 299 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return (__y.base()) < (__x.base()); }
# 301 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
template< class _Iterator> inline bool
# 303 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
operator!=(const reverse_iterator< _Iterator> &__x, const reverse_iterator< _Iterator> &
# 304 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
__y)
# 305 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return !(__x == __y); }
# 307 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
template< class _Iterator> inline bool
# 309 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
operator>(const reverse_iterator< _Iterator> &__x, const reverse_iterator< _Iterator> &
# 310 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
__y)
# 311 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return __y < __x; }
# 313 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
template< class _Iterator> inline bool
# 315 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
operator<=(const reverse_iterator< _Iterator> &__x, const reverse_iterator< _Iterator> &
# 316 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
__y)
# 317 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return !(__y < __x); }
# 319 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
template< class _Iterator> inline bool
# 321 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
operator>=(const reverse_iterator< _Iterator> &__x, const reverse_iterator< _Iterator> &
# 322 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
__y)
# 323 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return !(__x < __y); }
# 325 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
template< class _Iterator> inline typename reverse_iterator< _Iterator> ::difference_type
# 327 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
operator-(const reverse_iterator< _Iterator> &__x, const reverse_iterator< _Iterator> &
# 328 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
__y)
# 329 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return (__y.base()) - (__x.base()); }
# 331 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
template< class _Iterator> inline reverse_iterator< _Iterator>
# 333 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
operator+(typename reverse_iterator< _Iterator> ::difference_type __n, const reverse_iterator< _Iterator> &
# 334 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
__x)
# 335 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return ((reverse_iterator< _Iterator> )((__x.base()) - __n)); }
# 339 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> inline bool
# 341 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
operator==(const reverse_iterator< _IteratorL> &__x, const reverse_iterator< _IteratorR> &
# 342 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
__y)
# 343 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return (__x.base()) == (__y.base()); }
# 345 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> inline bool
# 347 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
operator<(const reverse_iterator< _IteratorL> &__x, const reverse_iterator< _IteratorR> &
# 348 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
__y)
# 349 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return (__y.base()) < (__x.base()); }
# 351 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> inline bool
# 353 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
operator!=(const reverse_iterator< _IteratorL> &__x, const reverse_iterator< _IteratorR> &
# 354 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
__y)
# 355 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return !(__x == __y); }
# 357 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> inline bool
# 359 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
operator>(const reverse_iterator< _IteratorL> &__x, const reverse_iterator< _IteratorR> &
# 360 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
__y)
# 361 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return __y < __x; }
# 363 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> inline bool
# 365 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
operator<=(const reverse_iterator< _IteratorL> &__x, const reverse_iterator< _IteratorR> &
# 366 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
__y)
# 367 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return !(__y < __x); }
# 369 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> inline bool
# 371 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
operator>=(const reverse_iterator< _IteratorL> &__x, const reverse_iterator< _IteratorR> &
# 372 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
__y)
# 373 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return !(__x < __y); }
# 375 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> inline typename reverse_iterator< _IteratorL> ::difference_type
# 384 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
operator-(const reverse_iterator< _IteratorL> &__x, const reverse_iterator< _IteratorR> &
# 385 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
__y)
# 387 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return (__y.base()) - (__x.base()); }
# 401 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
template< class _Container>
# 402 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
class back_insert_iterator : public iterator< output_iterator_tag, void, void, void, void> {
# 406 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
protected: _Container *container;
# 410 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
public: typedef _Container container_type;
# 414 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
explicit back_insert_iterator(_Container &__x) : container((&__x)) { }
# 429 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
back_insert_iterator &operator=(typename _Container::const_reference __value)
# 430 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{
# 431 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
((container)->push_back(__value));
# 432 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
return *this;
# 433 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
}
# 452 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
back_insert_iterator &operator*()
# 453 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return *this; }
# 457 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
back_insert_iterator &operator++()
# 458 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return *this; }
# 462 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
back_insert_iterator operator++(int)
# 463 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return *this; }
# 464 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
};
# 477 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
template< class _Container> inline back_insert_iterator< _Container>
# 479 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
back_inserter(_Container &__x)
# 480 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return ((back_insert_iterator< _Container> )(__x)); }
# 492 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
template< class _Container>
# 493 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
class front_insert_iterator : public iterator< output_iterator_tag, void, void, void, void> {
# 497 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
protected: _Container *container;
# 501 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
public: typedef _Container container_type;
# 504 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
explicit front_insert_iterator(_Container &__x) : container((&__x)) { }
# 519 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
front_insert_iterator &operator=(typename _Container::const_reference __value)
# 520 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{
# 521 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
((container)->push_front(__value));
# 522 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
return *this;
# 523 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
}
# 542 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
front_insert_iterator &operator*()
# 543 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return *this; }
# 547 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
front_insert_iterator &operator++()
# 548 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return *this; }
# 552 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
front_insert_iterator operator++(int)
# 553 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return *this; }
# 554 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
};
# 567 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
template< class _Container> inline front_insert_iterator< _Container>
# 569 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
front_inserter(_Container &__x)
# 570 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return ((front_insert_iterator< _Container> )(__x)); }
# 586 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
template< class _Container>
# 587 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
class insert_iterator : public iterator< output_iterator_tag, void, void, void, void> {
# 591 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
protected: _Container *container;
# 592 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
typename _Container::iterator iter;
# 596 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
public: typedef _Container container_type;
# 602 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
insert_iterator(_Container &__x, typename _Container::iterator __i) : container((&__x)), iter(__i)
# 603 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ }
# 630 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
insert_iterator &operator=(typename _Container::const_reference __value)
# 631 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{
# 632 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
(iter) = ((container)->insert(iter, __value));
# 633 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
++(iter);
# 634 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
return *this;
# 635 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
}
# 656 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
insert_iterator &operator*()
# 657 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return *this; }
# 661 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
insert_iterator &operator++()
# 662 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return *this; }
# 666 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
insert_iterator &operator++(int)
# 667 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return *this; }
# 668 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
};
# 681 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
template< class _Container, class _Iterator> inline insert_iterator< _Container>
# 683 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
inserter(_Container &__x, _Iterator __i)
# 684 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{
# 685 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
return insert_iterator< _Container> (__x, (typename _Container::iterator)__i);
# 687 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
}
# 692 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
}
# 694 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 705 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
using std::iterator_traits;
# 706 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
using std::iterator;
# 707 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
template< class _Iterator, class _Container>
# 708 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
class __normal_iterator {
# 711 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
protected: _Iterator _M_current;
# 713 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
typedef std::iterator_traits< _Iterator> __traits_type;
# 716 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
public: typedef _Iterator iterator_type;
# 717 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
typedef typename std::iterator_traits< _Iterator> ::iterator_category iterator_category;
# 718 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
typedef typename std::iterator_traits< _Iterator> ::value_type value_type;
# 719 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
typedef typename std::iterator_traits< _Iterator> ::difference_type difference_type;
# 720 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
typedef typename std::iterator_traits< _Iterator> ::reference reference;
# 721 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
typedef typename std::iterator_traits< _Iterator> ::pointer pointer;
# 723 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
__normal_iterator() : _M_current(_Iterator()) { }
# 726 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
explicit __normal_iterator(const _Iterator &__i) : _M_current(__i) { }
# 729 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
template< class _Iter>
# 730 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
__normal_iterator(const __gnu_cxx::__normal_iterator< _Iter, typename __enable_if< std::__are_same< _Iter, typename _Container::pointer> ::__value, _Container> ::__type> &
# 733 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
__i) : _M_current((__i.base()))
# 734 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ }
# 738 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
reference operator*() const
# 739 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return *(_M_current); }
# 742 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
pointer operator->() const
# 743 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return _M_current; }
# 746 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
__normal_iterator &operator++()
# 747 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{
# 748 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
++(_M_current);
# 749 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
return *this;
# 750 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
}
# 753 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
__normal_iterator operator++(int)
# 754 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return ((__normal_iterator)((_M_current)++)); }
# 758 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
__normal_iterator &operator--()
# 759 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{
# 760 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
--(_M_current);
# 761 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
return *this;
# 762 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
}
# 765 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
__normal_iterator operator--(int)
# 766 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return ((__normal_iterator)((_M_current)--)); }
# 770 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
reference operator[](const difference_type &__n) const
# 771 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return (_M_current)[__n]; }
# 774 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
__normal_iterator &operator+=(const difference_type &__n)
# 775 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ (_M_current) += __n; return *this; }
# 778 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
__normal_iterator operator+(const difference_type &__n) const
# 779 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return ((__normal_iterator)((_M_current) + __n)); }
# 782 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
__normal_iterator &operator-=(const difference_type &__n)
# 783 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ (_M_current) -= __n; return *this; }
# 786 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
__normal_iterator operator-(const difference_type &__n) const
# 787 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return ((__normal_iterator)((_M_current) - __n)); }
# 790 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
const _Iterator &base() const
# 791 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return _M_current; }
# 792 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
};
# 803 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR, class _Container> inline bool
# 805 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
operator==(const __normal_iterator< _IteratorL, _Container> &__lhs, const __normal_iterator< _IteratorR, _Container> &
# 806 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
__rhs)
# 807 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return (__lhs.base()) == (__rhs.base()); }
# 809 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
template< class _Iterator, class _Container> inline bool
# 811 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
operator==(const __normal_iterator< _Iterator, _Container> &__lhs, const __normal_iterator< _Iterator, _Container> &
# 812 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
__rhs)
# 813 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return (__lhs.base()) == (__rhs.base()); }
# 815 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR, class _Container> inline bool
# 817 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
operator!=(const __normal_iterator< _IteratorL, _Container> &__lhs, const __normal_iterator< _IteratorR, _Container> &
# 818 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
__rhs)
# 819 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return (__lhs.base()) != (__rhs.base()); }
# 821 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
template< class _Iterator, class _Container> inline bool
# 823 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
operator!=(const __normal_iterator< _Iterator, _Container> &__lhs, const __normal_iterator< _Iterator, _Container> &
# 824 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
__rhs)
# 825 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return (__lhs.base()) != (__rhs.base()); }
# 828 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR, class _Container> inline bool
# 830 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
operator<(const __normal_iterator< _IteratorL, _Container> &__lhs, const __normal_iterator< _IteratorR, _Container> &
# 831 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
__rhs)
# 832 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return (__lhs.base()) < (__rhs.base()); }
# 834 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
template< class _Iterator, class _Container> inline bool
# 836 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
operator<(const __normal_iterator< _Iterator, _Container> &__lhs, const __normal_iterator< _Iterator, _Container> &
# 837 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
__rhs)
# 838 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return (__lhs.base()) < (__rhs.base()); }
# 840 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR, class _Container> inline bool
# 842 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
operator>(const __normal_iterator< _IteratorL, _Container> &__lhs, const __normal_iterator< _IteratorR, _Container> &
# 843 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
__rhs)
# 844 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return (__lhs.base()) > (__rhs.base()); }
# 846 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
template< class _Iterator, class _Container> inline bool
# 848 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
operator>(const __normal_iterator< _Iterator, _Container> &__lhs, const __normal_iterator< _Iterator, _Container> &
# 849 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
__rhs)
# 850 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return (__lhs.base()) > (__rhs.base()); }
# 852 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR, class _Container> inline bool
# 854 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
operator<=(const __normal_iterator< _IteratorL, _Container> &__lhs, const __normal_iterator< _IteratorR, _Container> &
# 855 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
__rhs)
# 856 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return (__lhs.base()) <= (__rhs.base()); }
# 858 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
template< class _Iterator, class _Container> inline bool
# 860 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
operator<=(const __normal_iterator< _Iterator, _Container> &__lhs, const __normal_iterator< _Iterator, _Container> &
# 861 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
__rhs)
# 862 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return (__lhs.base()) <= (__rhs.base()); }
# 864 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR, class _Container> inline bool
# 866 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
operator>=(const __normal_iterator< _IteratorL, _Container> &__lhs, const __normal_iterator< _IteratorR, _Container> &
# 867 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
__rhs)
# 868 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return (__lhs.base()) >= (__rhs.base()); }
# 870 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
template< class _Iterator, class _Container> inline bool
# 872 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
operator>=(const __normal_iterator< _Iterator, _Container> &__lhs, const __normal_iterator< _Iterator, _Container> &
# 873 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
__rhs)
# 874 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return (__lhs.base()) >= (__rhs.base()); }
# 880 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR, class _Container> inline typename __normal_iterator< _IteratorL, _Container> ::difference_type
# 889 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
operator-(const __normal_iterator< _IteratorL, _Container> &__lhs, const __normal_iterator< _IteratorR, _Container> &
# 890 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
__rhs)
# 892 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return (__lhs.base()) - (__rhs.base()); }
# 894 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
template< class _Iterator, class _Container> inline typename __normal_iterator< _Iterator, _Container> ::difference_type
# 896 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
operator-(const __normal_iterator< _Iterator, _Container> &__lhs, const __normal_iterator< _Iterator, _Container> &
# 897 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
__rhs)
# 898 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return (__lhs.base()) - (__rhs.base()); }
# 900 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
template< class _Iterator, class _Container> inline __normal_iterator< _Iterator, _Container>
# 902 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
operator+(typename __normal_iterator< _Iterator, _Container> ::difference_type
# 903 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
__n, const __normal_iterator< _Iterator, _Container> &__i)
# 904 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
{ return ((__normal_iterator< _Iterator, _Container> )((__i.base()) + __n)); }
# 907 "/usr/include/c++/4.8.2/bits/stl_iterator.h" 3
}
# 72 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
namespace std __attribute((__visibility__("default"))) {
# 80 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< bool _BoolType>
# 81 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
struct __iter_swap {
# 83 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _ForwardIterator1, class _ForwardIterator2> static void
# 85 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
# 86 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 88 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
typedef typename iterator_traits< _ForwardIterator1> ::value_type _ValueType1;
# 89 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
_ValueType1 __tmp = (*__a);
# 90 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
(*__a) = (*__b);
# 91 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
(*__b) = __tmp;
# 92 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 93 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
};
# 96 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template<> struct __iter_swap< true> {
# 98 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _ForwardIterator1, class _ForwardIterator2> static void
# 100 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
# 101 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 102 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
swap(*__a, *__b);
# 103 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 104 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
};
# 117 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _ForwardIterator1, class _ForwardIterator2> inline void
# 119 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
# 120 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 129 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
typedef typename iterator_traits< _ForwardIterator1> ::value_type _ValueType1;
# 131 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
typedef typename iterator_traits< _ForwardIterator2> ::value_type _ValueType2;
# 139 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
typedef typename iterator_traits< _ForwardIterator1> ::reference _ReferenceType1;
# 141 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
typedef typename iterator_traits< _ForwardIterator2> ::reference _ReferenceType2;
# 142 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
std::__iter_swap< __are_same< typename iterator_traits< _ForwardIterator1> ::value_type, typename iterator_traits< _ForwardIterator2> ::value_type> ::__value && __are_same< typename iterator_traits< _ForwardIterator1> ::value_type &, typename iterator_traits< _ForwardIterator1> ::reference> ::__value && __are_same< typename iterator_traits< _ForwardIterator2> ::value_type &, typename iterator_traits< _ForwardIterator2> ::reference> ::__value> ::iter_swap(__a, __b);
# 149 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 163 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _ForwardIterator1, class _ForwardIterator2> _ForwardIterator2
# 165 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2
# 166 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__first2)
# 167 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 173 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
;
# 175 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
for (; __first1 != __last1; (++__first1), (++__first2)) {
# 176 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
std::iter_swap(__first1, __first2); }
# 177 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return __first2;
# 178 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 191 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _Tp> inline const _Tp &
# 193 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
min(const _Tp &__a, const _Tp &__b)
# 194 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 198 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
if (__b < __a) {
# 199 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return __b; }
# 200 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return __a;
# 201 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 214 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _Tp> inline const _Tp &
# 216 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
max(const _Tp &__a, const _Tp &__b)
# 217 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 221 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
if (__a < __b) {
# 222 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return __b; }
# 223 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return __a;
# 224 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 237 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _Tp, class _Compare> inline const _Tp &
# 239 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
min(const _Tp &__a, const _Tp &__b, _Compare __comp)
# 240 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 242 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
if (__comp(__b, __a)) {
# 243 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return __b; }
# 244 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return __a;
# 245 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 258 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _Tp, class _Compare> inline const _Tp &
# 260 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
max(const _Tp &__a, const _Tp &__b, _Compare __comp)
# 261 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 263 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
if (__comp(__a, __b)) {
# 264 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return __b; }
# 265 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return __a;
# 266 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 270 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _Iterator>
# 271 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
struct _Niter_base : public _Iter_base< _Iterator, __is_normal_iterator< _Iterator> ::__value> {
# 273 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
};
# 275 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _Iterator> inline typename _Niter_base< _Iterator> ::iterator_type
# 277 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__niter_base(_Iterator __it)
# 278 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{ return std::_Niter_base< _Iterator> ::_S_base(__it); }
# 281 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _Iterator>
# 282 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
struct _Miter_base : public _Iter_base< _Iterator, __is_move_iterator< _Iterator> ::__value> {
# 284 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
};
# 286 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _Iterator> inline typename _Miter_base< _Iterator> ::iterator_type
# 288 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__miter_base(_Iterator __it)
# 289 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{ return std::_Miter_base< _Iterator> ::_S_base(__it); }
# 297 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< bool , bool , class >
# 298 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
struct __copy_move {
# 300 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _II, class _OI> static _OI
# 302 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__copy_m(_II __first, _II __last, _OI __result)
# 303 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 304 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
for (; __first != __last; (++__result), (++__first)) {
# 305 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
(*__result) = (*__first); }
# 306 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return __result;
# 307 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 308 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
};
# 326 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template<> struct __copy_move< false, false, random_access_iterator_tag> {
# 328 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _II, class _OI> static _OI
# 330 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__copy_m(_II __first, _II __last, _OI __result)
# 331 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 332 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II> ::difference_type _Distance;
# 333 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
for (_Distance __n = __last - __first; __n > 0; --__n)
# 334 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 335 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
(*__result) = (*__first);
# 336 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
++__first;
# 337 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
++__result;
# 338 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 339 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return __result;
# 340 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 341 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
};
# 363 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< bool _IsMove>
# 364 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
struct __copy_move< _IsMove, true, random_access_iterator_tag> {
# 366 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _Tp> static _Tp *
# 368 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__copy_m(const _Tp *__first, const _Tp *__last, _Tp *__result)
# 369 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 370 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
const ptrdiff_t _Num = __last - __first;
# 371 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
if (_Num) {
# 372 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__builtin_memmove(__result, __first, sizeof(_Tp) * _Num); }
# 373 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return __result + _Num;
# 374 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 375 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
};
# 377 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< bool _IsMove, class _II, class _OI> inline _OI
# 379 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__copy_move_a(_II __first, _II __last, _OI __result)
# 380 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 381 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II> ::value_type _ValueTypeI;
# 382 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
typedef typename iterator_traits< _OI> ::value_type _ValueTypeO;
# 383 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II> ::iterator_category _Category;
# 384 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
const bool __simple = (__is_trivial(_ValueTypeI) && __is_pointer< _II> ::__value && __is_pointer< _OI> ::__value && __are_same< typename iterator_traits< _II> ::value_type, typename iterator_traits< _OI> ::value_type> ::__value);
# 389 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return std::__copy_move< _IsMove, __simple, typename iterator_traits< _II> ::iterator_category> ::__copy_m(__first, __last, __result);
# 391 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 395 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _CharT> struct char_traits;
# 398 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _CharT, class _Traits> class istreambuf_iterator;
# 401 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _CharT, class _Traits> class ostreambuf_iterator;
# 404 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< bool _IsMove, class _CharT> typename __gnu_cxx::__enable_if< __is_char< _CharT> ::__value, ostreambuf_iterator< _CharT, char_traits< _CharT> > > ::__type __copy_move_a2(_CharT *, _CharT *, ostreambuf_iterator< _CharT, char_traits< _CharT> > );
# 410 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< bool _IsMove, class _CharT> typename __gnu_cxx::__enable_if< __is_char< _CharT> ::__value, ostreambuf_iterator< _CharT, char_traits< _CharT> > > ::__type __copy_move_a2(const _CharT *, const _CharT *, ostreambuf_iterator< _CharT, char_traits< _CharT> > );
# 416 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< bool _IsMove, class _CharT> typename __gnu_cxx::__enable_if< __is_char< _CharT> ::__value, _CharT *> ::__type __copy_move_a2(istreambuf_iterator< _CharT, char_traits< _CharT> > , istreambuf_iterator< _CharT, char_traits< _CharT> > , _CharT *);
# 422 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< bool _IsMove, class _II, class _OI> inline _OI
# 424 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__copy_move_a2(_II __first, _II __last, _OI __result)
# 425 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 426 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return (_OI)std::__copy_move_a< _IsMove> (std::__niter_base(__first), std::__niter_base(__last), std::__niter_base(__result));
# 429 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 448 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _II, class _OI> inline _OI
# 450 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
copy(_II __first, _II __last, _OI __result)
# 451 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 456 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
;
# 458 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return std::__copy_move_a2< __is_move_iterator< _II> ::__value> (std::__miter_base(__first), std::__miter_base(__last), __result);
# 461 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 500 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< bool , bool , class >
# 501 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
struct __copy_move_backward {
# 503 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _BI1, class _BI2> static _BI2
# 505 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
# 506 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 507 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
while (__first != __last) {
# 508 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
(*(--__result)) = (*(--__last)); }
# 509 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return __result;
# 510 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 511 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
};
# 529 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template<> struct __copy_move_backward< false, false, random_access_iterator_tag> {
# 531 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _BI1, class _BI2> static _BI2
# 533 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
# 534 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 535 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
typename iterator_traits< _BI1> ::difference_type __n;
# 536 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
for (__n = (__last - __first); __n > 0; --__n) {
# 537 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
(*(--__result)) = (*(--__last)); }
# 538 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return __result;
# 539 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 540 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
};
# 558 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< bool _IsMove>
# 559 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
struct __copy_move_backward< _IsMove, true, random_access_iterator_tag> {
# 561 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _Tp> static _Tp *
# 563 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__copy_move_b(const _Tp *__first, const _Tp *__last, _Tp *__result)
# 564 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 565 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
const ptrdiff_t _Num = __last - __first;
# 566 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
if (_Num) {
# 567 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num); }
# 568 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return __result - _Num;
# 569 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 570 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
};
# 572 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< bool _IsMove, class _BI1, class _BI2> inline _BI2
# 574 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__copy_move_backward_a(_BI1 __first, _BI1 __last, _BI2 __result)
# 575 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 576 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
typedef typename iterator_traits< _BI1> ::value_type _ValueType1;
# 577 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
typedef typename iterator_traits< _BI2> ::value_type _ValueType2;
# 578 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
typedef typename iterator_traits< _BI1> ::iterator_category _Category;
# 579 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
const bool __simple = (__is_trivial(_ValueType1) && __is_pointer< _BI1> ::__value && __is_pointer< _BI2> ::__value && __are_same< typename iterator_traits< _BI1> ::value_type, typename iterator_traits< _BI2> ::value_type> ::__value);
# 584 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return std::__copy_move_backward< _IsMove, __simple, typename iterator_traits< _BI1> ::iterator_category> ::__copy_move_b(__first, __last, __result);
# 588 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 590 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< bool _IsMove, class _BI1, class _BI2> inline _BI2
# 592 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
# 593 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 594 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return (_BI2)std::__copy_move_backward_a< _IsMove> (std::__niter_base(__first), std::__niter_base(__last), std::__niter_base(__result));
# 597 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 617 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _BI1, class _BI2> inline _BI2
# 619 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
# 620 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 627 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
;
# 629 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return std::__copy_move_backward_a2< __is_move_iterator< _BI1> ::__value> (std::__miter_base(__first), std::__miter_base(__last), __result);
# 632 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 675 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _ForwardIterator, class _Tp> inline typename __gnu_cxx::__enable_if< !__is_scalar< _Tp> ::__value, void> ::__type
# 678 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 679 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__value)
# 680 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 681 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
for (; __first != __last; ++__first) {
# 682 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
(*__first) = __value; }
# 683 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 685 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _ForwardIterator, class _Tp> inline typename __gnu_cxx::__enable_if< __is_scalar< _Tp> ::__value, void> ::__type
# 688 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 689 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__value)
# 690 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 691 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
const _Tp __tmp = __value;
# 692 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
for (; __first != __last; ++__first) {
# 693 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
(*__first) = __tmp; }
# 694 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 697 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_byte< _Tp> ::__value, void> ::__type
# 700 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__fill_a(_Tp *__first, _Tp *__last, const _Tp &__c)
# 701 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 702 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
const _Tp __tmp = __c;
# 703 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__builtin_memset(__first, static_cast< unsigned char>(__tmp), __last - __first);
# 705 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 719 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _ForwardIterator, class _Tp> inline void
# 721 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__value)
# 722 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 726 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
;
# 728 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
std::__fill_a(std::__niter_base(__first), std::__niter_base(__last), __value);
# 730 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 732 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _OutputIterator, class _Size, class _Tp> inline typename __gnu_cxx::__enable_if< !__is_scalar< _Tp> ::__value, _OutputIterator> ::__type
# 735 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__fill_n_a(_OutputIterator __first, _Size __n, const _Tp &__value)
# 736 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 737 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
for (__decltype((__n + 0)) __niter = __n; __niter > 0; (--__niter), (++__first)) {
# 739 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
(*__first) = __value; }
# 740 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return __first;
# 741 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 743 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _OutputIterator, class _Size, class _Tp> inline typename __gnu_cxx::__enable_if< __is_scalar< _Tp> ::__value, _OutputIterator> ::__type
# 746 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__fill_n_a(_OutputIterator __first, _Size __n, const _Tp &__value)
# 747 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 748 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
const _Tp __tmp = __value;
# 749 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
for (__decltype((__n + 0)) __niter = __n; __niter > 0; (--__niter), (++__first)) {
# 751 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
(*__first) = __tmp; }
# 752 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return __first;
# 753 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 755 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _Size, class _Tp> inline typename __gnu_cxx::__enable_if< __is_byte< _Tp> ::__value, _Tp *> ::__type
# 758 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__fill_n_a(_Tp *__first, _Size __n, const _Tp &__c)
# 759 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 760 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
std::__fill_a(__first, __first + __n, __c);
# 761 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return __first + __n;
# 762 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 779 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _OI, class _Size, class _Tp> inline _OI
# 781 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
fill_n(_OI __first, _Size __n, const _Tp &__value)
# 782 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 786 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return (_OI)std::__fill_n_a(std::__niter_base(__first), __n, __value);
# 787 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 789 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< bool _BoolType>
# 790 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
struct __equal {
# 792 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _II1, class _II2> static bool
# 794 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
equal(_II1 __first1, _II1 __last1, _II2 __first2)
# 795 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 796 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
for (; __first1 != __last1; (++__first1), (++__first2)) {
# 797 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
if (!((*__first1) == (*__first2))) {
# 798 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return false; } }
# 799 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return true;
# 800 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 801 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
};
# 804 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template<> struct __equal< true> {
# 806 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _Tp> static bool
# 808 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
equal(const _Tp *__first1, const _Tp *__last1, const _Tp *__first2)
# 809 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 810 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return !(__builtin_memcmp(__first1, __first2, sizeof(_Tp) * (__last1 - __first1)));
# 812 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 813 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
};
# 815 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _II1, class _II2> inline bool
# 817 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__equal_aux(_II1 __first1, _II1 __last1, _II2 __first2)
# 818 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 819 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II1> ::value_type _ValueType1;
# 820 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II2> ::value_type _ValueType2;
# 821 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
const bool __simple = ((__is_integer< typename iterator_traits< _II1> ::value_type> ::__value || __is_pointer< typename iterator_traits< _II1> ::value_type> ::__value) && __is_pointer< _II1> ::__value && __is_pointer< _II2> ::__value && __are_same< typename iterator_traits< _II1> ::value_type, typename iterator_traits< _II2> ::value_type> ::__value);
# 827 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return std::__equal< __simple> ::equal(__first1, __last1, __first2);
# 828 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 831 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class , class >
# 832 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
struct __lc_rai {
# 834 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _II1, class _II2> static _II1
# 836 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__newlast1(_II1, _II1 __last1, _II2, _II2)
# 837 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{ return __last1; }
# 839 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _II> static bool
# 841 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__cnd2(_II __first, _II __last)
# 842 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{ return __first != __last; }
# 843 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
};
# 846 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template<> struct __lc_rai< random_access_iterator_tag, random_access_iterator_tag> {
# 848 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _RAI1, class _RAI2> static _RAI1
# 850 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__newlast1(_RAI1 __first1, _RAI1 __last1, _RAI2
# 851 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__first2, _RAI2 __last2)
# 852 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 854 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
const typename iterator_traits< _RAI1> ::difference_type __diff1 = __last1 - __first1;
# 856 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
const typename iterator_traits< _RAI2> ::difference_type __diff2 = __last2 - __first2;
# 857 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return (__diff2 < __diff1) ? __first1 + __diff2 : __last1;
# 858 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 860 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _RAI> static bool
# 862 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__cnd2(_RAI, _RAI)
# 863 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{ return true; }
# 864 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
};
# 866 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< bool _BoolType>
# 867 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
struct __lexicographical_compare {
# 869 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _II1, class _II2> static bool __lc(_II1, _II1, _II2, _II2);
# 871 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
};
# 873 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< bool _BoolType>
# 874 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _II1, class _II2> bool
# 877 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__lexicographical_compare< _BoolType> ::__lc(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2)
# 878 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 879 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II1> ::iterator_category _Category1;
# 880 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II2> ::iterator_category _Category2;
# 881 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
typedef __lc_rai< typename iterator_traits< _II1> ::iterator_category, typename iterator_traits< _II2> ::iterator_category> __rai_type;
# 883 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__last1 = __rai_type::__newlast1(__first1, __last1, __first2, __last2);
# 885 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
for (; (__first1 != __last1) && __rai_type::__cnd2(__first2, __last2); (++__first1), (++__first2))
# 887 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 888 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
if ((*__first1) < (*__first2)) {
# 889 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return true; }
# 890 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
if ((*__first2) < (*__first1)) {
# 891 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return false; }
# 892 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 893 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return (__first1 == __last1) && (__first2 != __last2);
# 894 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 897 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template<> struct __lexicographical_compare< true> {
# 899 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _Tp, class _Up> static bool
# 901 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__lc(const _Tp *__first1, const _Tp *__last1, const _Up *
# 902 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__first2, const _Up *__last2)
# 903 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 904 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
const size_t __len1 = __last1 - __first1;
# 905 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
const size_t __len2 = __last2 - __first2;
# 906 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
const int __result = __builtin_memcmp(__first1, __first2, std::min(__len1, __len2));
# 908 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return (__result != 0) ? __result < 0 : (__len1 < __len2);
# 909 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 910 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
};
# 912 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _II1, class _II2> inline bool
# 914 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__lexicographical_compare_aux(_II1 __first1, _II1 __last1, _II2
# 915 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__first2, _II2 __last2)
# 916 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 917 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II1> ::value_type _ValueType1;
# 918 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II2> ::value_type _ValueType2;
# 919 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
const bool __simple = (__is_byte< typename iterator_traits< _II1> ::value_type> ::__value && __is_byte< typename iterator_traits< _II2> ::value_type> ::__value && (!__gnu_cxx::__numeric_traits< typename iterator_traits< _II1> ::value_type> ::__is_signed) && (!__gnu_cxx::__numeric_traits< typename iterator_traits< _II2> ::value_type> ::__is_signed) && __is_pointer< _II1> ::__value && __is_pointer< _II2> ::__value);
# 926 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return std::__lexicographical_compare< __simple> ::__lc(__first1, __last1, __first2, __last2);
# 928 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 941 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _ForwardIterator, class _Tp> _ForwardIterator
# 943 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
lower_bound(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 944 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__val)
# 945 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 951 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
typedef typename iterator_traits< _ForwardIterator> ::difference_type _DistanceType;
# 956 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
;
# 958 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
_DistanceType __len = std::distance(__first, __last);
# 960 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
while (__len > 0)
# 961 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 962 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
_DistanceType __half = __len >> 1;
# 963 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
_ForwardIterator __middle = __first;
# 964 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
std::advance(__middle, __half);
# 965 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
if ((*__middle) < __val)
# 966 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 967 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__first = __middle;
# 968 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
++__first;
# 969 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__len = ((__len - __half) - 1);
# 970 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
} else {
# 972 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__len = __half; }
# 973 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 974 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return __first;
# 975 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 980 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
inline int __lg(int __n)
# 981 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{ return ((sizeof(int) * (8)) - (1)) - (__builtin_clz(__n)); }
# 984 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
inline unsigned __lg(unsigned __n)
# 985 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{ return ((sizeof(int) * (8)) - (1)) - (__builtin_clz(__n)); }
# 988 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
inline long __lg(long __n)
# 989 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{ return ((sizeof(long) * (8)) - (1)) - (__builtin_clzl(__n)); }
# 992 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
inline unsigned long __lg(unsigned long __n)
# 993 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{ return ((sizeof(long) * (8)) - (1)) - (__builtin_clzl(__n)); }
# 996 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
inline long long __lg(long long __n)
# 997 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{ return ((sizeof(long long) * (8)) - (1)) - (__builtin_clzll(__n)); }
# 1000 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
inline unsigned long long __lg(unsigned long long __n)
# 1001 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{ return ((sizeof(long long) * (8)) - (1)) - (__builtin_clzll(__n)); }
# 1019 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _II1, class _II2> inline bool
# 1021 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
equal(_II1 __first1, _II1 __last1, _II2 __first2)
# 1022 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 1029 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
;
# 1031 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return std::__equal_aux(std::__niter_base(__first1), std::__niter_base(__last1), std::__niter_base(__first2));
# 1034 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 1051 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _IIter1, class _IIter2, class _BinaryPredicate> inline bool
# 1053 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
equal(_IIter1 __first1, _IIter1 __last1, _IIter2
# 1054 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__first2, _BinaryPredicate __binary_pred)
# 1055 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 1059 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
;
# 1061 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
for (; __first1 != __last1; (++__first1), (++__first2)) {
# 1062 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
if (!((bool)__binary_pred(*__first1, *__first2))) {
# 1063 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return false; } }
# 1064 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return true;
# 1065 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 1082 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _II1, class _II2> inline bool
# 1084 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
lexicographical_compare(_II1 __first1, _II1 __last1, _II2
# 1085 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__first2, _II2 __last2)
# 1086 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 1096 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
;
# 1097 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
;
# 1099 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return std::__lexicographical_compare_aux(std::__niter_base(__first1), std::__niter_base(__last1), std::__niter_base(__first2), std::__niter_base(__last2));
# 1103 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 1118 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _II1, class _II2, class _Compare> bool
# 1120 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
lexicographical_compare(_II1 __first1, _II1 __last1, _II2
# 1121 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__first2, _II2 __last2, _Compare __comp)
# 1122 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 1123 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II1> ::iterator_category _Category1;
# 1124 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II2> ::iterator_category _Category2;
# 1125 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
typedef __lc_rai< typename iterator_traits< _II1> ::iterator_category, typename iterator_traits< _II2> ::iterator_category> __rai_type;
# 1130 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
;
# 1131 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
;
# 1133 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__last1 = __rai_type::__newlast1(__first1, __last1, __first2, __last2);
# 1134 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
for (; (__first1 != __last1) && __rai_type::__cnd2(__first2, __last2); (++__first1), (++__first2))
# 1136 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 1137 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
if (__comp(*__first1, *__first2)) {
# 1138 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return true; }
# 1139 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
if (__comp(*__first2, *__first1)) {
# 1140 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return false; }
# 1141 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 1142 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return (__first1 == __last1) && (__first2 != __last2);
# 1143 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 1158 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _InputIterator1, class _InputIterator2> pair< _InputIterator1, _InputIterator2>
# 1160 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
mismatch(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2
# 1161 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__first2)
# 1162 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 1169 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
;
# 1171 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
while ((__first1 != __last1) && ((*__first1) == (*__first2)))
# 1172 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 1173 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
++__first1;
# 1174 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
++__first2;
# 1175 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 1176 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return pair< _InputIterator1, _InputIterator2> (__first1, __first2);
# 1177 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 1195 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
template< class _InputIterator1, class _InputIterator2, class
# 1196 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
_BinaryPredicate> pair< _InputIterator1, _InputIterator2>
# 1198 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
mismatch(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2
# 1199 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
__first2, _BinaryPredicate __binary_pred)
# 1200 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 1204 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
;
# 1206 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
while ((__first1 != __last1) && ((bool)__binary_pred(*__first1, *__first2)))
# 1207 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
{
# 1208 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
++__first1;
# 1209 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
++__first2;
# 1210 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 1211 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
return pair< _InputIterator1, _InputIterator2> (__first1, __first2);
# 1212 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 1215 "/usr/include/c++/4.8.2/bits/stl_algobase.h" 3
}
# 35 "/usr/include/c++/4.8.2/exception" 3
#pragma GCC visibility push ( default )
# 40 "/usr/include/c++/4.8.2/exception" 3
extern "C++" {
# 42 "/usr/include/c++/4.8.2/exception" 3
namespace std {
# 60 "/usr/include/c++/4.8.2/exception" 3
class exception {
# 63 "/usr/include/c++/4.8.2/exception" 3
public: exception() throw() { }
# 64 "/usr/include/c++/4.8.2/exception" 3
virtual ~exception() throw();
# 68 "/usr/include/c++/4.8.2/exception" 3
virtual const char *what() const throw();
# 69 "/usr/include/c++/4.8.2/exception" 3
};
# 73 "/usr/include/c++/4.8.2/exception" 3
class bad_exception : public exception {
# 76 "/usr/include/c++/4.8.2/exception" 3
public: bad_exception() throw() { }
# 80 "/usr/include/c++/4.8.2/exception" 3
virtual ~bad_exception() throw();
# 83 "/usr/include/c++/4.8.2/exception" 3
virtual const char *what() const throw();
# 84 "/usr/include/c++/4.8.2/exception" 3
};
# 87 "/usr/include/c++/4.8.2/exception" 3
typedef void (*terminate_handler)(void);
# 90 "/usr/include/c++/4.8.2/exception" 3
typedef void (*unexpected_handler)(void);
# 93 "/usr/include/c++/4.8.2/exception" 3
terminate_handler set_terminate(terminate_handler) throw();
# 97 "/usr/include/c++/4.8.2/exception" 3
void terminate() throw() __attribute((__noreturn__));
# 100 "/usr/include/c++/4.8.2/exception" 3
unexpected_handler set_unexpected(unexpected_handler) throw();
# 104 "/usr/include/c++/4.8.2/exception" 3
void unexpected() __attribute((__noreturn__));
# 117 "/usr/include/c++/4.8.2/exception" 3
bool uncaught_exception() throw() __attribute((__pure__));
# 120 "/usr/include/c++/4.8.2/exception" 3
}
# 122 "/usr/include/c++/4.8.2/exception" 3
namespace __gnu_cxx {
# 142 "/usr/include/c++/4.8.2/exception" 3
void __verbose_terminate_handler();
# 145 "/usr/include/c++/4.8.2/exception" 3
}
# 147 "/usr/include/c++/4.8.2/exception" 3
}
# 149 "/usr/include/c++/4.8.2/exception" 3
#pragma GCC visibility pop
# 42 "/usr/include/c++/4.8.2/new" 3
#pragma GCC visibility push ( default )
# 44 "/usr/include/c++/4.8.2/new" 3
extern "C++" {
# 46 "/usr/include/c++/4.8.2/new" 3
namespace std {
# 54 "/usr/include/c++/4.8.2/new" 3
class bad_alloc : public exception {
# 57 "/usr/include/c++/4.8.2/new" 3
public: bad_alloc() throw() { }
# 61 "/usr/include/c++/4.8.2/new" 3
virtual ~bad_alloc() throw();
# 64 "/usr/include/c++/4.8.2/new" 3
virtual const char *what() const throw();
# 65 "/usr/include/c++/4.8.2/new" 3
};
# 67 "/usr/include/c++/4.8.2/new" 3
struct nothrow_t { };
# 69 "/usr/include/c++/4.8.2/new" 3
extern const nothrow_t nothrow;
# 73 "/usr/include/c++/4.8.2/new" 3
typedef void (*new_handler)(void);
# 77 "/usr/include/c++/4.8.2/new" 3
new_handler set_new_handler(new_handler) throw();
# 78 "/usr/include/c++/4.8.2/new" 3
}
# 91 "/usr/include/c++/4.8.2/new" 3
void *operator new(std::size_t) throw(std::bad_alloc)
# 92 "/usr/include/c++/4.8.2/new" 3
 __attribute((__externally_visible__));
# 93 "/usr/include/c++/4.8.2/new" 3
void *operator new[](std::size_t) throw(std::bad_alloc)
# 94 "/usr/include/c++/4.8.2/new" 3
 __attribute((__externally_visible__));
# 95 "/usr/include/c++/4.8.2/new" 3
void operator delete(void *) throw()
# 96 "/usr/include/c++/4.8.2/new" 3
 __attribute((__externally_visible__));
# 97 "/usr/include/c++/4.8.2/new" 3
void operator delete[](void *) throw()
# 98 "/usr/include/c++/4.8.2/new" 3
 __attribute((__externally_visible__));
# 99 "/usr/include/c++/4.8.2/new" 3
void *operator new(std::size_t, const std::nothrow_t &) throw()
# 100 "/usr/include/c++/4.8.2/new" 3
 __attribute((__externally_visible__));
# 101 "/usr/include/c++/4.8.2/new" 3
void *operator new[](std::size_t, const std::nothrow_t &) throw()
# 102 "/usr/include/c++/4.8.2/new" 3
 __attribute((__externally_visible__));
# 103 "/usr/include/c++/4.8.2/new" 3
void operator delete(void *, const std::nothrow_t &) throw()
# 104 "/usr/include/c++/4.8.2/new" 3
 __attribute((__externally_visible__));
# 105 "/usr/include/c++/4.8.2/new" 3
void operator delete[](void *, const std::nothrow_t &) throw()
# 106 "/usr/include/c++/4.8.2/new" 3
 __attribute((__externally_visible__));
# 109 "/usr/include/c++/4.8.2/new" 3
inline void *operator new(std::size_t, void *__p) throw()
# 110 "/usr/include/c++/4.8.2/new" 3
{ return __p; }
# 111 "/usr/include/c++/4.8.2/new" 3
inline void *operator new[](std::size_t, void *__p) throw()
# 112 "/usr/include/c++/4.8.2/new" 3
{ return __p; }
# 115 "/usr/include/c++/4.8.2/new" 3
inline void operator delete(void *, void *) throw() { }
# 116 "/usr/include/c++/4.8.2/new" 3
inline void operator delete[](void *, void *) throw() { }
# 118 "/usr/include/c++/4.8.2/new" 3
}
# 120 "/usr/include/c++/4.8.2/new" 3
#pragma GCC visibility pop
# 40 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 44 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
using std::size_t;
# 45 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
using std::ptrdiff_t;
# 57 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
template< class _Tp>
# 58 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
class new_allocator {
# 61 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
public: typedef std::size_t size_type;
# 62 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
typedef std::ptrdiff_t difference_type;
# 63 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
typedef _Tp *pointer;
# 64 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
typedef const _Tp *const_pointer;
# 65 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
typedef _Tp &reference;
# 66 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
typedef const _Tp &const_reference;
# 67 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
typedef _Tp value_type;
# 69 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
template< class _Tp1>
# 70 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
struct rebind {
# 71 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
typedef __gnu_cxx::new_allocator< _Tp1> other; };
# 79 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
new_allocator() throw() { }
# 81 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
new_allocator(const new_allocator &) throw() { }
# 83 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
template< class _Tp1>
# 84 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
new_allocator(const __gnu_cxx::new_allocator< _Tp1> &) throw() { }
# 86 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
~new_allocator() throw() { }
# 89 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
pointer address(reference __x) const
# 90 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
{ return std::__addressof(__x); }
# 93 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
const_pointer address(const_reference __x) const
# 94 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
{ return std::__addressof(__x); }
# 99 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
pointer allocate(size_type __n, const void * = 0)
# 100 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
{
# 101 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
if (__n > this->max_size()) {
# 102 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
std::__throw_bad_alloc(); }
# 104 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
return static_cast< _Tp *>(::operator new(__n * sizeof(_Tp)));
# 105 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
}
# 109 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
void deallocate(pointer __p, size_type)
# 110 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
{ ::operator delete(__p); }
# 113 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
size_type max_size() const throw()
# 114 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
{ return ((std::size_t)(-1)) / sizeof(_Tp); }
# 129 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
void construct(pointer __p, const _Tp &__val)
# 130 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
{ ::new ((void *)__p) (_Tp)(__val); }
# 133 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
void destroy(pointer __p) { (__p->~_Tp()); }
# 135 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
};
# 137 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
template< class _Tp> inline bool
# 139 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
operator==(const new_allocator< _Tp> &, const new_allocator< _Tp> &)
# 140 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
{ return true; }
# 142 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
template< class _Tp> inline bool
# 144 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
operator!=(const new_allocator< _Tp> &, const new_allocator< _Tp> &)
# 145 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
{ return false; }
# 148 "/usr/include/c++/4.8.2/ext/new_allocator.h" 3
}
# 50 "/usr/include/c++/4.8.2/bits/memoryfwd.h" 3
namespace std __attribute((__visibility__("default"))) {
# 63 "/usr/include/c++/4.8.2/bits/memoryfwd.h" 3
template< class > class allocator;
# 67 "/usr/include/c++/4.8.2/bits/memoryfwd.h" 3
template<> class allocator< void> ;
# 70 "/usr/include/c++/4.8.2/bits/memoryfwd.h" 3
template< class , class > struct uses_allocator;
# 76 "/usr/include/c++/4.8.2/bits/memoryfwd.h" 3
}
# 52 "/usr/include/c++/4.8.2/bits/allocator.h" 3
namespace std __attribute((__visibility__("default"))) {
# 63 "/usr/include/c++/4.8.2/bits/allocator.h" 3
template<> class allocator< void> {
# 66 "/usr/include/c++/4.8.2/bits/allocator.h" 3
public: typedef size_t size_type;
# 67 "/usr/include/c++/4.8.2/bits/allocator.h" 3
typedef ptrdiff_t difference_type;
# 68 "/usr/include/c++/4.8.2/bits/allocator.h" 3
typedef void *pointer;
# 69 "/usr/include/c++/4.8.2/bits/allocator.h" 3
typedef const void *const_pointer;
# 70 "/usr/include/c++/4.8.2/bits/allocator.h" 3
typedef void value_type;
# 72 "/usr/include/c++/4.8.2/bits/allocator.h" 3
template< class _Tp1>
# 73 "/usr/include/c++/4.8.2/bits/allocator.h" 3
struct rebind {
# 74 "/usr/include/c++/4.8.2/bits/allocator.h" 3
typedef std::allocator< _Tp1> other; };
# 81 "/usr/include/c++/4.8.2/bits/allocator.h" 3
};
# 91 "/usr/include/c++/4.8.2/bits/allocator.h" 3
template< class _Tp>
# 92 "/usr/include/c++/4.8.2/bits/allocator.h" 3
class allocator : public __gnu_cxx::new_allocator< _Tp> {
# 95 "/usr/include/c++/4.8.2/bits/allocator.h" 3
public: typedef std::size_t size_type;
# 96 "/usr/include/c++/4.8.2/bits/allocator.h" 3
typedef std::ptrdiff_t difference_type;
# 97 "/usr/include/c++/4.8.2/bits/allocator.h" 3
typedef _Tp *pointer;
# 98 "/usr/include/c++/4.8.2/bits/allocator.h" 3
typedef const _Tp *const_pointer;
# 99 "/usr/include/c++/4.8.2/bits/allocator.h" 3
typedef _Tp &reference;
# 100 "/usr/include/c++/4.8.2/bits/allocator.h" 3
typedef const _Tp &const_reference;
# 101 "/usr/include/c++/4.8.2/bits/allocator.h" 3
typedef _Tp value_type;
# 103 "/usr/include/c++/4.8.2/bits/allocator.h" 3
template< class _Tp1>
# 104 "/usr/include/c++/4.8.2/bits/allocator.h" 3
struct rebind {
# 105 "/usr/include/c++/4.8.2/bits/allocator.h" 3
typedef std::allocator< _Tp1> other; };
# 113 "/usr/include/c++/4.8.2/bits/allocator.h" 3
allocator() throw() { }
# 115 "/usr/include/c++/4.8.2/bits/allocator.h" 3
allocator(const allocator &__a) throw() : __gnu_cxx::new_allocator< _Tp> (__a)
# 116 "/usr/include/c++/4.8.2/bits/allocator.h" 3
{ }
# 118 "/usr/include/c++/4.8.2/bits/allocator.h" 3
template< class _Tp1>
# 119 "/usr/include/c++/4.8.2/bits/allocator.h" 3
allocator(const std::allocator< _Tp1> &) throw() { }
# 121 "/usr/include/c++/4.8.2/bits/allocator.h" 3
~allocator() throw() { }
# 124 "/usr/include/c++/4.8.2/bits/allocator.h" 3
};
# 126 "/usr/include/c++/4.8.2/bits/allocator.h" 3
template< class _T1, class _T2> inline bool
# 128 "/usr/include/c++/4.8.2/bits/allocator.h" 3
operator==(const allocator< _T1> &, const allocator< _T2> &)
# 129 "/usr/include/c++/4.8.2/bits/allocator.h" 3
{ return true; }
# 131 "/usr/include/c++/4.8.2/bits/allocator.h" 3
template< class _Tp> inline bool
# 133 "/usr/include/c++/4.8.2/bits/allocator.h" 3
operator==(const allocator< _Tp> &, const allocator< _Tp> &)
# 134 "/usr/include/c++/4.8.2/bits/allocator.h" 3
{ return true; }
# 136 "/usr/include/c++/4.8.2/bits/allocator.h" 3
template< class _T1, class _T2> inline bool
# 138 "/usr/include/c++/4.8.2/bits/allocator.h" 3
operator!=(const allocator< _T1> &, const allocator< _T2> &)
# 139 "/usr/include/c++/4.8.2/bits/allocator.h" 3
{ return false; }
# 141 "/usr/include/c++/4.8.2/bits/allocator.h" 3
template< class _Tp> inline bool
# 143 "/usr/include/c++/4.8.2/bits/allocator.h" 3
operator!=(const allocator< _Tp> &, const allocator< _Tp> &)
# 144 "/usr/include/c++/4.8.2/bits/allocator.h" 3
{ return false; }
# 151 "/usr/include/c++/4.8.2/bits/allocator.h" 3
extern template class allocator< char> ;
# 152 "/usr/include/c++/4.8.2/bits/allocator.h" 3
extern template class allocator< wchar_t> ;
# 159 "/usr/include/c++/4.8.2/bits/allocator.h" 3
template< class _Alloc, bool = __is_empty(_Alloc)>
# 160 "/usr/include/c++/4.8.2/bits/allocator.h" 3
struct __alloc_swap {
# 161 "/usr/include/c++/4.8.2/bits/allocator.h" 3
static void _S_do_it(_Alloc &, _Alloc &) { } };
# 163 "/usr/include/c++/4.8.2/bits/allocator.h" 3
template< class _Alloc>
# 164 "/usr/include/c++/4.8.2/bits/allocator.h" 3
struct __alloc_swap< _Alloc, false> {
# 167 "/usr/include/c++/4.8.2/bits/allocator.h" 3
static void _S_do_it(_Alloc &__one, _Alloc &__two)
# 168 "/usr/include/c++/4.8.2/bits/allocator.h" 3
{
# 170 "/usr/include/c++/4.8.2/bits/allocator.h" 3
if (__one != __two) {
# 171 "/usr/include/c++/4.8.2/bits/allocator.h" 3
swap(__one, __two); }
# 172 "/usr/include/c++/4.8.2/bits/allocator.h" 3
}
# 173 "/usr/include/c++/4.8.2/bits/allocator.h" 3
};
# 176 "/usr/include/c++/4.8.2/bits/allocator.h" 3
template< class _Alloc, bool = __is_empty(_Alloc)>
# 177 "/usr/include/c++/4.8.2/bits/allocator.h" 3
struct __alloc_neq {
# 180 "/usr/include/c++/4.8.2/bits/allocator.h" 3
static bool _S_do_it(const _Alloc &, const _Alloc &)
# 181 "/usr/include/c++/4.8.2/bits/allocator.h" 3
{ return false; }
# 182 "/usr/include/c++/4.8.2/bits/allocator.h" 3
};
# 184 "/usr/include/c++/4.8.2/bits/allocator.h" 3
template< class _Alloc>
# 185 "/usr/include/c++/4.8.2/bits/allocator.h" 3
struct __alloc_neq< _Alloc, false> {
# 188 "/usr/include/c++/4.8.2/bits/allocator.h" 3
static bool _S_do_it(const _Alloc &__one, const _Alloc &__two)
# 189 "/usr/include/c++/4.8.2/bits/allocator.h" 3
{ return __one != __two; }
# 190 "/usr/include/c++/4.8.2/bits/allocator.h" 3
};
# 219 "/usr/include/c++/4.8.2/bits/allocator.h" 3
}
# 41 "/usr/include/c++/4.8.2/ext/alloc_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 120 "/usr/include/c++/4.8.2/ext/alloc_traits.h" 3
template< class _Alloc>
# 121 "/usr/include/c++/4.8.2/ext/alloc_traits.h" 3
struct __alloc_traits {
# 126 "/usr/include/c++/4.8.2/ext/alloc_traits.h" 3
typedef _Alloc allocator_type;
# 199 "/usr/include/c++/4.8.2/ext/alloc_traits.h" 3
typedef typename _Alloc::pointer pointer;
# 200 "/usr/include/c++/4.8.2/ext/alloc_traits.h" 3
typedef typename _Alloc::const_pointer const_pointer;
# 201 "/usr/include/c++/4.8.2/ext/alloc_traits.h" 3
typedef typename _Alloc::value_type value_type;
# 202 "/usr/include/c++/4.8.2/ext/alloc_traits.h" 3
typedef typename _Alloc::reference reference;
# 203 "/usr/include/c++/4.8.2/ext/alloc_traits.h" 3
typedef typename _Alloc::const_reference const_reference;
# 204 "/usr/include/c++/4.8.2/ext/alloc_traits.h" 3
typedef typename _Alloc::size_type size_type;
# 205 "/usr/include/c++/4.8.2/ext/alloc_traits.h" 3
typedef typename _Alloc::difference_type difference_type;
# 208 "/usr/include/c++/4.8.2/ext/alloc_traits.h" 3
static pointer allocate(_Alloc &__a, size_type __n)
# 209 "/usr/include/c++/4.8.2/ext/alloc_traits.h" 3
{ return (__a.allocate(__n)); }
# 211 "/usr/include/c++/4.8.2/ext/alloc_traits.h" 3
static void deallocate(_Alloc &__a, pointer __p, size_type __n)
# 212 "/usr/include/c++/4.8.2/ext/alloc_traits.h" 3
{ (__a.deallocate(__p, __n)); }
# 214 "/usr/include/c++/4.8.2/ext/alloc_traits.h" 3
template< class _Tp> static void
# 215 "/usr/include/c++/4.8.2/ext/alloc_traits.h" 3
construct(_Alloc &__a, pointer __p, const _Tp &__arg)
# 216 "/usr/include/c++/4.8.2/ext/alloc_traits.h" 3
{ (__a.construct(__p, __arg)); }
# 218 "/usr/include/c++/4.8.2/ext/alloc_traits.h" 3
static void destroy(_Alloc &__a, pointer __p)
# 219 "/usr/include/c++/4.8.2/ext/alloc_traits.h" 3
{ (__a.destroy(__p)); }
# 221 "/usr/include/c++/4.8.2/ext/alloc_traits.h" 3
static size_type max_size(const _Alloc &__a)
# 222 "/usr/include/c++/4.8.2/ext/alloc_traits.h" 3
{ return (__a.max_size()); }
# 224 "/usr/include/c++/4.8.2/ext/alloc_traits.h" 3
static const _Alloc &_S_select_on_copy(const _Alloc &__a) { return __a; }
# 226 "/usr/include/c++/4.8.2/ext/alloc_traits.h" 3
static void _S_on_swap(_Alloc &__a, _Alloc &__b)
# 227 "/usr/include/c++/4.8.2/ext/alloc_traits.h" 3
{
# 230 "/usr/include/c++/4.8.2/ext/alloc_traits.h" 3
std::__alloc_swap< _Alloc> ::_S_do_it(__a, __b);
# 231 "/usr/include/c++/4.8.2/ext/alloc_traits.h" 3
}
# 233 "/usr/include/c++/4.8.2/ext/alloc_traits.h" 3
template< class _Tp>
# 234 "/usr/include/c++/4.8.2/ext/alloc_traits.h" 3
struct rebind {
# 235 "/usr/include/c++/4.8.2/ext/alloc_traits.h" 3
typedef typename _Alloc::template rebind< _Tp> ::other other; };
# 237 "/usr/include/c++/4.8.2/ext/alloc_traits.h" 3
};
# 240 "/usr/include/c++/4.8.2/ext/alloc_traits.h" 3
}
# 63 "/usr/include/c++/4.8.2/bits/stl_construct.h" 3
namespace std __attribute((__visibility__("default"))) {
# 77 "/usr/include/c++/4.8.2/bits/stl_construct.h" 3
template< class _T1, class _T2> inline void
# 79 "/usr/include/c++/4.8.2/bits/stl_construct.h" 3
_Construct(_T1 *__p, const _T2 &__value)
# 80 "/usr/include/c++/4.8.2/bits/stl_construct.h" 3
{
# 83 "/usr/include/c++/4.8.2/bits/stl_construct.h" 3
::new (static_cast< void *>(__p)) (_T1)(__value);
# 84 "/usr/include/c++/4.8.2/bits/stl_construct.h" 3
}
# 90 "/usr/include/c++/4.8.2/bits/stl_construct.h" 3
template< class _Tp> inline void
# 92 "/usr/include/c++/4.8.2/bits/stl_construct.h" 3
_Destroy(_Tp *__pointer)
# 93 "/usr/include/c++/4.8.2/bits/stl_construct.h" 3
{ (__pointer->~_Tp()); }
# 95 "/usr/include/c++/4.8.2/bits/stl_construct.h" 3
template< bool >
# 96 "/usr/include/c++/4.8.2/bits/stl_construct.h" 3
struct _Destroy_aux {
# 98 "/usr/include/c++/4.8.2/bits/stl_construct.h" 3
template< class _ForwardIterator> static void
# 100 "/usr/include/c++/4.8.2/bits/stl_construct.h" 3
__destroy(_ForwardIterator __first, _ForwardIterator __last)
# 101 "/usr/include/c++/4.8.2/bits/stl_construct.h" 3
{
# 102 "/usr/include/c++/4.8.2/bits/stl_construct.h" 3
for (; __first != __last; ++__first) {
# 103 "/usr/include/c++/4.8.2/bits/stl_construct.h" 3
std::_Destroy(std::__addressof(*__first)); }
# 104 "/usr/include/c++/4.8.2/bits/stl_construct.h" 3
}
# 105 "/usr/include/c++/4.8.2/bits/stl_construct.h" 3
};
# 108 "/usr/include/c++/4.8.2/bits/stl_construct.h" 3
template<> struct _Destroy_aux< true> {
# 110 "/usr/include/c++/4.8.2/bits/stl_construct.h" 3
template< class _ForwardIterator> static void
# 112 "/usr/include/c++/4.8.2/bits/stl_construct.h" 3
__destroy(_ForwardIterator, _ForwardIterator) { }
# 113 "/usr/include/c++/4.8.2/bits/stl_construct.h" 3
};
# 120 "/usr/include/c++/4.8.2/bits/stl_construct.h" 3
template< class _ForwardIterator> inline void
# 122 "/usr/include/c++/4.8.2/bits/stl_construct.h" 3
_Destroy(_ForwardIterator __first, _ForwardIterator __last)
# 123 "/usr/include/c++/4.8.2/bits/stl_construct.h" 3
{
# 125 "/usr/include/c++/4.8.2/bits/stl_construct.h" 3
typedef typename iterator_traits< _ForwardIterator> ::value_type _Value_type;
# 126 "/usr/include/c++/4.8.2/bits/stl_construct.h" 3
std::_Destroy_aux< __has_trivial_destructor(typename iterator_traits< _ForwardIterator> ::value_type)> ::__destroy(__first, __last);
# 128 "/usr/include/c++/4.8.2/bits/stl_construct.h" 3
}
# 136 "/usr/include/c++/4.8.2/bits/stl_construct.h" 3
template< class _ForwardIterator, class _Allocator> void
# 138 "/usr/include/c++/4.8.2/bits/stl_construct.h" 3
_Destroy(_ForwardIterator __first, _ForwardIterator __last, _Allocator &
# 139 "/usr/include/c++/4.8.2/bits/stl_construct.h" 3
__alloc)
# 140 "/usr/include/c++/4.8.2/bits/stl_construct.h" 3
{
# 141 "/usr/include/c++/4.8.2/bits/stl_construct.h" 3
typedef __gnu_cxx::__alloc_traits< _Allocator> __traits;
# 142 "/usr/include/c++/4.8.2/bits/stl_construct.h" 3
for (; __first != __last; ++__first) {
# 143 "/usr/include/c++/4.8.2/bits/stl_construct.h" 3
__traits::destroy(__alloc, std::__addressof(*__first)); }
# 144 "/usr/include/c++/4.8.2/bits/stl_construct.h" 3
}
# 146 "/usr/include/c++/4.8.2/bits/stl_construct.h" 3
template< class _ForwardIterator, class _Tp> inline void
# 148 "/usr/include/c++/4.8.2/bits/stl_construct.h" 3
_Destroy(_ForwardIterator __first, _ForwardIterator __last, allocator< _Tp> &)
# 150 "/usr/include/c++/4.8.2/bits/stl_construct.h" 3
{
# 151 "/usr/include/c++/4.8.2/bits/stl_construct.h" 3
_Destroy(__first, __last);
# 152 "/usr/include/c++/4.8.2/bits/stl_construct.h" 3
}
# 155 "/usr/include/c++/4.8.2/bits/stl_construct.h" 3
}
# 59 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
namespace std __attribute((__visibility__("default"))) {
# 63 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
template< bool _TrivialValueTypes>
# 64 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
struct __uninitialized_copy {
# 66 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
template< class _InputIterator, class _ForwardIterator> static _ForwardIterator
# 68 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__uninit_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator
# 69 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__result)
# 70 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
{
# 71 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
_ForwardIterator __cur = __result;
# 72 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
try
# 73 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
{
# 74 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
for (; __first != __last; (++__first), (++__cur)) {
# 75 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
std::_Construct(std::__addressof(*__cur), *__first); }
# 76 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
return __cur;
# 77 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
}
# 78 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
catch (...)
# 79 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
{
# 80 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
std::_Destroy(__result, __cur);
# 81 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
throw;
# 82 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
}
# 83 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
}
# 84 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
};
# 87 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
template<> struct __uninitialized_copy< true> {
# 89 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
template< class _InputIterator, class _ForwardIterator> static _ForwardIterator
# 91 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__uninit_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator
# 92 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__result)
# 93 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
{ return std::copy(__first, __last, __result); }
# 94 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
};
# 105 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
template< class _InputIterator, class _ForwardIterator> inline _ForwardIterator
# 107 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
uninitialized_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator
# 108 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__result)
# 109 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
{
# 111 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
typedef typename iterator_traits< _InputIterator> ::value_type _ValueType1;
# 113 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
typedef typename iterator_traits< _ForwardIterator> ::value_type _ValueType2;
# 115 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
return std::__uninitialized_copy< __is_trivial(typename iterator_traits< _InputIterator> ::value_type) && __is_trivial(typename iterator_traits< _ForwardIterator> ::value_type)> ::__uninit_copy(__first, __last, __result);
# 118 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
}
# 121 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
template< bool _TrivialValueType>
# 122 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
struct __uninitialized_fill {
# 124 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Tp> static void
# 126 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__uninit_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 127 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__x)
# 128 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
{
# 129 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
_ForwardIterator __cur = __first;
# 130 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
try
# 131 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
{
# 132 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
for (; __cur != __last; ++__cur) {
# 133 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
std::_Construct(std::__addressof(*__cur), __x); }
# 134 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
}
# 135 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
catch (...)
# 136 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
{
# 137 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
std::_Destroy(__first, __cur);
# 138 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
throw;
# 139 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
}
# 140 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
}
# 141 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
};
# 144 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
template<> struct __uninitialized_fill< true> {
# 146 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Tp> static void
# 148 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__uninit_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 149 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__x)
# 150 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
{ std::fill(__first, __last, __x); }
# 151 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
};
# 162 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Tp> inline void
# 164 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 165 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__x)
# 166 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
{
# 168 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
typedef typename iterator_traits< _ForwardIterator> ::value_type _ValueType;
# 170 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
std::__uninitialized_fill< __is_trivial(typename iterator_traits< _ForwardIterator> ::value_type)> ::__uninit_fill(__first, __last, __x);
# 172 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
}
# 175 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
template< bool _TrivialValueType>
# 176 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
struct __uninitialized_fill_n {
# 178 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Size, class _Tp> static void
# 180 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__uninit_fill_n(_ForwardIterator __first, _Size __n, const _Tp &
# 181 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__x)
# 182 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
{
# 183 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
_ForwardIterator __cur = __first;
# 184 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
try
# 185 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
{
# 186 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
for (; __n > 0; (--__n), (++__cur)) {
# 187 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
std::_Construct(std::__addressof(*__cur), __x); }
# 188 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
}
# 189 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
catch (...)
# 190 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
{
# 191 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
std::_Destroy(__first, __cur);
# 192 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
throw;
# 193 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
}
# 194 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
}
# 195 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
};
# 198 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
template<> struct __uninitialized_fill_n< true> {
# 200 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Size, class _Tp> static void
# 202 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__uninit_fill_n(_ForwardIterator __first, _Size __n, const _Tp &
# 203 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__x)
# 204 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
{ std::fill_n(__first, __n, __x); }
# 205 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
};
# 216 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Size, class _Tp> inline void
# 218 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp &__x)
# 219 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
{
# 221 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
typedef typename iterator_traits< _ForwardIterator> ::value_type _ValueType;
# 223 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
std::__uninitialized_fill_n< __is_trivial(typename iterator_traits< _ForwardIterator> ::value_type)> ::__uninit_fill_n(__first, __n, __x);
# 225 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
}
# 233 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
template< class _InputIterator, class _ForwardIterator, class
# 234 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
_Allocator> _ForwardIterator
# 236 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__uninitialized_copy_a(_InputIterator __first, _InputIterator __last, _ForwardIterator
# 237 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__result, _Allocator &__alloc)
# 238 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
{
# 239 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
_ForwardIterator __cur = __result;
# 240 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
try
# 241 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
{
# 242 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
typedef __gnu_cxx::__alloc_traits< _Allocator> __traits;
# 243 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
for (; __first != __last; (++__first), (++__cur)) {
# 244 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__traits::construct(__alloc, std::__addressof(*__cur), *__first); }
# 245 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
return __cur;
# 246 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
}
# 247 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
catch (...)
# 248 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
{
# 249 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
std::_Destroy(__result, __cur, __alloc);
# 250 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
throw;
# 251 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
}
# 252 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
}
# 254 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
template< class _InputIterator, class _ForwardIterator, class _Tp> inline _ForwardIterator
# 256 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__uninitialized_copy_a(_InputIterator __first, _InputIterator __last, _ForwardIterator
# 257 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__result, allocator< _Tp> &)
# 258 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
{ return std::uninitialized_copy(__first, __last, __result); }
# 260 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
template< class _InputIterator, class _ForwardIterator, class
# 261 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
_Allocator> inline _ForwardIterator
# 263 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__uninitialized_move_a(_InputIterator __first, _InputIterator __last, _ForwardIterator
# 264 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__result, _Allocator &__alloc)
# 265 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
{
# 266 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
return std::__uninitialized_copy_a(__first, __last, __result, __alloc);
# 269 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
}
# 271 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
template< class _InputIterator, class _ForwardIterator, class
# 272 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
_Allocator> inline _ForwardIterator
# 274 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__uninitialized_move_if_noexcept_a(_InputIterator __first, _InputIterator
# 275 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__last, _ForwardIterator
# 276 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__result, _Allocator &
# 277 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__alloc)
# 278 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
{
# 279 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
return std::__uninitialized_copy_a(__first, __last, __result, __alloc);
# 282 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
}
# 284 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Tp, class _Allocator> void
# 286 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 287 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__x, _Allocator &__alloc)
# 288 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
{
# 289 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
_ForwardIterator __cur = __first;
# 290 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
try
# 291 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
{
# 292 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
typedef __gnu_cxx::__alloc_traits< _Allocator> __traits;
# 293 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
for (; __cur != __last; ++__cur) {
# 294 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__traits::construct(__alloc, std::__addressof(*__cur), __x); }
# 295 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
}
# 296 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
catch (...)
# 297 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
{
# 298 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
std::_Destroy(__first, __cur, __alloc);
# 299 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
throw;
# 300 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
}
# 301 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
}
# 303 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Tp, class _Tp2> inline void
# 305 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 306 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__x, allocator< _Tp2> &)
# 307 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
{ std::uninitialized_fill(__first, __last, __x); }
# 309 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Size, class _Tp, class
# 310 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
_Allocator> void
# 312 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, const _Tp &
# 313 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__x, _Allocator &__alloc)
# 314 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
{
# 315 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
_ForwardIterator __cur = __first;
# 316 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
try
# 317 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
{
# 318 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
typedef __gnu_cxx::__alloc_traits< _Allocator> __traits;
# 319 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
for (; __n > 0; (--__n), (++__cur)) {
# 320 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__traits::construct(__alloc, std::__addressof(*__cur), __x); }
# 321 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
}
# 322 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
catch (...)
# 323 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
{
# 324 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
std::_Destroy(__first, __cur, __alloc);
# 325 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
throw;
# 326 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
}
# 327 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
}
# 329 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Size, class _Tp, class
# 330 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
_Tp2> inline void
# 332 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, const _Tp &
# 333 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__x, allocator< _Tp2> &)
# 334 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
{ std::uninitialized_fill_n(__first, __n, __x); }
# 346 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
template< class _InputIterator1, class _InputIterator2, class
# 347 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
_ForwardIterator, class _Allocator> inline _ForwardIterator
# 349 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__uninitialized_copy_move(_InputIterator1 __first1, _InputIterator1
# 350 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__last1, _InputIterator2
# 351 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__first2, _InputIterator2
# 352 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__last2, _ForwardIterator
# 353 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__result, _Allocator &
# 354 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__alloc)
# 355 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
{
# 356 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
_ForwardIterator __mid = std::__uninitialized_copy_a(__first1, __last1, __result, __alloc);
# 359 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
try
# 360 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
{
# 361 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
return std::__uninitialized_move_a(__first2, __last2, __mid, __alloc);
# 362 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
}
# 363 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
catch (...)
# 364 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
{
# 365 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
std::_Destroy(__result, __mid, __alloc);
# 366 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
throw;
# 367 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
}
# 368 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
}
# 374 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
template< class _InputIterator1, class _InputIterator2, class
# 375 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
_ForwardIterator, class _Allocator> inline _ForwardIterator
# 377 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__uninitialized_move_copy(_InputIterator1 __first1, _InputIterator1
# 378 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__last1, _InputIterator2
# 379 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__first2, _InputIterator2
# 380 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__last2, _ForwardIterator
# 381 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__result, _Allocator &
# 382 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__alloc)
# 383 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
{
# 384 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
_ForwardIterator __mid = std::__uninitialized_move_a(__first1, __last1, __result, __alloc);
# 387 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
try
# 388 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
{
# 389 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
return std::__uninitialized_copy_a(__first2, __last2, __mid, __alloc);
# 390 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
}
# 391 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
catch (...)
# 392 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
{
# 393 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
std::_Destroy(__result, __mid, __alloc);
# 394 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
throw;
# 395 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
}
# 396 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
}
# 401 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Tp, class _InputIterator, class
# 402 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
_Allocator> inline _ForwardIterator
# 404 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__uninitialized_fill_move(_ForwardIterator __result, _ForwardIterator __mid, const _Tp &
# 405 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__x, _InputIterator __first, _InputIterator
# 406 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__last, _Allocator &__alloc)
# 407 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
{
# 408 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
std::__uninitialized_fill_a(__result, __mid, __x, __alloc);
# 409 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
try
# 410 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
{
# 411 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
return std::__uninitialized_move_a(__first, __last, __mid, __alloc);
# 412 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
}
# 413 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
catch (...)
# 414 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
{
# 415 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
std::_Destroy(__result, __mid, __alloc);
# 416 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
throw;
# 417 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
}
# 418 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
}
# 423 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
template< class _InputIterator, class _ForwardIterator, class _Tp, class
# 424 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
_Allocator> inline void
# 426 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__uninitialized_move_fill(_InputIterator __first1, _InputIterator __last1, _ForwardIterator
# 427 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__first2, _ForwardIterator
# 428 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__last2, const _Tp &__x, _Allocator &
# 429 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
__alloc)
# 430 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
{
# 431 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
_ForwardIterator __mid2 = std::__uninitialized_move_a(__first1, __last1, __first2, __alloc);
# 434 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
try
# 435 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
{
# 436 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
std::__uninitialized_fill_a(__mid2, __last2, __x, __alloc);
# 437 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
}
# 438 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
catch (...)
# 439 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
{
# 440 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
std::_Destroy(__first2, __mid2, __alloc);
# 441 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
throw;
# 442 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
}
# 443 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
}
# 654 "/usr/include/c++/4.8.2/bits/stl_uninitialized.h" 3
}
# 66 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
namespace std __attribute((__visibility__("default"))) {
# 71 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
template< class _Tp, class _Alloc>
# 72 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
struct _Vector_base {
# 75 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
typedef typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _Tp> ::other _Tp_alloc_type;
# 77 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
typedef typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _Tp> ::other> ::pointer pointer;
# 79 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
struct _Vector_impl : public _Tp_alloc_type {
# 82 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
typename std::_Vector_base< _Tp, _Alloc> ::pointer _M_start;
# 83 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
typename std::_Vector_base< _Tp, _Alloc> ::pointer _M_finish;
# 84 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
typename std::_Vector_base< _Tp, _Alloc> ::pointer _M_end_of_storage;
# 86 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
_Vector_impl() : std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type(), _M_start(0), _M_finish(0), _M_end_of_storage(0)
# 88 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ }
# 90 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
_Vector_impl(const typename std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type &__a) : std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type(__a), _M_start(0), _M_finish(0), _M_end_of_storage(0)
# 92 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ }
# 101 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
void _M_swap_data(_Vector_impl &__x)
# 102 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{
# 103 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
std::swap(_M_start, (__x._M_start));
# 104 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
std::swap(_M_finish, (__x._M_finish));
# 105 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
std::swap(_M_end_of_storage, (__x._M_end_of_storage));
# 106 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
}
# 107 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
};
# 110 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
typedef _Alloc allocator_type;
# 113 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
_Tp_alloc_type &_M_get_Tp_allocator()
# 114 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ return *(static_cast< _Tp_alloc_type *>(&(this->_M_impl))); }
# 117 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
const _Tp_alloc_type &_M_get_Tp_allocator() const
# 118 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ return *(static_cast< const _Tp_alloc_type *>(&(this->_M_impl))); }
# 121 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
allocator_type get_allocator() const
# 122 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ return (allocator_type)this->_M_get_Tp_allocator(); }
# 124 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
_Vector_base() : _M_impl()
# 125 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ }
# 127 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
_Vector_base(const allocator_type &__a) : _M_impl(__a)
# 128 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ }
# 130 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
_Vector_base(size_t __n) : _M_impl()
# 132 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ _M_create_storage(__n); }
# 134 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
_Vector_base(size_t __n, const allocator_type &__a) : _M_impl(__a)
# 136 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ _M_create_storage(__n); }
# 159 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
~_Vector_base()
# 160 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ _M_deallocate(((this->_M_impl)._M_start), ((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_start));
# 161 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
}
# 164 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
_Vector_impl _M_impl;
# 167 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
pointer _M_allocate(size_t __n)
# 168 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ return (__n != (0)) ? ((_M_impl).allocate(__n)) : 0; }
# 171 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
void _M_deallocate(pointer __p, size_t __n)
# 172 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{
# 173 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
if (__p) {
# 174 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
((_M_impl).deallocate(__p, __n)); }
# 175 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
}
# 179 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
private: void _M_create_storage(size_t __n)
# 180 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{
# 181 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
((this->_M_impl)._M_start) = this->_M_allocate(__n);
# 182 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
((this->_M_impl)._M_finish) = ((this->_M_impl)._M_start);
# 183 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
((this->_M_impl)._M_end_of_storage) = (((this->_M_impl)._M_start) + __n);
# 184 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
}
# 185 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
};
# 209 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
template< class _Tp, class _Alloc = allocator< _Tp> >
# 210 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
class vector : protected _Vector_base< _Tp, _Alloc> {
# 213 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
typedef typename _Alloc::value_type _Alloc_value_type;
# 217 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
typedef std::_Vector_base< _Tp, _Alloc> _Base;
# 218 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
typedef typename std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type _Tp_alloc_type;
# 219 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
typedef __gnu_cxx::__alloc_traits< typename std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type> _Alloc_traits;
# 222 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
public: typedef _Tp value_type;
# 223 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
typedef typename std::_Vector_base< _Tp, _Alloc> ::pointer pointer;
# 224 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
typedef typename __gnu_cxx::__alloc_traits< typename std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type> ::const_pointer const_pointer;
# 225 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
typedef typename __gnu_cxx::__alloc_traits< typename std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type> ::reference reference;
# 226 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
typedef typename __gnu_cxx::__alloc_traits< typename std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type> ::const_reference const_reference;
# 227 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
typedef __gnu_cxx::__normal_iterator< typename std::_Vector_base< _Tp, _Alloc> ::pointer, vector> iterator;
# 229 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
typedef __gnu_cxx::__normal_iterator< typename __gnu_cxx::__alloc_traits< typename std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type> ::const_pointer, vector> const_iterator;
# 230 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
typedef std::reverse_iterator< __gnu_cxx::__normal_iterator< typename __gnu_cxx::__alloc_traits< typename std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type> ::const_pointer, vector> > const_reverse_iterator;
# 231 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
typedef std::reverse_iterator< __gnu_cxx::__normal_iterator< typename std::_Vector_base< _Tp, _Alloc> ::pointer, vector> > reverse_iterator;
# 232 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
typedef std::size_t size_type;
# 233 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
typedef std::ptrdiff_t difference_type;
# 234 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
typedef _Alloc allocator_type;
# 237 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
protected: using std::_Vector_base< _Tp, _Alloc> ::_M_allocate;
# 238 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
using std::_Vector_base< _Tp, _Alloc> ::_M_deallocate;
# 239 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
using std::_Vector_base< _Tp, _Alloc> ::_M_impl;
# 240 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
using std::_Vector_base< _Tp, _Alloc> ::_M_get_Tp_allocator;
# 248 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
public: vector() : _Base()
# 249 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ }
# 256 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
explicit vector(const allocator_type &__a) : _Base(__a)
# 257 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ }
# 295 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
explicit vector(size_type __n, const value_type &__value = value_type(), const allocator_type &
# 296 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
__a = allocator_type()) : _Base(__n, __a)
# 298 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ _M_fill_initialize(__n, __value); }
# 310 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
vector(const vector &__x) : _Base((__x.size()), _Alloc_traits::_S_select_on_copy((__x._M_get_Tp_allocator())))
# 313 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ ((this->_M_impl)._M_finish) = std::__uninitialized_copy_a((__x.begin()), (__x.end()), ((this->_M_impl)._M_start), _M_get_Tp_allocator());
# 317 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
}
# 397 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
template< class _InputIterator>
# 398 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
vector(_InputIterator __first, _InputIterator __last, const allocator_type &
# 399 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
__a = allocator_type()) : _Base(__a)
# 401 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{
# 403 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
typedef typename __is_integer< _InputIterator> ::__type _Integral;
# 404 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
_M_initialize_dispatch(__first, __last, _Integral());
# 405 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
}
# 414 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
~vector()
# 415 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ std::_Destroy(((this->_M_impl)._M_start), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 416 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
}
# 427 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
vector &operator=(const vector & __x);
# 479 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
void assign(size_type __n, const value_type &__val)
# 480 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ _M_fill_assign(__n, __val); }
# 501 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
template< class _InputIterator> void
# 503 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
assign(_InputIterator __first, _InputIterator __last)
# 504 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{
# 506 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
typedef typename __is_integer< _InputIterator> ::__type _Integral;
# 507 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
_M_assign_dispatch(__first, __last, _Integral());
# 508 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
}
# 529 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
using std::_Vector_base< _Tp, _Alloc> ::get_allocator;
# 538 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
iterator begin()
# 539 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ return ((__gnu_cxx::__normal_iterator< typename std::_Vector_base< _Tp, _Alloc> ::pointer, vector> )(((this->_M_impl)._M_start))); }
# 547 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
const_iterator begin() const
# 548 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ return ((__gnu_cxx::__normal_iterator< typename __gnu_cxx::__alloc_traits< typename std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type> ::const_pointer, vector> )(((this->_M_impl)._M_start))); }
# 556 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
iterator end()
# 557 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ return ((__gnu_cxx::__normal_iterator< typename std::_Vector_base< _Tp, _Alloc> ::pointer, vector> )(((this->_M_impl)._M_finish))); }
# 565 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
const_iterator end() const
# 566 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ return ((__gnu_cxx::__normal_iterator< typename __gnu_cxx::__alloc_traits< typename std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type> ::const_pointer, vector> )(((this->_M_impl)._M_finish))); }
# 574 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
reverse_iterator rbegin()
# 575 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ return ((std::reverse_iterator< __gnu_cxx::__normal_iterator< typename std::_Vector_base< _Tp, _Alloc> ::pointer, vector> > )(this->end())); }
# 583 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
const_reverse_iterator rbegin() const
# 584 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ return ((std::reverse_iterator< __gnu_cxx::__normal_iterator< typename __gnu_cxx::__alloc_traits< typename std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type> ::const_pointer, vector> > )(this->end())); }
# 592 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
reverse_iterator rend()
# 593 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ return ((std::reverse_iterator< __gnu_cxx::__normal_iterator< typename std::_Vector_base< _Tp, _Alloc> ::pointer, vector> > )(this->begin())); }
# 601 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
const_reverse_iterator rend() const
# 602 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ return ((std::reverse_iterator< __gnu_cxx::__normal_iterator< typename __gnu_cxx::__alloc_traits< typename std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type> ::const_pointer, vector> > )(this->begin())); }
# 645 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
size_type size() const
# 646 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ return (size_type)(((this->_M_impl)._M_finish) - ((this->_M_impl)._M_start)); }
# 650 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
size_type max_size() const
# 651 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ return _Alloc_traits::max_size(_M_get_Tp_allocator()); }
# 704 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
void resize(size_type __new_size, value_type __x = value_type())
# 705 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{
# 706 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
if (__new_size > size()) {
# 707 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
insert(this->end(), __new_size - size(), __x); } else {
# 708 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
if (__new_size < size()) {
# 709 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
_M_erase_at_end(((this->_M_impl)._M_start) + __new_size); } }
# 710 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
}
# 725 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
size_type capacity() const
# 726 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ return (size_type)(((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_start));
# 727 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
}
# 734 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
bool empty() const
# 735 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ return this->begin() == this->end(); }
# 755 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
void reserve(size_type __n);
# 770 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
reference operator[](size_type __n)
# 771 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ return *(((this->_M_impl)._M_start) + __n); }
# 785 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
const_reference operator[](size_type __n) const
# 786 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ return *(((this->_M_impl)._M_start) + __n); }
# 791 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
protected: void _M_range_check(size_type __n) const
# 792 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{
# 793 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
if (__n >= this->size()) {
# 794 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
__throw_out_of_range("vector::_M_range_check"); }
# 795 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
}
# 810 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
public: reference at(size_type __n)
# 811 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{
# 812 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
_M_range_check(__n);
# 813 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
return (*this)[__n];
# 814 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
}
# 828 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
const_reference at(size_type __n) const
# 829 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{
# 830 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
_M_range_check(__n);
# 831 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
return (*this)[__n];
# 832 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
}
# 839 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
reference front()
# 840 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ return *this->begin(); }
# 847 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
const_reference front() const
# 848 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ return *this->begin(); }
# 855 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
reference back()
# 856 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ return *(this->end() - 1); }
# 863 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
const_reference back() const
# 864 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ return *(this->end() - 1); }
# 878 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
pointer data()
# 879 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ return std::__addressof(this->front()); }
# 886 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
const_pointer data() const
# 887 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ return std::__addressof(this->front()); }
# 901 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
void push_back(const value_type &__x)
# 902 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{
# 903 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
if (((this->_M_impl)._M_finish) != ((this->_M_impl)._M_end_of_storage))
# 904 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{
# 905 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
_Alloc_traits::construct((this->_M_impl), ((this->_M_impl)._M_finish), __x);
# 907 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
++((this->_M_impl)._M_finish);
# 908 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
} else {
# 913 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
_M_insert_aux(this->end(), __x); }
# 915 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
}
# 937 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
void pop_back()
# 938 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{
# 939 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
--((this->_M_impl)._M_finish);
# 940 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
_Alloc_traits::destroy((this->_M_impl), ((this->_M_impl)._M_finish));
# 941 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
}
# 973 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
iterator insert(iterator __position, const value_type & __x);
# 1023 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
void insert(iterator __position, size_type __n, const value_type &__x)
# 1024 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ _M_fill_insert(__position, __n, __x); }
# 1048 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
template< class _InputIterator> void
# 1050 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
insert(iterator __position, _InputIterator __first, _InputIterator
# 1051 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
__last)
# 1052 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{
# 1054 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
typedef typename __is_integer< _InputIterator> ::__type _Integral;
# 1055 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
_M_insert_dispatch(__position, __first, __last, _Integral());
# 1056 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
}
# 1075 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
iterator erase(iterator __position);
# 1096 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
iterator erase(iterator __first, iterator __last);
# 1108 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
void swap(vector &__x)
# 1112 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{
# 1113 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
((this->_M_impl)._M_swap_data((__x._M_impl)));
# 1114 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
_Alloc_traits::_S_on_swap(_M_get_Tp_allocator(), (__x._M_get_Tp_allocator()));
# 1116 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
}
# 1125 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
void clear()
# 1126 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ _M_erase_at_end(((this->_M_impl)._M_start)); }
# 1135 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
protected:
# 1133 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
template< class _ForwardIterator> pointer
# 1135 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
_M_allocate_and_copy(size_type __n, _ForwardIterator
# 1136 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
__first, _ForwardIterator __last)
# 1137 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{
# 1138 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
pointer __result = (this->_M_allocate(__n));
# 1139 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
try
# 1140 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{
# 1141 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
std::__uninitialized_copy_a(__first, __last, __result, _M_get_Tp_allocator());
# 1143 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
return __result;
# 1144 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
}
# 1145 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
catch (...)
# 1146 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{
# 1147 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
_M_deallocate(__result, __n);
# 1148 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
throw;
# 1149 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
}
# 1150 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
}
# 1159 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
template< class _Integer> void
# 1161 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
_M_initialize_dispatch(_Integer __n, _Integer __value, std::__true_type)
# 1162 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{
# 1163 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
((this->_M_impl)._M_start) = _M_allocate(static_cast< size_type>(__n));
# 1164 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
((this->_M_impl)._M_end_of_storage) = (((this->_M_impl)._M_start) + (static_cast< size_type>(__n)));
# 1166 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
_M_fill_initialize(static_cast< size_type>(__n), __value);
# 1167 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
}
# 1170 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
template< class _InputIterator> void
# 1172 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
_M_initialize_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type)
# 1174 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{
# 1176 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
typedef typename iterator_traits< _InputIterator> ::iterator_category _IterCategory;
# 1177 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
_M_range_initialize(__first, __last, _IterCategory());
# 1178 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
}
# 1181 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
template< class _InputIterator> void
# 1183 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
_M_range_initialize(_InputIterator __first, _InputIterator
# 1184 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
__last, std::input_iterator_tag)
# 1185 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{
# 1186 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
for (; __first != __last; ++__first) {
# 1190 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
push_back(*__first); }
# 1192 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
}
# 1195 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
template< class _ForwardIterator> void
# 1197 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
_M_range_initialize(_ForwardIterator __first, _ForwardIterator
# 1198 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
__last, std::forward_iterator_tag)
# 1199 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{
# 1200 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
const size_type __n = std::distance(__first, __last);
# 1201 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
((this->_M_impl)._M_start) = (this->_M_allocate(__n));
# 1202 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
((this->_M_impl)._M_end_of_storage) = (((this->_M_impl)._M_start) + __n);
# 1203 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
((this->_M_impl)._M_finish) = std::__uninitialized_copy_a(__first, __last, ((this->_M_impl)._M_start), _M_get_Tp_allocator());
# 1207 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
}
# 1212 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
void _M_fill_initialize(size_type __n, const value_type &__value)
# 1213 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{
# 1214 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
std::__uninitialized_fill_n_a(((this->_M_impl)._M_start), __n, __value, _M_get_Tp_allocator());
# 1216 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
((this->_M_impl)._M_finish) = ((this->_M_impl)._M_end_of_storage);
# 1217 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
}
# 1237 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
template< class _Integer> void
# 1239 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
_M_assign_dispatch(_Integer __n, _Integer __val, std::__true_type)
# 1240 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ _M_fill_assign(__n, __val); }
# 1243 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
template< class _InputIterator> void
# 1245 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
_M_assign_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type)
# 1247 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{
# 1249 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
typedef typename iterator_traits< _InputIterator> ::iterator_category _IterCategory;
# 1250 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
_M_assign_aux(__first, __last, _IterCategory());
# 1251 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
}
# 1254 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
template< class _InputIterator> void _M_assign_aux(_InputIterator __first, _InputIterator __last, std::input_iterator_tag);
# 1260 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
template< class _ForwardIterator> void _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag);
# 1268 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
void _M_fill_assign(size_type __n, const value_type & __val);
# 1277 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
template< class _Integer> void
# 1279 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
_M_insert_dispatch(iterator __pos, _Integer __n, _Integer __val, std::__true_type)
# 1281 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ _M_fill_insert(__pos, __n, __val); }
# 1284 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
template< class _InputIterator> void
# 1286 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
_M_insert_dispatch(iterator __pos, _InputIterator __first, _InputIterator
# 1287 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
__last, std::__false_type)
# 1288 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{
# 1290 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
typedef typename iterator_traits< _InputIterator> ::iterator_category _IterCategory;
# 1291 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
_M_range_insert(__pos, __first, __last, _IterCategory());
# 1292 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
}
# 1295 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
template< class _InputIterator> void _M_range_insert(iterator __pos, _InputIterator __first, _InputIterator __last, std::input_iterator_tag);
# 1301 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
template< class _ForwardIterator> void _M_range_insert(iterator __pos, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag);
# 1309 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
void _M_fill_insert(iterator __pos, size_type __n, const value_type & __x);
# 1323 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
void _M_insert_aux(iterator __position, const value_type & __x);
# 1336 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
size_type _M_check_len(size_type __n, const char *__s) const
# 1337 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{
# 1338 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
if ((max_size() - size()) < __n) {
# 1339 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
__throw_length_error(__s); }
# 1341 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
const size_type __len = size() + std::max(size(), __n);
# 1342 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
return ((__len < size()) || (__len > max_size())) ? max_size() : __len;
# 1343 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
}
# 1350 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
void _M_erase_at_end(pointer __pos)
# 1351 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{
# 1352 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
std::_Destroy(__pos, ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 1353 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
((this->_M_impl)._M_finish) = __pos;
# 1354 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
}
# 1389 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
};
# 1402 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
template< class _Tp, class _Alloc> inline bool
# 1404 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
operator==(const vector< _Tp, _Alloc> &__x, const vector< _Tp, _Alloc> &__y)
# 1405 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ return ((__x.size()) == (__y.size())) && std::equal((__x.begin()), (__x.end()), (__y.begin()));
# 1406 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
}
# 1419 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
template< class _Tp, class _Alloc> inline bool
# 1421 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
operator<(const vector< _Tp, _Alloc> &__x, const vector< _Tp, _Alloc> &__y)
# 1422 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ return std::lexicographical_compare((__x.begin()), (__x.end()), (__y.begin()), (__y.end()));
# 1423 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
}
# 1426 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
template< class _Tp, class _Alloc> inline bool
# 1428 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
operator!=(const vector< _Tp, _Alloc> &__x, const vector< _Tp, _Alloc> &__y)
# 1429 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ return !(__x == __y); }
# 1432 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
template< class _Tp, class _Alloc> inline bool
# 1434 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
operator>(const vector< _Tp, _Alloc> &__x, const vector< _Tp, _Alloc> &__y)
# 1435 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ return __y < __x; }
# 1438 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
template< class _Tp, class _Alloc> inline bool
# 1440 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
operator<=(const vector< _Tp, _Alloc> &__x, const vector< _Tp, _Alloc> &__y)
# 1441 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ return !(__y < __x); }
# 1444 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
template< class _Tp, class _Alloc> inline bool
# 1446 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
operator>=(const vector< _Tp, _Alloc> &__x, const vector< _Tp, _Alloc> &__y)
# 1447 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ return !(__x < __y); }
# 1450 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
template< class _Tp, class _Alloc> inline void
# 1452 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
swap(vector< _Tp, _Alloc> &__x, vector< _Tp, _Alloc> &__y)
# 1453 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
{ (__x.swap(__y)); }
# 1456 "/usr/include/c++/4.8.2/bits/stl_vector.h" 3
}
# 63 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
namespace std __attribute((__visibility__("default"))) {
# 67 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
typedef unsigned long _Bit_type;
# 68 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
enum { _S_word_bit = 64};
# 70 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
struct _Bit_reference {
# 72 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_Bit_type *_M_p;
# 73 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_Bit_type _M_mask;
# 75 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_Bit_reference(_Bit_type *__x, _Bit_type __y) : _M_p(__x), _M_mask(__y)
# 76 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ }
# 78 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_Bit_reference() : _M_p((0)), _M_mask((0)) { }
# 80 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
operator bool() const
# 81 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ return !(!((*(_M_p)) & (_M_mask))); }
# 84 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_Bit_reference &operator=(bool __x)
# 85 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 86 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
if (__x) {
# 87 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
(*(_M_p)) |= (_M_mask); } else {
# 89 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
(*(_M_p)) &= (~(_M_mask)); }
# 90 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
return *this;
# 91 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 94 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_Bit_reference &operator=(const _Bit_reference &__x)
# 95 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ return ((*this) = ((bool)__x)); }
# 98 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
bool operator==(const _Bit_reference &__x) const
# 99 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ return ((bool)(*this)) == ((bool)__x); }
# 102 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
bool operator<(const _Bit_reference &__x) const
# 103 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ return (!((bool)(*this))) && ((bool)__x); }
# 106 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
void flip()
# 107 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ (*(_M_p)) ^= (_M_mask); }
# 108 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
};
# 136 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
struct _Bit_iterator_base : public iterator< random_access_iterator_tag, bool> {
# 139 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_Bit_type *_M_p;
# 140 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
unsigned _M_offset;
# 142 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_Bit_iterator_base(_Bit_type *__x, unsigned __y) : _M_p(__x), _M_offset(__y)
# 143 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ }
# 146 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
void _M_bump_up()
# 147 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 148 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
if (((_M_offset)++) == (((int)_S_word_bit) - 1))
# 149 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 150 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
(_M_offset) = (0);
# 151 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
++(_M_p);
# 152 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 153 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 156 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
void _M_bump_down()
# 157 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 158 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
if (((_M_offset)--) == (0))
# 159 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 160 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
(_M_offset) = (((int)_S_word_bit) - 1);
# 161 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
--(_M_p);
# 162 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 163 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 166 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
void _M_incr(ptrdiff_t __i)
# 167 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 168 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
difference_type __n = __i + (_M_offset);
# 169 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
(_M_p) += (__n / ((int)_S_word_bit));
# 170 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
__n = (__n % ((int)_S_word_bit));
# 171 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
if (__n < (0))
# 172 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 173 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
__n += ((int)_S_word_bit);
# 174 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
--(_M_p);
# 175 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 176 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
(_M_offset) = (static_cast< unsigned>(__n));
# 177 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 180 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
bool operator==(const _Bit_iterator_base &__i) const
# 181 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ return ((_M_p) == (__i._M_p)) && ((_M_offset) == (__i._M_offset)); }
# 184 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
bool operator<(const _Bit_iterator_base &__i) const
# 185 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 186 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
return ((_M_p) < (__i._M_p)) || (((_M_p) == (__i._M_p)) && ((_M_offset) < (__i._M_offset)));
# 188 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 191 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
bool operator!=(const _Bit_iterator_base &__i) const
# 192 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ return !((*this) == __i); }
# 195 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
bool operator>(const _Bit_iterator_base &__i) const
# 196 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ return (__i < (*this)); }
# 199 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
bool operator<=(const _Bit_iterator_base &__i) const
# 200 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ return !(__i < (*this)); }
# 203 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
bool operator>=(const _Bit_iterator_base &__i) const
# 204 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ return !((*this) < __i); }
# 205 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
};
# 208 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
inline ptrdiff_t operator-(const _Bit_iterator_base &__x, const _Bit_iterator_base &__y)
# 209 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 210 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
return ((((int)_S_word_bit) * ((__x._M_p) - (__y._M_p))) + (__x._M_offset)) - (__y._M_offset);
# 212 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 214 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
struct _Bit_iterator : public _Bit_iterator_base {
# 216 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
typedef _Bit_reference reference;
# 217 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
typedef _Bit_reference *pointer;
# 218 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
typedef _Bit_iterator iterator;
# 220 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_Bit_iterator() : _Bit_iterator_base(0, 0) { }
# 222 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_Bit_iterator(_Bit_type *__x, unsigned __y) : _Bit_iterator_base(__x, __y)
# 223 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ }
# 226 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
reference operator*() const
# 227 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ return reference(_M_p, 1UL << (_M_offset)); }
# 230 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
iterator &operator++()
# 231 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 232 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
this->_M_bump_up();
# 233 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
return *this;
# 234 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 237 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
iterator operator++(int)
# 238 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 239 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
iterator __tmp = *this;
# 240 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
this->_M_bump_up();
# 241 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
return __tmp;
# 242 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 245 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
iterator &operator--()
# 246 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 247 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
this->_M_bump_down();
# 248 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
return *this;
# 249 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 252 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
iterator operator--(int)
# 253 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 254 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
iterator __tmp = *this;
# 255 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
this->_M_bump_down();
# 256 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
return __tmp;
# 257 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 260 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
iterator &operator+=(difference_type __i)
# 261 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 262 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
this->_M_incr(__i);
# 263 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
return *this;
# 264 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 267 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
iterator &operator-=(difference_type __i)
# 268 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 269 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
((*this) += (-__i));
# 270 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
return *this;
# 271 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 274 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
iterator operator+(difference_type __i) const
# 275 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 276 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
iterator __tmp = *this;
# 277 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
return (__tmp += __i);
# 278 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 281 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
iterator operator-(difference_type __i) const
# 282 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 283 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
iterator __tmp = *this;
# 284 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
return (__tmp -= __i);
# 285 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 288 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
reference operator[](difference_type __i) const
# 289 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ return (*(((*this) + __i))); }
# 290 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
};
# 293 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
inline _Bit_iterator operator+(ptrdiff_t __n, const _Bit_iterator &__x)
# 294 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ return (__x + __n); }
# 296 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
struct _Bit_const_iterator : public _Bit_iterator_base {
# 298 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
typedef bool reference;
# 299 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
typedef bool const_reference;
# 300 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
typedef const bool *pointer;
# 301 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
typedef _Bit_const_iterator const_iterator;
# 303 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_Bit_const_iterator() : _Bit_iterator_base(0, 0) { }
# 305 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_Bit_const_iterator(_Bit_type *__x, unsigned __y) : _Bit_iterator_base(__x, __y)
# 306 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ }
# 308 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_Bit_const_iterator(const _Bit_iterator &__x) : _Bit_iterator_base(__x._M_p, __x._M_offset)
# 309 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ }
# 312 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
const_reference operator*() const
# 313 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ return _Bit_reference(_M_p, 1UL << (_M_offset)); }
# 316 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
const_iterator &operator++()
# 317 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 318 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
this->_M_bump_up();
# 319 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
return *this;
# 320 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 323 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
const_iterator operator++(int)
# 324 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 325 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
const_iterator __tmp = *this;
# 326 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
this->_M_bump_up();
# 327 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
return __tmp;
# 328 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 331 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
const_iterator &operator--()
# 332 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 333 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
this->_M_bump_down();
# 334 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
return *this;
# 335 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 338 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
const_iterator operator--(int)
# 339 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 340 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
const_iterator __tmp = *this;
# 341 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
this->_M_bump_down();
# 342 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
return __tmp;
# 343 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 346 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
const_iterator &operator+=(difference_type __i)
# 347 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 348 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
this->_M_incr(__i);
# 349 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
return *this;
# 350 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 353 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
const_iterator &operator-=(difference_type __i)
# 354 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 355 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
((*this) += (-__i));
# 356 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
return *this;
# 357 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 360 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
const_iterator operator+(difference_type __i) const
# 361 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 362 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
const_iterator __tmp = *this;
# 363 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
return (__tmp += __i);
# 364 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 367 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
const_iterator operator-(difference_type __i) const
# 368 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 369 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
const_iterator __tmp = *this;
# 370 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
return (__tmp -= __i);
# 371 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 374 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
const_reference operator[](difference_type __i) const
# 375 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ return (*(((*this) + __i))); }
# 376 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
};
# 379 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
inline _Bit_const_iterator operator+(ptrdiff_t __n, const _Bit_const_iterator &__x)
# 380 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ return (__x + __n); }
# 383 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
inline void __fill_bvector(_Bit_iterator __first, _Bit_iterator __last, bool __x)
# 384 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 385 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
for (; (__first != __last); (++__first)) {
# 386 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
(((*__first)) = __x); }
# 387 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 390 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
inline void fill(_Bit_iterator __first, _Bit_iterator __last, const bool &__x)
# 391 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 392 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
if ((__first._M_p) != (__last._M_p))
# 393 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 394 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
std::fill((__first._M_p) + 1, __last._M_p, __x ? ~0 : 0);
# 395 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
__fill_bvector(__first, _Bit_iterator((__first._M_p) + 1, 0), __x);
# 396 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
__fill_bvector(_Bit_iterator(__last._M_p, 0), __last, __x);
# 397 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
} else {
# 399 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
__fill_bvector(__first, __last, __x); }
# 400 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 402 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
template< class _Alloc>
# 403 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
struct _Bvector_base {
# 406 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
typedef typename _Alloc::template rebind< unsigned long> ::other _Bit_alloc_type;
# 408 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
struct _Bvector_impl : public _Bit_alloc_type {
# 411 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
std::_Bit_iterator _M_start;
# 412 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
std::_Bit_iterator _M_finish;
# 413 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
std::_Bit_type *_M_end_of_storage;
# 415 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_Bvector_impl() : std::_Bvector_base< _Alloc> ::_Bit_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage((0))
# 417 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ }
# 419 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_Bvector_impl(const typename std::_Bvector_base< _Alloc> ::_Bit_alloc_type &__a) : std::_Bvector_base< _Alloc> ::_Bit_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage((0))
# 421 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ }
# 429 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
};
# 432 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
typedef _Alloc allocator_type;
# 435 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_Bit_alloc_type &_M_get_Bit_allocator()
# 436 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ return *(static_cast< _Bit_alloc_type *>(&(this->_M_impl))); }
# 439 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
const _Bit_alloc_type &_M_get_Bit_allocator() const
# 440 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ return *(static_cast< const _Bit_alloc_type *>(&(this->_M_impl))); }
# 443 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
allocator_type get_allocator() const
# 444 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ return (allocator_type)this->_M_get_Bit_allocator(); }
# 446 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_Bvector_base() : _M_impl()
# 447 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ }
# 449 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_Bvector_base(const allocator_type &__a) : _M_impl(__a)
# 450 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ }
# 465 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
~_Bvector_base()
# 466 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ this->_M_deallocate(); }
# 469 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
protected: _Bvector_impl _M_impl;
# 472 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_Bit_type *_M_allocate(size_t __n)
# 473 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ return ((_M_impl).allocate((_S_nword)(__n))); }
# 476 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
void _M_deallocate()
# 477 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 478 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
if (((_M_impl)._M_start)._M_p) {
# 479 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
((_M_impl).deallocate((((_M_impl)._M_start)._M_p), ((_M_impl)._M_end_of_storage) - (((_M_impl)._M_start)._M_p))); }
# 481 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 484 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
static size_t _S_nword(size_t __n)
# 485 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ return ((__n + ((int)_S_word_bit)) - (1)) / ((int)_S_word_bit); }
# 486 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
};
# 489 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 494 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
namespace std __attribute((__visibility__("default"))) {
# 517 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
template< class _Alloc>
# 518 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
class vector< bool, _Alloc> : protected _Bvector_base< _Alloc> {
# 520 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
typedef std::_Bvector_base< _Alloc> _Base;
# 527 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
public: typedef bool value_type;
# 528 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
typedef std::size_t size_type;
# 529 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
typedef std::ptrdiff_t difference_type;
# 530 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
typedef std::_Bit_reference reference;
# 531 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
typedef bool const_reference;
# 532 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
typedef std::_Bit_reference *pointer;
# 533 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
typedef const bool *const_pointer;
# 534 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
typedef std::_Bit_iterator iterator;
# 535 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
typedef std::_Bit_const_iterator const_iterator;
# 536 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
typedef std::reverse_iterator< std::_Bit_const_iterator> const_reverse_iterator;
# 537 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
typedef std::reverse_iterator< std::_Bit_iterator> reverse_iterator;
# 538 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
typedef _Alloc allocator_type;
# 540 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
allocator_type get_allocator() const
# 541 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ return _Base::get_allocator(); }
# 544 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
protected: using std::_Bvector_base< _Alloc> ::_M_allocate;
# 545 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
using std::_Bvector_base< _Alloc> ::_M_deallocate;
# 546 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
using std::_Bvector_base< _Alloc> ::_S_nword;
# 547 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
using std::_Bvector_base< _Alloc> ::_M_get_Bit_allocator;
# 550 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
public: vector() : _Base()
# 551 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ }
# 554 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
explicit vector(const allocator_type &__a) : _Base(__a)
# 555 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ }
# 573 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
explicit vector(size_type __n, const bool &__value = ((bool)0), const allocator_type &
# 574 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
__a = allocator_type()) : _Base(__a)
# 576 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 577 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_M_initialize(__n);
# 578 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
std::fill((((this->_M_impl)._M_start)._M_p), ((this->_M_impl)._M_end_of_storage), __value ? ~0 : 0);
# 580 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 583 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
vector(const std::vector< bool, _Alloc> &__x) : _Base((__x._M_get_Bit_allocator()))
# 585 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 586 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_M_initialize((__x.size()));
# 587 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_M_copy_aligned((__x.begin()), (__x.end()), ((this->_M_impl)._M_start));
# 588 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 611 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
template< class _InputIterator>
# 612 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
vector(_InputIterator __first, _InputIterator __last, const allocator_type &
# 613 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
__a = allocator_type()) : _Base(__a)
# 615 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 616 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
typedef typename __is_integer< _InputIterator> ::__type _Integral;
# 617 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_M_initialize_dispatch(__first, __last, _Integral());
# 618 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 621 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
~vector() { }
# 624 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
std::vector< bool, _Alloc> &operator=(const std::vector< bool, _Alloc> &__x)
# 625 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 626 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
if ((&__x) == this) {
# 627 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
return *this; }
# 628 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
if ((__x.size()) > capacity())
# 629 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 630 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
(this->_M_deallocate());
# 631 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_M_initialize((__x.size()));
# 632 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 633 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
((this->_M_impl)._M_finish) = _M_copy_aligned((__x.begin()), (__x.end()), this->begin());
# 635 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
return *this;
# 636 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 662 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
void assign(size_type __n, const bool &__x)
# 663 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ _M_fill_assign(__n, __x); }
# 672 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
template< class _InputIterator> void
# 674 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
assign(_InputIterator __first, _InputIterator __last)
# 675 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 676 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
typedef typename __is_integer< _InputIterator> ::__type _Integral;
# 677 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_M_assign_dispatch(__first, __last, _Integral());
# 678 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 688 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
iterator begin()
# 689 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ return (this->_M_impl)._M_start; }
# 692 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
const_iterator begin() const
# 693 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ return (this->_M_impl)._M_start; }
# 696 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
iterator end()
# 697 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ return (this->_M_impl)._M_finish; }
# 700 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
const_iterator end() const
# 701 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ return (this->_M_impl)._M_finish; }
# 704 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
reverse_iterator rbegin()
# 705 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ return ((std::reverse_iterator< std::_Bit_iterator> )(this->end())); }
# 708 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
const_reverse_iterator rbegin() const
# 709 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ return ((std::reverse_iterator< std::_Bit_const_iterator> )(this->end())); }
# 712 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
reverse_iterator rend()
# 713 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ return ((std::reverse_iterator< std::_Bit_iterator> )(this->begin())); }
# 716 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
const_reverse_iterator rend() const
# 717 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ return ((std::reverse_iterator< std::_Bit_const_iterator> )(this->begin())); }
# 738 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
size_type size() const
# 739 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ return (size_type)(((this->end()) - (this->begin()))); }
# 742 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
size_type max_size() const
# 743 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 744 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
const size_type __isize = ((__gnu_cxx::__numeric_traits_integer< long> ::__max - ((int)_S_word_bit)) + (1));
# 747 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
const size_type __asize = (_M_get_Bit_allocator().max_size());
# 748 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
return (__asize <= (__isize / ((int)_S_word_bit))) ? __asize * ((int)_S_word_bit) : __isize;
# 750 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 753 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
size_type capacity() const
# 754 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ return (size_type)((const_iterator(((this->_M_impl)._M_end_of_storage), 0) - (this->begin())));
# 755 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 758 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
bool empty() const
# 759 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ return ((this->begin()) == (this->end())); }
# 762 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
reference operator[](size_type __n)
# 763 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 764 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
return (*iterator((((this->_M_impl)._M_start)._M_p) + (__n / ((int)_S_word_bit)), __n % ((int)_S_word_bit)));
# 766 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 769 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
const_reference operator[](size_type __n) const
# 770 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 771 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
return (*const_iterator((((this->_M_impl)._M_start)._M_p) + (__n / ((int)_S_word_bit)), __n % ((int)_S_word_bit)));
# 773 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 777 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
protected: void _M_range_check(size_type __n) const
# 778 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 779 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
if (__n >= this->size()) {
# 780 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
__throw_out_of_range("vector<bool>::_M_range_check"); }
# 781 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 785 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
public: reference at(size_type __n)
# 786 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ _M_range_check(__n); return (*this)[__n]; }
# 789 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
const_reference at(size_type __n) const
# 790 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ _M_range_check(__n); return (*this)[__n]; }
# 793 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
void reserve(size_type __n)
# 794 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 795 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
if (__n > max_size()) {
# 796 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
__throw_length_error("vector::reserve"); }
# 797 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
if (capacity() < __n) {
# 798 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_M_reallocate(__n); }
# 799 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 802 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
reference front()
# 803 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ return (*(this->begin())); }
# 806 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
const_reference front() const
# 807 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ return (*(this->begin())); }
# 810 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
reference back()
# 811 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ return (*(((this->end()) - (1)))); }
# 814 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
const_reference back() const
# 815 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ return (*(((this->end()) - (1)))); }
# 823 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
void data() { }
# 826 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
void push_back(bool __x)
# 827 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 828 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
if ((((this->_M_impl)._M_finish)._M_p) != ((this->_M_impl)._M_end_of_storage)) {
# 829 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
(*(((this->_M_impl)._M_finish)++)) = __x; } else {
# 831 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_M_insert_aux(this->end(), __x); }
# 832 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 835 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
void swap(std::vector< bool, _Alloc> &__x)
# 836 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 837 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
std::swap(((this->_M_impl)._M_start), ((__x._M_impl)._M_start));
# 838 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
std::swap(((this->_M_impl)._M_finish), ((__x._M_impl)._M_finish));
# 839 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
std::swap(((this->_M_impl)._M_end_of_storage), ((__x._M_impl)._M_end_of_storage));
# 844 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
std::__alloc_swap< typename std::_Bvector_base< _Alloc> ::_Bit_alloc_type> ::_S_do_it(_M_get_Bit_allocator(), (__x._M_get_Bit_allocator()));
# 846 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 850 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
static void swap(reference __x, reference __y)
# 851 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 852 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
bool __tmp = __x;
# 853 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
(__x = __y);
# 854 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
(__y = __tmp);
# 855 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 858 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
iterator insert(iterator __position, const bool &__x = ((bool)0))
# 859 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 860 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
const difference_type __n = (__position - (this->begin()));
# 861 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
if (((((this->_M_impl)._M_finish)._M_p) != ((this->_M_impl)._M_end_of_storage)) && (__position == (this->end()))) {
# 863 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
(*(((this->_M_impl)._M_finish)++)) = __x; } else {
# 865 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_M_insert_aux(__position, __x); }
# 866 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
return ((this->begin()) + __n);
# 867 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 877 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
template< class _InputIterator> void
# 879 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
insert(iterator __position, _InputIterator
# 880 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
__first, _InputIterator __last)
# 881 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 882 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
typedef typename __is_integer< _InputIterator> ::__type _Integral;
# 883 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_M_insert_dispatch(__position, __first, __last, _Integral());
# 884 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 888 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
void insert(iterator __position, size_type __n, const bool &__x)
# 889 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ _M_fill_insert(__position, __n, __x); }
# 897 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
void pop_back()
# 898 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ --((this->_M_impl)._M_finish); }
# 901 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
iterator erase(iterator __position)
# 902 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 903 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
if ((((__position + (1))) != (this->end()))) {
# 904 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
std::copy((__position + (1)), this->end(), __position); }
# 905 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
--((this->_M_impl)._M_finish);
# 906 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
return __position;
# 907 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 910 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
iterator erase(iterator __first, iterator __last)
# 911 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 912 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
if ((__first != __last)) {
# 913 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_M_erase_at_end(std::copy(__last, this->end(), __first)); }
# 914 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
return __first;
# 915 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 918 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
void resize(size_type __new_size, bool __x = ((bool)0))
# 919 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 920 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
if (__new_size < size()) {
# 921 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_M_erase_at_end(((this->begin()) + ((difference_type)__new_size))); } else {
# 923 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
insert(this->end(), __new_size - size(), __x); }
# 924 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 933 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
void flip()
# 934 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 935 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
for (std::_Bit_type *__p = ((((this->_M_impl)._M_start)._M_p)); __p != ((this->_M_impl)._M_end_of_storage); ++__p) {
# 937 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
(*__p) = (~(*__p)); }
# 938 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 941 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
void clear()
# 942 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ _M_erase_at_end(this->begin()); }
# 948 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
protected: iterator _M_copy_aligned(const_iterator __first, const_iterator __last, iterator
# 949 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
__result)
# 950 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 951 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
std::_Bit_type *__q = std::copy(__first._M_p, __last._M_p, __result._M_p);
# 952 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
return std::copy(const_iterator(__last._M_p, 0), __last, iterator(__q, 0));
# 954 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 957 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
void _M_initialize(size_type __n)
# 958 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 959 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
std::_Bit_type *__q = (this->_M_allocate(__n));
# 960 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
((this->_M_impl)._M_end_of_storage) = (__q + _S_nword(__n));
# 961 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
((this->_M_impl)._M_start) = iterator(__q, 0);
# 962 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
((this->_M_impl)._M_finish) = (((this->_M_impl)._M_start) + ((difference_type)__n));
# 963 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 966 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
void _M_reallocate(size_type __n);
# 977 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
template< class _Integer> void
# 979 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_M_initialize_dispatch(_Integer __n, _Integer __x, std::__true_type)
# 980 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 981 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_M_initialize(static_cast< size_type>(__n));
# 982 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
std::fill((((this->_M_impl)._M_start)._M_p), ((this->_M_impl)._M_end_of_storage), (__x) ? ~0 : 0);
# 984 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 986 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
template< class _InputIterator> void
# 988 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_M_initialize_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type)
# 990 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ _M_initialize_range(__first, __last, std::__iterator_category(__first));
# 991 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 993 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
template< class _InputIterator> void
# 995 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_M_initialize_range(_InputIterator __first, _InputIterator __last, std::input_iterator_tag)
# 997 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 998 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
for (; __first != __last; ++__first) {
# 999 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
push_back(*__first); }
# 1000 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 1002 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
template< class _ForwardIterator> void
# 1004 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_M_initialize_range(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag)
# 1006 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 1007 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
const size_type __n = std::distance(__first, __last);
# 1008 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_M_initialize(__n);
# 1009 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
std::copy(__first, __last, ((this->_M_impl)._M_start));
# 1010 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 1014 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
template< class _Integer> void
# 1016 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_M_assign_dispatch(_Integer __n, _Integer __val, std::__true_type)
# 1017 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ _M_fill_assign(__n, __val); }
# 1019 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
template< class _InputIterator> void
# 1021 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_M_assign_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type)
# 1023 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
# 1026 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
void _M_fill_assign(std::size_t __n, bool __x)
# 1027 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 1028 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
if (__n > size())
# 1029 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 1030 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
std::fill((((this->_M_impl)._M_start)._M_p), ((this->_M_impl)._M_end_of_storage), __x ? ~0 : 0);
# 1032 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
insert(this->end(), __n - size(), __x);
# 1033 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
} else
# 1035 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 1036 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_M_erase_at_end(((this->begin()) + __n));
# 1037 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
std::fill((((this->_M_impl)._M_start)._M_p), ((this->_M_impl)._M_end_of_storage), __x ? ~0 : 0);
# 1039 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 1040 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 1042 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
template< class _InputIterator> void
# 1044 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_M_assign_aux(_InputIterator __first, _InputIterator __last, std::input_iterator_tag)
# 1046 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 1047 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
iterator __cur = this->begin();
# 1048 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
for (; (__first != __last) && (__cur != (this->end())); (++__cur), (++__first)) {
# 1049 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
(*__cur) = (*__first); }
# 1050 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
if (__first == __last) {
# 1051 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_M_erase_at_end(__cur); } else {
# 1053 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
insert(this->end(), __first, __last); }
# 1054 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 1056 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
template< class _ForwardIterator> void
# 1058 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag)
# 1060 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 1061 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
const size_type __len = std::distance(__first, __last);
# 1062 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
if (__len < size()) {
# 1063 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_M_erase_at_end(std::copy(__first, __last, this->begin())); } else
# 1065 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 1066 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_ForwardIterator __mid = __first;
# 1067 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
std::advance(__mid, size());
# 1068 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
std::copy(__first, __mid, this->begin());
# 1069 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
insert(this->end(), __mid, __last);
# 1070 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 1071 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 1077 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
template< class _Integer> void
# 1079 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_M_insert_dispatch(iterator __pos, _Integer __n, _Integer __x, std::__true_type)
# 1081 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ _M_fill_insert(__pos, __n, __x); }
# 1083 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
template< class _InputIterator> void
# 1085 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_M_insert_dispatch(iterator __pos, _InputIterator
# 1086 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
__first, _InputIterator __last, std::__false_type)
# 1088 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ _M_insert_range(__pos, __first, __last, std::__iterator_category(__first));
# 1089 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 1092 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
void _M_fill_insert(iterator __position, size_type __n, bool __x);
# 1094 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
template< class _InputIterator> void
# 1096 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
_M_insert_range(iterator __pos, _InputIterator __first, _InputIterator
# 1097 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
__last, std::input_iterator_tag)
# 1098 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 1099 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
for (; __first != __last; ++__first)
# 1100 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 1101 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
__pos = insert(__pos, *__first);
# 1102 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
(++__pos);
# 1103 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 1104 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 1106 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
template< class _ForwardIterator> void _M_insert_range(iterator __position, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag);
# 1112 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
void _M_insert_aux(iterator __position, bool __x);
# 1115 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
size_type _M_check_len(size_type __n, const char *__s) const
# 1116 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{
# 1117 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
if ((max_size() - size()) < __n) {
# 1118 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
__throw_length_error(__s); }
# 1120 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
const size_type __len = size() + std::max(size(), __n);
# 1121 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
return ((__len < size()) || (__len > max_size())) ? max_size() : __len;
# 1122 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 1125 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
void _M_erase_at_end(iterator __pos)
# 1126 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
{ ((this->_M_impl)._M_finish) = __pos; }
# 1127 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
};
# 1130 "/usr/include/c++/4.8.2/bits/stl_bvector.h" 3
}
# 59 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 63 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
template< class _Tp, class _Alloc> void
# 66 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::reserve(size_type __n)
# 67 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 68 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
if (__n > this->max_size()) {
# 69 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
__throw_length_error("vector::reserve"); }
# 70 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
if (this->capacity() < __n)
# 71 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 72 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
const size_type __old_size = size();
# 73 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
pointer __tmp = _M_allocate_and_copy(__n, ((this->_M_impl)._M_start), ((this->_M_impl)._M_finish));
# 76 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::_Destroy(((this->_M_impl)._M_start), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 78 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
_M_deallocate(((this->_M_impl)._M_start), ((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_start));
# 81 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
((this->_M_impl)._M_start) = __tmp;
# 82 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = (__tmp + __old_size);
# 83 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = (((this->_M_impl)._M_start) + __n);
# 84 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
}
# 85 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
}
# 105 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
template< class _Tp, class _Alloc> typename vector< _Tp, _Alloc> ::iterator
# 108 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::insert(iterator __position, const value_type &__x)
# 109 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 110 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
const size_type __n = __position - this->begin();
# 111 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
if ((((this->_M_impl)._M_finish) != ((this->_M_impl)._M_end_of_storage)) && (__position == this->end()))
# 113 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 114 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
_Alloc_traits::construct((this->_M_impl), ((this->_M_impl)._M_finish), __x);
# 115 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
++((this->_M_impl)._M_finish);
# 116 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
} else
# 118 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 127 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
_M_insert_aux(__position, __x);
# 128 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
}
# 129 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
return ((__gnu_cxx::__normal_iterator< typename std::_Vector_base< _Tp, _Alloc> ::pointer, vector> )(((this->_M_impl)._M_start) + __n));
# 130 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
}
# 132 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
template< class _Tp, class _Alloc> typename vector< _Tp, _Alloc> ::iterator
# 135 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::erase(iterator __position)
# 136 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 137 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
if ((__position + 1) != this->end()) {
# 138 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::copy(__position + 1, this->end(), __position); }
# 139 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
--((this->_M_impl)._M_finish);
# 140 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
_Alloc_traits::destroy((this->_M_impl), ((this->_M_impl)._M_finish));
# 141 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
return __position;
# 142 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
}
# 144 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
template< class _Tp, class _Alloc> typename vector< _Tp, _Alloc> ::iterator
# 147 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::erase(iterator __first, iterator __last)
# 148 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 149 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
if (__first != __last)
# 150 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 151 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
if (__last != this->end()) {
# 152 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::copy(__last, this->end(), __first); }
# 153 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
_M_erase_at_end((__first.base()) + (this->end() - __last));
# 154 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
}
# 155 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
return __first;
# 156 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
}
# 158 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
template< class _Tp, class _Alloc> vector< _Tp, _Alloc> &
# 161 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::operator=(const vector &__x)
# 162 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 163 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
if ((&__x) != this)
# 164 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 184 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
const size_type __xlen = (__x.size());
# 185 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
if (__xlen > capacity())
# 186 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 187 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
pointer __tmp = _M_allocate_and_copy(__xlen, (__x.begin()), (__x.end()));
# 189 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::_Destroy(((this->_M_impl)._M_start), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 191 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
_M_deallocate(((this->_M_impl)._M_start), ((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_start));
# 194 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
((this->_M_impl)._M_start) = __tmp;
# 195 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = (((this->_M_impl)._M_start) + __xlen);
# 196 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
} else {
# 197 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
if (size() >= __xlen)
# 198 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 199 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::_Destroy(std::copy((__x.begin()), (__x.end()), this->begin()), this->end(), _M_get_Tp_allocator());
# 201 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
} else
# 203 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 204 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::copy(((__x._M_impl)._M_start), ((__x._M_impl)._M_start) + size(), ((this->_M_impl)._M_start));
# 206 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::__uninitialized_copy_a(((__x._M_impl)._M_start) + size(), ((__x._M_impl)._M_finish), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 210 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
} }
# 211 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = (((this->_M_impl)._M_start) + __xlen);
# 212 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
}
# 213 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
return *this;
# 214 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
}
# 216 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
template< class _Tp, class _Alloc> void
# 219 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::_M_fill_assign(std::size_t __n, const value_type &__val)
# 220 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 221 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
if (__n > capacity())
# 222 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 223 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
vector __tmp(__n, __val, _M_get_Tp_allocator());
# 224 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
(__tmp.swap(*this));
# 225 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
} else {
# 226 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
if (__n > size())
# 227 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 228 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::fill(this->begin(), this->end(), __val);
# 229 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::__uninitialized_fill_n_a(((this->_M_impl)._M_finish), __n - size(), __val, _M_get_Tp_allocator());
# 232 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
((this->_M_impl)._M_finish) += (__n - size());
# 233 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
} else {
# 235 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
_M_erase_at_end(std::fill_n(((this->_M_impl)._M_start), __n, __val)); } }
# 236 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
}
# 238 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
template< class _Tp, class _Alloc>
# 239 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
template< class _InputIterator> void
# 242 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::_M_assign_aux(_InputIterator __first, _InputIterator __last, std::input_iterator_tag)
# 244 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 245 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
pointer __cur(((this->_M_impl)._M_start));
# 246 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
for (; (__first != __last) && (__cur != ((this->_M_impl)._M_finish)); (++__cur), (++__first)) {
# 248 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
(*__cur) = (*__first); }
# 249 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
if (__first == __last) {
# 250 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
_M_erase_at_end(__cur); } else {
# 252 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
insert(this->end(), __first, __last); }
# 253 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
}
# 255 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
template< class _Tp, class _Alloc>
# 256 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
template< class _ForwardIterator> void
# 259 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::_M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag)
# 261 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 262 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
const size_type __len = std::distance(__first, __last);
# 264 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
if (__len > capacity())
# 265 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 266 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
pointer __tmp(_M_allocate_and_copy(__len, __first, __last));
# 267 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::_Destroy(((this->_M_impl)._M_start), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 269 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
_M_deallocate(((this->_M_impl)._M_start), ((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_start));
# 272 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
((this->_M_impl)._M_start) = __tmp;
# 273 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = (((this->_M_impl)._M_start) + __len);
# 274 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = ((this->_M_impl)._M_finish);
# 275 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
} else {
# 276 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
if (size() >= __len) {
# 277 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
_M_erase_at_end(std::copy(__first, __last, ((this->_M_impl)._M_start))); } else
# 279 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 280 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
_ForwardIterator __mid = __first;
# 281 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::advance(__mid, size());
# 282 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::copy(__first, __mid, ((this->_M_impl)._M_start));
# 283 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = std::__uninitialized_copy_a(__mid, __last, ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 287 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
} }
# 288 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
}
# 316 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
template< class _Tp, class _Alloc> void
# 319 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::_M_insert_aux(iterator __position, const _Tp &__x)
# 321 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 322 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
if (((this->_M_impl)._M_finish) != ((this->_M_impl)._M_end_of_storage))
# 323 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 324 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
_Alloc_traits::construct((this->_M_impl), ((this->_M_impl)._M_finish), *(((this->_M_impl)._M_finish) - 1));
# 327 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
++((this->_M_impl)._M_finish);
# 329 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
_Tp __x_copy = __x;
# 331 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::copy_backward((__position.base()), ((this->_M_impl)._M_finish) - 2, ((this->_M_impl)._M_finish) - 1);
# 335 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
(*__position) = __x_copy;
# 339 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
} else
# 341 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 342 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
const size_type __len = _M_check_len((size_type)1, "vector::_M_insert_aux");
# 344 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
const size_type __elems_before = __position - this->begin();
# 345 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
pointer __new_start((this->_M_allocate(__len)));
# 346 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
pointer __new_finish(__new_start);
# 347 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
try
# 348 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 353 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
_Alloc_traits::construct((this->_M_impl), __new_start + __elems_before, __x);
# 360 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
__new_finish = 0;
# 362 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
__new_finish = std::__uninitialized_move_if_noexcept_a(((this->_M_impl)._M_start), (__position.base()), __new_start, _M_get_Tp_allocator());
# 367 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
++__new_finish;
# 369 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
__new_finish = std::__uninitialized_move_if_noexcept_a((__position.base()), ((this->_M_impl)._M_finish), __new_finish, _M_get_Tp_allocator());
# 373 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
}
# 374 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
catch (...)
# 375 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 376 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
if (!__new_finish) {
# 377 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
_Alloc_traits::destroy((this->_M_impl), __new_start + __elems_before); } else {
# 380 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::_Destroy(__new_start, __new_finish, _M_get_Tp_allocator()); }
# 381 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
_M_deallocate(__new_start, __len);
# 382 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
throw;
# 383 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
}
# 384 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::_Destroy(((this->_M_impl)._M_start), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 386 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
_M_deallocate(((this->_M_impl)._M_start), ((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_start));
# 389 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
((this->_M_impl)._M_start) = __new_start;
# 390 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = __new_finish;
# 391 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = (__new_start + __len);
# 392 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
}
# 393 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
}
# 439 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
template< class _Tp, class _Alloc> void
# 442 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::_M_fill_insert(iterator __position, size_type __n, const value_type &__x)
# 443 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 444 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
if (__n != (0))
# 445 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 446 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
if (((size_type)(((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_finish))) >= __n)
# 448 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 449 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
value_type __x_copy = __x;
# 450 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
const size_type __elems_after = this->end() - __position;
# 451 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
pointer __old_finish(((this->_M_impl)._M_finish));
# 452 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
if (__elems_after > __n)
# 453 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 454 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::__uninitialized_move_a(((this->_M_impl)._M_finish) - __n, ((this->_M_impl)._M_finish), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 458 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
((this->_M_impl)._M_finish) += __n;
# 459 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::copy_backward((__position.base()), __old_finish - __n, __old_finish);
# 461 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::fill((__position.base()), (__position.base()) + __n, __x_copy);
# 463 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
} else
# 465 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 466 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::__uninitialized_fill_n_a(((this->_M_impl)._M_finish), __n - __elems_after, __x_copy, _M_get_Tp_allocator());
# 470 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
((this->_M_impl)._M_finish) += (__n - __elems_after);
# 471 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::__uninitialized_move_a((__position.base()), __old_finish, ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 474 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
((this->_M_impl)._M_finish) += __elems_after;
# 475 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::fill((__position.base()), __old_finish, __x_copy);
# 476 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
}
# 477 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
} else
# 479 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 480 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
const size_type __len = _M_check_len(__n, "vector::_M_fill_insert");
# 482 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
const size_type __elems_before = __position - this->begin();
# 483 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
pointer __new_start((this->_M_allocate(__len)));
# 484 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
pointer __new_finish(__new_start);
# 485 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
try
# 486 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 488 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::__uninitialized_fill_n_a(__new_start + __elems_before, __n, __x, _M_get_Tp_allocator());
# 491 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
__new_finish = 0;
# 493 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
__new_finish = std::__uninitialized_move_if_noexcept_a(((this->_M_impl)._M_start), (__position.base()), __new_start, _M_get_Tp_allocator());
# 498 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
__new_finish += __n;
# 500 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
__new_finish = std::__uninitialized_move_if_noexcept_a((__position.base()), ((this->_M_impl)._M_finish), __new_finish, _M_get_Tp_allocator());
# 504 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
}
# 505 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
catch (...)
# 506 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 507 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
if (!__new_finish) {
# 508 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::_Destroy(__new_start + __elems_before, (__new_start + __elems_before) + __n, _M_get_Tp_allocator()); } else {
# 512 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::_Destroy(__new_start, __new_finish, _M_get_Tp_allocator()); }
# 514 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
_M_deallocate(__new_start, __len);
# 515 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
throw;
# 516 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
}
# 517 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::_Destroy(((this->_M_impl)._M_start), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 519 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
_M_deallocate(((this->_M_impl)._M_start), ((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_start));
# 522 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
((this->_M_impl)._M_start) = __new_start;
# 523 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = __new_finish;
# 524 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = (__new_start + __len);
# 525 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
}
# 526 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
}
# 527 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
}
# 591 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
template< class _Tp, class _Alloc>
# 592 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
template< class _InputIterator> void
# 595 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::_M_range_insert(iterator __pos, _InputIterator __first, _InputIterator
# 596 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
__last, std::input_iterator_tag)
# 597 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 598 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
for (; __first != __last; ++__first)
# 599 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 600 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
__pos = insert(__pos, *__first);
# 601 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
++__pos;
# 602 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
}
# 603 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
}
# 605 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
template< class _Tp, class _Alloc>
# 606 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
template< class _ForwardIterator> void
# 609 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::_M_range_insert(iterator __position, _ForwardIterator __first, _ForwardIterator
# 610 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
__last, std::forward_iterator_tag)
# 611 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 612 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
if (__first != __last)
# 613 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 614 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
const size_type __n = std::distance(__first, __last);
# 615 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
if (((size_type)(((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_finish))) >= __n)
# 617 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 618 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
const size_type __elems_after = this->end() - __position;
# 619 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
pointer __old_finish(((this->_M_impl)._M_finish));
# 620 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
if (__elems_after > __n)
# 621 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 622 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::__uninitialized_move_a(((this->_M_impl)._M_finish) - __n, ((this->_M_impl)._M_finish), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 626 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
((this->_M_impl)._M_finish) += __n;
# 627 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::copy_backward((__position.base()), __old_finish - __n, __old_finish);
# 629 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::copy(__first, __last, __position);
# 630 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
} else
# 632 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 633 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
_ForwardIterator __mid = __first;
# 634 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::advance(__mid, __elems_after);
# 635 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::__uninitialized_copy_a(__mid, __last, ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 638 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
((this->_M_impl)._M_finish) += (__n - __elems_after);
# 639 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::__uninitialized_move_a((__position.base()), __old_finish, ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 643 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
((this->_M_impl)._M_finish) += __elems_after;
# 644 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::copy(__first, __mid, __position);
# 645 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
}
# 646 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
} else
# 648 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 649 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
const size_type __len = _M_check_len(__n, "vector::_M_range_insert");
# 651 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
pointer __new_start((this->_M_allocate(__len)));
# 652 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
pointer __new_finish(__new_start);
# 653 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
try
# 654 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 655 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
__new_finish = std::__uninitialized_move_if_noexcept_a(((this->_M_impl)._M_start), (__position.base()), __new_start, _M_get_Tp_allocator());
# 659 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
__new_finish = std::__uninitialized_copy_a(__first, __last, __new_finish, _M_get_Tp_allocator());
# 663 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
__new_finish = std::__uninitialized_move_if_noexcept_a((__position.base()), ((this->_M_impl)._M_finish), __new_finish, _M_get_Tp_allocator());
# 667 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
}
# 668 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
catch (...)
# 669 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 670 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::_Destroy(__new_start, __new_finish, _M_get_Tp_allocator());
# 672 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
_M_deallocate(__new_start, __len);
# 673 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
throw;
# 674 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
}
# 675 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::_Destroy(((this->_M_impl)._M_start), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 677 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
_M_deallocate(((this->_M_impl)._M_start), ((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_start));
# 680 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
((this->_M_impl)._M_start) = __new_start;
# 681 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = __new_finish;
# 682 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = (__new_start + __len);
# 683 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
}
# 684 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
}
# 685 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
}
# 689 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
template< class _Alloc> void
# 692 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
vector< bool, _Alloc> ::_M_reallocate(size_type __n)
# 693 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 694 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::_Bit_type *__q = (this->_M_allocate(__n));
# 695 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = _M_copy_aligned(this->begin(), this->end(), iterator(__q, 0));
# 697 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
(this->_M_deallocate());
# 698 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
((this->_M_impl)._M_start) = iterator(__q, 0);
# 699 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = (__q + _S_nword(__n));
# 700 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
}
# 702 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
template< class _Alloc> void
# 705 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
vector< bool, _Alloc> ::_M_fill_insert(iterator __position, size_type __n, bool __x)
# 706 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 707 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
if (__n == (0)) {
# 708 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
return; }
# 709 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
if ((capacity() - size()) >= __n)
# 710 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 711 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::copy_backward(__position, this->end(), ((this->_M_impl)._M_finish) + ((difference_type)__n));
# 713 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::fill(__position, (__position + ((difference_type)__n)), __x);
# 714 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
((this->_M_impl)._M_finish) += ((difference_type)__n);
# 715 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
} else
# 717 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 718 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
const size_type __len = _M_check_len(__n, "vector<bool>::_M_fill_insert");
# 720 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::_Bit_type *__q = (this->_M_allocate(__len));
# 721 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
iterator __i = _M_copy_aligned(this->begin(), __position, iterator(__q, 0));
# 723 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::fill(__i, (__i + ((difference_type)__n)), __x);
# 724 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = std::copy(__position, this->end(), (__i + ((difference_type)__n)));
# 726 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
(this->_M_deallocate());
# 727 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = (__q + _S_nword(__len));
# 728 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
((this->_M_impl)._M_start) = iterator(__q, 0);
# 729 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
}
# 730 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
}
# 732 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
template< class _Alloc>
# 733 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
template< class _ForwardIterator> void
# 736 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
vector< bool, _Alloc> ::_M_insert_range(iterator __position, _ForwardIterator __first, _ForwardIterator
# 737 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
__last, std::forward_iterator_tag)
# 738 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 739 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
if (__first != __last)
# 740 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 741 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
size_type __n = std::distance(__first, __last);
# 742 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
if ((capacity() - size()) >= __n)
# 743 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 744 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::copy_backward(__position, this->end(), ((this->_M_impl)._M_finish) + ((difference_type)__n));
# 747 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::copy(__first, __last, __position);
# 748 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
((this->_M_impl)._M_finish) += ((difference_type)__n);
# 749 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
} else
# 751 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 752 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
const size_type __len = _M_check_len(__n, "vector<bool>::_M_insert_range");
# 754 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::_Bit_type *__q = (this->_M_allocate(__len));
# 755 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
iterator __i = _M_copy_aligned(this->begin(), __position, iterator(__q, 0));
# 757 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
__i = std::copy(__first, __last, __i);
# 758 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = std::copy(__position, this->end(), __i);
# 759 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
(this->_M_deallocate());
# 760 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = (__q + _S_nword(__len));
# 761 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
((this->_M_impl)._M_start) = iterator(__q, 0);
# 762 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
}
# 763 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
}
# 764 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
}
# 766 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
template< class _Alloc> void
# 769 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
vector< bool, _Alloc> ::_M_insert_aux(iterator __position, bool __x)
# 770 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 771 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
if ((((this->_M_impl)._M_finish)._M_p) != ((this->_M_impl)._M_end_of_storage))
# 772 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 773 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::copy_backward(__position, ((this->_M_impl)._M_finish), ((this->_M_impl)._M_finish) + 1);
# 775 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
(((*__position)) = __x);
# 776 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
++((this->_M_impl)._M_finish);
# 777 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
} else
# 779 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
{
# 780 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
const size_type __len = _M_check_len((size_type)1, "vector<bool>::_M_insert_aux");
# 782 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
std::_Bit_type *__q = (this->_M_allocate(__len));
# 783 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
iterator __i = _M_copy_aligned(this->begin(), __position, iterator(__q, 0));
# 785 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
(((*(__i++))) = __x);
# 786 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = std::copy(__position, this->end(), __i);
# 787 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
(this->_M_deallocate());
# 788 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = (__q + _S_nword(__len));
# 789 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
((this->_M_impl)._M_start) = iterator(__q, 0);
# 790 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
}
# 791 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
}
# 812 "/usr/include/c++/4.8.2/bits/vector.tcc" 3
}
# 48 "/usr/include/stdint.h" 3
typedef unsigned char uint8_t;
# 49 "/usr/include/stdint.h" 3
typedef unsigned short uint16_t;
# 51 "/usr/include/stdint.h" 3
typedef unsigned uint32_t;
# 55 "/usr/include/stdint.h" 3
typedef unsigned long uint64_t;
# 65 "/usr/include/stdint.h" 3
typedef signed char int_least8_t;
# 66 "/usr/include/stdint.h" 3
typedef short int_least16_t;
# 67 "/usr/include/stdint.h" 3
typedef int int_least32_t;
# 69 "/usr/include/stdint.h" 3
typedef long int_least64_t;
# 76 "/usr/include/stdint.h" 3
typedef unsigned char uint_least8_t;
# 77 "/usr/include/stdint.h" 3
typedef unsigned short uint_least16_t;
# 78 "/usr/include/stdint.h" 3
typedef unsigned uint_least32_t;
# 80 "/usr/include/stdint.h" 3
typedef unsigned long uint_least64_t;
# 90 "/usr/include/stdint.h" 3
typedef signed char int_fast8_t;
# 92 "/usr/include/stdint.h" 3
typedef long int_fast16_t;
# 93 "/usr/include/stdint.h" 3
typedef long int_fast32_t;
# 94 "/usr/include/stdint.h" 3
typedef long int_fast64_t;
# 103 "/usr/include/stdint.h" 3
typedef unsigned char uint_fast8_t;
# 105 "/usr/include/stdint.h" 3
typedef unsigned long uint_fast16_t;
# 106 "/usr/include/stdint.h" 3
typedef unsigned long uint_fast32_t;
# 107 "/usr/include/stdint.h" 3
typedef unsigned long uint_fast64_t;
# 119 "/usr/include/stdint.h" 3
typedef long intptr_t;
# 122 "/usr/include/stdint.h" 3
typedef unsigned long uintptr_t;
# 134 "/usr/include/stdint.h" 3
typedef long intmax_t;
# 135 "/usr/include/stdint.h" 3
typedef unsigned long uintmax_t;
# 59 "/usr/local/cuda/bin/..//include/cuda.h"
typedef uint32_t cuuint32_t;
# 60 "/usr/local/cuda/bin/..//include/cuda.h"
typedef uint64_t cuuint64_t;
# 235 "/usr/local/cuda/bin/..//include/cuda.h"
extern "C" {
# 245 "/usr/local/cuda/bin/..//include/cuda.h"
typedef unsigned long long CUdeviceptr;
# 252 "/usr/local/cuda/bin/..//include/cuda.h"
typedef int CUdevice;
# 253 "/usr/local/cuda/bin/..//include/cuda.h"
typedef struct CUctx_st *CUcontext;
# 254 "/usr/local/cuda/bin/..//include/cuda.h"
typedef struct CUmod_st *CUmodule;
# 255 "/usr/local/cuda/bin/..//include/cuda.h"
typedef struct CUfunc_st *CUfunction;
# 256 "/usr/local/cuda/bin/..//include/cuda.h"
typedef struct CUarray_st *CUarray;
# 257 "/usr/local/cuda/bin/..//include/cuda.h"
typedef struct CUmipmappedArray_st *CUmipmappedArray;
# 258 "/usr/local/cuda/bin/..//include/cuda.h"
typedef struct CUtexref_st *CUtexref;
# 259 "/usr/local/cuda/bin/..//include/cuda.h"
typedef struct CUsurfref_st *CUsurfref;
# 260 "/usr/local/cuda/bin/..//include/cuda.h"
typedef CUevent_st *CUevent;
# 261 "/usr/local/cuda/bin/..//include/cuda.h"
typedef CUstream_st *CUstream;
# 262 "/usr/local/cuda/bin/..//include/cuda.h"
typedef struct CUgraphicsResource_st *CUgraphicsResource;
# 263 "/usr/local/cuda/bin/..//include/cuda.h"
typedef unsigned long long CUtexObject;
# 264 "/usr/local/cuda/bin/..//include/cuda.h"
typedef unsigned long long CUsurfObject;
# 265 "/usr/local/cuda/bin/..//include/cuda.h"
typedef struct CUextMemory_st *CUexternalMemory;
# 266 "/usr/local/cuda/bin/..//include/cuda.h"
typedef struct CUextSemaphore_st *CUexternalSemaphore;
# 267 "/usr/local/cuda/bin/..//include/cuda.h"
typedef CUgraph_st *CUgraph;
# 268 "/usr/local/cuda/bin/..//include/cuda.h"
typedef CUgraphNode_st *CUgraphNode;
# 269 "/usr/local/cuda/bin/..//include/cuda.h"
typedef CUgraphExec_st *CUgraphExec;
# 290 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 288 "/usr/local/cuda/bin/..//include/cuda.h"
struct CUipcEventHandle_st {
# 289 "/usr/local/cuda/bin/..//include/cuda.h"
char reserved[64];
# 290 "/usr/local/cuda/bin/..//include/cuda.h"
} CUipcEventHandle;
# 297 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 295 "/usr/local/cuda/bin/..//include/cuda.h"
struct CUipcMemHandle_st {
# 296 "/usr/local/cuda/bin/..//include/cuda.h"
char reserved[64];
# 297 "/usr/local/cuda/bin/..//include/cuda.h"
} CUipcMemHandle;
# 304 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 302 "/usr/local/cuda/bin/..//include/cuda.h"
enum CUipcMem_flags_enum {
# 303 "/usr/local/cuda/bin/..//include/cuda.h"
CU_IPC_MEM_LAZY_ENABLE_PEER_ACCESS = 1
# 304 "/usr/local/cuda/bin/..//include/cuda.h"
} CUipcMem_flags;
# 315 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 311 "/usr/local/cuda/bin/..//include/cuda.h"
enum CUmemAttach_flags_enum {
# 312 "/usr/local/cuda/bin/..//include/cuda.h"
CU_MEM_ATTACH_GLOBAL = 1,
# 313 "/usr/local/cuda/bin/..//include/cuda.h"
CU_MEM_ATTACH_HOST,
# 314 "/usr/local/cuda/bin/..//include/cuda.h"
CU_MEM_ATTACH_SINGLE = 4
# 315 "/usr/local/cuda/bin/..//include/cuda.h"
} CUmemAttach_flags;
# 332 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 320 "/usr/local/cuda/bin/..//include/cuda.h"
enum CUctx_flags_enum {
# 321 "/usr/local/cuda/bin/..//include/cuda.h"
CU_CTX_SCHED_AUTO,
# 322 "/usr/local/cuda/bin/..//include/cuda.h"
CU_CTX_SCHED_SPIN,
# 323 "/usr/local/cuda/bin/..//include/cuda.h"
CU_CTX_SCHED_YIELD,
# 324 "/usr/local/cuda/bin/..//include/cuda.h"
CU_CTX_SCHED_BLOCKING_SYNC = 4,
# 325 "/usr/local/cuda/bin/..//include/cuda.h"
CU_CTX_BLOCKING_SYNC = 4,
# 328 "/usr/local/cuda/bin/..//include/cuda.h"
CU_CTX_SCHED_MASK = 7,
# 329 "/usr/local/cuda/bin/..//include/cuda.h"
CU_CTX_MAP_HOST,
# 330 "/usr/local/cuda/bin/..//include/cuda.h"
CU_CTX_LMEM_RESIZE_TO_MAX = 16,
# 331 "/usr/local/cuda/bin/..//include/cuda.h"
CU_CTX_FLAGS_MASK = 31
# 332 "/usr/local/cuda/bin/..//include/cuda.h"
} CUctx_flags;
# 340 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 337 "/usr/local/cuda/bin/..//include/cuda.h"
enum CUstream_flags_enum {
# 338 "/usr/local/cuda/bin/..//include/cuda.h"
CU_STREAM_DEFAULT,
# 339 "/usr/local/cuda/bin/..//include/cuda.h"
CU_STREAM_NON_BLOCKING
# 340 "/usr/local/cuda/bin/..//include/cuda.h"
} CUstream_flags;
# 370 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 365 "/usr/local/cuda/bin/..//include/cuda.h"
enum CUevent_flags_enum {
# 366 "/usr/local/cuda/bin/..//include/cuda.h"
CU_EVENT_DEFAULT,
# 367 "/usr/local/cuda/bin/..//include/cuda.h"
CU_EVENT_BLOCKING_SYNC,
# 368 "/usr/local/cuda/bin/..//include/cuda.h"
CU_EVENT_DISABLE_TIMING,
# 369 "/usr/local/cuda/bin/..//include/cuda.h"
CU_EVENT_INTERPROCESS = 4
# 370 "/usr/local/cuda/bin/..//include/cuda.h"
} CUevent_flags;
# 394 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 376 "/usr/local/cuda/bin/..//include/cuda.h"
enum CUstreamWaitValue_flags_enum {
# 377 "/usr/local/cuda/bin/..//include/cuda.h"
CU_STREAM_WAIT_VALUE_GEQ,
# 380 "/usr/local/cuda/bin/..//include/cuda.h"
CU_STREAM_WAIT_VALUE_EQ,
# 381 "/usr/local/cuda/bin/..//include/cuda.h"
CU_STREAM_WAIT_VALUE_AND,
# 382 "/usr/local/cuda/bin/..//include/cuda.h"
CU_STREAM_WAIT_VALUE_NOR,
# 385 "/usr/local/cuda/bin/..//include/cuda.h"
CU_STREAM_WAIT_VALUE_FLUSH = 1073741824
# 394 "/usr/local/cuda/bin/..//include/cuda.h"
} CUstreamWaitValue_flags;
# 407 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 399 "/usr/local/cuda/bin/..//include/cuda.h"
enum CUstreamWriteValue_flags_enum {
# 400 "/usr/local/cuda/bin/..//include/cuda.h"
CU_STREAM_WRITE_VALUE_DEFAULT,
# 401 "/usr/local/cuda/bin/..//include/cuda.h"
CU_STREAM_WRITE_VALUE_NO_MEMORY_BARRIER
# 407 "/usr/local/cuda/bin/..//include/cuda.h"
} CUstreamWriteValue_flags;
# 419 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 412 "/usr/local/cuda/bin/..//include/cuda.h"
enum CUstreamBatchMemOpType_enum {
# 413 "/usr/local/cuda/bin/..//include/cuda.h"
CU_STREAM_MEM_OP_WAIT_VALUE_32 = 1,
# 414 "/usr/local/cuda/bin/..//include/cuda.h"
CU_STREAM_MEM_OP_WRITE_VALUE_32,
# 415 "/usr/local/cuda/bin/..//include/cuda.h"
CU_STREAM_MEM_OP_WAIT_VALUE_64 = 4,
# 416 "/usr/local/cuda/bin/..//include/cuda.h"
CU_STREAM_MEM_OP_WRITE_VALUE_64,
# 417 "/usr/local/cuda/bin/..//include/cuda.h"
CU_STREAM_MEM_OP_FLUSH_REMOTE_WRITES = 3
# 419 "/usr/local/cuda/bin/..//include/cuda.h"
} CUstreamBatchMemOpType;
# 451 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 424 "/usr/local/cuda/bin/..//include/cuda.h"
union CUstreamBatchMemOpParams_union {
# 425 "/usr/local/cuda/bin/..//include/cuda.h"
CUstreamBatchMemOpType operation;
# 426 "/usr/local/cuda/bin/..//include/cuda.h"
struct CUstreamMemOpWaitValueParams_st {
# 427 "/usr/local/cuda/bin/..//include/cuda.h"
CUstreamBatchMemOpType operation;
# 428 "/usr/local/cuda/bin/..//include/cuda.h"
CUdeviceptr address;
# 429 "/usr/local/cuda/bin/..//include/cuda.h"
union {
# 430 "/usr/local/cuda/bin/..//include/cuda.h"
cuuint32_t value;
# 431 "/usr/local/cuda/bin/..//include/cuda.h"
cuuint64_t value64;
# 432 "/usr/local/cuda/bin/..//include/cuda.h"
};
# 433 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned flags;
# 434 "/usr/local/cuda/bin/..//include/cuda.h"
CUdeviceptr alias;
# 435 "/usr/local/cuda/bin/..//include/cuda.h"
} waitValue;
# 436 "/usr/local/cuda/bin/..//include/cuda.h"
struct CUstreamMemOpWriteValueParams_st {
# 437 "/usr/local/cuda/bin/..//include/cuda.h"
CUstreamBatchMemOpType operation;
# 438 "/usr/local/cuda/bin/..//include/cuda.h"
CUdeviceptr address;
# 439 "/usr/local/cuda/bin/..//include/cuda.h"
union {
# 440 "/usr/local/cuda/bin/..//include/cuda.h"
cuuint32_t value;
# 441 "/usr/local/cuda/bin/..//include/cuda.h"
cuuint64_t value64;
# 442 "/usr/local/cuda/bin/..//include/cuda.h"
};
# 443 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned flags;
# 444 "/usr/local/cuda/bin/..//include/cuda.h"
CUdeviceptr alias;
# 445 "/usr/local/cuda/bin/..//include/cuda.h"
} writeValue;
# 446 "/usr/local/cuda/bin/..//include/cuda.h"
struct CUstreamMemOpFlushRemoteWritesParams_st {
# 447 "/usr/local/cuda/bin/..//include/cuda.h"
CUstreamBatchMemOpType operation;
# 448 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned flags;
# 449 "/usr/local/cuda/bin/..//include/cuda.h"
} flushRemoteWrites;
# 450 "/usr/local/cuda/bin/..//include/cuda.h"
cuuint64_t pad[6];
# 451 "/usr/local/cuda/bin/..//include/cuda.h"
} CUstreamBatchMemOpParams;
# 460 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 457 "/usr/local/cuda/bin/..//include/cuda.h"
enum CUoccupancy_flags_enum {
# 458 "/usr/local/cuda/bin/..//include/cuda.h"
CU_OCCUPANCY_DEFAULT,
# 459 "/usr/local/cuda/bin/..//include/cuda.h"
CU_OCCUPANCY_DISABLE_CACHING_OVERRIDE
# 460 "/usr/local/cuda/bin/..//include/cuda.h"
} CUoccupancy_flags;
# 474 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 465 "/usr/local/cuda/bin/..//include/cuda.h"
enum CUarray_format_enum {
# 466 "/usr/local/cuda/bin/..//include/cuda.h"
CU_AD_FORMAT_UNSIGNED_INT8 = 1,
# 467 "/usr/local/cuda/bin/..//include/cuda.h"
CU_AD_FORMAT_UNSIGNED_INT16,
# 468 "/usr/local/cuda/bin/..//include/cuda.h"
CU_AD_FORMAT_UNSIGNED_INT32,
# 469 "/usr/local/cuda/bin/..//include/cuda.h"
CU_AD_FORMAT_SIGNED_INT8 = 8,
# 470 "/usr/local/cuda/bin/..//include/cuda.h"
CU_AD_FORMAT_SIGNED_INT16,
# 471 "/usr/local/cuda/bin/..//include/cuda.h"
CU_AD_FORMAT_SIGNED_INT32,
# 472 "/usr/local/cuda/bin/..//include/cuda.h"
CU_AD_FORMAT_HALF = 16,
# 473 "/usr/local/cuda/bin/..//include/cuda.h"
CU_AD_FORMAT_FLOAT = 32
# 474 "/usr/local/cuda/bin/..//include/cuda.h"
} CUarray_format;
# 484 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 479 "/usr/local/cuda/bin/..//include/cuda.h"
enum CUaddress_mode_enum {
# 480 "/usr/local/cuda/bin/..//include/cuda.h"
CU_TR_ADDRESS_MODE_WRAP,
# 481 "/usr/local/cuda/bin/..//include/cuda.h"
CU_TR_ADDRESS_MODE_CLAMP,
# 482 "/usr/local/cuda/bin/..//include/cuda.h"
CU_TR_ADDRESS_MODE_MIRROR,
# 483 "/usr/local/cuda/bin/..//include/cuda.h"
CU_TR_ADDRESS_MODE_BORDER
# 484 "/usr/local/cuda/bin/..//include/cuda.h"
} CUaddress_mode;
# 492 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 489 "/usr/local/cuda/bin/..//include/cuda.h"
enum CUfilter_mode_enum {
# 490 "/usr/local/cuda/bin/..//include/cuda.h"
CU_TR_FILTER_MODE_POINT,
# 491 "/usr/local/cuda/bin/..//include/cuda.h"
CU_TR_FILTER_MODE_LINEAR
# 492 "/usr/local/cuda/bin/..//include/cuda.h"
} CUfilter_mode;
# 605 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 497 "/usr/local/cuda/bin/..//include/cuda.h"
enum CUdevice_attribute_enum {
# 498 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_THREADS_PER_BLOCK = 1,
# 499 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_X,
# 500 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_Y,
# 501 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_Z,
# 502 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_X,
# 503 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_Y,
# 504 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_Z,
# 505 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_SHARED_MEMORY_PER_BLOCK,
# 506 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_SHARED_MEMORY_PER_BLOCK = 8,
# 507 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_TOTAL_CONSTANT_MEMORY,
# 508 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_WARP_SIZE,
# 509 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_PITCH,
# 510 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_REGISTERS_PER_BLOCK,
# 511 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_REGISTERS_PER_BLOCK = 12,
# 512 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_CLOCK_RATE,
# 513 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_TEXTURE_ALIGNMENT,
# 514 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_GPU_OVERLAP,
# 515 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MULTIPROCESSOR_COUNT,
# 516 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_KERNEL_EXEC_TIMEOUT,
# 517 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_INTEGRATED,
# 518 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_CAN_MAP_HOST_MEMORY,
# 519 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_COMPUTE_MODE,
# 520 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_WIDTH,
# 521 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_WIDTH,
# 522 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_HEIGHT,
# 523 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_WIDTH,
# 524 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_HEIGHT,
# 525 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_DEPTH,
# 526 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LAYERED_WIDTH,
# 527 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LAYERED_HEIGHT,
# 528 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LAYERED_LAYERS,
# 529 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_ARRAY_WIDTH = 27,
# 530 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_ARRAY_HEIGHT,
# 531 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_ARRAY_NUMSLICES,
# 532 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_SURFACE_ALIGNMENT,
# 533 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_CONCURRENT_KERNELS,
# 534 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_ECC_ENABLED,
# 535 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_PCI_BUS_ID,
# 536 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_PCI_DEVICE_ID,
# 537 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_TCC_DRIVER,
# 538 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MEMORY_CLOCK_RATE,
# 539 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_GLOBAL_MEMORY_BUS_WIDTH,
# 540 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_L2_CACHE_SIZE,
# 541 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_THREADS_PER_MULTIPROCESSOR,
# 542 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_ASYNC_ENGINE_COUNT,
# 543 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_UNIFIED_ADDRESSING,
# 544 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_LAYERED_WIDTH,
# 545 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_LAYERED_LAYERS,
# 546 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_CAN_TEX2D_GATHER,
# 547 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_GATHER_WIDTH,
# 548 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_GATHER_HEIGHT,
# 549 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_WIDTH_ALTERNATE,
# 550 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_HEIGHT_ALTERNATE,
# 551 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_DEPTH_ALTERNATE,
# 552 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_PCI_DOMAIN_ID,
# 553 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_TEXTURE_PITCH_ALIGNMENT,
# 554 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURECUBEMAP_WIDTH,
# 555 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURECUBEMAP_LAYERED_WIDTH,
# 556 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURECUBEMAP_LAYERED_LAYERS,
# 557 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE1D_WIDTH,
# 558 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_WIDTH,
# 559 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_HEIGHT,
# 560 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE3D_WIDTH,
# 561 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE3D_HEIGHT,
# 562 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE3D_DEPTH,
# 563 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE1D_LAYERED_WIDTH,
# 564 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE1D_LAYERED_LAYERS,
# 565 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_LAYERED_WIDTH,
# 566 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_LAYERED_HEIGHT,
# 567 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_LAYERED_LAYERS,
# 568 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACECUBEMAP_WIDTH,
# 569 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACECUBEMAP_LAYERED_WIDTH,
# 570 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACECUBEMAP_LAYERED_LAYERS,
# 571 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_LINEAR_WIDTH,
# 572 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LINEAR_WIDTH,
# 573 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LINEAR_HEIGHT,
# 574 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LINEAR_PITCH,
# 575 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_MIPMAPPED_WIDTH,
# 576 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_MIPMAPPED_HEIGHT,
# 577 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_COMPUTE_CAPABILITY_MAJOR,
# 578 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_COMPUTE_CAPABILITY_MINOR,
# 579 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_MIPMAPPED_WIDTH,
# 580 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_STREAM_PRIORITIES_SUPPORTED,
# 581 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_GLOBAL_L1_CACHE_SUPPORTED,
# 582 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_LOCAL_L1_CACHE_SUPPORTED,
# 583 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_SHARED_MEMORY_PER_MULTIPROCESSOR,
# 584 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_REGISTERS_PER_MULTIPROCESSOR,
# 585 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MANAGED_MEMORY,
# 586 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MULTI_GPU_BOARD,
# 587 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MULTI_GPU_BOARD_GROUP_ID,
# 588 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_HOST_NATIVE_ATOMIC_SUPPORTED,
# 589 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_SINGLE_TO_DOUBLE_PRECISION_PERF_RATIO,
# 590 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_PAGEABLE_MEMORY_ACCESS,
# 591 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_CONCURRENT_MANAGED_ACCESS,
# 592 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_COMPUTE_PREEMPTION_SUPPORTED,
# 593 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_CAN_USE_HOST_POINTER_FOR_REGISTERED_MEM,
# 594 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_CAN_USE_STREAM_MEM_OPS,
# 595 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_CAN_USE_64_BIT_STREAM_MEM_OPS,
# 596 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_CAN_USE_STREAM_WAIT_VALUE_NOR,
# 597 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_COOPERATIVE_LAUNCH,
# 598 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_COOPERATIVE_MULTI_DEVICE_LAUNCH,
# 599 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_SHARED_MEMORY_PER_BLOCK_OPTIN,
# 600 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_CAN_FLUSH_REMOTE_WRITES,
# 601 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_HOST_REGISTER_SUPPORTED,
# 602 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_PAGEABLE_MEMORY_ACCESS_USES_HOST_PAGE_TABLES,
# 603 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_DIRECT_MANAGED_MEM_ACCESS_FROM_HOST,
# 604 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX
# 605 "/usr/local/cuda/bin/..//include/cuda.h"
} CUdevice_attribute;
# 621 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 610 "/usr/local/cuda/bin/..//include/cuda.h"
struct CUdevprop_st {
# 611 "/usr/local/cuda/bin/..//include/cuda.h"
int maxThreadsPerBlock;
# 612 "/usr/local/cuda/bin/..//include/cuda.h"
int maxThreadsDim[3];
# 613 "/usr/local/cuda/bin/..//include/cuda.h"
int maxGridSize[3];
# 614 "/usr/local/cuda/bin/..//include/cuda.h"
int sharedMemPerBlock;
# 615 "/usr/local/cuda/bin/..//include/cuda.h"
int totalConstantMemory;
# 616 "/usr/local/cuda/bin/..//include/cuda.h"
int SIMDWidth;
# 617 "/usr/local/cuda/bin/..//include/cuda.h"
int memPitch;
# 618 "/usr/local/cuda/bin/..//include/cuda.h"
int regsPerBlock;
# 619 "/usr/local/cuda/bin/..//include/cuda.h"
int clockRate;
# 620 "/usr/local/cuda/bin/..//include/cuda.h"
int textureAlign;
# 621 "/usr/local/cuda/bin/..//include/cuda.h"
} CUdevprop;
# 636 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 626 "/usr/local/cuda/bin/..//include/cuda.h"
enum CUpointer_attribute_enum {
# 627 "/usr/local/cuda/bin/..//include/cuda.h"
CU_POINTER_ATTRIBUTE_CONTEXT = 1,
# 628 "/usr/local/cuda/bin/..//include/cuda.h"
CU_POINTER_ATTRIBUTE_MEMORY_TYPE,
# 629 "/usr/local/cuda/bin/..//include/cuda.h"
CU_POINTER_ATTRIBUTE_DEVICE_POINTER,
# 630 "/usr/local/cuda/bin/..//include/cuda.h"
CU_POINTER_ATTRIBUTE_HOST_POINTER,
# 631 "/usr/local/cuda/bin/..//include/cuda.h"
CU_POINTER_ATTRIBUTE_P2P_TOKENS,
# 632 "/usr/local/cuda/bin/..//include/cuda.h"
CU_POINTER_ATTRIBUTE_SYNC_MEMOPS,
# 633 "/usr/local/cuda/bin/..//include/cuda.h"
CU_POINTER_ATTRIBUTE_BUFFER_ID,
# 634 "/usr/local/cuda/bin/..//include/cuda.h"
CU_POINTER_ATTRIBUTE_IS_MANAGED,
# 635 "/usr/local/cuda/bin/..//include/cuda.h"
CU_POINTER_ATTRIBUTE_DEVICE_ORDINAL
# 636 "/usr/local/cuda/bin/..//include/cuda.h"
} CUpointer_attribute;
# 711 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 641 "/usr/local/cuda/bin/..//include/cuda.h"
enum CUfunction_attribute_enum {
# 647 "/usr/local/cuda/bin/..//include/cuda.h"
CU_FUNC_ATTRIBUTE_MAX_THREADS_PER_BLOCK,
# 654 "/usr/local/cuda/bin/..//include/cuda.h"
CU_FUNC_ATTRIBUTE_SHARED_SIZE_BYTES,
# 660 "/usr/local/cuda/bin/..//include/cuda.h"
CU_FUNC_ATTRIBUTE_CONST_SIZE_BYTES,
# 665 "/usr/local/cuda/bin/..//include/cuda.h"
CU_FUNC_ATTRIBUTE_LOCAL_SIZE_BYTES,
# 670 "/usr/local/cuda/bin/..//include/cuda.h"
CU_FUNC_ATTRIBUTE_NUM_REGS,
# 679 "/usr/local/cuda/bin/..//include/cuda.h"
CU_FUNC_ATTRIBUTE_PTX_VERSION,
# 688 "/usr/local/cuda/bin/..//include/cuda.h"
CU_FUNC_ATTRIBUTE_BINARY_VERSION,
# 694 "/usr/local/cuda/bin/..//include/cuda.h"
CU_FUNC_ATTRIBUTE_CACHE_MODE_CA,
# 701 "/usr/local/cuda/bin/..//include/cuda.h"
CU_FUNC_ATTRIBUTE_MAX_DYNAMIC_SHARED_SIZE_BYTES,
# 708 "/usr/local/cuda/bin/..//include/cuda.h"
CU_FUNC_ATTRIBUTE_PREFERRED_SHARED_MEMORY_CARVEOUT,
# 710 "/usr/local/cuda/bin/..//include/cuda.h"
CU_FUNC_ATTRIBUTE_MAX
# 711 "/usr/local/cuda/bin/..//include/cuda.h"
} CUfunction_attribute;
# 721 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 716 "/usr/local/cuda/bin/..//include/cuda.h"
enum CUfunc_cache_enum {
# 717 "/usr/local/cuda/bin/..//include/cuda.h"
CU_FUNC_CACHE_PREFER_NONE,
# 718 "/usr/local/cuda/bin/..//include/cuda.h"
CU_FUNC_CACHE_PREFER_SHARED,
# 719 "/usr/local/cuda/bin/..//include/cuda.h"
CU_FUNC_CACHE_PREFER_L1,
# 720 "/usr/local/cuda/bin/..//include/cuda.h"
CU_FUNC_CACHE_PREFER_EQUAL
# 721 "/usr/local/cuda/bin/..//include/cuda.h"
} CUfunc_cache;
# 730 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 726 "/usr/local/cuda/bin/..//include/cuda.h"
enum CUsharedconfig_enum {
# 727 "/usr/local/cuda/bin/..//include/cuda.h"
CU_SHARED_MEM_CONFIG_DEFAULT_BANK_SIZE,
# 728 "/usr/local/cuda/bin/..//include/cuda.h"
CU_SHARED_MEM_CONFIG_FOUR_BYTE_BANK_SIZE,
# 729 "/usr/local/cuda/bin/..//include/cuda.h"
CU_SHARED_MEM_CONFIG_EIGHT_BYTE_BANK_SIZE
# 730 "/usr/local/cuda/bin/..//include/cuda.h"
} CUsharedconfig;
# 739 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 735 "/usr/local/cuda/bin/..//include/cuda.h"
enum CUshared_carveout_enum {
# 736 "/usr/local/cuda/bin/..//include/cuda.h"
CU_SHAREDMEM_CARVEOUT_DEFAULT = (-1),
# 737 "/usr/local/cuda/bin/..//include/cuda.h"
CU_SHAREDMEM_CARVEOUT_MAX_SHARED = 100,
# 738 "/usr/local/cuda/bin/..//include/cuda.h"
CU_SHAREDMEM_CARVEOUT_MAX_L1 = 0
# 739 "/usr/local/cuda/bin/..//include/cuda.h"
} CUshared_carveout;
# 749 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 744 "/usr/local/cuda/bin/..//include/cuda.h"
enum CUmemorytype_enum {
# 745 "/usr/local/cuda/bin/..//include/cuda.h"
CU_MEMORYTYPE_HOST = 1,
# 746 "/usr/local/cuda/bin/..//include/cuda.h"
CU_MEMORYTYPE_DEVICE,
# 747 "/usr/local/cuda/bin/..//include/cuda.h"
CU_MEMORYTYPE_ARRAY,
# 748 "/usr/local/cuda/bin/..//include/cuda.h"
CU_MEMORYTYPE_UNIFIED
# 749 "/usr/local/cuda/bin/..//include/cuda.h"
} CUmemorytype;
# 758 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 754 "/usr/local/cuda/bin/..//include/cuda.h"
enum CUcomputemode_enum {
# 755 "/usr/local/cuda/bin/..//include/cuda.h"
CU_COMPUTEMODE_DEFAULT,
# 756 "/usr/local/cuda/bin/..//include/cuda.h"
CU_COMPUTEMODE_PROHIBITED = 2,
# 757 "/usr/local/cuda/bin/..//include/cuda.h"
CU_COMPUTEMODE_EXCLUSIVE_PROCESS
# 758 "/usr/local/cuda/bin/..//include/cuda.h"
} CUcomputemode;
# 770 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 763 "/usr/local/cuda/bin/..//include/cuda.h"
enum CUmem_advise_enum {
# 764 "/usr/local/cuda/bin/..//include/cuda.h"
CU_MEM_ADVISE_SET_READ_MOSTLY = 1,
# 765 "/usr/local/cuda/bin/..//include/cuda.h"
CU_MEM_ADVISE_UNSET_READ_MOSTLY,
# 766 "/usr/local/cuda/bin/..//include/cuda.h"
CU_MEM_ADVISE_SET_PREFERRED_LOCATION,
# 767 "/usr/local/cuda/bin/..//include/cuda.h"
CU_MEM_ADVISE_UNSET_PREFERRED_LOCATION,
# 768 "/usr/local/cuda/bin/..//include/cuda.h"
CU_MEM_ADVISE_SET_ACCESSED_BY,
# 769 "/usr/local/cuda/bin/..//include/cuda.h"
CU_MEM_ADVISE_UNSET_ACCESSED_BY
# 770 "/usr/local/cuda/bin/..//include/cuda.h"
} CUmem_advise;
# 777 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 772 "/usr/local/cuda/bin/..//include/cuda.h"
enum CUmem_range_attribute_enum {
# 773 "/usr/local/cuda/bin/..//include/cuda.h"
CU_MEM_RANGE_ATTRIBUTE_READ_MOSTLY = 1,
# 774 "/usr/local/cuda/bin/..//include/cuda.h"
CU_MEM_RANGE_ATTRIBUTE_PREFERRED_LOCATION,
# 775 "/usr/local/cuda/bin/..//include/cuda.h"
CU_MEM_RANGE_ATTRIBUTE_ACCESSED_BY,
# 776 "/usr/local/cuda/bin/..//include/cuda.h"
CU_MEM_RANGE_ATTRIBUTE_LAST_PREFETCH_LOCATION
# 777 "/usr/local/cuda/bin/..//include/cuda.h"
} CUmem_range_attribute;
# 952 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 782 "/usr/local/cuda/bin/..//include/cuda.h"
enum CUjit_option_enum {
# 789 "/usr/local/cuda/bin/..//include/cuda.h"
CU_JIT_MAX_REGISTERS,
# 804 "/usr/local/cuda/bin/..//include/cuda.h"
CU_JIT_THREADS_PER_BLOCK,
# 812 "/usr/local/cuda/bin/..//include/cuda.h"
CU_JIT_WALL_TIME,
# 821 "/usr/local/cuda/bin/..//include/cuda.h"
CU_JIT_INFO_LOG_BUFFER,
# 830 "/usr/local/cuda/bin/..//include/cuda.h"
CU_JIT_INFO_LOG_BUFFER_SIZE_BYTES,
# 839 "/usr/local/cuda/bin/..//include/cuda.h"
CU_JIT_ERROR_LOG_BUFFER,
# 848 "/usr/local/cuda/bin/..//include/cuda.h"
CU_JIT_ERROR_LOG_BUFFER_SIZE_BYTES,
# 856 "/usr/local/cuda/bin/..//include/cuda.h"
CU_JIT_OPTIMIZATION_LEVEL,
# 864 "/usr/local/cuda/bin/..//include/cuda.h"
CU_JIT_TARGET_FROM_CUCONTEXT,
# 872 "/usr/local/cuda/bin/..//include/cuda.h"
CU_JIT_TARGET,
# 881 "/usr/local/cuda/bin/..//include/cuda.h"
CU_JIT_FALLBACK_STRATEGY,
# 889 "/usr/local/cuda/bin/..//include/cuda.h"
CU_JIT_GENERATE_DEBUG_INFO,
# 896 "/usr/local/cuda/bin/..//include/cuda.h"
CU_JIT_LOG_VERBOSE,
# 903 "/usr/local/cuda/bin/..//include/cuda.h"
CU_JIT_GENERATE_LINE_INFO,
# 911 "/usr/local/cuda/bin/..//include/cuda.h"
CU_JIT_CACHE_MODE,
# 916 "/usr/local/cuda/bin/..//include/cuda.h"
CU_JIT_NEW_SM3X_OPT,
# 917 "/usr/local/cuda/bin/..//include/cuda.h"
CU_JIT_FAST_COMPILE,
# 931 "/usr/local/cuda/bin/..//include/cuda.h"
CU_JIT_GLOBAL_SYMBOL_NAMES,
# 940 "/usr/local/cuda/bin/..//include/cuda.h"
CU_JIT_GLOBAL_SYMBOL_ADDRESSES,
# 948 "/usr/local/cuda/bin/..//include/cuda.h"
CU_JIT_GLOBAL_SYMBOL_COUNT,
# 950 "/usr/local/cuda/bin/..//include/cuda.h"
CU_JIT_NUM_OPTIONS
# 952 "/usr/local/cuda/bin/..//include/cuda.h"
} CUjit_option;
# 974 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 957 "/usr/local/cuda/bin/..//include/cuda.h"
enum CUjit_target_enum {
# 959 "/usr/local/cuda/bin/..//include/cuda.h"
CU_TARGET_COMPUTE_20 = 20,
# 960 "/usr/local/cuda/bin/..//include/cuda.h"
CU_TARGET_COMPUTE_21,
# 961 "/usr/local/cuda/bin/..//include/cuda.h"
CU_TARGET_COMPUTE_30 = 30,
# 962 "/usr/local/cuda/bin/..//include/cuda.h"
CU_TARGET_COMPUTE_32 = 32,
# 963 "/usr/local/cuda/bin/..//include/cuda.h"
CU_TARGET_COMPUTE_35 = 35,
# 964 "/usr/local/cuda/bin/..//include/cuda.h"
CU_TARGET_COMPUTE_37 = 37,
# 965 "/usr/local/cuda/bin/..//include/cuda.h"
CU_TARGET_COMPUTE_50 = 50,
# 966 "/usr/local/cuda/bin/..//include/cuda.h"
CU_TARGET_COMPUTE_52 = 52,
# 967 "/usr/local/cuda/bin/..//include/cuda.h"
CU_TARGET_COMPUTE_53,
# 968 "/usr/local/cuda/bin/..//include/cuda.h"
CU_TARGET_COMPUTE_60 = 60,
# 969 "/usr/local/cuda/bin/..//include/cuda.h"
CU_TARGET_COMPUTE_61,
# 970 "/usr/local/cuda/bin/..//include/cuda.h"
CU_TARGET_COMPUTE_62,
# 971 "/usr/local/cuda/bin/..//include/cuda.h"
CU_TARGET_COMPUTE_70 = 70,
# 973 "/usr/local/cuda/bin/..//include/cuda.h"
CU_TARGET_COMPUTE_75 = 75
# 974 "/usr/local/cuda/bin/..//include/cuda.h"
} CUjit_target;
# 985 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 979 "/usr/local/cuda/bin/..//include/cuda.h"
enum CUjit_fallback_enum {
# 981 "/usr/local/cuda/bin/..//include/cuda.h"
CU_PREFER_PTX,
# 983 "/usr/local/cuda/bin/..//include/cuda.h"
CU_PREFER_BINARY
# 985 "/usr/local/cuda/bin/..//include/cuda.h"
} CUjit_fallback;
# 995 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 990 "/usr/local/cuda/bin/..//include/cuda.h"
enum CUjit_cacheMode_enum {
# 992 "/usr/local/cuda/bin/..//include/cuda.h"
CU_JIT_CACHE_OPTION_NONE,
# 993 "/usr/local/cuda/bin/..//include/cuda.h"
CU_JIT_CACHE_OPTION_CG,
# 994 "/usr/local/cuda/bin/..//include/cuda.h"
CU_JIT_CACHE_OPTION_CA
# 995 "/usr/local/cuda/bin/..//include/cuda.h"
} CUjit_cacheMode;
# 1033 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 1000 "/usr/local/cuda/bin/..//include/cuda.h"
enum CUjitInputType_enum {
# 1006 "/usr/local/cuda/bin/..//include/cuda.h"
CU_JIT_INPUT_CUBIN,
# 1012 "/usr/local/cuda/bin/..//include/cuda.h"
CU_JIT_INPUT_PTX,
# 1018 "/usr/local/cuda/bin/..//include/cuda.h"
CU_JIT_INPUT_FATBINARY,
# 1024 "/usr/local/cuda/bin/..//include/cuda.h"
CU_JIT_INPUT_OBJECT,
# 1030 "/usr/local/cuda/bin/..//include/cuda.h"
CU_JIT_INPUT_LIBRARY,
# 1032 "/usr/local/cuda/bin/..//include/cuda.h"
CU_JIT_NUM_INPUT_TYPES
# 1033 "/usr/local/cuda/bin/..//include/cuda.h"
} CUjitInputType;
# 1036 "/usr/local/cuda/bin/..//include/cuda.h"
typedef struct CUlinkState_st *CUlinkState;
# 1048 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 1042 "/usr/local/cuda/bin/..//include/cuda.h"
enum CUgraphicsRegisterFlags_enum {
# 1043 "/usr/local/cuda/bin/..//include/cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_NONE,
# 1044 "/usr/local/cuda/bin/..//include/cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_READ_ONLY,
# 1045 "/usr/local/cuda/bin/..//include/cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_WRITE_DISCARD,
# 1046 "/usr/local/cuda/bin/..//include/cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_SURFACE_LDST = 4,
# 1047 "/usr/local/cuda/bin/..//include/cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_TEXTURE_GATHER = 8
# 1048 "/usr/local/cuda/bin/..//include/cuda.h"
} CUgraphicsRegisterFlags;
# 1057 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 1053 "/usr/local/cuda/bin/..//include/cuda.h"
enum CUgraphicsMapResourceFlags_enum {
# 1054 "/usr/local/cuda/bin/..//include/cuda.h"
CU_GRAPHICS_MAP_RESOURCE_FLAGS_NONE,
# 1055 "/usr/local/cuda/bin/..//include/cuda.h"
CU_GRAPHICS_MAP_RESOURCE_FLAGS_READ_ONLY,
# 1056 "/usr/local/cuda/bin/..//include/cuda.h"
CU_GRAPHICS_MAP_RESOURCE_FLAGS_WRITE_DISCARD
# 1057 "/usr/local/cuda/bin/..//include/cuda.h"
} CUgraphicsMapResourceFlags;
# 1069 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 1062 "/usr/local/cuda/bin/..//include/cuda.h"
enum CUarray_cubemap_face_enum {
# 1063 "/usr/local/cuda/bin/..//include/cuda.h"
CU_CUBEMAP_FACE_POSITIVE_X,
# 1064 "/usr/local/cuda/bin/..//include/cuda.h"
CU_CUBEMAP_FACE_NEGATIVE_X,
# 1065 "/usr/local/cuda/bin/..//include/cuda.h"
CU_CUBEMAP_FACE_POSITIVE_Y,
# 1066 "/usr/local/cuda/bin/..//include/cuda.h"
CU_CUBEMAP_FACE_NEGATIVE_Y,
# 1067 "/usr/local/cuda/bin/..//include/cuda.h"
CU_CUBEMAP_FACE_POSITIVE_Z,
# 1068 "/usr/local/cuda/bin/..//include/cuda.h"
CU_CUBEMAP_FACE_NEGATIVE_Z
# 1069 "/usr/local/cuda/bin/..//include/cuda.h"
} CUarray_cubemap_face;
# 1082 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 1074 "/usr/local/cuda/bin/..//include/cuda.h"
enum CUlimit_enum {
# 1075 "/usr/local/cuda/bin/..//include/cuda.h"
CU_LIMIT_STACK_SIZE,
# 1076 "/usr/local/cuda/bin/..//include/cuda.h"
CU_LIMIT_PRINTF_FIFO_SIZE,
# 1077 "/usr/local/cuda/bin/..//include/cuda.h"
CU_LIMIT_MALLOC_HEAP_SIZE,
# 1078 "/usr/local/cuda/bin/..//include/cuda.h"
CU_LIMIT_DEV_RUNTIME_SYNC_DEPTH,
# 1079 "/usr/local/cuda/bin/..//include/cuda.h"
CU_LIMIT_DEV_RUNTIME_PENDING_LAUNCH_COUNT,
# 1080 "/usr/local/cuda/bin/..//include/cuda.h"
CU_LIMIT_MAX_L2_FETCH_GRANULARITY,
# 1081 "/usr/local/cuda/bin/..//include/cuda.h"
CU_LIMIT_MAX
# 1082 "/usr/local/cuda/bin/..//include/cuda.h"
} CUlimit;
# 1092 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 1087 "/usr/local/cuda/bin/..//include/cuda.h"
enum CUresourcetype_enum {
# 1088 "/usr/local/cuda/bin/..//include/cuda.h"
CU_RESOURCE_TYPE_ARRAY,
# 1089 "/usr/local/cuda/bin/..//include/cuda.h"
CU_RESOURCE_TYPE_MIPMAPPED_ARRAY,
# 1090 "/usr/local/cuda/bin/..//include/cuda.h"
CU_RESOURCE_TYPE_LINEAR,
# 1091 "/usr/local/cuda/bin/..//include/cuda.h"
CU_RESOURCE_TYPE_PITCH2D
# 1092 "/usr/local/cuda/bin/..//include/cuda.h"
} CUresourcetype;
# 1106 "/usr/local/cuda/bin/..//include/cuda.h"
typedef void (*CUhostFn)(void * userData);
# 1122 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 1111 "/usr/local/cuda/bin/..//include/cuda.h"
struct CUDA_KERNEL_NODE_PARAMS_st {
# 1112 "/usr/local/cuda/bin/..//include/cuda.h"
CUfunction func;
# 1113 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned gridDimX;
# 1114 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned gridDimY;
# 1115 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned gridDimZ;
# 1116 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned blockDimX;
# 1117 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned blockDimY;
# 1118 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned blockDimZ;
# 1119 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned sharedMemBytes;
# 1120 "/usr/local/cuda/bin/..//include/cuda.h"
void **kernelParams;
# 1121 "/usr/local/cuda/bin/..//include/cuda.h"
void **extra;
# 1122 "/usr/local/cuda/bin/..//include/cuda.h"
} CUDA_KERNEL_NODE_PARAMS;
# 1134 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 1127 "/usr/local/cuda/bin/..//include/cuda.h"
struct CUDA_MEMSET_NODE_PARAMS_st {
# 1128 "/usr/local/cuda/bin/..//include/cuda.h"
CUdeviceptr dst;
# 1129 "/usr/local/cuda/bin/..//include/cuda.h"
size_t pitch;
# 1130 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned value;
# 1131 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned elementSize;
# 1132 "/usr/local/cuda/bin/..//include/cuda.h"
size_t width;
# 1133 "/usr/local/cuda/bin/..//include/cuda.h"
size_t height;
# 1134 "/usr/local/cuda/bin/..//include/cuda.h"
} CUDA_MEMSET_NODE_PARAMS;
# 1142 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 1139 "/usr/local/cuda/bin/..//include/cuda.h"
struct CUDA_HOST_NODE_PARAMS_st {
# 1140 "/usr/local/cuda/bin/..//include/cuda.h"
CUhostFn fn;
# 1141 "/usr/local/cuda/bin/..//include/cuda.h"
void *userData;
# 1142 "/usr/local/cuda/bin/..//include/cuda.h"
} CUDA_HOST_NODE_PARAMS;
# 1155 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 1147 "/usr/local/cuda/bin/..//include/cuda.h"
enum CUgraphNodeType_enum {
# 1148 "/usr/local/cuda/bin/..//include/cuda.h"
CU_GRAPH_NODE_TYPE_KERNEL,
# 1149 "/usr/local/cuda/bin/..//include/cuda.h"
CU_GRAPH_NODE_TYPE_MEMCPY,
# 1150 "/usr/local/cuda/bin/..//include/cuda.h"
CU_GRAPH_NODE_TYPE_MEMSET,
# 1151 "/usr/local/cuda/bin/..//include/cuda.h"
CU_GRAPH_NODE_TYPE_HOST,
# 1152 "/usr/local/cuda/bin/..//include/cuda.h"
CU_GRAPH_NODE_TYPE_GRAPH,
# 1153 "/usr/local/cuda/bin/..//include/cuda.h"
CU_GRAPH_NODE_TYPE_EMPTY,
# 1154 "/usr/local/cuda/bin/..//include/cuda.h"
CU_GRAPH_NODE_TYPE_COUNT
# 1155 "/usr/local/cuda/bin/..//include/cuda.h"
} CUgraphNodeType;
# 1165 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 1160 "/usr/local/cuda/bin/..//include/cuda.h"
enum CUstreamCaptureStatus_enum {
# 1161 "/usr/local/cuda/bin/..//include/cuda.h"
CU_STREAM_CAPTURE_STATUS_NONE,
# 1162 "/usr/local/cuda/bin/..//include/cuda.h"
CU_STREAM_CAPTURE_STATUS_ACTIVE,
# 1163 "/usr/local/cuda/bin/..//include/cuda.h"
CU_STREAM_CAPTURE_STATUS_INVALIDATED
# 1165 "/usr/local/cuda/bin/..//include/cuda.h"
} CUstreamCaptureStatus;
# 1642 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 1172 "/usr/local/cuda/bin/..//include/cuda.h"
enum cudaError_enum {
# 1178 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_SUCCESS,
# 1184 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_INVALID_VALUE,
# 1190 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_OUT_OF_MEMORY,
# 1196 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_NOT_INITIALIZED,
# 1201 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_DEINITIALIZED,
# 1208 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_PROFILER_DISABLED,
# 1216 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_PROFILER_NOT_INITIALIZED,
# 1223 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_PROFILER_ALREADY_STARTED,
# 1230 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_PROFILER_ALREADY_STOPPED,
# 1236 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_NO_DEVICE = 100,
# 1242 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_INVALID_DEVICE,
# 1249 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_INVALID_IMAGE = 200,
# 1259 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_INVALID_CONTEXT,
# 1268 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_CONTEXT_ALREADY_CURRENT,
# 1273 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_MAP_FAILED = 205,
# 1278 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_UNMAP_FAILED,
# 1284 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_ARRAY_IS_MAPPED,
# 1289 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_ALREADY_MAPPED,
# 1297 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_NO_BINARY_FOR_GPU,
# 1302 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_ALREADY_ACQUIRED,
# 1307 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_NOT_MAPPED,
# 1313 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_NOT_MAPPED_AS_ARRAY,
# 1319 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_NOT_MAPPED_AS_POINTER,
# 1325 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_ECC_UNCORRECTABLE,
# 1331 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_UNSUPPORTED_LIMIT,
# 1338 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_CONTEXT_ALREADY_IN_USE,
# 1344 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_PEER_ACCESS_UNSUPPORTED,
# 1349 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_INVALID_PTX,
# 1354 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_INVALID_GRAPHICS_CONTEXT,
# 1360 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_NVLINK_UNCORRECTABLE,
# 1365 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_JIT_COMPILER_NOT_FOUND,
# 1370 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_INVALID_SOURCE = 300,
# 1375 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_FILE_NOT_FOUND,
# 1380 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_SHARED_OBJECT_SYMBOL_NOT_FOUND,
# 1385 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_SHARED_OBJECT_INIT_FAILED,
# 1390 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_OPERATING_SYSTEM,
# 1396 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_INVALID_HANDLE = 400,
# 1402 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_ILLEGAL_STATE,
# 1408 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_NOT_FOUND = 500,
# 1416 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_NOT_READY = 600,
# 1425 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_ILLEGAL_ADDRESS = 700,
# 1436 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_LAUNCH_OUT_OF_RESOURCES,
# 1446 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_LAUNCH_TIMEOUT,
# 1452 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_LAUNCH_INCOMPATIBLE_TEXTURING,
# 1459 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_PEER_ACCESS_ALREADY_ENABLED,
# 1466 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_PEER_ACCESS_NOT_ENABLED,
# 1472 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_PRIMARY_CONTEXT_ACTIVE = 708,
# 1479 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_CONTEXT_IS_DESTROYED,
# 1487 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_ASSERT,
# 1494 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_TOO_MANY_PEERS,
# 1500 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_HOST_MEMORY_ALREADY_REGISTERED,
# 1506 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_HOST_MEMORY_NOT_REGISTERED,
# 1515 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_HARDWARE_STACK_ERROR,
# 1523 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_ILLEGAL_INSTRUCTION,
# 1532 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_MISALIGNED_ADDRESS,
# 1543 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_INVALID_ADDRESS_SPACE,
# 1551 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_INVALID_PC,
# 1561 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_LAUNCH_FAILED,
# 1570 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_COOPERATIVE_LAUNCH_TOO_LARGE,
# 1575 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_NOT_PERMITTED = 800,
# 1581 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_NOT_SUPPORTED,
# 1588 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_SYSTEM_NOT_READY,
# 1594 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_STREAM_CAPTURE_UNSUPPORTED = 900,
# 1600 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_STREAM_CAPTURE_INVALIDATED,
# 1606 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_STREAM_CAPTURE_MERGE,
# 1611 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_STREAM_CAPTURE_UNMATCHED,
# 1617 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_STREAM_CAPTURE_UNJOINED,
# 1624 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_STREAM_CAPTURE_ISOLATION,
# 1630 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_STREAM_CAPTURE_IMPLICIT,
# 1636 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_CAPTURED_EVENT,
# 1641 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ERROR_UNKNOWN = 999
# 1642 "/usr/local/cuda/bin/..//include/cuda.h"
} CUresult;
# 1653 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 1647 "/usr/local/cuda/bin/..//include/cuda.h"
enum CUdevice_P2PAttribute_enum {
# 1648 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_P2P_ATTRIBUTE_PERFORMANCE_RANK = 1,
# 1649 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_P2P_ATTRIBUTE_ACCESS_SUPPORTED,
# 1650 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_P2P_ATTRIBUTE_NATIVE_ATOMIC_SUPPORTED,
# 1651 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_P2P_ATTRIBUTE_ARRAY_ACCESS_ACCESS_SUPPORTED,
# 1652 "/usr/local/cuda/bin/..//include/cuda.h"
CU_DEVICE_P2P_ATTRIBUTE_CUDA_ARRAY_ACCESS_SUPPORTED = 4
# 1653 "/usr/local/cuda/bin/..//include/cuda.h"
} CUdevice_P2PAttribute;
# 1661 "/usr/local/cuda/bin/..//include/cuda.h"
typedef void (*CUstreamCallback)(CUstream hStream, CUresult status, void * userData);
# 1669 "/usr/local/cuda/bin/..//include/cuda.h"
typedef size_t (*CUoccupancyB2DSize)(int blockSize);
# 1745 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 1724 "/usr/local/cuda/bin/..//include/cuda.h"
struct CUDA_MEMCPY2D_st {
# 1725 "/usr/local/cuda/bin/..//include/cuda.h"
size_t srcXInBytes;
# 1726 "/usr/local/cuda/bin/..//include/cuda.h"
size_t srcY;
# 1728 "/usr/local/cuda/bin/..//include/cuda.h"
CUmemorytype srcMemoryType;
# 1729 "/usr/local/cuda/bin/..//include/cuda.h"
const void *srcHost;
# 1730 "/usr/local/cuda/bin/..//include/cuda.h"
CUdeviceptr srcDevice;
# 1731 "/usr/local/cuda/bin/..//include/cuda.h"
CUarray srcArray;
# 1732 "/usr/local/cuda/bin/..//include/cuda.h"
size_t srcPitch;
# 1734 "/usr/local/cuda/bin/..//include/cuda.h"
size_t dstXInBytes;
# 1735 "/usr/local/cuda/bin/..//include/cuda.h"
size_t dstY;
# 1737 "/usr/local/cuda/bin/..//include/cuda.h"
CUmemorytype dstMemoryType;
# 1738 "/usr/local/cuda/bin/..//include/cuda.h"
void *dstHost;
# 1739 "/usr/local/cuda/bin/..//include/cuda.h"
CUdeviceptr dstDevice;
# 1740 "/usr/local/cuda/bin/..//include/cuda.h"
CUarray dstArray;
# 1741 "/usr/local/cuda/bin/..//include/cuda.h"
size_t dstPitch;
# 1743 "/usr/local/cuda/bin/..//include/cuda.h"
size_t WidthInBytes;
# 1744 "/usr/local/cuda/bin/..//include/cuda.h"
size_t Height;
# 1745 "/usr/local/cuda/bin/..//include/cuda.h"
} CUDA_MEMCPY2D;
# 1778 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 1750 "/usr/local/cuda/bin/..//include/cuda.h"
struct CUDA_MEMCPY3D_st {
# 1751 "/usr/local/cuda/bin/..//include/cuda.h"
size_t srcXInBytes;
# 1752 "/usr/local/cuda/bin/..//include/cuda.h"
size_t srcY;
# 1753 "/usr/local/cuda/bin/..//include/cuda.h"
size_t srcZ;
# 1754 "/usr/local/cuda/bin/..//include/cuda.h"
size_t srcLOD;
# 1755 "/usr/local/cuda/bin/..//include/cuda.h"
CUmemorytype srcMemoryType;
# 1756 "/usr/local/cuda/bin/..//include/cuda.h"
const void *srcHost;
# 1757 "/usr/local/cuda/bin/..//include/cuda.h"
CUdeviceptr srcDevice;
# 1758 "/usr/local/cuda/bin/..//include/cuda.h"
CUarray srcArray;
# 1759 "/usr/local/cuda/bin/..//include/cuda.h"
void *reserved0;
# 1760 "/usr/local/cuda/bin/..//include/cuda.h"
size_t srcPitch;
# 1761 "/usr/local/cuda/bin/..//include/cuda.h"
size_t srcHeight;
# 1763 "/usr/local/cuda/bin/..//include/cuda.h"
size_t dstXInBytes;
# 1764 "/usr/local/cuda/bin/..//include/cuda.h"
size_t dstY;
# 1765 "/usr/local/cuda/bin/..//include/cuda.h"
size_t dstZ;
# 1766 "/usr/local/cuda/bin/..//include/cuda.h"
size_t dstLOD;
# 1767 "/usr/local/cuda/bin/..//include/cuda.h"
CUmemorytype dstMemoryType;
# 1768 "/usr/local/cuda/bin/..//include/cuda.h"
void *dstHost;
# 1769 "/usr/local/cuda/bin/..//include/cuda.h"
CUdeviceptr dstDevice;
# 1770 "/usr/local/cuda/bin/..//include/cuda.h"
CUarray dstArray;
# 1771 "/usr/local/cuda/bin/..//include/cuda.h"
void *reserved1;
# 1772 "/usr/local/cuda/bin/..//include/cuda.h"
size_t dstPitch;
# 1773 "/usr/local/cuda/bin/..//include/cuda.h"
size_t dstHeight;
# 1775 "/usr/local/cuda/bin/..//include/cuda.h"
size_t WidthInBytes;
# 1776 "/usr/local/cuda/bin/..//include/cuda.h"
size_t Height;
# 1777 "/usr/local/cuda/bin/..//include/cuda.h"
size_t Depth;
# 1778 "/usr/local/cuda/bin/..//include/cuda.h"
} CUDA_MEMCPY3D;
# 1811 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 1783 "/usr/local/cuda/bin/..//include/cuda.h"
struct CUDA_MEMCPY3D_PEER_st {
# 1784 "/usr/local/cuda/bin/..//include/cuda.h"
size_t srcXInBytes;
# 1785 "/usr/local/cuda/bin/..//include/cuda.h"
size_t srcY;
# 1786 "/usr/local/cuda/bin/..//include/cuda.h"
size_t srcZ;
# 1787 "/usr/local/cuda/bin/..//include/cuda.h"
size_t srcLOD;
# 1788 "/usr/local/cuda/bin/..//include/cuda.h"
CUmemorytype srcMemoryType;
# 1789 "/usr/local/cuda/bin/..//include/cuda.h"
const void *srcHost;
# 1790 "/usr/local/cuda/bin/..//include/cuda.h"
CUdeviceptr srcDevice;
# 1791 "/usr/local/cuda/bin/..//include/cuda.h"
CUarray srcArray;
# 1792 "/usr/local/cuda/bin/..//include/cuda.h"
CUcontext srcContext;
# 1793 "/usr/local/cuda/bin/..//include/cuda.h"
size_t srcPitch;
# 1794 "/usr/local/cuda/bin/..//include/cuda.h"
size_t srcHeight;
# 1796 "/usr/local/cuda/bin/..//include/cuda.h"
size_t dstXInBytes;
# 1797 "/usr/local/cuda/bin/..//include/cuda.h"
size_t dstY;
# 1798 "/usr/local/cuda/bin/..//include/cuda.h"
size_t dstZ;
# 1799 "/usr/local/cuda/bin/..//include/cuda.h"
size_t dstLOD;
# 1800 "/usr/local/cuda/bin/..//include/cuda.h"
CUmemorytype dstMemoryType;
# 1801 "/usr/local/cuda/bin/..//include/cuda.h"
void *dstHost;
# 1802 "/usr/local/cuda/bin/..//include/cuda.h"
CUdeviceptr dstDevice;
# 1803 "/usr/local/cuda/bin/..//include/cuda.h"
CUarray dstArray;
# 1804 "/usr/local/cuda/bin/..//include/cuda.h"
CUcontext dstContext;
# 1805 "/usr/local/cuda/bin/..//include/cuda.h"
size_t dstPitch;
# 1806 "/usr/local/cuda/bin/..//include/cuda.h"
size_t dstHeight;
# 1808 "/usr/local/cuda/bin/..//include/cuda.h"
size_t WidthInBytes;
# 1809 "/usr/local/cuda/bin/..//include/cuda.h"
size_t Height;
# 1810 "/usr/local/cuda/bin/..//include/cuda.h"
size_t Depth;
# 1811 "/usr/local/cuda/bin/..//include/cuda.h"
} CUDA_MEMCPY3D_PEER;
# 1823 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 1816 "/usr/local/cuda/bin/..//include/cuda.h"
struct CUDA_ARRAY_DESCRIPTOR_st {
# 1818 "/usr/local/cuda/bin/..//include/cuda.h"
size_t Width;
# 1819 "/usr/local/cuda/bin/..//include/cuda.h"
size_t Height;
# 1821 "/usr/local/cuda/bin/..//include/cuda.h"
CUarray_format Format;
# 1822 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned NumChannels;
# 1823 "/usr/local/cuda/bin/..//include/cuda.h"
} CUDA_ARRAY_DESCRIPTOR;
# 1837 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 1828 "/usr/local/cuda/bin/..//include/cuda.h"
struct CUDA_ARRAY3D_DESCRIPTOR_st {
# 1830 "/usr/local/cuda/bin/..//include/cuda.h"
size_t Width;
# 1831 "/usr/local/cuda/bin/..//include/cuda.h"
size_t Height;
# 1832 "/usr/local/cuda/bin/..//include/cuda.h"
size_t Depth;
# 1834 "/usr/local/cuda/bin/..//include/cuda.h"
CUarray_format Format;
# 1835 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned NumChannels;
# 1836 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned Flags;
# 1837 "/usr/local/cuda/bin/..//include/cuda.h"
} CUDA_ARRAY3D_DESCRIPTOR;
# 1877 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 1846 "/usr/local/cuda/bin/..//include/cuda.h"
struct CUDA_RESOURCE_DESC_st {
# 1848 "/usr/local/cuda/bin/..//include/cuda.h"
CUresourcetype resType;
# 1850 "/usr/local/cuda/bin/..//include/cuda.h"
union {
# 1851 "/usr/local/cuda/bin/..//include/cuda.h"
struct {
# 1852 "/usr/local/cuda/bin/..//include/cuda.h"
CUarray hArray;
# 1853 "/usr/local/cuda/bin/..//include/cuda.h"
} array;
# 1854 "/usr/local/cuda/bin/..//include/cuda.h"
struct {
# 1855 "/usr/local/cuda/bin/..//include/cuda.h"
CUmipmappedArray hMipmappedArray;
# 1856 "/usr/local/cuda/bin/..//include/cuda.h"
} mipmap;
# 1857 "/usr/local/cuda/bin/..//include/cuda.h"
struct {
# 1858 "/usr/local/cuda/bin/..//include/cuda.h"
CUdeviceptr devPtr;
# 1859 "/usr/local/cuda/bin/..//include/cuda.h"
CUarray_format format;
# 1860 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned numChannels;
# 1861 "/usr/local/cuda/bin/..//include/cuda.h"
size_t sizeInBytes;
# 1862 "/usr/local/cuda/bin/..//include/cuda.h"
} linear;
# 1863 "/usr/local/cuda/bin/..//include/cuda.h"
struct {
# 1864 "/usr/local/cuda/bin/..//include/cuda.h"
CUdeviceptr devPtr;
# 1865 "/usr/local/cuda/bin/..//include/cuda.h"
CUarray_format format;
# 1866 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned numChannels;
# 1867 "/usr/local/cuda/bin/..//include/cuda.h"
size_t width;
# 1868 "/usr/local/cuda/bin/..//include/cuda.h"
size_t height;
# 1869 "/usr/local/cuda/bin/..//include/cuda.h"
size_t pitchInBytes;
# 1870 "/usr/local/cuda/bin/..//include/cuda.h"
} pitch2D;
# 1871 "/usr/local/cuda/bin/..//include/cuda.h"
struct {
# 1872 "/usr/local/cuda/bin/..//include/cuda.h"
int reserved[32];
# 1873 "/usr/local/cuda/bin/..//include/cuda.h"
} reserved;
# 1874 "/usr/local/cuda/bin/..//include/cuda.h"
} res;
# 1876 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned flags;
# 1877 "/usr/local/cuda/bin/..//include/cuda.h"
} CUDA_RESOURCE_DESC;
# 1893 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 1882 "/usr/local/cuda/bin/..//include/cuda.h"
struct CUDA_TEXTURE_DESC_st {
# 1883 "/usr/local/cuda/bin/..//include/cuda.h"
CUaddress_mode addressMode[3];
# 1884 "/usr/local/cuda/bin/..//include/cuda.h"
CUfilter_mode filterMode;
# 1885 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned flags;
# 1886 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned maxAnisotropy;
# 1887 "/usr/local/cuda/bin/..//include/cuda.h"
CUfilter_mode mipmapFilterMode;
# 1888 "/usr/local/cuda/bin/..//include/cuda.h"
float mipmapLevelBias;
# 1889 "/usr/local/cuda/bin/..//include/cuda.h"
float minMipmapLevelClamp;
# 1890 "/usr/local/cuda/bin/..//include/cuda.h"
float maxMipmapLevelClamp;
# 1891 "/usr/local/cuda/bin/..//include/cuda.h"
float borderColor[4];
# 1892 "/usr/local/cuda/bin/..//include/cuda.h"
int reserved[12];
# 1893 "/usr/local/cuda/bin/..//include/cuda.h"
} CUDA_TEXTURE_DESC;
# 1935 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 1898 "/usr/local/cuda/bin/..//include/cuda.h"
enum CUresourceViewFormat_enum {
# 1900 "/usr/local/cuda/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_NONE,
# 1901 "/usr/local/cuda/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_UINT_1X8,
# 1902 "/usr/local/cuda/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_UINT_2X8,
# 1903 "/usr/local/cuda/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_UINT_4X8,
# 1904 "/usr/local/cuda/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_SINT_1X8,
# 1905 "/usr/local/cuda/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_SINT_2X8,
# 1906 "/usr/local/cuda/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_SINT_4X8,
# 1907 "/usr/local/cuda/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_UINT_1X16,
# 1908 "/usr/local/cuda/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_UINT_2X16,
# 1909 "/usr/local/cuda/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_UINT_4X16,
# 1910 "/usr/local/cuda/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_SINT_1X16,
# 1911 "/usr/local/cuda/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_SINT_2X16,
# 1912 "/usr/local/cuda/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_SINT_4X16,
# 1913 "/usr/local/cuda/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_UINT_1X32,
# 1914 "/usr/local/cuda/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_UINT_2X32,
# 1915 "/usr/local/cuda/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_UINT_4X32,
# 1916 "/usr/local/cuda/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_SINT_1X32,
# 1917 "/usr/local/cuda/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_SINT_2X32,
# 1918 "/usr/local/cuda/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_SINT_4X32,
# 1919 "/usr/local/cuda/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_FLOAT_1X16,
# 1920 "/usr/local/cuda/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_FLOAT_2X16,
# 1921 "/usr/local/cuda/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_FLOAT_4X16,
# 1922 "/usr/local/cuda/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_FLOAT_1X32,
# 1923 "/usr/local/cuda/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_FLOAT_2X32,
# 1924 "/usr/local/cuda/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_FLOAT_4X32,
# 1925 "/usr/local/cuda/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_UNSIGNED_BC1,
# 1926 "/usr/local/cuda/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_UNSIGNED_BC2,
# 1927 "/usr/local/cuda/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_UNSIGNED_BC3,
# 1928 "/usr/local/cuda/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_UNSIGNED_BC4,
# 1929 "/usr/local/cuda/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_SIGNED_BC4,
# 1930 "/usr/local/cuda/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_UNSIGNED_BC5,
# 1931 "/usr/local/cuda/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_SIGNED_BC5,
# 1932 "/usr/local/cuda/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_UNSIGNED_BC6H,
# 1933 "/usr/local/cuda/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_SIGNED_BC6H,
# 1934 "/usr/local/cuda/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_UNSIGNED_BC7
# 1935 "/usr/local/cuda/bin/..//include/cuda.h"
} CUresourceViewFormat;
# 1951 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 1940 "/usr/local/cuda/bin/..//include/cuda.h"
struct CUDA_RESOURCE_VIEW_DESC_st {
# 1942 "/usr/local/cuda/bin/..//include/cuda.h"
CUresourceViewFormat format;
# 1943 "/usr/local/cuda/bin/..//include/cuda.h"
size_t width;
# 1944 "/usr/local/cuda/bin/..//include/cuda.h"
size_t height;
# 1945 "/usr/local/cuda/bin/..//include/cuda.h"
size_t depth;
# 1946 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned firstMipmapLevel;
# 1947 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned lastMipmapLevel;
# 1948 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned firstLayer;
# 1949 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned lastLayer;
# 1950 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned reserved[16];
# 1951 "/usr/local/cuda/bin/..//include/cuda.h"
} CUDA_RESOURCE_VIEW_DESC;
# 1959 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 1956 "/usr/local/cuda/bin/..//include/cuda.h"
struct CUDA_POINTER_ATTRIBUTE_P2P_TOKENS_st {
# 1957 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned long long p2pToken;
# 1958 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned vaSpaceToken;
# 1959 "/usr/local/cuda/bin/..//include/cuda.h"
} CUDA_POINTER_ATTRIBUTE_P2P_TOKENS;
# 1979 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 1968 "/usr/local/cuda/bin/..//include/cuda.h"
struct CUDA_LAUNCH_PARAMS_st {
# 1969 "/usr/local/cuda/bin/..//include/cuda.h"
CUfunction function;
# 1970 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned gridDimX;
# 1971 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned gridDimY;
# 1972 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned gridDimZ;
# 1973 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned blockDimX;
# 1974 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned blockDimY;
# 1975 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned blockDimZ;
# 1976 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned sharedMemBytes;
# 1977 "/usr/local/cuda/bin/..//include/cuda.h"
CUstream hStream;
# 1978 "/usr/local/cuda/bin/..//include/cuda.h"
void **kernelParams;
# 1979 "/usr/local/cuda/bin/..//include/cuda.h"
} CUDA_LAUNCH_PARAMS;
# 2009 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 1988 "/usr/local/cuda/bin/..//include/cuda.h"
enum CUexternalMemoryHandleType_enum {
# 1992 "/usr/local/cuda/bin/..//include/cuda.h"
CU_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD = 1,
# 1996 "/usr/local/cuda/bin/..//include/cuda.h"
CU_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32,
# 2000 "/usr/local/cuda/bin/..//include/cuda.h"
CU_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT,
# 2004 "/usr/local/cuda/bin/..//include/cuda.h"
CU_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP,
# 2008 "/usr/local/cuda/bin/..//include/cuda.h"
CU_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE
# 2009 "/usr/local/cuda/bin/..//include/cuda.h"
} CUexternalMemoryHandleType;
# 2064 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 2019 "/usr/local/cuda/bin/..//include/cuda.h"
struct CUDA_EXTERNAL_MEMORY_HANDLE_DESC_st {
# 2023 "/usr/local/cuda/bin/..//include/cuda.h"
CUexternalMemoryHandleType type;
# 2024 "/usr/local/cuda/bin/..//include/cuda.h"
union {
# 2030 "/usr/local/cuda/bin/..//include/cuda.h"
int fd;
# 2043 "/usr/local/cuda/bin/..//include/cuda.h"
struct {
# 2047 "/usr/local/cuda/bin/..//include/cuda.h"
void *handle;
# 2052 "/usr/local/cuda/bin/..//include/cuda.h"
const void *name;
# 2053 "/usr/local/cuda/bin/..//include/cuda.h"
} win32;
# 2054 "/usr/local/cuda/bin/..//include/cuda.h"
} handle;
# 2058 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned long long size;
# 2062 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned flags;
# 2063 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned reserved[16];
# 2064 "/usr/local/cuda/bin/..//include/cuda.h"
} CUDA_EXTERNAL_MEMORY_HANDLE_DESC;
# 2083 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 2069 "/usr/local/cuda/bin/..//include/cuda.h"
struct CUDA_EXTERNAL_MEMORY_BUFFER_DESC_st {
# 2073 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned long long offset;
# 2077 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned long long size;
# 2081 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned flags;
# 2082 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned reserved[16];
# 2083 "/usr/local/cuda/bin/..//include/cuda.h"
} CUDA_EXTERNAL_MEMORY_BUFFER_DESC;
# 2103 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 2088 "/usr/local/cuda/bin/..//include/cuda.h"
struct CUDA_EXTERNAL_MEMORY_MIPMAPPED_ARRAY_DESC_st {
# 2093 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned long long offset;
# 2097 "/usr/local/cuda/bin/..//include/cuda.h"
CUDA_ARRAY3D_DESCRIPTOR arrayDesc;
# 2101 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned numLevels;
# 2102 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned reserved[16];
# 2103 "/usr/local/cuda/bin/..//include/cuda.h"
} CUDA_EXTERNAL_MEMORY_MIPMAPPED_ARRAY_DESC;
# 2125 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 2108 "/usr/local/cuda/bin/..//include/cuda.h"
enum CUexternalSemaphoreHandleType_enum {
# 2112 "/usr/local/cuda/bin/..//include/cuda.h"
CU_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD = 1,
# 2116 "/usr/local/cuda/bin/..//include/cuda.h"
CU_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32,
# 2120 "/usr/local/cuda/bin/..//include/cuda.h"
CU_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT,
# 2124 "/usr/local/cuda/bin/..//include/cuda.h"
CU_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE
# 2125 "/usr/local/cuda/bin/..//include/cuda.h"
} CUexternalSemaphoreHandleType;
# 2170 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 2130 "/usr/local/cuda/bin/..//include/cuda.h"
struct CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_st {
# 2134 "/usr/local/cuda/bin/..//include/cuda.h"
CUexternalSemaphoreHandleType type;
# 2135 "/usr/local/cuda/bin/..//include/cuda.h"
union {
# 2141 "/usr/local/cuda/bin/..//include/cuda.h"
int fd;
# 2153 "/usr/local/cuda/bin/..//include/cuda.h"
struct {
# 2157 "/usr/local/cuda/bin/..//include/cuda.h"
void *handle;
# 2162 "/usr/local/cuda/bin/..//include/cuda.h"
const void *name;
# 2163 "/usr/local/cuda/bin/..//include/cuda.h"
} win32;
# 2164 "/usr/local/cuda/bin/..//include/cuda.h"
} handle;
# 2168 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned flags;
# 2169 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned reserved[16];
# 2170 "/usr/local/cuda/bin/..//include/cuda.h"
} CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC;
# 2193 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 2175 "/usr/local/cuda/bin/..//include/cuda.h"
struct CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_st {
# 2176 "/usr/local/cuda/bin/..//include/cuda.h"
struct {
# 2180 "/usr/local/cuda/bin/..//include/cuda.h"
struct {
# 2184 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned long long value;
# 2185 "/usr/local/cuda/bin/..//include/cuda.h"
} fence;
# 2186 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned reserved[16];
# 2187 "/usr/local/cuda/bin/..//include/cuda.h"
} params;
# 2191 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned flags;
# 2192 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned reserved[16];
# 2193 "/usr/local/cuda/bin/..//include/cuda.h"
} CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS;
# 2216 "/usr/local/cuda/bin/..//include/cuda.h"
typedef
# 2198 "/usr/local/cuda/bin/..//include/cuda.h"
struct CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_st {
# 2199 "/usr/local/cuda/bin/..//include/cuda.h"
struct {
# 2203 "/usr/local/cuda/bin/..//include/cuda.h"
struct {
# 2207 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned long long value;
# 2208 "/usr/local/cuda/bin/..//include/cuda.h"
} fence;
# 2209 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned reserved[16];
# 2210 "/usr/local/cuda/bin/..//include/cuda.h"
} params;
# 2214 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned flags;
# 2215 "/usr/local/cuda/bin/..//include/cuda.h"
unsigned reserved[16];
# 2216 "/usr/local/cuda/bin/..//include/cuda.h"
} CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS;
# 2386 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuGetErrorString(CUresult error, const char ** pStr);
# 2407 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuGetErrorName(CUresult error, const char ** pStr);
# 2439 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuInit(unsigned Flags);
# 2477 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuDriverGetVersion(int * driverVersion);
# 2519 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuDeviceGet(CUdevice * device, int ordinal);
# 2547 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuDeviceGetCount(int * count);
# 2578 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuDeviceGetName(char * name, int len, CUdevice dev);
# 2607 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuDeviceGetUuid(CUuuid * uuid, CUdevice dev);
# 2667 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuDeviceTotalMem_v2(size_t * bytes, CUdevice dev);
# 2872 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuDeviceGetAttribute(int * pi, CUdevice_attribute attrib, CUdevice dev);
# 2950 "/usr/local/cuda/bin/..//include/cuda.h"
__attribute((deprecated)) CUresult cuDeviceGetProperties(CUdevprop * prop, CUdevice dev);
# 2984 "/usr/local/cuda/bin/..//include/cuda.h"
__attribute((deprecated)) CUresult cuDeviceComputeCapability(int * major, int * minor, CUdevice dev);
# 3052 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuDevicePrimaryCtxRetain(CUcontext * pctx, CUdevice dev);
# 3086 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuDevicePrimaryCtxRelease(CUdevice dev);
# 3150 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuDevicePrimaryCtxSetFlags(CUdevice dev, unsigned flags);
# 3176 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuDevicePrimaryCtxGetState(CUdevice dev, unsigned * flags, int * active);
# 3214 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuDevicePrimaryCtxReset(CUdevice dev);
# 3320 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuCtxCreate_v2(CUcontext * pctx, unsigned flags, CUdevice dev);
# 3360 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuCtxDestroy_v2(CUcontext ctx);
# 3396 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuCtxPushCurrent_v2(CUcontext ctx);
# 3430 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuCtxPopCurrent_v2(CUcontext * pctx);
# 3460 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuCtxSetCurrent(CUcontext ctx);
# 3484 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuCtxGetCurrent(CUcontext * pctx);
# 3515 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuCtxGetDevice(CUdevice * device);
# 3544 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuCtxGetFlags(unsigned * flags);
# 3575 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuCtxSynchronize();
# 3661 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuCtxSetLimit(CUlimit limit, size_t value);
# 3701 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuCtxGetLimit(size_t * pvalue, CUlimit limit);
# 3745 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuCtxGetCacheConfig(CUfunc_cache * pconfig);
# 3796 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuCtxSetCacheConfig(CUfunc_cache config);
# 3839 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuCtxGetSharedMemConfig(CUsharedconfig * pConfig);
# 3892 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuCtxSetSharedMemConfig(CUsharedconfig config);
# 3931 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuCtxGetApiVersion(CUcontext ctx, unsigned * version);
# 3971 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuCtxGetStreamPriorityRange(int * leastPriority, int * greatestPriority);
# 4026 "/usr/local/cuda/bin/..//include/cuda.h"
__attribute((deprecated)) CUresult cuCtxAttach(CUcontext * pctx, unsigned flags);
# 4062 "/usr/local/cuda/bin/..//include/cuda.h"
__attribute((deprecated)) CUresult cuCtxDetach(CUcontext ctx);
# 4117 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuModuleLoad(CUmodule * module, const char * fname);
# 4154 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuModuleLoadData(CUmodule * module, const void * image);
# 4197 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuModuleLoadDataEx(CUmodule * module, const void * image, unsigned numOptions, CUjit_option * options, void ** optionValues);
# 4239 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuModuleLoadFatBinary(CUmodule * module, const void * fatCubin);
# 4264 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuModuleUnload(CUmodule hmod);
# 4294 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuModuleGetFunction(CUfunction * hfunc, CUmodule hmod, const char * name);
# 4330 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuModuleGetGlobal_v2(CUdeviceptr * dptr, size_t * bytes, CUmodule hmod, const char * name);
# 4365 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuModuleGetTexRef(CUtexref * pTexRef, CUmodule hmod, const char * name);
# 4397 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuModuleGetSurfRef(CUsurfref * pSurfRef, CUmodule hmod, const char * name);
# 4440 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuLinkCreate_v2(unsigned numOptions, CUjit_option * options, void ** optionValues, CUlinkState * stateOut);
# 4477 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuLinkAddData_v2(CUlinkState state, CUjitInputType type, void * data, size_t size, const char * name, unsigned numOptions, CUjit_option * options, void ** optionValues);
# 4516 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuLinkAddFile_v2(CUlinkState state, CUjitInputType type, const char * path, unsigned numOptions, CUjit_option * options, void ** optionValues);
# 4543 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuLinkComplete(CUlinkState state, void ** cubinOut, size_t * sizeOut);
# 4557 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuLinkDestroy(CUlinkState state);
# 4606 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemGetInfo_v2(size_t * free, size_t * total);
# 4640 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemAlloc_v2(CUdeviceptr * dptr, size_t bytesize);
# 4702 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemAllocPitch_v2(CUdeviceptr * dptr, size_t * pPitch, size_t WidthInBytes, size_t Height, unsigned ElementSizeBytes);
# 4732 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemFree_v2(CUdeviceptr dptr);
# 4766 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemGetAddressRange_v2(CUdeviceptr * pbase, size_t * psize, CUdeviceptr dptr);
# 4813 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemAllocHost_v2(void ** pp, size_t bytesize);
# 4844 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemFreeHost(void * p);
# 4926 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemHostAlloc(void ** pp, size_t bytesize, unsigned Flags);
# 4980 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemHostGetDevicePointer_v2(CUdeviceptr * pdptr, void * p, unsigned Flags);
# 5008 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemHostGetFlags(unsigned * pFlags, void * p);
# 5120 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemAllocManaged(CUdeviceptr * dptr, size_t bytesize, unsigned flags);
# 5153 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuDeviceGetByPCIBusId(CUdevice * dev, const char * pciBusId);
# 5185 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuDeviceGetPCIBusId(char * pciBusId, int len, CUdevice dev);
# 5231 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuIpcGetEventHandle(CUipcEventHandle * pHandle, CUevent event);
# 5272 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuIpcOpenEventHandle(CUevent * phEvent, CUipcEventHandle handle);
# 5313 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuIpcGetMemHandle(CUipcMemHandle * pHandle, CUdeviceptr dptr);
# 5368 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuIpcOpenMemHandle(CUdeviceptr * pdptr, CUipcMemHandle handle, unsigned Flags);
# 5402 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuIpcCloseMemHandle(CUdeviceptr dptr);
# 5491 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemHostRegister_v2(void * p, size_t bytesize, unsigned Flags);
# 5517 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemHostUnregister(void * p);
# 5556 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemcpy(CUdeviceptr dst, CUdeviceptr src, size_t ByteCount);
# 5586 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemcpyPeer(CUdeviceptr dstDevice, CUcontext dstContext, CUdeviceptr srcDevice, CUcontext srcContext, size_t ByteCount);
# 5624 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemcpyHtoD_v2(CUdeviceptr dstDevice, const void * srcHost, size_t ByteCount);
# 5659 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemcpyDtoH_v2(void * dstHost, CUdeviceptr srcDevice, size_t ByteCount);
# 5695 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemcpyDtoD_v2(CUdeviceptr dstDevice, CUdeviceptr srcDevice, size_t ByteCount);
# 5731 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemcpyDtoA_v2(CUarray dstArray, size_t dstOffset, CUdeviceptr srcDevice, size_t ByteCount);
# 5769 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemcpyAtoD_v2(CUdeviceptr dstDevice, CUarray srcArray, size_t srcOffset, size_t ByteCount);
# 5805 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemcpyHtoA_v2(CUarray dstArray, size_t dstOffset, const void * srcHost, size_t ByteCount);
# 5841 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemcpyAtoH_v2(void * dstHost, CUarray srcArray, size_t srcOffset, size_t ByteCount);
# 5881 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemcpyAtoA_v2(CUarray dstArray, size_t dstOffset, CUarray srcArray, size_t srcOffset, size_t ByteCount);
# 6045 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemcpy2D_v2(const CUDA_MEMCPY2D * pCopy);
# 6207 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemcpy2DUnaligned_v2(const CUDA_MEMCPY2D * pCopy);
# 6376 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemcpy3D_v2(const CUDA_MEMCPY3D * pCopy);
# 6402 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemcpy3DPeer(const CUDA_MEMCPY3D_PEER * pCopy);
# 6446 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemcpyAsync(CUdeviceptr dst, CUdeviceptr src, size_t ByteCount, CUstream hStream);
# 6479 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemcpyPeerAsync(CUdeviceptr dstDevice, CUcontext dstContext, CUdeviceptr srcDevice, CUcontext srcContext, size_t ByteCount, CUstream hStream);
# 6521 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemcpyHtoDAsync_v2(CUdeviceptr dstDevice, const void * srcHost, size_t ByteCount, CUstream hStream);
# 6561 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemcpyDtoHAsync_v2(void * dstHost, CUdeviceptr srcDevice, size_t ByteCount, CUstream hStream);
# 6602 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemcpyDtoDAsync_v2(CUdeviceptr dstDevice, CUdeviceptr srcDevice, size_t ByteCount, CUstream hStream);
# 6643 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemcpyHtoAAsync_v2(CUarray dstArray, size_t dstOffset, const void * srcHost, size_t ByteCount, CUstream hStream);
# 6684 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemcpyAtoHAsync_v2(void * dstHost, CUarray srcArray, size_t srcOffset, size_t ByteCount, CUstream hStream);
# 6853 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemcpy2DAsync_v2(const CUDA_MEMCPY2D * pCopy, CUstream hStream);
# 7027 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemcpy3DAsync_v2(const CUDA_MEMCPY3D * pCopy, CUstream hStream);
# 7055 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemcpy3DPeerAsync(const CUDA_MEMCPY3D_PEER * pCopy, CUstream hStream);
# 7092 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemsetD8_v2(CUdeviceptr dstDevice, unsigned char uc, size_t N);
# 7127 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemsetD16_v2(CUdeviceptr dstDevice, unsigned short us, size_t N);
# 7162 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemsetD32_v2(CUdeviceptr dstDevice, unsigned ui, size_t N);
# 7202 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemsetD2D8_v2(CUdeviceptr dstDevice, size_t dstPitch, unsigned char uc, size_t Width, size_t Height);
# 7243 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemsetD2D16_v2(CUdeviceptr dstDevice, size_t dstPitch, unsigned short us, size_t Width, size_t Height);
# 7284 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemsetD2D32_v2(CUdeviceptr dstDevice, size_t dstPitch, unsigned ui, size_t Width, size_t Height);
# 7321 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemsetD8Async(CUdeviceptr dstDevice, unsigned char uc, size_t N, CUstream hStream);
# 7358 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemsetD16Async(CUdeviceptr dstDevice, unsigned short us, size_t N, CUstream hStream);
# 7394 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemsetD32Async(CUdeviceptr dstDevice, unsigned ui, size_t N, CUstream hStream);
# 7436 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemsetD2D8Async(CUdeviceptr dstDevice, size_t dstPitch, unsigned char uc, size_t Width, size_t Height, CUstream hStream);
# 7479 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemsetD2D16Async(CUdeviceptr dstDevice, size_t dstPitch, unsigned short us, size_t Width, size_t Height, CUstream hStream);
# 7522 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemsetD2D32Async(CUdeviceptr dstDevice, size_t dstPitch, unsigned ui, size_t Width, size_t Height, CUstream hStream);
# 7626 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuArrayCreate_v2(CUarray * pHandle, const CUDA_ARRAY_DESCRIPTOR * pAllocateArray);
# 7660 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuArrayGetDescriptor_v2(CUDA_ARRAY_DESCRIPTOR * pArrayDescriptor, CUarray hArray);
# 7693 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuArrayDestroy(CUarray hArray);
# 7874 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuArray3DCreate_v2(CUarray * pHandle, const CUDA_ARRAY3D_DESCRIPTOR * pAllocateArray);
# 7912 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuArray3DGetDescriptor_v2(CUDA_ARRAY3D_DESCRIPTOR * pArrayDescriptor, CUarray hArray);
# 8057 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMipmappedArrayCreate(CUmipmappedArray * pHandle, const CUDA_ARRAY3D_DESCRIPTOR * pMipmappedArrayDesc, unsigned numMipmapLevels);
# 8087 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMipmappedArrayGetLevel(CUarray * pLevelArray, CUmipmappedArray hMipmappedArray, unsigned level);
# 8112 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMipmappedArrayDestroy(CUmipmappedArray hMipmappedArray);
# 8364 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuPointerGetAttribute(void * data, CUpointer_attribute attribute, CUdeviceptr ptr);
# 8434 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemPrefetchAsync(CUdeviceptr devPtr, size_t count, CUdevice dstDevice, CUstream hStream);
# 8548 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemAdvise(CUdeviceptr devPtr, size_t count, CUmem_advise advice, CUdevice device);
# 8606 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemRangeGetAttribute(void * data, size_t dataSize, CUmem_range_attribute attribute, CUdeviceptr devPtr, size_t count);
# 8646 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuMemRangeGetAttributes(void ** data, size_t * dataSizes, CUmem_range_attribute * attributes, size_t numAttributes, CUdeviceptr devPtr, size_t count);
# 8690 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuPointerSetAttribute(const void * value, CUpointer_attribute attribute, CUdeviceptr ptr);
# 8735 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuPointerGetAttributes(unsigned numAttributes, CUpointer_attribute * attributes, void ** data, CUdeviceptr ptr);
# 8785 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuStreamCreate(CUstream * phStream, unsigned Flags);
# 8834 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuStreamCreateWithPriority(CUstream * phStream, unsigned flags, int priority);
# 8865 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuStreamGetPriority(CUstream hStream, int * priority);
# 8893 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuStreamGetFlags(CUstream hStream, unsigned * flags);
# 8939 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuStreamGetCtx(CUstream hStream, CUcontext * pctx);
# 8972 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuStreamWaitEvent(CUstream hStream, CUevent hEvent, unsigned Flags);
# 9047 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuStreamAddCallback(CUstream hStream, CUstreamCallback callback, void * userData, unsigned flags);
# 9079 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuStreamBeginCapture(CUstream hStream);
# 9104 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuStreamEndCapture(CUstream hStream, CUgraph * phGraph);
# 9144 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuStreamIsCapturing(CUstream hStream, CUstreamCaptureStatus * captureStatus);
# 9236 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuStreamAttachMemAsync(CUstream hStream, CUdeviceptr dptr, size_t length, unsigned flags);
# 9268 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuStreamQuery(CUstream hStream);
# 9297 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuStreamSynchronize(CUstream hStream);
# 9328 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuStreamDestroy_v2(CUstream hStream);
# 9385 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuEventCreate(CUevent * phEvent, unsigned Flags);
# 9426 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuEventRecord(CUevent hEvent, CUstream hStream);
# 9458 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuEventQuery(CUevent hEvent);
# 9489 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuEventSynchronize(CUevent hEvent);
# 9519 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuEventDestroy_v2(CUevent hEvent);
# 9564 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuEventElapsedTime(float * pMilliseconds, CUevent hStart, CUevent hEnd);
# 9700 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuImportExternalMemory(CUexternalMemory * extMem_out, const CUDA_EXTERNAL_MEMORY_HANDLE_DESC * memHandleDesc);
# 9751 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuExternalMemoryGetMappedBuffer(CUdeviceptr * devPtr, CUexternalMemory extMem, const CUDA_EXTERNAL_MEMORY_BUFFER_DESC * bufferDesc);
# 9798 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuExternalMemoryGetMappedMipmappedArray(CUmipmappedArray * mipmap, CUexternalMemory extMem, const CUDA_EXTERNAL_MEMORY_MIPMAPPED_ARRAY_DESC * mipmapDesc);
# 9820 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuDestroyExternalMemory(CUexternalMemory extMem);
# 9917 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuImportExternalSemaphore(CUexternalSemaphore * extSem_out, const CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC * semHandleDesc);
# 9955 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuSignalExternalSemaphoresAsync(const CUexternalSemaphore * extSemArray, const CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS * paramsArray, unsigned numExtSems, CUstream stream);
# 9997 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuWaitExternalSemaphoresAsync(const CUexternalSemaphore * extSemArray, const CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS * paramsArray, unsigned numExtSems, CUstream stream);
# 10018 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuDestroyExternalSemaphore(CUexternalSemaphore extSem);
# 10105 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuStreamWaitValue32(CUstream stream, CUdeviceptr addr, cuuint32_t value, unsigned flags);
# 10140 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuStreamWaitValue64(CUstream stream, CUdeviceptr addr, cuuint64_t value, unsigned flags);
# 10175 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuStreamWriteValue32(CUstream stream, CUdeviceptr addr, cuuint32_t value, unsigned flags);
# 10209 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuStreamWriteValue64(CUstream stream, CUdeviceptr addr, cuuint64_t value, unsigned flags);
# 10244 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuStreamBatchMemOp(CUstream stream, unsigned count, CUstreamBatchMemOpParams * paramArray, unsigned flags);
# 10318 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuFuncGetAttribute(int * pi, CUfunction_attribute attrib, CUfunction hfunc);
# 10365 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuFuncSetAttribute(CUfunction hfunc, CUfunction_attribute attrib, int value);
# 10410 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuFuncSetCacheConfig(CUfunction hfunc, CUfunc_cache config);
# 10463 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuFuncSetSharedMemConfig(CUfunction hfunc, CUsharedconfig config);
# 10578 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuLaunchKernel(CUfunction f, unsigned gridDimX, unsigned gridDimY, unsigned gridDimZ, unsigned blockDimX, unsigned blockDimY, unsigned blockDimZ, unsigned sharedMemBytes, CUstream hStream, void ** kernelParams, void ** extra);
# 10667 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuLaunchCooperativeKernel(CUfunction f, unsigned gridDimX, unsigned gridDimY, unsigned gridDimZ, unsigned blockDimX, unsigned blockDimY, unsigned blockDimZ, unsigned sharedMemBytes, CUstream hStream, void ** kernelParams);
# 10811 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuLaunchCooperativeKernelMultiDevice(CUDA_LAUNCH_PARAMS * launchParamsList, unsigned numDevices, unsigned flags);
# 10880 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuLaunchHostFunc(CUstream hStream, CUhostFn fn, void * userData);
# 10932 "/usr/local/cuda/bin/..//include/cuda.h"
__attribute((deprecated)) CUresult cuFuncSetBlockShape(CUfunction hfunc, int x, int y, int z);
# 10966 "/usr/local/cuda/bin/..//include/cuda.h"
__attribute((deprecated)) CUresult cuFuncSetSharedSize(CUfunction hfunc, unsigned bytes);
# 10998 "/usr/local/cuda/bin/..//include/cuda.h"
__attribute((deprecated)) CUresult cuParamSetSize(CUfunction hfunc, unsigned numbytes);
# 11031 "/usr/local/cuda/bin/..//include/cuda.h"
__attribute((deprecated)) CUresult cuParamSeti(CUfunction hfunc, int offset, unsigned value);
# 11064 "/usr/local/cuda/bin/..//include/cuda.h"
__attribute((deprecated)) CUresult cuParamSetf(CUfunction hfunc, int offset, float value);
# 11099 "/usr/local/cuda/bin/..//include/cuda.h"
__attribute((deprecated)) CUresult cuParamSetv(CUfunction hfunc, int offset, void * ptr, unsigned numbytes);
# 11136 "/usr/local/cuda/bin/..//include/cuda.h"
__attribute((deprecated)) CUresult cuLaunch(CUfunction f);
# 11175 "/usr/local/cuda/bin/..//include/cuda.h"
__attribute((deprecated)) CUresult cuLaunchGrid(CUfunction f, int grid_width, int grid_height);
# 11222 "/usr/local/cuda/bin/..//include/cuda.h"
__attribute((deprecated)) CUresult cuLaunchGridAsync(CUfunction f, int grid_width, int grid_height, CUstream hStream);
# 11247 "/usr/local/cuda/bin/..//include/cuda.h"
__attribute((deprecated)) CUresult cuParamSetTexRef(CUfunction hfunc, int texunit, CUtexref hTexRef);
# 11294 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuGraphCreate(CUgraph * phGraph, unsigned flags);
# 11393 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuGraphAddKernelNode(CUgraphNode * phGraphNode, CUgraph hGraph, CUgraphNode * dependencies, size_t numDependencies, const CUDA_KERNEL_NODE_PARAMS * nodeParams);
# 11425 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuGraphKernelNodeGetParams(CUgraphNode hNode, CUDA_KERNEL_NODE_PARAMS * nodeParams);
# 11448 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuGraphKernelNodeSetParams(CUgraphNode hNode, const CUDA_KERNEL_NODE_PARAMS * nodeParams);
# 11496 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuGraphAddMemcpyNode(CUgraphNode * phGraphNode, CUgraph hGraph, CUgraphNode * dependencies, size_t numDependencies, const CUDA_MEMCPY3D * copyParams, CUcontext ctx);
# 11519 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuGraphMemcpyNodeGetParams(CUgraphNode hNode, CUDA_MEMCPY3D * nodeParams);
# 11542 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuGraphMemcpyNodeSetParams(CUgraphNode hNode, const CUDA_MEMCPY3D * nodeParams);
# 11584 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuGraphAddMemsetNode(CUgraphNode * phGraphNode, CUgraph hGraph, CUgraphNode * dependencies, size_t numDependencies, const CUDA_MEMSET_NODE_PARAMS * memsetParams, CUcontext ctx);
# 11607 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuGraphMemsetNodeGetParams(CUgraphNode hNode, CUDA_MEMSET_NODE_PARAMS * nodeParams);
# 11630 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuGraphMemsetNodeSetParams(CUgraphNode hNode, const CUDA_MEMSET_NODE_PARAMS * nodeParams);
# 11669 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuGraphAddHostNode(CUgraphNode * phGraphNode, CUgraph hGraph, CUgraphNode * dependencies, size_t numDependencies, const CUDA_HOST_NODE_PARAMS * nodeParams);
# 11692 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuGraphHostNodeGetParams(CUgraphNode hNode, CUDA_HOST_NODE_PARAMS * nodeParams);
# 11715 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuGraphHostNodeSetParams(CUgraphNode hNode, const CUDA_HOST_NODE_PARAMS * nodeParams);
# 11753 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuGraphAddChildGraphNode(CUgraphNode * phGraphNode, CUgraph hGraph, CUgraphNode * dependencies, size_t numDependencies, CUgraph childGraph);
# 11777 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuGraphChildGraphNodeGetGraph(CUgraphNode hNode, CUgraph * phGraph);
# 11815 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuGraphAddEmptyNode(CUgraphNode * phGraphNode, CUgraph hGraph, CUgraphNode * dependencies, size_t numDependencies);
# 11840 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuGraphClone(CUgraph * phGraphClone, CUgraph originalGraph);
# 11866 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuGraphNodeFindInClone(CUgraphNode * phNode, CUgraphNode hOriginalNode, CUgraph hClonedGraph);
# 11897 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuGraphNodeGetType(CUgraphNode hNode, CUgraphNodeType * type);
# 11928 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuGraphGetNodes(CUgraph hGraph, CUgraphNode * nodes, size_t * numNodes);
# 11959 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuGraphGetRootNodes(CUgraph hGraph, CUgraphNode * rootNodes, size_t * numRootNodes);
# 11993 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuGraphGetEdges(CUgraph hGraph, CUgraphNode * from, CUgraphNode * to, size_t * numEdges);
# 12024 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuGraphNodeGetDependencies(CUgraphNode hNode, CUgraphNode * dependencies, size_t * numDependencies);
# 12056 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuGraphNodeGetDependentNodes(CUgraphNode hNode, CUgraphNode * dependentNodes, size_t * numDependentNodes);
# 12085 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuGraphAddDependencies(CUgraph hGraph, CUgraphNode * from, CUgraphNode * to, size_t numDependencies);
# 12114 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuGraphRemoveDependencies(CUgraph hGraph, CUgraphNode * from, CUgraphNode * to, size_t numDependencies);
# 12138 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuGraphDestroyNode(CUgraphNode hNode);
# 12174 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuGraphInstantiate(CUgraphExec * phGraphExec, CUgraph hGraph, CUgraphNode * phErrorNode, char * logBuffer, size_t bufferSize);
# 12199 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuGraphLaunch(CUgraphExec hGraphExec, CUstream hStream);
# 12223 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuGraphExecDestroy(CUgraphExec hGraphExec);
# 12243 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuGraphDestroy(CUgraph hGraph);
# 12283 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuOccupancyMaxActiveBlocksPerMultiprocessor(int * numBlocks, CUfunction func, int blockSize, size_t dynamicSMemSize);
# 12325 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int * numBlocks, CUfunction func, int blockSize, size_t dynamicSMemSize, unsigned flags);
# 12377 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuOccupancyMaxPotentialBlockSize(int * minGridSize, int * blockSize, CUfunction func, CUoccupancyB2DSize blockSizeToDynamicSMemSize, size_t dynamicSMemSize, int blockSizeLimit);
# 12423 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuOccupancyMaxPotentialBlockSizeWithFlags(int * minGridSize, int * blockSize, CUfunction func, CUoccupancyB2DSize blockSizeToDynamicSMemSize, size_t dynamicSMemSize, int blockSizeLimit, unsigned flags);
# 12467 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuTexRefSetArray(CUtexref hTexRef, CUarray hArray, unsigned Flags);
# 12495 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuTexRefSetMipmappedArray(CUtexref hTexRef, CUmipmappedArray hMipmappedArray, unsigned Flags);
# 12540 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuTexRefSetAddress_v2(size_t * ByteOffset, CUtexref hTexRef, CUdeviceptr dptr, size_t bytes);
# 12593 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuTexRefSetAddress2D_v3(CUtexref hTexRef, const CUDA_ARRAY_DESCRIPTOR * desc, CUdeviceptr dptr, size_t Pitch);
# 12627 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuTexRefSetFormat(CUtexref hTexRef, CUarray_format fmt, int NumPackedComponents);
# 12671 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuTexRefSetAddressMode(CUtexref hTexRef, int dim, CUaddress_mode am);
# 12705 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuTexRefSetFilterMode(CUtexref hTexRef, CUfilter_mode fm);
# 12739 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuTexRefSetMipmapFilterMode(CUtexref hTexRef, CUfilter_mode fm);
# 12766 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuTexRefSetMipmapLevelBias(CUtexref hTexRef, float bias);
# 12795 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuTexRefSetMipmapLevelClamp(CUtexref hTexRef, float minMipmapLevelClamp, float maxMipmapLevelClamp);
# 12823 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuTexRefSetMaxAnisotropy(CUtexref hTexRef, unsigned maxAniso);
# 12857 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuTexRefSetBorderColor(CUtexref hTexRef, float * pBorderColor);
# 12896 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuTexRefSetFlags(CUtexref hTexRef, unsigned Flags);
# 12922 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuTexRefGetAddress_v2(CUdeviceptr * pdptr, CUtexref hTexRef);
# 12948 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuTexRefGetArray(CUarray * phArray, CUtexref hTexRef);
# 12973 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuTexRefGetMipmappedArray(CUmipmappedArray * phMipmappedArray, CUtexref hTexRef);
# 12999 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuTexRefGetAddressMode(CUaddress_mode * pam, CUtexref hTexRef, int dim);
# 13023 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuTexRefGetFilterMode(CUfilter_mode * pfm, CUtexref hTexRef);
# 13049 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuTexRefGetFormat(CUarray_format * pFormat, int * pNumChannels, CUtexref hTexRef);
# 13073 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuTexRefGetMipmapFilterMode(CUfilter_mode * pfm, CUtexref hTexRef);
# 13097 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuTexRefGetMipmapLevelBias(float * pbias, CUtexref hTexRef);
# 13122 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuTexRefGetMipmapLevelClamp(float * pminMipmapLevelClamp, float * pmaxMipmapLevelClamp, CUtexref hTexRef);
# 13146 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuTexRefGetMaxAnisotropy(int * pmaxAniso, CUtexref hTexRef);
# 13173 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuTexRefGetBorderColor(float * pBorderColor, CUtexref hTexRef);
# 13196 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuTexRefGetFlags(unsigned * pFlags, CUtexref hTexRef);
# 13235 "/usr/local/cuda/bin/..//include/cuda.h"
__attribute((deprecated)) CUresult cuTexRefCreate(CUtexref * pTexRef);
# 13255 "/usr/local/cuda/bin/..//include/cuda.h"
__attribute((deprecated)) CUresult cuTexRefDestroy(CUtexref hTexRef);
# 13297 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuSurfRefSetArray(CUsurfref hSurfRef, CUarray hArray, unsigned Flags);
# 13318 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuSurfRefGetArray(CUarray * phArray, CUsurfref hSurfRef);
# 13542 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuTexObjectCreate(CUtexObject * pTexObject, const CUDA_RESOURCE_DESC * pResDesc, const CUDA_TEXTURE_DESC * pTexDesc, const CUDA_RESOURCE_VIEW_DESC * pResViewDesc);
# 13562 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuTexObjectDestroy(CUtexObject texObject);
# 13583 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuTexObjectGetResourceDesc(CUDA_RESOURCE_DESC * pResDesc, CUtexObject texObject);
# 13604 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuTexObjectGetTextureDesc(CUDA_TEXTURE_DESC * pTexDesc, CUtexObject texObject);
# 13626 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuTexObjectGetResourceViewDesc(CUDA_RESOURCE_VIEW_DESC * pResViewDesc, CUtexObject texObject);
# 13669 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuSurfObjectCreate(CUsurfObject * pSurfObject, const CUDA_RESOURCE_DESC * pResDesc);
# 13689 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuSurfObjectDestroy(CUsurfObject surfObject);
# 13710 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuSurfObjectGetResourceDesc(CUDA_RESOURCE_DESC * pResDesc, CUsurfObject surfObject);
# 13755 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuDeviceCanAccessPeer(int * canAccessPeer, CUdevice dev, CUdevice peerDev);
# 13806 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuCtxEnablePeerAccess(CUcontext peerContext, unsigned Flags);
# 13833 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuCtxDisablePeerAccess(CUcontext peerContext);
# 13877 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuDeviceGetP2PAttribute(int * value, CUdevice_P2PAttribute attrib, CUdevice srcDevice, CUdevice dstDevice);
# 13923 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuGraphicsUnregisterResource(CUgraphicsResource resource);
# 13963 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuGraphicsSubResourceGetMappedArray(CUarray * pArray, CUgraphicsResource resource, unsigned arrayIndex, unsigned mipLevel);
# 13996 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuGraphicsResourceGetMappedMipmappedArray(CUmipmappedArray * pMipmappedArray, CUgraphicsResource resource);
# 14033 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuGraphicsResourceGetMappedPointer_v2(CUdeviceptr * pDevPtr, size_t * pSize, CUgraphicsResource resource);
# 14075 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuGraphicsResourceSetMapFlags_v2(CUgraphicsResource resource, unsigned flags);
# 14115 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuGraphicsMapResources(unsigned count, CUgraphicsResource * resources, CUstream hStream);
# 14152 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuGraphicsUnmapResources(unsigned count, CUgraphicsResource * resources, CUstream hStream);
# 14156 "/usr/local/cuda/bin/..//include/cuda.h"
CUresult cuGetExportTable(const void ** ppExportTable, const CUuuid * pExportTableId);
# 14497 "/usr/local/cuda/bin/..//include/cuda.h"
}
# 126 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
struct __half;
# 135 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
struct __half2;
# 148 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
static inline __half __float2half(const float a);
# 160 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
static inline __half __float2half_rn(const float a);
# 172 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
static inline __half __float2half_rz(const float a);
# 184 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
static inline __half __float2half_rd(const float a);
# 196 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
static inline __half __float2half_ru(const float a);
# 207 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
static inline float __half2float(const __half a);
# 221 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
static inline __half2 __float2half2_rn(const float a);
# 238 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
static inline __half2 __floats2half2_rn(const float a, const float b);
# 250 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
static inline float __low2float(const __half2 a);
# 262 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
static inline float __high2float(const __half2 a);
# 280 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
static inline __half2 __float22half2_rn(const float2 a);
# 292 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
static inline float2 __half22float2(const __half2 a);
# 304 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline int __half2int_rn(__half h);
# 316 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline int __half2int_rz(__half h);
# 328 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline int __half2int_rd(__half h);
# 340 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline int __half2int_ru(__half h);
# 353 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __int2half_rn(int i);
# 365 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __int2half_rz(int i);
# 377 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __int2half_rd(int i);
# 389 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __int2half_ru(int i);
# 403 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline short __half2short_rn(__half h);
# 415 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline short __half2short_rz(__half h);
# 427 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline short __half2short_rd(__half h);
# 439 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline short __half2short_ru(__half h);
# 453 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __short2half_rn(short i);
# 465 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __short2half_rz(short i);
# 477 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __short2half_rd(short i);
# 489 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __short2half_ru(short i);
# 502 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline unsigned __half2uint_rn(__half h);
# 514 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline unsigned __half2uint_rz(__half h);
# 526 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline unsigned __half2uint_rd(__half h);
# 538 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline unsigned __half2uint_ru(__half h);
# 551 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __uint2half_rn(unsigned i);
# 563 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __uint2half_rz(unsigned i);
# 575 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __uint2half_rd(unsigned i);
# 587 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __uint2half_ru(unsigned i);
# 601 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline unsigned short __half2ushort_rn(__half h);
# 614 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline unsigned short __half2ushort_rz(__half h);
# 626 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline unsigned short __half2ushort_rd(__half h);
# 638 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline unsigned short __half2ushort_ru(__half h);
# 652 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ushort2half_rn(unsigned short i);
# 665 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ushort2half_rz(unsigned short i);
# 677 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ushort2half_rd(unsigned short i);
# 689 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ushort2half_ru(unsigned short i);
# 703 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline unsigned long long __half2ull_rn(__half h);
# 716 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline unsigned long long __half2ull_rz(__half h);
# 728 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline unsigned long long __half2ull_rd(__half h);
# 740 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline unsigned long long __half2ull_ru(__half h);
# 754 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ull2half_rn(unsigned long long i);
# 767 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ull2half_rz(unsigned long long i);
# 779 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ull2half_rd(unsigned long long i);
# 791 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ull2half_ru(unsigned long long i);
# 805 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline long long __half2ll_rn(__half h);
# 817 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline long long __half2ll_rz(__half h);
# 829 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline long long __half2ll_rd(__half h);
# 841 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline long long __half2ll_ru(__half h);
# 855 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ll2half_rn(long long i);
# 867 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ll2half_rz(long long i);
# 879 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ll2half_rd(long long i);
# 891 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ll2half_ru(long long i);
# 904 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half htrunc(const __half h);
# 915 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half hceil(const __half h);
# 926 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half hfloor(const __half h);
# 939 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half hrint(const __half h);
# 952 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2trunc(const __half2 h);
# 964 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2ceil(const __half2 h);
# 976 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2floor(const __half2 h);
# 990 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2rint(const __half2 h);
# 1003 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __half2half2(const __half a);
# 1015 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __lowhigh2highlow(const __half2 a);
# 1031 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __lows2half2(const __half2 a, const __half2 b);
# 1047 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __highs2half2(const __half2 a, const __half2 b);
# 1058 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __high2half(const __half2 a);
# 1069 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __low2half(const __half2 a);
# 1082 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline int __hisinf(const __half a);
# 1096 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __halves2half2(const __half a, const __half b);
# 1108 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __low2half2(const __half2 a);
# 1120 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __high2half2(const __half2 a);
# 1133 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline short __half_as_short(const __half h);
# 1145 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline unsigned short __half_as_ushort(const __half h);
# 1157 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __short_as_half(const short i);
# 1169 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ushort_as_half(const unsigned short i);
# 1192 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute((deprecated("__shfl() is deprecated in favor of __shfl_sync() and may be removed in a future release (Use -Wno-deprecated-declarations to sup" "press this warning)."))) __attribute__((unused)) static inline __half2 __shfl(__half2 var, int delta, int width = 32);
# 1193 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute((deprecated("__shfl_up() is deprecated in favor of __shfl_up_sync() and may be removed in a future release (Use -Wno-deprecated-declarations " "to suppress this warning)."))) __attribute__((unused)) static inline __half2 __shfl_up(__half2 var, unsigned delta, int width = 32);
# 1194 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute((deprecated("__shfl_down() is deprecated in favor of __shfl_down_sync() and may be removed in a future release (Use -Wno-deprecated-declarati" "ons to suppress this warning)."))) __attribute__((unused)) static inline __half2 __shfl_down(__half2 var, unsigned delta, int width = 32);
# 1195 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute((deprecated("__shfl_xor() is deprecated in favor of __shfl_xor_sync() and may be removed in a future release (Use -Wno-deprecated-declaration" "s to suppress this warning)."))) __attribute__((unused)) static inline __half2 __shfl_xor(__half2 var, int delta, int width = 32);
# 1196 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute((deprecated("__shfl() is deprecated in favor of __shfl_sync() and may be removed in a future release (Use -Wno-deprecated-declarations to sup" "press this warning)."))) __attribute__((unused)) static inline __half __shfl(__half var, int delta, int width = 32);
# 1197 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute((deprecated("__shfl_up() is deprecated in favor of __shfl_up_sync() and may be removed in a future release (Use -Wno-deprecated-declarations " "to suppress this warning)."))) __attribute__((unused)) static inline __half __shfl_up(__half var, unsigned delta, int width = 32);
# 1198 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute((deprecated("__shfl_down() is deprecated in favor of __shfl_down_sync() and may be removed in a future release (Use -Wno-deprecated-declarati" "ons to suppress this warning)."))) __attribute__((unused)) static inline __half __shfl_down(__half var, unsigned delta, int width = 32);
# 1199 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute((deprecated("__shfl_xor() is deprecated in favor of __shfl_xor_sync() and may be removed in a future release (Use -Wno-deprecated-declaration" "s to suppress this warning)."))) __attribute__((unused)) static inline __half __shfl_xor(__half var, int delta, int width = 32);
# 1220 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __shfl_sync(unsigned mask, __half2 var, int delta, int width = 32);
# 1240 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __shfl_up_sync(unsigned mask, __half2 var, unsigned delta, int width = 32);
# 1260 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __shfl_down_sync(unsigned mask, __half2 var, unsigned delta, int width = 32);
# 1279 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __shfl_xor_sync(unsigned mask, __half2 var, int delta, int width = 32);
# 1299 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __shfl_sync(unsigned mask, __half var, int delta, int width = 32);
# 1318 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __shfl_up_sync(unsigned mask, __half var, unsigned delta, int width = 32);
# 1338 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __shfl_down_sync(unsigned mask, __half var, unsigned delta, int width = 32);
# 1357 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __shfl_xor_sync(unsigned mask, __half var, int delta, int width = 32);
# 1366 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __ldg(const __half2 * ptr);
# 1367 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ldg(const __half * ptr);
# 1368 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __ldcg(const __half2 * ptr);
# 1369 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ldcg(const __half * ptr);
# 1370 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __ldca(const __half2 * ptr);
# 1371 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ldca(const __half * ptr);
# 1372 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __ldcs(const __half2 * ptr);
# 1373 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __ldcs(const __half * ptr);
# 1390 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __heq2(const __half2 a, const __half2 b);
# 1404 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hne2(const __half2 a, const __half2 b);
# 1418 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hle2(const __half2 a, const __half2 b);
# 1432 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hge2(const __half2 a, const __half2 b);
# 1446 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hlt2(const __half2 a, const __half2 b);
# 1460 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hgt2(const __half2 a, const __half2 b);
# 1474 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hequ2(const __half2 a, const __half2 b);
# 1488 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hneu2(const __half2 a, const __half2 b);
# 1500 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hleu2(const __half2 a, const __half2 b);
# 1514 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hgeu2(const __half2 a, const __half2 b);
# 1528 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hltu2(const __half2 a, const __half2 b);
# 1542 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hgtu2(const __half2 a, const __half2 b);
# 1554 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hisnan2(const __half2 a);
# 1567 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hadd2(const __half2 a, const __half2 b);
# 1580 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hsub2(const __half2 a, const __half2 b);
# 1593 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hmul2(const __half2 a, const __half2 b);
# 1606 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __h2div(const __half2 a, const __half2 b);
# 1621 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hadd2_sat(const __half2 a, const __half2 b);
# 1636 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hsub2_sat(const __half2 a, const __half2 b);
# 1652 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hmul2_sat(const __half2 a, const __half2 b);
# 1668 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hfma2(const __half2 a, const __half2 b, const __half2 c);
# 1686 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hfma2_sat(const __half2 a, const __half2 b, const __half2 c);
# 1698 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 __hneg2(const __half2 a);
# 1711 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __hadd(const __half a, const __half b);
# 1724 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __hsub(const __half a, const __half b);
# 1737 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __hmul(const __half a, const __half b);
# 1750 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __hdiv(const __half a, const __half b);
# 1764 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __hadd_sat(const __half a, const __half b);
# 1779 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __hsub_sat(const __half a, const __half b);
# 1794 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __hmul_sat(const __half a, const __half b);
# 1810 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __hfma(const __half a, const __half b, const __half c);
# 1828 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __hfma_sat(const __half a, const __half b, const __half c);
# 1839 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half __hneg(const __half a);
# 1857 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hbeq2(const __half2 a, const __half2 b);
# 1875 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hbne2(const __half2 a, const __half2 b);
# 1893 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hble2(const __half2 a, const __half2 b);
# 1911 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hbge2(const __half2 a, const __half2 b);
# 1929 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hblt2(const __half2 a, const __half2 b);
# 1947 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hbgt2(const __half2 a, const __half2 b);
# 1965 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hbequ2(const __half2 a, const __half2 b);
# 1983 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hbneu2(const __half2 a, const __half2 b);
# 2001 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hbleu2(const __half2 a, const __half2 b);
# 2020 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hbgeu2(const __half2 a, const __half2 b);
# 2038 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hbltu2(const __half2 a, const __half2 b);
# 2057 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hbgtu2(const __half2 a, const __half2 b);
# 2070 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline bool __heq(const __half a, const __half b);
# 2083 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hne(const __half a, const __half b);
# 2096 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hle(const __half a, const __half b);
# 2109 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hge(const __half a, const __half b);
# 2122 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hlt(const __half a, const __half b);
# 2135 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hgt(const __half a, const __half b);
# 2149 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hequ(const __half a, const __half b);
# 2163 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hneu(const __half a, const __half b);
# 2177 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hleu(const __half a, const __half b);
# 2191 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hgeu(const __half a, const __half b);
# 2205 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hltu(const __half a, const __half b);
# 2219 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hgtu(const __half a, const __half b);
# 2230 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline bool __hisnan(const __half a);
# 2241 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half hsqrt(const __half a);
# 2254 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half hrsqrt(const __half a);
# 2265 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half hrcp(const __half a);
# 2277 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half hlog(const __half a);
# 2289 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half hlog2(const __half a);
# 2301 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half hlog10(const __half a);
# 2314 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half hexp(const __half a);
# 2327 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half hexp2(const __half a);
# 2340 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half hexp10(const __half a);
# 2351 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half hcos(const __half a);
# 2362 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half hsin(const __half a);
# 2374 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2sqrt(const __half2 a);
# 2387 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2rsqrt(const __half2 a);
# 2399 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2rcp(const __half2 a);
# 2412 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2log(const __half2 a);
# 2425 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2log2(const __half2 a);
# 2438 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2log10(const __half2 a);
# 2451 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2exp(const __half2 a);
# 2464 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2exp2(const __half2 a);
# 2477 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2exp10(const __half2 a);
# 2489 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2cos(const __half2 a);
# 2500 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 h2sin(const __half2 a);
# 2506 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half2 atomicAdd(__half2 * address, __half2 val);
# 2512 "/usr/local/cuda/bin/..//include/cuda_fp16.h"
__attribute__((unused)) static inline __half atomicAdd(__half * address, __half val);
# 122 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
typedef
# 120 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
struct __attribute((aligned(2))) {
# 121 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
unsigned short x;
# 122 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
} __half_raw;
# 126 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
typedef
# 124 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
struct __attribute((aligned(4))) {
# 125 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
unsigned short x, y;
# 126 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
} __half2_raw;
# 134 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#pragma GCC diagnostic ignored "-Weffc++"
# 147 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
struct __attribute((aligned(2))) __half {
# 149 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
protected: unsigned short __x;
# 155 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
public: __half() { }
# 159 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__half(const __half_raw &hr) : __x(hr.x) { }
# 160 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__half &operator=(const __half_raw &hr) { (__x) = (hr.x); return *this; }
# 161 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
volatile __half &operator=(const __half_raw &hr) volatile { (__x) = (hr.x); return *this; }
# 162 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
volatile __half &operator=(const volatile __half_raw &hr) volatile { (__x) = (hr.x); return *this; }
# 163 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
operator __half_raw() const { __half_raw ret; (ret.x) = (__x); return ret; }
# 164 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
operator volatile __half_raw() const volatile { __half_raw ret; (ret.x) = (__x); return ret; }
# 169 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__half(float f) { (__x) = (__float2half(f).__x); }
# 170 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__half(double f) { (__x) = (__float2half(static_cast< float>(f)).__x); }
# 172 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
operator float() const { return __half2float(*this); }
# 173 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__half &operator=(float f) { (__x) = (__float2half(f).__x); return *this; }
# 176 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__half &operator=(double f) { (__x) = (__float2half(static_cast< float>(f)).__x); return *this; }
# 182 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__half(short val) {int *volatile ___ = 0;(void)val;::free(___);}
# 183 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__half(unsigned short val) {int *volatile ___ = 0;(void)val;::free(___);}
# 184 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__half(int val) {int *volatile ___ = 0;(void)val;::free(___);}
# 185 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__half(unsigned val) {int *volatile ___ = 0;(void)val;::free(___);}
# 186 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__half(long long val) {int *volatile ___ = 0;(void)val;::free(___);}
# 187 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__half(unsigned long long val) {int *volatile ___ = 0;(void)val;::free(___);}
# 190 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
operator short() const {int volatile ___ = 1;::exit(___);}
# 191 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__half &operator=(short val) {int volatile ___ = 1;(void)val;::exit(___);}
# 193 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
operator unsigned short() const {int volatile ___ = 1;::exit(___);}
# 194 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__half &operator=(unsigned short val) {int volatile ___ = 1;(void)val;::exit(___);}
# 196 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
operator int() const {int volatile ___ = 1;::exit(___);}
# 197 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__half &operator=(int val) {int volatile ___ = 1;(void)val;::exit(___);}
# 199 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
operator unsigned() const {int volatile ___ = 1;::exit(___);}
# 200 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__half &operator=(unsigned val) {int volatile ___ = 1;(void)val;::exit(___);}
# 202 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
operator long long() const {int volatile ___ = 1;::exit(___);}
# 203 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__half &operator=(long long val) {int volatile ___ = 1;(void)val;::exit(___);}
# 205 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
operator unsigned long long() const {int volatile ___ = 1;::exit(___);}
# 206 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__half &operator=(unsigned long long val) {int volatile ___ = 1;(void)val;::exit(___);}
# 209 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
operator bool() const {int volatile ___ = 1;::exit(___);}
# 212 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
};
# 221 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) inline __half operator+(const __half &lh, const __half &rh) {int volatile ___ = 1;(void)lh;(void)rh;::exit(___);}
# 222 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) inline __half operator-(const __half &lh, const __half &rh) {int volatile ___ = 1;(void)lh;(void)rh;::exit(___);}
# 223 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) inline __half operator*(const __half &lh, const __half &rh) {int volatile ___ = 1;(void)lh;(void)rh;::exit(___);}
# 224 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) inline __half operator/(const __half &lh, const __half &rh) {int volatile ___ = 1;(void)lh;(void)rh;::exit(___);}
# 226 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) inline __half &operator+=(__half &lh, const __half &rh) {int volatile ___ = 1;(void)lh;(void)rh;::exit(___);}
# 227 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) inline __half &operator-=(__half &lh, const __half &rh) {int volatile ___ = 1;(void)lh;(void)rh;::exit(___);}
# 228 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) inline __half &operator*=(__half &lh, const __half &rh) {int volatile ___ = 1;(void)lh;(void)rh;::exit(___);}
# 229 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) inline __half &operator/=(__half &lh, const __half &rh) {int volatile ___ = 1;(void)lh;(void)rh;::exit(___);}
# 232 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) inline __half &operator++(__half &h) {int volatile ___ = 1;(void)h;::exit(___);}
# 233 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) inline __half &operator--(__half &h) {int volatile ___ = 1;(void)h;::exit(___);}
# 234 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) inline __half operator++(__half &h, int) {int volatile ___ = 1;(void)h;::exit(___);}
# 235 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) inline __half operator--(__half &h, int) {int volatile ___ = 1;(void)h;::exit(___);}
# 238 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) inline __half operator+(const __half &h) {int volatile ___ = 1;(void)h;::exit(___);}
# 239 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) inline __half operator-(const __half &h) {int volatile ___ = 1;(void)h;::exit(___);}
# 242 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) inline bool operator==(const __half &lh, const __half &rh) {int volatile ___ = 1;(void)lh;(void)rh;::exit(___);}
# 243 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) inline bool operator!=(const __half &lh, const __half &rh) {int volatile ___ = 1;(void)lh;(void)rh;::exit(___);}
# 244 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) inline bool operator>(const __half &lh, const __half &rh) {int volatile ___ = 1;(void)lh;(void)rh;::exit(___);}
# 245 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) inline bool operator<(const __half &lh, const __half &rh) {int volatile ___ = 1;(void)lh;(void)rh;::exit(___);}
# 246 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) inline bool operator>=(const __half &lh, const __half &rh) {int volatile ___ = 1;(void)lh;(void)rh;::exit(___);}
# 247 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) inline bool operator<=(const __half &lh, const __half &rh) {int volatile ___ = 1;(void)lh;(void)rh;::exit(___);}
# 253 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
struct __attribute((aligned(4))) __half2 {
# 254 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__half x, y;
# 263 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__half2() { }
# 265 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__half2(const __half &a, const __half &b) : x(a), y(b) { }
# 266 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__half2(const __half2 &src) { (*(reinterpret_cast< unsigned *>(&(*this)))) = (*(reinterpret_cast< const unsigned *>(&src))); }
# 267 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__half2 &operator=(const __half2 &src) { (*(reinterpret_cast< unsigned *>(&(*this)))) = (*(reinterpret_cast< const unsigned *>(&src))); return *this; }
# 270 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__half2(const __half2_raw &h2r) { (*(reinterpret_cast< unsigned *>(&(*this)))) = (*(reinterpret_cast< const unsigned *>(&h2r))); }
# 271 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__half2 &operator=(const __half2_raw &h2r) { (*(reinterpret_cast< unsigned *>(&(*this)))) = (*(reinterpret_cast< const unsigned *>(&h2r))); return *this; }
# 272 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
operator __half2_raw() const { __half2_raw ret; (*(reinterpret_cast< unsigned *>(&ret))) = (*(reinterpret_cast< const unsigned *>(&(*this)))); return ret; }
# 273 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
};
# 281 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) inline __half2 operator+(const __half2 &lh, const __half2 &rh) {int volatile ___ = 1;(void)lh;(void)rh;::exit(___);}
# 282 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) inline __half2 operator-(const __half2 &lh, const __half2 &rh) {int volatile ___ = 1;(void)lh;(void)rh;::exit(___);}
# 283 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) inline __half2 operator*(const __half2 &lh, const __half2 &rh) {int volatile ___ = 1;(void)lh;(void)rh;::exit(___);}
# 284 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) inline __half2 operator/(const __half2 &lh, const __half2 &rh) {int volatile ___ = 1;(void)lh;(void)rh;::exit(___);}
# 286 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) inline __half2 &operator+=(__half2 &lh, const __half2 &rh) {int volatile ___ = 1;(void)lh;(void)rh;::exit(___);}
# 287 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) inline __half2 &operator-=(__half2 &lh, const __half2 &rh) {int volatile ___ = 1;(void)lh;(void)rh;::exit(___);}
# 288 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) inline __half2 &operator*=(__half2 &lh, const __half2 &rh) {int volatile ___ = 1;(void)lh;(void)rh;::exit(___);}
# 289 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) inline __half2 &operator/=(__half2 &lh, const __half2 &rh) {int volatile ___ = 1;(void)lh;(void)rh;::exit(___);}
# 291 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) inline __half2 &operator++(__half2 &h) {int volatile ___ = 1;(void)h;::exit(___);}
# 292 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) inline __half2 &operator--(__half2 &h) {int volatile ___ = 1;(void)h;::exit(___);}
# 293 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) inline __half2 operator++(__half2 &h, int) {int volatile ___ = 1;(void)h;::exit(___);}
# 294 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) inline __half2 operator--(__half2 &h, int) {int volatile ___ = 1;(void)h;::exit(___);}
# 296 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) inline __half2 operator+(const __half2 &h) {int volatile ___ = 1;(void)h;::exit(___);}
# 297 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) inline __half2 operator-(const __half2 &h) {int volatile ___ = 1;(void)h;::exit(___);}
# 299 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) inline bool operator==(const __half2 &lh, const __half2 &rh) {int volatile ___ = 1;(void)lh;(void)rh;::exit(___);}
# 300 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) inline bool operator!=(const __half2 &lh, const __half2 &rh) {int volatile ___ = 1;(void)lh;(void)rh;::exit(___);}
# 301 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) inline bool operator>(const __half2 &lh, const __half2 &rh) {int volatile ___ = 1;(void)lh;(void)rh;::exit(___);}
# 302 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) inline bool operator<(const __half2 &lh, const __half2 &rh) {int volatile ___ = 1;(void)lh;(void)rh;::exit(___);}
# 303 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) inline bool operator>=(const __half2 &lh, const __half2 &rh) {int volatile ___ = 1;(void)lh;(void)rh;::exit(___);}
# 304 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) inline bool operator<=(const __half2 &lh, const __half2 &rh) {int volatile ___ = 1;(void)lh;(void)rh;::exit(___);}
# 317 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
#pragma GCC diagnostic pop
# 325 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
static unsigned short __internal_float2half(float f, unsigned &sign, unsigned &remainder)
# 326 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{
# 327 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
unsigned x, u, shift, exponent, mantissa;
# 328 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
memcpy(&x, &f, sizeof f);
# 329 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
u = (x & 2147483647U);
# 330 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
sign = ((x >> 16) & 32768U);
# 332 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
if (u >= 2139095040U) {
# 333 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
remainder = (0);
# 334 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
return static_cast< unsigned short>((u == 2139095040U) ? sign | 31744U : 32767U);
# 335 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
}
# 337 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
if (u > 1199566847U) {
# 338 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
remainder = 2147483648U;
# 339 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
return static_cast< unsigned short>(sign | 31743U);
# 340 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
}
# 342 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
if (u >= 947912704U) {
# 343 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
remainder = (u << 19);
# 344 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
u -= 939524096U;
# 345 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
return static_cast< unsigned short>(sign | (u >> 13));
# 346 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
}
# 348 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
if (u < 855638017U) {
# 349 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
remainder = u;
# 350 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
return static_cast< unsigned short>(sign);
# 351 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
}
# 353 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
exponent = (u >> 23);
# 354 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
mantissa = (u & 8388607U);
# 355 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
shift = (126U - exponent);
# 356 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
mantissa |= 8388608U;
# 357 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
remainder = (mantissa << ((32) - shift));
# 358 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
return static_cast< unsigned short>(sign | (mantissa >> shift));
# 359 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
}
# 362 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
static inline __half __float2half(const float f)
# 363 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{
# 364 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__half val;
# 368 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__half_raw r;
# 369 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
unsigned sign, remainder;
# 370 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
(r.x) = __internal_float2half(f, sign, remainder);
# 371 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
if ((remainder > 2147483648U) || ((remainder == 2147483648U) && ((r.x) & 1))) {
# 372 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
(r.x)++; }
# 373 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
(val = r);
# 375 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
return val;
# 376 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
}
# 377 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
static inline __half __float2half_rn(const float f)
# 378 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{
# 379 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__half val;
# 383 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__half_raw r;
# 384 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
unsigned sign, remainder;
# 385 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
(r.x) = __internal_float2half(f, sign, remainder);
# 386 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
if ((remainder > 2147483648U) || ((remainder == 2147483648U) && ((r.x) & 1))) {
# 387 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
(r.x)++; }
# 388 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
(val = r);
# 390 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
return val;
# 391 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
}
# 392 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
static inline __half __float2half_rz(const float f)
# 393 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{
# 394 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__half val;
# 398 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__half_raw r;
# 399 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
unsigned sign, remainder;
# 400 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
(r.x) = __internal_float2half(f, sign, remainder);
# 401 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
(val = r);
# 403 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
return val;
# 404 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
}
# 405 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
static inline __half __float2half_rd(const float f)
# 406 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{
# 407 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__half val;
# 411 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__half_raw r;
# 412 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
unsigned sign, remainder;
# 413 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
(r.x) = __internal_float2half(f, sign, remainder);
# 414 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
if (remainder && sign) {
# 415 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
(r.x)++; }
# 416 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
(val = r);
# 418 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
return val;
# 419 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
}
# 420 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
static inline __half __float2half_ru(const float f)
# 421 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{
# 422 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__half val;
# 426 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__half_raw r;
# 427 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
unsigned sign, remainder;
# 428 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
(r.x) = __internal_float2half(f, sign, remainder);
# 429 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
if (remainder && (!sign)) {
# 430 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
(r.x)++; }
# 431 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
(val = r);
# 433 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
return val;
# 434 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
}
# 435 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
static inline __half2 __float2half2_rn(const float f)
# 436 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{
# 437 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__half2 val;
# 443 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
(val = __half2(__float2half_rn(f), __float2half_rn(f)));
# 445 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
return val;
# 446 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
}
# 447 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
static inline __half2 __floats2half2_rn(const float f1, const float f2)
# 448 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{
# 449 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__half2 val;
# 456 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
(val = __half2(__float2half_rn(f1), __float2half_rn(f2)));
# 458 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
return val;
# 459 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
}
# 462 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
static float __internal_half2float(unsigned short h)
# 463 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{
# 464 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
unsigned sign = (h >> 15) & 1;
# 465 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
unsigned exponent = (h >> 10) & 31;
# 466 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
unsigned mantissa = (h & 1023) << 13;
# 467 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
float f;
# 468 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
if (exponent == 31U) {
# 469 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
mantissa = ((mantissa) ? (sign = (0)), 8388607U : (0));
# 470 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
exponent = 255U;
# 471 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
} else { if (!exponent) {
# 472 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
if (mantissa) {
# 473 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
unsigned msb;
# 474 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
exponent = 113U;
# 475 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
do {
# 476 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
msb = (mantissa & 4194304U);
# 477 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
mantissa <<= 1;
# 478 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
--exponent;
# 479 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
} while (!msb);
# 480 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
mantissa &= 8388607U;
# 481 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
}
# 482 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
} else {
# 483 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
exponent += 112U;
# 484 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
} }
# 485 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
unsigned u = ((sign << 31) | (exponent << 23)) | mantissa;
# 486 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
memcpy(&f, &u, sizeof u);
# 487 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
return f;
# 488 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
}
# 491 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
static inline float __half2float(const __half h)
# 492 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{
# 493 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
float val;
# 497 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
val = __internal_half2float(((__half_raw)h).x);
# 499 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
return val;
# 500 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
}
# 501 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
static inline float __low2float(const __half2 l)
# 502 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{
# 503 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
float val;
# 509 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
val = __internal_half2float(((__half2_raw)l).x);
# 511 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
return val;
# 512 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
}
# 513 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
static inline float __high2float(const __half2 l)
# 514 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{
# 515 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
float val;
# 521 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
val = __internal_half2float(((__half2_raw)l).y);
# 523 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
return val;
# 524 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
}
# 530 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
static inline __half2 make_half2(__half x, __half y)
# 531 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{
# 532 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__half2 t; (t.x) = x; (t.y) = y; return t;
# 533 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
}
# 538 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
static inline __half2 __float22half2_rn(const float2 f)
# 539 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{
# 540 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__half2 val = __floats2half2_rn(f.x, f.y);
# 541 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
return val;
# 542 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
}
# 543 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
static inline float2 __half22float2(const __half2 l)
# 544 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{
# 545 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
float hi_float;
# 546 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
float lo_float;
# 556 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
lo_float = __internal_half2float(((__half2_raw)l).x);
# 557 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
hi_float = __internal_half2float(((__half2_raw)l).y);
# 559 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
return make_float2(lo_float, hi_float);
# 560 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
}
# 561 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline int __half2int_rn(__half h)
# 562 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)h;
# 566 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 567 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline int __half2int_rz(__half h)
# 568 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)h;
# 572 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 573 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline int __half2int_rd(__half h)
# 574 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)h;
# 578 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 579 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline int __half2int_ru(__half h)
# 580 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)h;
# 584 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 585 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __int2half_rn(int i)
# 586 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)i;
# 590 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 591 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __int2half_rz(int i)
# 592 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)i;
# 596 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 597 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __int2half_rd(int i)
# 598 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)i;
# 602 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 603 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __int2half_ru(int i)
# 604 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)i;
# 608 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 610 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline short __half2short_rn(__half h)
# 611 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)h;
# 615 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 616 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline short __half2short_rz(__half h)
# 617 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)h;
# 621 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 622 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline short __half2short_rd(__half h)
# 623 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)h;
# 627 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 628 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline short __half2short_ru(__half h)
# 629 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)h;
# 633 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 634 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __short2half_rn(short i)
# 635 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)i;
# 639 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 640 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __short2half_rz(short i)
# 641 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)i;
# 645 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 646 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __short2half_rd(short i)
# 647 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)i;
# 651 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 652 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __short2half_ru(short i)
# 653 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)i;
# 657 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 659 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline unsigned __half2uint_rn(__half h)
# 660 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)h;
# 664 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 665 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline unsigned __half2uint_rz(__half h)
# 666 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)h;
# 670 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 671 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline unsigned __half2uint_rd(__half h)
# 672 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)h;
# 676 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 677 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline unsigned __half2uint_ru(__half h)
# 678 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)h;
# 682 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 683 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __uint2half_rn(unsigned i)
# 684 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)i;
# 688 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 689 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __uint2half_rz(unsigned i)
# 690 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)i;
# 694 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 695 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __uint2half_rd(unsigned i)
# 696 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)i;
# 700 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 701 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __uint2half_ru(unsigned i)
# 702 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)i;
# 706 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 708 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline unsigned short __half2ushort_rn(__half h)
# 709 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)h;
# 713 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 714 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline unsigned short __half2ushort_rz(__half h)
# 715 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)h;
# 719 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 720 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline unsigned short __half2ushort_rd(__half h)
# 721 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)h;
# 725 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 726 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline unsigned short __half2ushort_ru(__half h)
# 727 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)h;
# 731 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 732 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __ushort2half_rn(unsigned short i)
# 733 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)i;
# 737 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 738 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __ushort2half_rz(unsigned short i)
# 739 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)i;
# 743 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 744 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __ushort2half_rd(unsigned short i)
# 745 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)i;
# 749 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 750 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __ushort2half_ru(unsigned short i)
# 751 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)i;
# 755 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 757 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline unsigned long long __half2ull_rn(__half h)
# 758 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)h;
# 762 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 763 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline unsigned long long __half2ull_rz(__half h)
# 764 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)h;
# 768 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 769 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline unsigned long long __half2ull_rd(__half h)
# 770 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)h;
# 774 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 775 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline unsigned long long __half2ull_ru(__half h)
# 776 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)h;
# 780 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 781 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __ull2half_rn(unsigned long long i)
# 782 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)i;
# 786 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 787 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __ull2half_rz(unsigned long long i)
# 788 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)i;
# 792 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 793 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __ull2half_rd(unsigned long long i)
# 794 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)i;
# 798 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 799 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __ull2half_ru(unsigned long long i)
# 800 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)i;
# 804 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 806 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline long long __half2ll_rn(__half h)
# 807 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)h;
# 811 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 812 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline long long __half2ll_rz(__half h)
# 813 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)h;
# 817 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 818 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline long long __half2ll_rd(__half h)
# 819 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)h;
# 823 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 824 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline long long __half2ll_ru(__half h)
# 825 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)h;
# 829 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 830 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __ll2half_rn(long long i)
# 831 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)i;
# 835 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 836 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __ll2half_rz(long long i)
# 837 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)i;
# 841 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 842 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __ll2half_rd(long long i)
# 843 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)i;
# 847 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 848 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __ll2half_ru(long long i)
# 849 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)i;
# 853 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 855 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half htrunc(const __half h)
# 856 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)h;
# 860 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 861 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half hceil(const __half h)
# 862 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)h;
# 866 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 867 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half hfloor(const __half h)
# 868 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)h;
# 872 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 873 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half hrint(const __half h)
# 874 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)h;
# 878 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 880 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 h2trunc(const __half2 h)
# 881 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)h;
# 889 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 890 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 h2ceil(const __half2 h)
# 891 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)h;
# 899 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 900 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 h2floor(const __half2 h)
# 901 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)h;
# 909 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 910 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 h2rint(const __half2 h)
# 911 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)h;
# 919 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 920 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 __lows2half2(const __half2 l, const __half2 h)
# 921 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)l;(void)h;
# 928 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 929 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 __highs2half2(const __half2 l, const __half2 h)
# 930 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)l;(void)h;
# 937 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 938 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __low2half(const __half2 h)
# 939 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)h;
# 945 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 946 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline int __hisinf(const __half a)
# 947 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;
# 953 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 954 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 __low2half2(const __half2 l)
# 955 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)l;
# 961 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 962 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 __high2half2(const __half2 l)
# 963 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)l;
# 969 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 970 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __high2half(const __half2 h)
# 971 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)h;
# 977 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 978 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 __halves2half2(const __half l, const __half h)
# 979 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)l;(void)h;
# 984 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 985 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 __half2half2(const __half lh)
# 986 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)lh;
# 991 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 992 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 __lowhigh2highlow(const __half2 lh)
# 993 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)lh;
# 999 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1000 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline short __half_as_short(const __half h)
# 1001 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)h;
# 1003 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1004 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline unsigned short __half_as_ushort(const __half h)
# 1005 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)h;
# 1007 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1008 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __short_as_half(const short i)
# 1009 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)i;
# 1013 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1014 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __ushort_as_half(const unsigned short i)
# 1015 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)i;
# 1019 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1039 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 __shfl(__half2 var, int delta, int width)
# 1040 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 1045 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1046 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 __shfl_up(__half2 var, unsigned delta, int width)
# 1047 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 1052 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1053 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 __shfl_down(__half2 var, unsigned delta, int width)
# 1054 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 1059 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1060 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 __shfl_xor(__half2 var, int delta, int width)
# 1061 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 1066 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1068 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 __shfl_sync(unsigned mask, __half2 var, int delta, int width)
# 1069 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;
# 1074 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1075 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 __shfl_up_sync(unsigned mask, __half2 var, unsigned delta, int width)
# 1076 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;
# 1081 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1082 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 __shfl_down_sync(unsigned mask, __half2 var, unsigned delta, int width)
# 1083 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;
# 1088 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1089 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 __shfl_xor_sync(unsigned mask, __half2 var, int delta, int width)
# 1090 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;
# 1095 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1100 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __shfl(__half var, int delta, int width)
# 1101 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 1105 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1106 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __shfl_up(__half var, unsigned delta, int width)
# 1107 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 1111 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1112 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __shfl_down(__half var, unsigned delta, int width)
# 1113 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 1117 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1118 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __shfl_xor(__half var, int delta, int width)
# 1119 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 1123 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1125 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __shfl_sync(unsigned mask, __half var, int delta, int width)
# 1126 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;
# 1130 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1131 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __shfl_up_sync(unsigned mask, __half var, unsigned delta, int width)
# 1132 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;
# 1136 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1137 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __shfl_down_sync(unsigned mask, __half var, unsigned delta, int width)
# 1138 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;
# 1142 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1143 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __shfl_xor_sync(unsigned mask, __half var, int delta, int width)
# 1144 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;
# 1148 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1161 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 __ldg(const __half2 *ptr)
# 1162 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)ptr;
# 1166 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1167 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __ldg(const __half *ptr)
# 1168 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)ptr;
# 1172 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1173 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 __ldcg(const __half2 *ptr)
# 1174 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)ptr;
# 1178 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1179 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __ldcg(const __half *ptr)
# 1180 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)ptr;
# 1184 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1185 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 __ldca(const __half2 *ptr)
# 1186 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)ptr;
# 1190 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1191 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __ldca(const __half *ptr)
# 1192 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)ptr;
# 1196 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1197 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 __ldcs(const __half2 *ptr)
# 1198 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)ptr;
# 1202 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1203 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __ldcs(const __half *ptr)
# 1204 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)ptr;
# 1208 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1221 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 __heq2(const __half2 a, const __half2 b)
# 1222 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1224 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1225 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 __hne2(const __half2 a, const __half2 b)
# 1226 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1228 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1229 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 __hle2(const __half2 a, const __half2 b)
# 1230 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1232 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1233 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 __hge2(const __half2 a, const __half2 b)
# 1234 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1236 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1237 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 __hlt2(const __half2 a, const __half2 b)
# 1238 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1240 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1241 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 __hgt2(const __half2 a, const __half2 b)
# 1242 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1244 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1245 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 __hequ2(const __half2 a, const __half2 b)
# 1246 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1248 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1249 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 __hneu2(const __half2 a, const __half2 b)
# 1250 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1252 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1253 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 __hleu2(const __half2 a, const __half2 b)
# 1254 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1256 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1257 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 __hgeu2(const __half2 a, const __half2 b)
# 1258 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1260 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1261 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 __hltu2(const __half2 a, const __half2 b)
# 1262 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1264 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1265 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 __hgtu2(const __half2 a, const __half2 b)
# 1266 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1268 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1279 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline bool __hbeq2(const __half2 a, const __half2 b)
# 1280 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1282 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1283 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline bool __hbne2(const __half2 a, const __half2 b)
# 1284 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1286 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1287 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline bool __hble2(const __half2 a, const __half2 b)
# 1288 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1290 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1291 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline bool __hbge2(const __half2 a, const __half2 b)
# 1292 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1294 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1295 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline bool __hblt2(const __half2 a, const __half2 b)
# 1296 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1298 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1299 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline bool __hbgt2(const __half2 a, const __half2 b)
# 1300 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1302 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1303 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline bool __hbequ2(const __half2 a, const __half2 b)
# 1304 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1306 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1307 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline bool __hbneu2(const __half2 a, const __half2 b)
# 1308 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1310 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1311 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline bool __hbleu2(const __half2 a, const __half2 b)
# 1312 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1314 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1315 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline bool __hbgeu2(const __half2 a, const __half2 b)
# 1316 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1318 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1319 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline bool __hbltu2(const __half2 a, const __half2 b)
# 1320 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1322 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1323 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline bool __hbgtu2(const __half2 a, const __half2 b)
# 1324 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1326 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1339 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline bool __heq(const __half a, const __half b)
# 1340 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1342 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1343 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline bool __hne(const __half a, const __half b)
# 1344 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1346 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1347 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline bool __hle(const __half a, const __half b)
# 1348 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1350 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1351 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline bool __hge(const __half a, const __half b)
# 1352 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1354 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1355 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline bool __hlt(const __half a, const __half b)
# 1356 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1358 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1359 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline bool __hgt(const __half a, const __half b)
# 1360 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1362 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1363 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline bool __hequ(const __half a, const __half b)
# 1364 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1366 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1367 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline bool __hneu(const __half a, const __half b)
# 1368 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1370 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1371 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline bool __hleu(const __half a, const __half b)
# 1372 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1374 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1375 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline bool __hgeu(const __half a, const __half b)
# 1376 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1378 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1379 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline bool __hltu(const __half a, const __half b)
# 1380 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1382 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1383 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline bool __hgtu(const __half a, const __half b)
# 1384 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1386 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1398 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 __hadd2(const __half2 a, const __half2 b)
# 1399 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1401 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1402 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 __hsub2(const __half2 a, const __half2 b)
# 1403 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1405 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1406 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 __hmul2(const __half2 a, const __half2 b)
# 1407 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1409 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1410 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 __hadd2_sat(const __half2 a, const __half2 b)
# 1411 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1413 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1414 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 __hsub2_sat(const __half2 a, const __half2 b)
# 1415 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1417 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1418 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 __hmul2_sat(const __half2 a, const __half2 b)
# 1419 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1421 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1429 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 __hfma2(const __half2 a, const __half2 b, const __half2 c)
# 1430 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;(void)c;
# 1432 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1433 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 __hfma2_sat(const __half2 a, const __half2 b, const __half2 c)
# 1434 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;(void)c;
# 1436 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1438 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 __h2div(__half2 a, __half2 b) {int volatile ___ = 1;(void)a;(void)b;
# 1452 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1462 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __hadd(const __half a, const __half b)
# 1463 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1465 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1466 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __hsub(const __half a, const __half b)
# 1467 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1469 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1470 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __hmul(const __half a, const __half b)
# 1471 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1473 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1474 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __hadd_sat(const __half a, const __half b)
# 1475 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1477 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1478 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __hsub_sat(const __half a, const __half b)
# 1479 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1481 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1482 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __hmul_sat(const __half a, const __half b)
# 1483 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 1485 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1493 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __hfma(const __half a, const __half b, const __half c)
# 1494 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;(void)c;
# 1496 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1497 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __hfma_sat(const __half a, const __half b, const __half c)
# 1498 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)b;(void)c;
# 1500 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1502 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __hdiv(__half a, __half b) {int volatile ___ = 1;(void)a;(void)b;
# 1522 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1566 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) static inline float __float_simpl_sinf(float);
# 1567 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) static inline float __float_simpl_cosf(float);
# 1568 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __hsin_internal(const __half a) {int volatile ___ = 1;(void)a;
# 1572 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1573 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half hsin(const __half a) {int volatile ___ = 1;(void)a;
# 1589 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1590 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 h2sin(const __half2 a) {int volatile ___ = 1;(void)a;
# 1607 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1608 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __hcos_internal(const __half a) {int volatile ___ = 1;(void)a;
# 1612 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1613 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half hcos(const __half a) {int volatile ___ = 1;(void)a;
# 1624 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1625 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 h2cos(const __half2 a) {int volatile ___ = 1;(void)a;
# 1638 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1639 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) static inline float __internal_trig_reduction_kernel(float a, int *quadrant)
# 1640 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;(void)quadrant;
# 1649 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1650 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) static inline float __internal_sin_cos_kernel(float x, int i)
# 1651 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)x;(void)i;
# 1675 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1676 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) static inline float __float_simpl_sinf(float a)
# 1677 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;
# 1686 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1687 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute((always_inline)) __attribute__((unused)) static inline float __float_simpl_cosf(float a)
# 1688 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;
# 1698 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1699 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half hexp(const __half a) {int volatile ___ = 1;(void)a;
# 1716 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1717 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 h2exp(const __half2 a) {int volatile ___ = 1;(void)a;
# 1740 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1741 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half hexp2(const __half a) {int volatile ___ = 1;(void)a;
# 1754 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1755 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 h2exp2(const __half2 a) {int volatile ___ = 1;(void)a;
# 1772 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1773 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half hexp10(const __half a) {int volatile ___ = 1;(void)a;
# 1791 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1792 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 h2exp10(const __half2 a) {int volatile ___ = 1;(void)a;
# 1816 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1817 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half hlog2(const __half a) {int volatile ___ = 1;(void)a;
# 1830 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1831 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 h2log2(const __half2 a) {int volatile ___ = 1;(void)a;
# 1848 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1849 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half hlog(const __half a) {int volatile ___ = 1;(void)a;
# 1866 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1867 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 h2log(const __half2 a) {int volatile ___ = 1;(void)a;
# 1890 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1891 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half hlog10(const __half a) {int volatile ___ = 1;(void)a;
# 1908 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1909 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 h2log10(const __half2 a) {int volatile ___ = 1;(void)a;
# 1932 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1935 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 h2rcp(const __half2 a) {int volatile ___ = 1;(void)a;
# 1937 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1938 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half hrcp(const __half a) {int volatile ___ = 1;(void)a;
# 1940 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1941 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 h2rsqrt(const __half2 a) {int volatile ___ = 1;(void)a;
# 1943 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1944 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half hrsqrt(const __half a) {int volatile ___ = 1;(void)a;
# 1946 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1947 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 h2sqrt(const __half2 a) {int volatile ___ = 1;(void)a;
# 1949 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1950 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half hsqrt(const __half a) {int volatile ___ = 1;(void)a;
# 1952 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1955 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 __hisnan2(const __half2 a)
# 1956 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;
# 1961 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1962 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline bool __hisnan(const __half a)
# 1963 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;
# 1970 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1971 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 __hneg2(const __half2 a)
# 1972 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;
# 1975 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1976 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half __hneg(const __half a)
# 1977 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
{int volatile ___ = 1;(void)a;
# 1981 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 1993 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half2 atomicAdd(__half2 *address, __half2 val) {int volatile ___ = 1;(void)address;(void)val;
# 1999 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 2005 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
__attribute__((unused)) static inline __half atomicAdd(__half *address, __half val) {int volatile ___ = 1;(void)address;(void)val;
# 2012 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
::exit(___);}
# 2034 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
typedef __half half;
# 2035 "/usr/local/cuda/bin/..//include/cuda_fp16.hpp"
typedef __half2 half2;
# 5 "half2_operator_overload.cuh"
__attribute__((unused)) inline __half2 h2absf(__half2 d)
# 6 "half2_operator_overload.cuh"
{int volatile ___ = 1;(void)d;
# 9 "half2_operator_overload.cuh"
::exit(___);}
# 10 "half2_operator_overload.cuh"
__attribute__((unused)) inline __half2 h2negf(__half2 d)
# 11 "half2_operator_overload.cuh"
{int volatile ___ = 1;(void)d;
# 14 "half2_operator_overload.cuh"
::exit(___);}
# 78 "half2_operator_overload.cuh"
__attribute__((unused)) inline __half2 operator*(const float a, const __half2 b) {int volatile ___ = 1;(void)a;(void)b;
# 80 "half2_operator_overload.cuh"
::exit(___);}
# 81 "half2_operator_overload.cuh"
__attribute__((unused)) inline __half2 operator-(const float a, const __half2 b) {int volatile ___ = 1;(void)a;(void)b;
# 83 "half2_operator_overload.cuh"
::exit(___);}
# 84 "half2_operator_overload.cuh"
__attribute__((unused)) inline __half2 operator/(const float a, const __half2 b) {int volatile ___ = 1;(void)a;(void)b;
# 86 "half2_operator_overload.cuh"
::exit(___);}
# 87 "half2_operator_overload.cuh"
__attribute__((unused)) inline __half2 operator+(const __half2 a, const float b) {int volatile ___ = 1;(void)a;(void)b;
# 89 "half2_operator_overload.cuh"
::exit(___);}
# 90 "half2_operator_overload.cuh"
__attribute__((unused)) inline __half2 operator*(const __half2 a, const float b) {int volatile ___ = 1;(void)a;(void)b;
# 92 "half2_operator_overload.cuh"
::exit(___);}
# 93 "half2_operator_overload.cuh"
__attribute__((unused)) inline __half2 operator-(const __half2 a, const float b) {int volatile ___ = 1;(void)a;(void)b;
# 95 "half2_operator_overload.cuh"
::exit(___);}
# 96 "half2_operator_overload.cuh"
__attribute__((unused)) inline __half2 operator/(const __half2 a, const float b) {int volatile ___ = 1;(void)a;(void)b;
# 98 "half2_operator_overload.cuh"
::exit(___);}
# 101 "half2_operator_overload.cuh"
__attribute__((unused)) inline __half2 __fdividef(const __half2 a, const __half2 b) {int volatile ___ = 1;(void)a;(void)b;
# 103 "half2_operator_overload.cuh"
::exit(___);}
# 105 "half2_operator_overload.cuh"
__attribute__((unused)) inline __half2 __fdividef(const float a, const __half2 b) {int volatile ___ = 1;(void)a;(void)b;
# 107 "half2_operator_overload.cuh"
::exit(___);}
# 109 "half2_operator_overload.cuh"
__attribute__((unused)) inline __half2 __fdividef(const __half2 a, const float b) {int volatile ___ = 1;(void)a;(void)b;
# 111 "half2_operator_overload.cuh"
::exit(___);}
# 112 "half2_operator_overload.cuh"
__attribute__((unused)) inline __half2 cosf(const __half2 a) {int volatile ___ = 1;(void)a;
# 114 "half2_operator_overload.cuh"
::exit(___);}
# 115 "half2_operator_overload.cuh"
__attribute__((unused)) inline __half2 sinf(const __half2 a) {int volatile ___ = 1;(void)a;
# 117 "half2_operator_overload.cuh"
::exit(___);}
# 118 "half2_operator_overload.cuh"
__attribute__((unused)) inline __half2 expf(const __half2 a) {int volatile ___ = 1;(void)a;
# 120 "half2_operator_overload.cuh"
::exit(___);}
# 121 "half2_operator_overload.cuh"
__attribute__((unused)) inline __half2 __expf(const __half2 a) {int volatile ___ = 1;(void)a;
# 123 "half2_operator_overload.cuh"
::exit(___);}
# 126 "half2_operator_overload.cuh"
__attribute__((unused)) inline __half2 logf(const __half2 a) {int volatile ___ = 1;(void)a;
# 128 "half2_operator_overload.cuh"
::exit(___);}
# 129 "half2_operator_overload.cuh"
__attribute__((unused)) inline __half2 __logf(const __half2 a) {int volatile ___ = 1;(void)a;
# 131 "half2_operator_overload.cuh"
::exit(___);}
# 134 "half2_operator_overload.cuh"
__attribute__((unused)) inline __half2 rsqrtf(const __half2 a) {int volatile ___ = 1;(void)a;
# 136 "half2_operator_overload.cuh"
::exit(___);}
# 137 "half2_operator_overload.cuh"
__attribute__((unused)) inline __half2 sqrtf(const __half2 a) {int volatile ___ = 1;(void)a;
# 139 "half2_operator_overload.cuh"
::exit(___);}
# 140 "half2_operator_overload.cuh"
__attribute__((unused)) inline __half2 fabsf(const __half2 a) {int volatile ___ = 1;(void)a;
# 142 "half2_operator_overload.cuh"
::exit(___);}
# 67 "/usr/include/c++/4.8.2/bits/stl_relops.h" 3
namespace std __attribute((__visibility__("default"))) {
# 69 "/usr/include/c++/4.8.2/bits/stl_relops.h" 3
namespace rel_ops {
# 85 "/usr/include/c++/4.8.2/bits/stl_relops.h" 3
template< class _Tp> inline bool
# 87 "/usr/include/c++/4.8.2/bits/stl_relops.h" 3
operator!=(const _Tp &__x, const _Tp &__y)
# 88 "/usr/include/c++/4.8.2/bits/stl_relops.h" 3
{ return !(__x == __y); }
# 98 "/usr/include/c++/4.8.2/bits/stl_relops.h" 3
template< class _Tp> inline bool
# 100 "/usr/include/c++/4.8.2/bits/stl_relops.h" 3
operator>(const _Tp &__x, const _Tp &__y)
# 101 "/usr/include/c++/4.8.2/bits/stl_relops.h" 3
{ return __y < __x; }
# 111 "/usr/include/c++/4.8.2/bits/stl_relops.h" 3
template< class _Tp> inline bool
# 113 "/usr/include/c++/4.8.2/bits/stl_relops.h" 3
operator<=(const _Tp &__x, const _Tp &__y)
# 114 "/usr/include/c++/4.8.2/bits/stl_relops.h" 3
{ return !(__y < __x); }
# 124 "/usr/include/c++/4.8.2/bits/stl_relops.h" 3
template< class _Tp> inline bool
# 126 "/usr/include/c++/4.8.2/bits/stl_relops.h" 3
operator>=(const _Tp &__x, const _Tp &__y)
# 127 "/usr/include/c++/4.8.2/bits/stl_relops.h" 3
{ return !(__x < __y); }
# 130 "/usr/include/c++/4.8.2/bits/stl_relops.h" 3
}
# 132 "/usr/include/c++/4.8.2/bits/stl_relops.h" 3
}
# 42 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
namespace std __attribute((__visibility__("default"))) {
# 203 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _FIter, class _Tp> bool binary_search(_FIter, _FIter, const _Tp &);
# 207 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _FIter, class _Tp, class _Compare> bool binary_search(_FIter, _FIter, const _Tp &, _Compare);
# 211 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _IIter, class _OIter> inline _OIter copy(_IIter, _IIter, _OIter);
# 215 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _BIter1, class _BIter2> inline _BIter2 copy_backward(_BIter1, _BIter1, _BIter2);
# 232 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _FIter, class _Tp> pair< _FIter, _FIter> equal_range(_FIter, _FIter, const _Tp &);
# 236 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _FIter, class _Tp, class _Compare> pair< _FIter, _FIter> equal_range(_FIter, _FIter, const _Tp &, _Compare);
# 240 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _FIter, class _Tp> inline void fill(_FIter, _FIter, const _Tp &);
# 244 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _OIter, class _Size, class _Tp> inline _OIter fill_n(_OIter, _Size, const _Tp &);
# 250 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _FIter1, class _FIter2> inline _FIter1 find_end(_FIter1, _FIter1, _FIter2, _FIter2);
# 254 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _FIter1, class _FIter2, class _BinaryPredicate> inline _FIter1 find_end(_FIter1, _FIter1, _FIter2, _FIter2, _BinaryPredicate);
# 271 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _IIter1, class _IIter2> bool includes(_IIter1, _IIter1, _IIter2, _IIter2);
# 275 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _IIter1, class _IIter2, class _Compare> bool includes(_IIter1, _IIter1, _IIter2, _IIter2, _Compare);
# 279 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _BIter> void inplace_merge(_BIter, _BIter, _BIter);
# 283 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _BIter, class _Compare> void inplace_merge(_BIter, _BIter, _BIter, _Compare);
# 334 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _FIter1, class _FIter2> inline void iter_swap(_FIter1, _FIter2);
# 338 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _FIter, class _Tp> _FIter lower_bound(_FIter, _FIter, const _Tp &);
# 342 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _FIter, class _Tp, class _Compare> _FIter lower_bound(_FIter, _FIter, const _Tp &, _Compare);
# 346 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _RAIter> void make_heap(_RAIter, _RAIter);
# 350 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _RAIter, class _Compare> void make_heap(_RAIter, _RAIter, _Compare);
# 354 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _Tp> inline const _Tp &max(const _Tp &, const _Tp &);
# 358 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _Tp, class _Compare> inline const _Tp &max(const _Tp &, const _Tp &, _Compare);
# 365 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _Tp> inline const _Tp &min(const _Tp &, const _Tp &);
# 369 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _Tp, class _Compare> inline const _Tp &min(const _Tp &, const _Tp &, _Compare);
# 419 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _BIter> bool next_permutation(_BIter, _BIter);
# 423 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _BIter, class _Compare> bool next_permutation(_BIter, _BIter, _Compare);
# 436 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _IIter, class _RAIter> _RAIter partial_sort_copy(_IIter, _IIter, _RAIter, _RAIter);
# 440 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _IIter, class _RAIter, class _Compare> _RAIter partial_sort_copy(_IIter, _IIter, _RAIter, _RAIter, _Compare);
# 457 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _RAIter> inline void pop_heap(_RAIter, _RAIter);
# 461 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _RAIter, class _Compare> inline void pop_heap(_RAIter, _RAIter, _Compare);
# 465 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _BIter> bool prev_permutation(_BIter, _BIter);
# 469 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _BIter, class _Compare> bool prev_permutation(_BIter, _BIter, _Compare);
# 473 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _RAIter> inline void push_heap(_RAIter, _RAIter);
# 477 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _RAIter, class _Compare> inline void push_heap(_RAIter, _RAIter, _Compare);
# 483 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _FIter, class _Tp> _FIter remove(_FIter, _FIter, const _Tp &);
# 487 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _FIter, class _Predicate> _FIter remove_if(_FIter, _FIter, _Predicate);
# 491 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _IIter, class _OIter, class _Tp> _OIter remove_copy(_IIter, _IIter, _OIter, const _Tp &);
# 495 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _IIter, class _OIter, class _Predicate> _OIter remove_copy_if(_IIter, _IIter, _OIter, _Predicate);
# 501 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _IIter, class _OIter, class _Tp> _OIter replace_copy(_IIter, _IIter, _OIter, const _Tp &, const _Tp &);
# 505 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _Iter, class _OIter, class _Predicate, class _Tp> _OIter replace_copy_if(_Iter, _Iter, _OIter, _Predicate, const _Tp &);
# 511 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _BIter> inline void reverse(_BIter, _BIter);
# 515 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _BIter, class _OIter> _OIter reverse_copy(_BIter, _BIter, _OIter);
# 519 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _FIter> inline void rotate(_FIter, _FIter, _FIter);
# 523 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _FIter, class _OIter> _OIter rotate_copy(_FIter, _FIter, _FIter, _OIter);
# 540 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _RAIter> void sort_heap(_RAIter, _RAIter);
# 544 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _RAIter, class _Compare> void sort_heap(_RAIter, _RAIter, _Compare);
# 548 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _BIter, class _Predicate> _BIter stable_partition(_BIter, _BIter, _Predicate);
# 552 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _Tp> inline void swap(_Tp &, _Tp &);
# 561 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _Tp, size_t _Nm> inline void swap(_Tp (& __a)[_Nm], _Tp (& __b)[_Nm]);
# 569 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _FIter1, class _FIter2> _FIter2 swap_ranges(_FIter1, _FIter1, _FIter2);
# 575 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _FIter> _FIter unique(_FIter, _FIter);
# 579 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _FIter, class _BinaryPredicate> _FIter unique(_FIter, _FIter, _BinaryPredicate);
# 585 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _FIter, class _Tp> _FIter upper_bound(_FIter, _FIter, const _Tp &);
# 589 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _FIter, class _Tp, class _Compare> _FIter upper_bound(_FIter, _FIter, const _Tp &, _Compare);
# 597 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _FIter> _FIter adjacent_find(_FIter, _FIter);
# 601 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _FIter, class _BinaryPredicate> _FIter adjacent_find(_FIter, _FIter, _BinaryPredicate);
# 605 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _IIter, class _Tp> typename iterator_traits< _IIter> ::difference_type count(_IIter, _IIter, const _Tp &);
# 609 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _IIter, class _Predicate> typename iterator_traits< _IIter> ::difference_type count_if(_IIter, _IIter, _Predicate);
# 613 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _IIter1, class _IIter2> inline bool equal(_IIter1, _IIter1, _IIter2);
# 617 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _IIter1, class _IIter2, class _BinaryPredicate> inline bool equal(_IIter1, _IIter1, _IIter2, _BinaryPredicate);
# 621 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _IIter, class _Tp> inline _IIter find(_IIter, _IIter, const _Tp &);
# 625 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _FIter1, class _FIter2> _FIter1 find_first_of(_FIter1, _FIter1, _FIter2, _FIter2);
# 629 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _FIter1, class _FIter2, class _BinaryPredicate> _FIter1 find_first_of(_FIter1, _FIter1, _FIter2, _FIter2, _BinaryPredicate);
# 633 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _IIter, class _Predicate> inline _IIter find_if(_IIter, _IIter, _Predicate);
# 637 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _IIter, class _Funct> _Funct for_each(_IIter, _IIter, _Funct);
# 641 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _FIter, class _Generator> void generate(_FIter, _FIter, _Generator);
# 645 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _OIter, class _Size, class _Generator> _OIter generate_n(_OIter, _Size, _Generator);
# 649 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _IIter1, class _IIter2> inline bool lexicographical_compare(_IIter1, _IIter1, _IIter2, _IIter2);
# 653 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _IIter1, class _IIter2, class _Compare> bool lexicographical_compare(_IIter1, _IIter1, _IIter2, _IIter2, _Compare);
# 657 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _FIter> _FIter max_element(_FIter, _FIter);
# 661 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _FIter, class _Compare> _FIter max_element(_FIter, _FIter, _Compare);
# 665 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _IIter1, class _IIter2, class _OIter> _OIter merge(_IIter1, _IIter1, _IIter2, _IIter2, _OIter);
# 669 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _IIter1, class _IIter2, class _OIter, class
# 670 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
_Compare> _OIter
# 669 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
merge(_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Compare);
# 674 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _FIter> _FIter min_element(_FIter, _FIter);
# 678 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _FIter, class _Compare> _FIter min_element(_FIter, _FIter, _Compare);
# 682 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _IIter1, class _IIter2> pair< _IIter1, _IIter2> mismatch(_IIter1, _IIter1, _IIter2);
# 686 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _IIter1, class _IIter2, class _BinaryPredicate> pair< _IIter1, _IIter2> mismatch(_IIter1, _IIter1, _IIter2, _BinaryPredicate);
# 690 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _RAIter> inline void nth_element(_RAIter, _RAIter, _RAIter);
# 694 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _RAIter, class _Compare> inline void nth_element(_RAIter, _RAIter, _RAIter, _Compare);
# 698 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _RAIter> inline void partial_sort(_RAIter, _RAIter, _RAIter);
# 702 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _RAIter, class _Compare> inline void partial_sort(_RAIter, _RAIter, _RAIter, _Compare);
# 706 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _BIter, class _Predicate> inline _BIter partition(_BIter, _BIter, _Predicate);
# 710 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _RAIter> inline void random_shuffle(_RAIter, _RAIter);
# 714 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _RAIter, class _Generator> void random_shuffle(_RAIter, _RAIter, _Generator &);
# 723 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _FIter, class _Tp> void replace(_FIter, _FIter, const _Tp &, const _Tp &);
# 727 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _FIter, class _Predicate, class _Tp> void replace_if(_FIter, _FIter, _Predicate, const _Tp &);
# 731 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _FIter1, class _FIter2> _FIter1 search(_FIter1, _FIter1, _FIter2, _FIter2);
# 735 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _FIter1, class _FIter2, class _BinaryPredicate> _FIter1 search(_FIter1, _FIter1, _FIter2, _FIter2, _BinaryPredicate);
# 739 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _FIter, class _Size, class _Tp> _FIter search_n(_FIter, _FIter, _Size, const _Tp &);
# 743 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _FIter, class _Size, class _Tp, class
# 744 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
_BinaryPredicate> _FIter
# 743 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
search_n(_FIter, _FIter, _Size, const _Tp &, _BinaryPredicate);
# 748 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _IIter1, class _IIter2, class _OIter> _OIter set_difference(_IIter1, _IIter1, _IIter2, _IIter2, _OIter);
# 752 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _IIter1, class _IIter2, class _OIter, class
# 753 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
_Compare> _OIter
# 752 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
set_difference(_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Compare);
# 757 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _IIter1, class _IIter2, class _OIter> _OIter set_intersection(_IIter1, _IIter1, _IIter2, _IIter2, _OIter);
# 761 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _IIter1, class _IIter2, class _OIter, class
# 762 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
_Compare> _OIter
# 761 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
set_intersection(_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Compare);
# 766 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _IIter1, class _IIter2, class _OIter> _OIter set_symmetric_difference(_IIter1, _IIter1, _IIter2, _IIter2, _OIter);
# 770 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _IIter1, class _IIter2, class _OIter, class
# 771 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
_Compare> _OIter
# 770 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
set_symmetric_difference(_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Compare);
# 776 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _IIter1, class _IIter2, class _OIter> _OIter set_union(_IIter1, _IIter1, _IIter2, _IIter2, _OIter);
# 780 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _IIter1, class _IIter2, class _OIter, class
# 781 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
_Compare> _OIter
# 780 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
set_union(_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Compare);
# 785 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _RAIter> inline void sort(_RAIter, _RAIter);
# 789 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _RAIter, class _Compare> inline void sort(_RAIter, _RAIter, _Compare);
# 793 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _RAIter> inline void stable_sort(_RAIter, _RAIter);
# 797 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _RAIter, class _Compare> inline void stable_sort(_RAIter, _RAIter, _Compare);
# 801 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _IIter, class _OIter, class _UnaryOperation> _OIter transform(_IIter, _IIter, _OIter, _UnaryOperation);
# 805 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _IIter1, class _IIter2, class _OIter, class
# 806 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
_BinaryOperation> _OIter
# 805 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
transform(_IIter1, _IIter1, _IIter2, _OIter, _BinaryOperation);
# 810 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _IIter, class _OIter> inline _OIter unique_copy(_IIter, _IIter, _OIter);
# 814 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
template< class _IIter, class _OIter, class _BinaryPredicate> inline _OIter unique_copy(_IIter, _IIter, _OIter, _BinaryPredicate);
# 819 "/usr/include/c++/4.8.2/bits/algorithmfwd.h" 3
}
# 61 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
namespace std __attribute((__visibility__("default"))) {
# 70 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
template< class _RandomAccessIterator, class _Distance> _Distance
# 72 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
__is_heap_until(_RandomAccessIterator __first, _Distance __n)
# 73 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
{
# 74 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
_Distance __parent = (0);
# 75 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
for (_Distance __child = (1); __child < __n; ++__child)
# 76 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
{
# 77 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
if ((__first[__parent]) < (__first[__child])) {
# 78 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
return __child; }
# 79 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
if ((__child & 1) == 0) {
# 80 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
++__parent; }
# 81 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
}
# 82 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
return __n;
# 83 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
}
# 85 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
template< class _RandomAccessIterator, class _Distance, class
# 86 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
_Compare> _Distance
# 88 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
__is_heap_until(_RandomAccessIterator __first, _Distance __n, _Compare
# 89 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
__comp)
# 90 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
{
# 91 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
_Distance __parent = (0);
# 92 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
for (_Distance __child = (1); __child < __n; ++__child)
# 93 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
{
# 94 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
if (__comp(__first[__parent], __first[__child])) {
# 95 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
return __child; }
# 96 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
if ((__child & 1) == 0) {
# 97 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
++__parent; }
# 98 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
}
# 99 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
return __n;
# 100 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
}
# 104 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
template< class _RandomAccessIterator, class _Distance> inline bool
# 106 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
__is_heap(_RandomAccessIterator __first, _Distance __n)
# 107 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
{ return std::__is_heap_until(__first, __n) == __n; }
# 109 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
template< class _RandomAccessIterator, class _Compare, class
# 110 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
_Distance> inline bool
# 112 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
__is_heap(_RandomAccessIterator __first, _Compare __comp, _Distance __n)
# 113 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
{ return std::__is_heap_until(__first, __n, __comp) == __n; }
# 115 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
template< class _RandomAccessIterator> inline bool
# 117 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
__is_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)
# 118 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
{ return std::__is_heap(__first, std::distance(__first, __last)); }
# 120 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
template< class _RandomAccessIterator, class _Compare> inline bool
# 122 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
__is_heap(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare
# 123 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
__comp)
# 124 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
{ return std::__is_heap(__first, __comp, std::distance(__first, __last)); }
# 129 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
template< class _RandomAccessIterator, class _Distance, class _Tp> void
# 131 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
__push_heap(_RandomAccessIterator __first, _Distance
# 132 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
__holeIndex, _Distance __topIndex, _Tp __value)
# 133 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
{
# 134 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
_Distance __parent = (__holeIndex - 1) / 2;
# 135 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
while ((__holeIndex > __topIndex) && ((*(__first + __parent)) < __value))
# 136 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
{
# 137 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
(*(__first + __holeIndex)) = (*(__first + __parent));
# 138 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
__holeIndex = __parent;
# 139 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
__parent = ((__holeIndex - 1) / 2);
# 140 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
}
# 141 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
(*(__first + __holeIndex)) = __value;
# 142 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
}
# 154 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
template< class _RandomAccessIterator> inline void
# 156 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
push_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)
# 157 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
{
# 159 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
typedef typename iterator_traits< _RandomAccessIterator> ::value_type _ValueType;
# 161 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
typedef typename iterator_traits< _RandomAccessIterator> ::difference_type _DistanceType;
# 167 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
;
# 168 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
;
# 170 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
_ValueType __value = (*(__last - 1));
# 171 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
std::__push_heap(__first, (_DistanceType)((__last - __first) - 1), (_DistanceType)0, __value);
# 173 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
}
# 175 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
template< class _RandomAccessIterator, class _Distance, class _Tp, class
# 176 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
_Compare> void
# 178 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
__push_heap(_RandomAccessIterator __first, _Distance __holeIndex, _Distance
# 179 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
__topIndex, _Tp __value, _Compare __comp)
# 180 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
{
# 181 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
_Distance __parent = (__holeIndex - 1) / 2;
# 182 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
while ((__holeIndex > __topIndex) && __comp(*(__first + __parent), __value))
# 184 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
{
# 185 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
(*(__first + __holeIndex)) = (*(__first + __parent));
# 186 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
__holeIndex = __parent;
# 187 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
__parent = ((__holeIndex - 1) / 2);
# 188 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
}
# 189 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
(*(__first + __holeIndex)) = __value;
# 190 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
}
# 204 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
template< class _RandomAccessIterator, class _Compare> inline void
# 206 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
push_heap(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare
# 207 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
__comp)
# 208 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
{
# 210 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
typedef typename iterator_traits< _RandomAccessIterator> ::value_type _ValueType;
# 212 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
typedef typename iterator_traits< _RandomAccessIterator> ::difference_type _DistanceType;
# 217 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
;
# 218 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
;
# 220 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
_ValueType __value = (*(__last - 1));
# 221 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
std::__push_heap(__first, (_DistanceType)((__last - __first) - 1), (_DistanceType)0, __value, __comp);
# 223 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
}
# 225 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
template< class _RandomAccessIterator, class _Distance, class _Tp> void
# 227 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
__adjust_heap(_RandomAccessIterator __first, _Distance __holeIndex, _Distance
# 228 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
__len, _Tp __value)
# 229 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
{
# 230 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
const _Distance __topIndex = __holeIndex;
# 231 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
_Distance __secondChild = __holeIndex;
# 232 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
while (__secondChild < ((__len - 1) / 2))
# 233 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
{
# 234 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
__secondChild = (2 * (__secondChild + 1));
# 235 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
if ((*(__first + __secondChild)) < (*(__first + (__secondChild - 1)))) {
# 236 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
__secondChild--; }
# 237 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
(*(__first + __holeIndex)) = (*(__first + __secondChild));
# 238 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
__holeIndex = __secondChild;
# 239 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
}
# 240 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
if (((__len & 1) == 0) && (__secondChild == ((__len - 2) / 2)))
# 241 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
{
# 242 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
__secondChild = (2 * (__secondChild + 1));
# 243 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
(*(__first + __holeIndex)) = (*(__first + (__secondChild - 1)));
# 245 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
__holeIndex = (__secondChild - 1);
# 246 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
}
# 247 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
std::__push_heap(__first, __holeIndex, __topIndex, __value);
# 249 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
}
# 251 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
template< class _RandomAccessIterator> inline void
# 253 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
__pop_heap(_RandomAccessIterator __first, _RandomAccessIterator __last, _RandomAccessIterator
# 254 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
__result)
# 255 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
{
# 257 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
typedef typename iterator_traits< _RandomAccessIterator> ::value_type _ValueType;
# 259 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
typedef typename iterator_traits< _RandomAccessIterator> ::difference_type _DistanceType;
# 261 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
_ValueType __value = (*__result);
# 262 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
(*__result) = (*__first);
# 263 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
std::__adjust_heap(__first, (_DistanceType)0, (_DistanceType)(__last - __first), __value);
# 266 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
}
# 279 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
template< class _RandomAccessIterator> inline void
# 281 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
pop_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)
# 282 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
{
# 284 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
typedef typename iterator_traits< _RandomAccessIterator> ::value_type _ValueType;
# 290 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
;
# 291 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
;
# 292 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
;
# 294 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
if ((__last - __first) > 1)
# 295 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
{
# 296 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
--__last;
# 297 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
std::__pop_heap(__first, __last, __last);
# 298 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
}
# 299 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
}
# 301 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
template< class _RandomAccessIterator, class _Distance, class
# 302 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
_Tp, class _Compare> void
# 304 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
__adjust_heap(_RandomAccessIterator __first, _Distance __holeIndex, _Distance
# 305 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
__len, _Tp __value, _Compare __comp)
# 306 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
{
# 307 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
const _Distance __topIndex = __holeIndex;
# 308 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
_Distance __secondChild = __holeIndex;
# 309 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
while (__secondChild < ((__len - 1) / 2))
# 310 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
{
# 311 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
__secondChild = (2 * (__secondChild + 1));
# 312 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
if (__comp(*(__first + __secondChild), *(__first + (__secondChild - 1)))) {
# 314 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
__secondChild--; }
# 315 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
(*(__first + __holeIndex)) = (*(__first + __secondChild));
# 316 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
__holeIndex = __secondChild;
# 317 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
}
# 318 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
if (((__len & 1) == 0) && (__secondChild == ((__len - 2) / 2)))
# 319 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
{
# 320 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
__secondChild = (2 * (__secondChild + 1));
# 321 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
(*(__first + __holeIndex)) = (*(__first + (__secondChild - 1)));
# 323 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
__holeIndex = (__secondChild - 1);
# 324 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
}
# 325 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
std::__push_heap(__first, __holeIndex, __topIndex, __value, __comp);
# 327 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
}
# 329 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
template< class _RandomAccessIterator, class _Compare> inline void
# 331 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
__pop_heap(_RandomAccessIterator __first, _RandomAccessIterator __last, _RandomAccessIterator
# 332 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
__result, _Compare __comp)
# 333 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
{
# 335 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
typedef typename iterator_traits< _RandomAccessIterator> ::value_type _ValueType;
# 337 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
typedef typename iterator_traits< _RandomAccessIterator> ::difference_type _DistanceType;
# 339 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
_ValueType __value = (*__result);
# 340 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
(*__result) = (*__first);
# 341 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
std::__adjust_heap(__first, (_DistanceType)0, (_DistanceType)(__last - __first), __value, __comp);
# 344 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
}
# 357 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
template< class _RandomAccessIterator, class _Compare> inline void
# 359 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
pop_heap(_RandomAccessIterator __first, _RandomAccessIterator
# 360 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
__last, _Compare __comp)
# 361 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
{
# 365 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
;
# 366 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
;
# 367 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
;
# 369 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
if ((__last - __first) > 1)
# 370 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
{
# 371 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
--__last;
# 372 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
std::__pop_heap(__first, __last, __last, __comp);
# 373 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
}
# 374 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
}
# 384 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
template< class _RandomAccessIterator> void
# 386 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
make_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)
# 387 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
{
# 389 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
typedef typename iterator_traits< _RandomAccessIterator> ::value_type _ValueType;
# 391 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
typedef typename iterator_traits< _RandomAccessIterator> ::difference_type _DistanceType;
# 397 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
;
# 399 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
if ((__last - __first) < 2) {
# 400 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
return; }
# 402 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
const _DistanceType __len = __last - __first;
# 403 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
_DistanceType __parent = (__len - 2) / 2;
# 404 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
while (true)
# 405 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
{
# 406 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
_ValueType __value = (*(__first + __parent));
# 407 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
std::__adjust_heap(__first, __parent, __len, __value);
# 408 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
if (__parent == 0) {
# 409 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
return; }
# 410 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
__parent--;
# 411 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
}
# 412 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
}
# 424 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
template< class _RandomAccessIterator, class _Compare> void
# 426 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
make_heap(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare
# 427 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
__comp)
# 428 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
{
# 430 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
typedef typename iterator_traits< _RandomAccessIterator> ::value_type _ValueType;
# 432 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
typedef typename iterator_traits< _RandomAccessIterator> ::difference_type _DistanceType;
# 437 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
;
# 439 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
if ((__last - __first) < 2) {
# 440 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
return; }
# 442 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
const _DistanceType __len = __last - __first;
# 443 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
_DistanceType __parent = (__len - 2) / 2;
# 444 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
while (true)
# 445 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
{
# 446 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
_ValueType __value = (*(__first + __parent));
# 447 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
std::__adjust_heap(__first, __parent, __len, __value, __comp);
# 449 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
if (__parent == 0) {
# 450 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
return; }
# 451 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
__parent--;
# 452 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
}
# 453 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
}
# 463 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
template< class _RandomAccessIterator> void
# 465 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
sort_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)
# 466 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
{
# 472 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
;
# 473 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
;
# 475 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
while ((__last - __first) > 1)
# 476 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
{
# 477 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
--__last;
# 478 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
std::__pop_heap(__first, __last, __last);
# 479 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
}
# 480 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
}
# 492 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
template< class _RandomAccessIterator, class _Compare> void
# 494 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
sort_heap(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare
# 495 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
__comp)
# 496 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
{
# 500 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
;
# 501 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
;
# 503 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
while ((__last - __first) > 1)
# 504 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
{
# 505 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
--__last;
# 506 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
std::__pop_heap(__first, __last, __last, __comp);
# 507 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
}
# 508 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
}
# 590 "/usr/include/c++/4.8.2/bits/stl_heap.h" 3
}
# 62 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
namespace std __attribute((__visibility__("default"))) {
# 83 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
template< class _Tp> pair< _Tp *, long>
# 85 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
get_temporary_buffer(ptrdiff_t __len)
# 86 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
{
# 87 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
const ptrdiff_t __max = (__gnu_cxx::__numeric_traits_integer< long> ::__max / sizeof(_Tp));
# 89 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
if (__len > __max) {
# 90 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
__len = __max; }
# 92 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
while (__len > (0))
# 93 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
{
# 94 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
_Tp *__tmp = static_cast< _Tp *>(::operator new(__len * sizeof(_Tp), std::nothrow));
# 96 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
if (__tmp != 0) {
# 97 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
return pair< _Tp *, long> (__tmp, __len); }
# 98 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
__len /= (2);
# 99 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
}
# 100 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
return pair< _Tp *, long> (static_cast< _Tp *>(0), 0);
# 101 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
}
# 110 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
template< class _Tp> inline void
# 112 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
return_temporary_buffer(_Tp *__p)
# 113 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
{ ::operator delete(__p, std::nothrow); }
# 121 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
template< class _ForwardIterator, class _Tp>
# 122 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
class _Temporary_buffer {
# 128 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
public: typedef _Tp value_type;
# 129 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
typedef value_type *pointer;
# 130 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
typedef pointer iterator;
# 131 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
typedef ptrdiff_t size_type;
# 134 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
protected: size_type _M_original_len;
# 135 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
size_type _M_len;
# 136 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
pointer _M_buffer;
# 141 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
public: size_type size() const
# 142 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
{ return _M_len; }
# 146 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
size_type requested_size() const
# 147 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
{ return _M_original_len; }
# 151 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
iterator begin()
# 152 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
{ return _M_buffer; }
# 156 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
iterator end()
# 157 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
{ return (_M_buffer) + (_M_len); }
# 163 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
_Temporary_buffer(_ForwardIterator __first, _ForwardIterator __last);
# 165 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
~_Temporary_buffer()
# 166 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
{
# 167 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
std::_Destroy(_M_buffer, (_M_buffer) + (_M_len));
# 168 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
std::return_temporary_buffer(_M_buffer);
# 169 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
}
# 173 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
private: _Temporary_buffer(const _Temporary_buffer &);
# 176 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
void operator=(const _Temporary_buffer &);
# 177 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
};
# 180 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
template< bool >
# 181 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
struct __uninitialized_construct_buf_dispatch {
# 183 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
template< class _Pointer, class _ForwardIterator> static void
# 185 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
__ucr(_Pointer __first, _Pointer __last, _ForwardIterator
# 186 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
__seed)
# 187 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
{
# 188 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
if (__first == __last) {
# 189 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
return; }
# 191 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
_Pointer __cur = __first;
# 192 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
try
# 193 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
{
# 194 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
std::_Construct(std::__addressof(*__first), *__seed);
# 196 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
_Pointer __prev = __cur;
# 197 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
++__cur;
# 198 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
for (; __cur != __last; (++__cur), (++__prev)) {
# 199 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
std::_Construct(std::__addressof(*__cur), *__prev); }
# 201 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
(*__seed) = (*__prev);
# 202 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
}
# 203 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
catch (...)
# 204 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
{
# 205 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
std::_Destroy(__first, __cur);
# 206 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
throw;
# 207 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
}
# 208 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
}
# 209 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
};
# 212 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
template<> struct __uninitialized_construct_buf_dispatch< true> {
# 214 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
template< class _Pointer, class _ForwardIterator> static void
# 216 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
__ucr(_Pointer, _Pointer, _ForwardIterator) { }
# 217 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
};
# 229 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
template< class _Pointer, class _ForwardIterator> inline void
# 231 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
__uninitialized_construct_buf(_Pointer __first, _Pointer __last, _ForwardIterator
# 232 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
__seed)
# 233 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
{
# 235 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
typedef typename iterator_traits< _Pointer> ::value_type _ValueType;
# 237 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
std::__uninitialized_construct_buf_dispatch< __has_trivial_constructor(typename iterator_traits< _Pointer> ::value_type)> ::__ucr(__first, __last, __seed);
# 240 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
}
# 242 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
template< class _ForwardIterator, class _Tp>
# 244 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
_Temporary_buffer< _ForwardIterator, _Tp> ::_Temporary_buffer(_ForwardIterator __first, _ForwardIterator __last) : _M_original_len(std::distance(__first, __last)), _M_len((0)), _M_buffer((0))
# 247 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
{
# 248 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
try
# 249 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
{
# 250 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
pair< _Tp *, long> __p(std::get_temporary_buffer< value_type> (_M_original_len));
# 252 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
(_M_buffer) = (__p.first);
# 253 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
(_M_len) = (__p.second);
# 254 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
if (_M_buffer) {
# 255 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
std::__uninitialized_construct_buf(_M_buffer, (_M_buffer) + (_M_len), __first); }
# 257 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
}
# 258 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
catch (...)
# 259 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
{
# 260 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
std::return_temporary_buffer(_M_buffer);
# 261 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
(_M_buffer) = 0;
# 262 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
(_M_len) = (0);
# 263 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
throw;
# 264 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
}
# 265 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
}
# 268 "/usr/include/c++/4.8.2/bits/stl_tempbuf.h" 3
}
# 71 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
namespace std __attribute((__visibility__("default"))) {
# 76 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _Iterator> void
# 78 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__move_median_to_first(_Iterator __result, _Iterator __a, _Iterator
# 79 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__b, _Iterator __c)
# 80 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 85 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((*__a) < (*__b))
# 86 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 87 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((*__b) < (*__c)) {
# 88 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::iter_swap(__result, __b); } else {
# 89 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((*__a) < (*__c)) {
# 90 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::iter_swap(__result, __c); } else {
# 92 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::iter_swap(__result, __a); } }
# 93 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else {
# 94 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((*__a) < (*__c)) {
# 95 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::iter_swap(__result, __a); } else {
# 96 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((*__b) < (*__c)) {
# 97 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::iter_swap(__result, __c); } else {
# 99 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::iter_swap(__result, __b); } } }
# 100 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 103 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _Iterator, class _Compare> void
# 105 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__move_median_to_first(_Iterator __result, _Iterator __a, _Iterator
# 106 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__b, _Iterator __c, _Compare
# 107 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__comp)
# 108 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 114 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__comp(*__a, *__b))
# 115 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 116 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__comp(*__b, *__c)) {
# 117 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::iter_swap(__result, __b); } else {
# 118 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__comp(*__a, *__c)) {
# 119 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::iter_swap(__result, __c); } else {
# 121 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::iter_swap(__result, __a); } }
# 122 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else {
# 123 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__comp(*__a, *__c)) {
# 124 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::iter_swap(__result, __a); } else {
# 125 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__comp(*__b, *__c)) {
# 126 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::iter_swap(__result, __c); } else {
# 128 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::iter_swap(__result, __b); } } }
# 129 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 134 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _InputIterator, class _Tp> inline _InputIterator
# 136 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__find(_InputIterator __first, _InputIterator __last, const _Tp &
# 137 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__val, input_iterator_tag)
# 138 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 139 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((__first != __last) && (!((*__first) == __val))) {
# 140 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first; }
# 141 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first;
# 142 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 145 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _InputIterator, class _Predicate> inline _InputIterator
# 147 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__find_if(_InputIterator __first, _InputIterator __last, _Predicate
# 148 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__pred, input_iterator_tag)
# 149 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 150 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((__first != __last) && (!((bool)__pred(*__first)))) {
# 151 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first; }
# 152 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first;
# 153 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 156 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator, class _Tp> _RandomAccessIterator
# 158 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__find(_RandomAccessIterator __first, _RandomAccessIterator __last, const _Tp &
# 159 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__val, random_access_iterator_tag)
# 160 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 162 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typename iterator_traits< _RandomAccessIterator> ::difference_type __trip_count = (__last - __first) >> 2;
# 164 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
for (; __trip_count > 0; --__trip_count)
# 165 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 166 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((*__first) == __val) {
# 167 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first; }
# 168 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 170 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((*__first) == __val) {
# 171 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first; }
# 172 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 174 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((*__first) == __val) {
# 175 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first; }
# 176 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 178 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((*__first) == __val) {
# 179 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first; }
# 180 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 181 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 183 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
switch (__last - __first)
# 184 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 185 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
case 3:
# 186 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((*__first) == __val) {
# 187 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first; }
# 188 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 189 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
case 2:
# 190 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((*__first) == __val) {
# 191 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first; }
# 192 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 193 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
case 1:
# 194 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((*__first) == __val) {
# 195 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first; }
# 196 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 197 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
case 0:
# 198 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
default:
# 199 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __last;
# 200 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 201 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 204 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator, class _Predicate> _RandomAccessIterator
# 206 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__find_if(_RandomAccessIterator __first, _RandomAccessIterator __last, _Predicate
# 207 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__pred, random_access_iterator_tag)
# 208 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 210 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typename iterator_traits< _RandomAccessIterator> ::difference_type __trip_count = (__last - __first) >> 2;
# 212 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
for (; __trip_count > 0; --__trip_count)
# 213 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 214 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__pred(*__first)) {
# 215 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first; }
# 216 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 218 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__pred(*__first)) {
# 219 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first; }
# 220 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 222 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__pred(*__first)) {
# 223 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first; }
# 224 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 226 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__pred(*__first)) {
# 227 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first; }
# 228 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 229 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 231 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
switch (__last - __first)
# 232 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 233 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
case 3:
# 234 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__pred(*__first)) {
# 235 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first; }
# 236 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 237 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
case 2:
# 238 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__pred(*__first)) {
# 239 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first; }
# 240 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 241 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
case 1:
# 242 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__pred(*__first)) {
# 243 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first; }
# 244 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 245 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
case 0:
# 246 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
default:
# 247 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __last;
# 248 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 249 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 252 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _InputIterator, class _Predicate> inline _InputIterator
# 254 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__find_if_not(_InputIterator __first, _InputIterator __last, _Predicate
# 255 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__pred, input_iterator_tag)
# 256 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 257 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((__first != __last) && ((bool)__pred(*__first))) {
# 258 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first; }
# 259 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first;
# 260 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 263 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator, class _Predicate> _RandomAccessIterator
# 265 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__find_if_not(_RandomAccessIterator __first, _RandomAccessIterator __last, _Predicate
# 266 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__pred, random_access_iterator_tag)
# 267 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 269 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typename iterator_traits< _RandomAccessIterator> ::difference_type __trip_count = (__last - __first) >> 2;
# 271 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
for (; __trip_count > 0; --__trip_count)
# 272 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 273 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (!((bool)__pred(*__first))) {
# 274 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first; }
# 275 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 277 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (!((bool)__pred(*__first))) {
# 278 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first; }
# 279 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 281 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (!((bool)__pred(*__first))) {
# 282 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first; }
# 283 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 285 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (!((bool)__pred(*__first))) {
# 286 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first; }
# 287 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 288 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 290 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
switch (__last - __first)
# 291 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 292 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
case 3:
# 293 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (!((bool)__pred(*__first))) {
# 294 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first; }
# 295 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 296 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
case 2:
# 297 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (!((bool)__pred(*__first))) {
# 298 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first; }
# 299 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 300 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
case 1:
# 301 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (!((bool)__pred(*__first))) {
# 302 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first; }
# 303 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 304 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
case 0:
# 305 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
default:
# 306 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __last;
# 307 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 308 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 311 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _InputIterator, class _Predicate> inline _InputIterator
# 313 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__find_if_not(_InputIterator __first, _InputIterator __last, _Predicate
# 314 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__pred)
# 315 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 316 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return std::__find_if_not(__first, __last, __pred, std::__iterator_category(__first));
# 318 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 323 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _InputIterator, class _Predicate, class _Distance> _InputIterator
# 325 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__find_if_not_n(_InputIterator __first, _Distance &__len, _Predicate __pred)
# 326 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 327 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
for (; __len; (--__len), (++__first)) {
# 328 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (!((bool)__pred(*__first))) {
# 329 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
break; } }
# 330 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first;
# 331 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 351 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _ForwardIterator, class _Integer, class _Tp> _ForwardIterator
# 353 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__search_n(_ForwardIterator __first, _ForwardIterator __last, _Integer
# 354 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__count, const _Tp &__val, forward_iterator_tag)
# 356 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 357 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first = std::find(__first, __last, __val);
# 358 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while (__first != __last)
# 359 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 361 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typename iterator_traits< _ForwardIterator> ::difference_type __n = __count;
# 362 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator __i = __first;
# 363 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__i;
# 364 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((__i != __last) && (__n != 1) && ((*__i) == __val))
# 365 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 366 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__i;
# 367 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
--__n;
# 368 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 369 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__n == 1) {
# 370 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first; }
# 371 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__i == __last) {
# 372 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __last; }
# 373 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first = std::find(++__i, __last, __val);
# 374 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 375 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __last;
# 376 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 383 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIter, class _Integer, class _Tp> _RandomAccessIter
# 385 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__search_n(_RandomAccessIter __first, _RandomAccessIter __last, _Integer
# 386 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__count, const _Tp &__val, random_access_iterator_tag)
# 388 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 391 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _RandomAccessIter> ::difference_type _DistanceType;
# 393 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_DistanceType __tailSize = __last - __first;
# 394 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_DistanceType __remainder = __count;
# 396 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while (__remainder <= __tailSize)
# 397 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 398 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first += __remainder;
# 399 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__tailSize -= __remainder;
# 402 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_RandomAccessIter __backTrack = __first;
# 403 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((*(--__backTrack)) == __val)
# 404 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 405 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((--__remainder) == 0) {
# 406 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first - __count; }
# 407 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 408 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__remainder = ((__count + 1) - (__first - __backTrack));
# 409 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 410 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __last;
# 411 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 421 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _ForwardIterator, class _Integer, class _Tp, class
# 422 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_BinaryPredicate> _ForwardIterator
# 424 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__search_n(_ForwardIterator __first, _ForwardIterator __last, _Integer
# 425 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__count, const _Tp &__val, _BinaryPredicate
# 426 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__binary_pred, forward_iterator_tag)
# 427 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 428 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((__first != __last) && (!((bool)__binary_pred(*__first, __val)))) {
# 429 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first; }
# 431 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while (__first != __last)
# 432 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 434 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typename iterator_traits< _ForwardIterator> ::difference_type __n = __count;
# 435 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator __i = __first;
# 436 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__i;
# 437 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((__i != __last) && (__n != 1) && ((bool)__binary_pred(*__i, __val)))
# 438 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 439 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__i;
# 440 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
--__n;
# 441 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 442 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__n == 1) {
# 443 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first; }
# 444 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__i == __last) {
# 445 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __last; }
# 446 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first = (++__i);
# 447 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((__first != __last) && (!((bool)__binary_pred(*__first, __val)))) {
# 449 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first; }
# 450 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 451 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __last;
# 452 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 460 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIter, class _Integer, class _Tp, class
# 461 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_BinaryPredicate> _RandomAccessIter
# 463 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__search_n(_RandomAccessIter __first, _RandomAccessIter __last, _Integer
# 464 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__count, const _Tp &__val, _BinaryPredicate
# 465 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__binary_pred, random_access_iterator_tag)
# 466 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 469 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _RandomAccessIter> ::difference_type _DistanceType;
# 471 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_DistanceType __tailSize = __last - __first;
# 472 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_DistanceType __remainder = __count;
# 474 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while (__remainder <= __tailSize)
# 475 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 476 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first += __remainder;
# 477 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__tailSize -= __remainder;
# 480 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_RandomAccessIter __backTrack = __first;
# 481 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while (__binary_pred(*(--__backTrack), __val))
# 482 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 483 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((--__remainder) == 0) {
# 484 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first - __count; }
# 485 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 486 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__remainder = ((__count + 1) - (__first - __backTrack));
# 487 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 488 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __last;
# 489 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 492 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _ForwardIterator1, class _ForwardIterator2> _ForwardIterator1
# 494 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2
# 495 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first2, _ForwardIterator2 __last2, forward_iterator_tag, forward_iterator_tag)
# 497 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 498 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first2 == __last2) {
# 499 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __last1; } else
# 501 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 502 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator1 __result = __last1;
# 503 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while (1)
# 504 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 505 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator1 __new_result = std::search(__first1, __last1, __first2, __last2);
# 507 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__new_result == __last1) {
# 508 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __result; } else
# 510 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 511 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result = __new_result;
# 512 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first1 = __new_result;
# 513 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first1;
# 514 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 515 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 516 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 517 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 519 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _ForwardIterator1, class _ForwardIterator2, class
# 520 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_BinaryPredicate> _ForwardIterator1
# 522 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2
# 523 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first2, _ForwardIterator2 __last2, forward_iterator_tag, forward_iterator_tag, _BinaryPredicate
# 525 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__comp)
# 526 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 527 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first2 == __last2) {
# 528 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __last1; } else
# 530 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 531 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator1 __result = __last1;
# 532 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while (1)
# 533 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 534 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator1 __new_result = std::search(__first1, __last1, __first2, __last2, __comp);
# 537 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__new_result == __last1) {
# 538 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __result; } else
# 540 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 541 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result = __new_result;
# 542 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first1 = __new_result;
# 543 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first1;
# 544 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 545 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 546 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 547 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 550 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _BidirectionalIterator1, class _BidirectionalIterator2> _BidirectionalIterator1
# 552 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__find_end(_BidirectionalIterator1 __first1, _BidirectionalIterator1
# 553 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last1, _BidirectionalIterator2
# 554 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first2, _BidirectionalIterator2
# 555 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last2, bidirectional_iterator_tag, bidirectional_iterator_tag)
# 557 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 564 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef reverse_iterator< _BidirectionalIterator1> _RevIterator1;
# 565 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef reverse_iterator< _BidirectionalIterator2> _RevIterator2;
# 567 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_RevIterator1 __rlast1(__first1);
# 568 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_RevIterator2 __rlast2(__first2);
# 569 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_RevIterator1 __rresult = std::search(((reverse_iterator< _BidirectionalIterator1> )(__last1)), __rlast1, ((reverse_iterator< _BidirectionalIterator2> )(__last2)), __rlast2);
# 574 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__rresult == __rlast1) {
# 575 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __last1; } else
# 577 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 578 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_BidirectionalIterator1 __result = (__rresult.base());
# 579 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::advance(__result, -std::distance(__first2, __last2));
# 580 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __result;
# 581 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 582 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 584 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _BidirectionalIterator1, class _BidirectionalIterator2, class
# 585 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_BinaryPredicate> _BidirectionalIterator1
# 587 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__find_end(_BidirectionalIterator1 __first1, _BidirectionalIterator1
# 588 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last1, _BidirectionalIterator2
# 589 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first2, _BidirectionalIterator2
# 590 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last2, bidirectional_iterator_tag, bidirectional_iterator_tag, _BinaryPredicate
# 592 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__comp)
# 593 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 600 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef reverse_iterator< _BidirectionalIterator1> _RevIterator1;
# 601 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef reverse_iterator< _BidirectionalIterator2> _RevIterator2;
# 603 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_RevIterator1 __rlast1(__first1);
# 604 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_RevIterator2 __rlast2(__first2);
# 605 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_RevIterator1 __rresult = std::search(((reverse_iterator< _BidirectionalIterator1> )(__last1)), __rlast1, ((reverse_iterator< _BidirectionalIterator2> )(__last2)), __rlast2, __comp);
# 609 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__rresult == __rlast1) {
# 610 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __last1; } else
# 612 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 613 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_BidirectionalIterator1 __result = (__rresult.base());
# 614 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::advance(__result, -std::distance(__first2, __last2));
# 615 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __result;
# 616 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 617 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 645 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _ForwardIterator1, class _ForwardIterator2> inline _ForwardIterator1
# 647 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2
# 648 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first2, _ForwardIterator2 __last2)
# 649 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 656 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 657 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 659 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return std::__find_end(__first1, __last1, __first2, __last2, std::__iterator_category(__first1), std::__iterator_category(__first2));
# 662 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 692 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _ForwardIterator1, class _ForwardIterator2, class
# 693 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_BinaryPredicate> inline _ForwardIterator1
# 695 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2
# 696 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first2, _ForwardIterator2 __last2, _BinaryPredicate
# 697 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__comp)
# 698 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 705 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 706 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 708 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return std::__find_end(__first1, __last1, __first2, __last2, std::__iterator_category(__first1), std::__iterator_category(__first2), __comp);
# 712 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 871 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _InputIterator, class _OutputIterator, class _Tp> _OutputIterator
# 873 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
remove_copy(_InputIterator __first, _InputIterator __last, _OutputIterator
# 874 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result, const _Tp &__value)
# 875 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 882 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 884 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
for (; __first != __last; ++__first) {
# 885 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (!((*__first) == __value))
# 886 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 887 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = (*__first);
# 888 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__result;
# 889 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} }
# 890 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __result;
# 891 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 908 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _InputIterator, class _OutputIterator, class
# 909 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_Predicate> _OutputIterator
# 911 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
remove_copy_if(_InputIterator __first, _InputIterator __last, _OutputIterator
# 912 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result, _Predicate __pred)
# 913 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 920 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 922 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
for (; __first != __last; ++__first) {
# 923 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (!((bool)__pred(*__first)))
# 924 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 925 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = (*__first);
# 926 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__result;
# 927 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} }
# 928 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __result;
# 929 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1089 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _ForwardIterator, class _Tp> _ForwardIterator
# 1091 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
remove(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 1092 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__value)
# 1093 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1099 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 1101 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first = std::find(__first, __last, __value);
# 1102 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first == __last) {
# 1103 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first; }
# 1104 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator __result = __first;
# 1105 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 1106 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
for (; __first != __last; ++__first) {
# 1107 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (!((*__first) == __value))
# 1108 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1109 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = (*__first);
# 1110 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__result;
# 1111 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} }
# 1112 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __result;
# 1113 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1132 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _ForwardIterator, class _Predicate> _ForwardIterator
# 1134 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
remove_if(_ForwardIterator __first, _ForwardIterator __last, _Predicate
# 1135 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__pred)
# 1136 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1142 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 1144 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first = std::find_if(__first, __last, __pred);
# 1145 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first == __last) {
# 1146 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first; }
# 1147 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator __result = __first;
# 1148 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 1149 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
for (; __first != __last; ++__first) {
# 1150 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (!((bool)__pred(*__first)))
# 1151 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1152 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = (*__first);
# 1153 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__result;
# 1154 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} }
# 1155 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __result;
# 1156 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1172 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _ForwardIterator> _ForwardIterator
# 1174 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
unique(_ForwardIterator __first, _ForwardIterator __last)
# 1175 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1181 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 1184 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first = std::adjacent_find(__first, __last);
# 1185 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first == __last) {
# 1186 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __last; }
# 1189 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator __dest = __first;
# 1190 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 1191 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((++__first) != __last) {
# 1192 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (!((*__dest) == (*__first))) {
# 1193 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*(++__dest)) = (*__first); } }
# 1194 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return ++__dest;
# 1195 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1212 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _ForwardIterator, class _BinaryPredicate> _ForwardIterator
# 1214 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
unique(_ForwardIterator __first, _ForwardIterator __last, _BinaryPredicate
# 1215 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__binary_pred)
# 1216 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1223 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 1226 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first = std::adjacent_find(__first, __last, __binary_pred);
# 1227 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first == __last) {
# 1228 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __last; }
# 1231 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator __dest = __first;
# 1232 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 1233 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((++__first) != __last) {
# 1234 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (!((bool)__binary_pred(*__dest, *__first))) {
# 1235 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*(++__dest)) = (*__first); } }
# 1236 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return ++__dest;
# 1237 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1244 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _ForwardIterator, class _OutputIterator> _OutputIterator
# 1246 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__unique_copy(_ForwardIterator __first, _ForwardIterator __last, _OutputIterator
# 1247 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result, forward_iterator_tag, output_iterator_tag)
# 1249 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1251 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator __next = __first;
# 1252 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = (*__first);
# 1253 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((++__next) != __last) {
# 1254 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (!((*__first) == (*__next)))
# 1255 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1256 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first = __next;
# 1257 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*(++__result)) = (*__first);
# 1258 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} }
# 1259 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return ++__result;
# 1260 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1267 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _InputIterator, class _OutputIterator> _OutputIterator
# 1269 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__unique_copy(_InputIterator __first, _InputIterator __last, _OutputIterator
# 1270 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result, input_iterator_tag, output_iterator_tag)
# 1272 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1274 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typename iterator_traits< _InputIterator> ::value_type __value = (*__first);
# 1275 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = __value;
# 1276 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((++__first) != __last) {
# 1277 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (!(__value == (*__first)))
# 1278 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1279 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__value = (*__first);
# 1280 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*(++__result)) = __value;
# 1281 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} }
# 1282 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return ++__result;
# 1283 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1290 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _InputIterator, class _ForwardIterator> _ForwardIterator
# 1292 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__unique_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator
# 1293 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result, input_iterator_tag, forward_iterator_tag)
# 1295 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1297 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = (*__first);
# 1298 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((++__first) != __last) {
# 1299 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (!((*__result) == (*__first))) {
# 1300 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*(++__result)) = (*__first); } }
# 1301 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return ++__result;
# 1302 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1310 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _ForwardIterator, class _OutputIterator, class
# 1311 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_BinaryPredicate> _OutputIterator
# 1313 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__unique_copy(_ForwardIterator __first, _ForwardIterator __last, _OutputIterator
# 1314 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result, _BinaryPredicate __binary_pred, forward_iterator_tag, output_iterator_tag)
# 1316 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1322 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator __next = __first;
# 1323 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = (*__first);
# 1324 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((++__next) != __last) {
# 1325 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (!((bool)__binary_pred(*__first, *__next)))
# 1326 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1327 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first = __next;
# 1328 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*(++__result)) = (*__first);
# 1329 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} }
# 1330 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return ++__result;
# 1331 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1339 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _InputIterator, class _OutputIterator, class
# 1340 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_BinaryPredicate> _OutputIterator
# 1342 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__unique_copy(_InputIterator __first, _InputIterator __last, _OutputIterator
# 1343 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result, _BinaryPredicate __binary_pred, input_iterator_tag, output_iterator_tag)
# 1345 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1351 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typename iterator_traits< _InputIterator> ::value_type __value = (*__first);
# 1352 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = __value;
# 1353 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((++__first) != __last) {
# 1354 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (!((bool)__binary_pred(__value, *__first)))
# 1355 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1356 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__value = (*__first);
# 1357 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*(++__result)) = __value;
# 1358 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} }
# 1359 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return ++__result;
# 1360 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1368 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _InputIterator, class _ForwardIterator, class
# 1369 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_BinaryPredicate> _ForwardIterator
# 1371 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__unique_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator
# 1372 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result, _BinaryPredicate __binary_pred, input_iterator_tag, forward_iterator_tag)
# 1374 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1380 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = (*__first);
# 1381 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((++__first) != __last) {
# 1382 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (!((bool)__binary_pred(*__result, *__first))) {
# 1383 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*(++__result)) = (*__first); } }
# 1384 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return ++__result;
# 1385 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1392 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _BidirectionalIterator> void
# 1394 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__reverse(_BidirectionalIterator __first, _BidirectionalIterator __last, bidirectional_iterator_tag)
# 1396 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1397 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while (true) {
# 1398 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((__first == __last) || (__first == (--__last))) {
# 1399 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return; } else
# 1401 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1402 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::iter_swap(__first, __last);
# 1403 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 1404 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} }
# 1405 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1412 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator> void
# 1414 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__reverse(_RandomAccessIterator __first, _RandomAccessIterator __last, random_access_iterator_tag)
# 1416 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1417 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first == __last) {
# 1418 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return; }
# 1419 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
--__last;
# 1420 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while (__first < __last)
# 1421 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1422 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::iter_swap(__first, __last);
# 1423 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 1424 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
--__last;
# 1425 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1426 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1440 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _BidirectionalIterator> inline void
# 1442 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
reverse(_BidirectionalIterator __first, _BidirectionalIterator __last)
# 1443 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1447 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 1448 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__reverse(__first, __last, std::__iterator_category(__first));
# 1449 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1467 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _BidirectionalIterator, class _OutputIterator> _OutputIterator
# 1469 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
reverse_copy(_BidirectionalIterator __first, _BidirectionalIterator __last, _OutputIterator
# 1470 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result)
# 1471 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1477 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 1479 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while (__first != __last)
# 1480 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1481 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
--__last;
# 1482 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = (*__last);
# 1483 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__result;
# 1484 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1485 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __result;
# 1486 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1492 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _EuclideanRingElement> _EuclideanRingElement
# 1494 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__gcd(_EuclideanRingElement __m, _EuclideanRingElement __n)
# 1495 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1496 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while (__n != 0)
# 1497 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1498 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_EuclideanRingElement __t = __m % __n;
# 1499 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__m = __n;
# 1500 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__n = __t;
# 1501 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1502 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __m;
# 1503 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1506 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _ForwardIterator> void
# 1508 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__rotate(_ForwardIterator __first, _ForwardIterator
# 1509 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__middle, _ForwardIterator
# 1510 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last, forward_iterator_tag)
# 1512 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1513 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((__first == __middle) || (__last == __middle)) {
# 1514 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return; }
# 1516 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator __first2 = __middle;
# 1517 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
do
# 1518 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1519 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::iter_swap(__first, __first2);
# 1520 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 1521 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first2;
# 1522 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first == __middle) {
# 1523 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__middle = __first2; }
# 1524 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1525 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while (__first2 != __last);
# 1527 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first2 = __middle;
# 1529 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while (__first2 != __last)
# 1530 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1531 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::iter_swap(__first, __first2);
# 1532 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 1533 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first2;
# 1534 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first == __middle) {
# 1535 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__middle = __first2; } else {
# 1536 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first2 == __last) {
# 1537 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first2 = __middle; } }
# 1538 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1539 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1542 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _BidirectionalIterator> void
# 1544 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__rotate(_BidirectionalIterator __first, _BidirectionalIterator
# 1545 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__middle, _BidirectionalIterator
# 1546 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last, bidirectional_iterator_tag)
# 1548 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1553 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((__first == __middle) || (__last == __middle)) {
# 1554 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return; }
# 1556 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__reverse(__first, __middle, bidirectional_iterator_tag());
# 1557 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__reverse(__middle, __last, bidirectional_iterator_tag());
# 1559 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((__first != __middle) && (__middle != __last))
# 1560 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1561 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::iter_swap(__first, --__last);
# 1562 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 1563 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1565 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first == __middle) {
# 1566 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__reverse(__middle, __last, bidirectional_iterator_tag()); } else {
# 1568 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__reverse(__first, __middle, bidirectional_iterator_tag()); }
# 1569 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1572 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator> void
# 1574 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__rotate(_RandomAccessIterator __first, _RandomAccessIterator
# 1575 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__middle, _RandomAccessIterator
# 1576 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last, random_access_iterator_tag)
# 1578 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1583 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((__first == __middle) || (__last == __middle)) {
# 1584 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return; }
# 1587 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _RandomAccessIterator> ::difference_type _Distance;
# 1589 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _RandomAccessIterator> ::value_type _ValueType;
# 1591 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_Distance __n = __last - __first;
# 1592 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_Distance __k = __middle - __first;
# 1594 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__k == (__n - __k))
# 1595 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1596 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::swap_ranges(__first, __middle, __middle);
# 1597 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return;
# 1598 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1600 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_RandomAccessIterator __p = __first;
# 1602 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
for (; ;)
# 1603 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1604 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__k < (__n - __k))
# 1605 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1606 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__is_pod(_ValueType) && (__k == 1))
# 1607 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1608 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ValueType __t = (*__p);
# 1609 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::copy(__p + 1, __p + __n, __p);
# 1610 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*((__p + __n) - 1)) = __t;
# 1611 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return;
# 1612 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1613 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_RandomAccessIterator __q = __p + __k;
# 1614 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
for (_Distance __i = (0); __i < (__n - __k); ++__i)
# 1615 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1616 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::iter_swap(__p, __q);
# 1617 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__p;
# 1618 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__q;
# 1619 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1620 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__n %= __k;
# 1621 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__n == 0) {
# 1622 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return; }
# 1623 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::swap(__n, __k);
# 1624 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__k = (__n - __k);
# 1625 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else
# 1627 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1628 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__k = (__n - __k);
# 1629 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__is_pod(_ValueType) && (__k == 1))
# 1630 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1631 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ValueType __t = (*((__p + __n) - 1));
# 1632 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::copy_backward(__p, (__p + __n) - 1, __p + __n);
# 1633 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__p) = __t;
# 1634 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return;
# 1635 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1636 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_RandomAccessIterator __q = __p + __n;
# 1637 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__p = (__q - __k);
# 1638 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
for (_Distance __i = (0); __i < (__n - __k); ++__i)
# 1639 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1640 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
--__p;
# 1641 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
--__q;
# 1642 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::iter_swap(__p, __q);
# 1643 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1644 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__n %= __k;
# 1645 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__n == 0) {
# 1646 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return; }
# 1647 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::swap(__n, __k);
# 1648 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1649 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1650 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1673 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _ForwardIterator> inline void
# 1675 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
rotate(_ForwardIterator __first, _ForwardIterator __middle, _ForwardIterator
# 1676 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last)
# 1677 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1681 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 1682 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 1685 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _ForwardIterator> ::iterator_category _IterType;
# 1686 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__rotate(__first, __middle, __last, _IterType());
# 1687 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1709 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _ForwardIterator, class _OutputIterator> _OutputIterator
# 1711 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
rotate_copy(_ForwardIterator __first, _ForwardIterator __middle, _ForwardIterator
# 1712 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last, _OutputIterator __result)
# 1713 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1718 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 1719 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 1721 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return std::copy(__first, __middle, std::copy(__middle, __last, __result));
# 1723 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1726 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _ForwardIterator, class _Predicate> _ForwardIterator
# 1728 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__partition(_ForwardIterator __first, _ForwardIterator __last, _Predicate
# 1729 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__pred, forward_iterator_tag)
# 1730 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1731 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first == __last) {
# 1732 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first; }
# 1734 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while (__pred(*__first)) {
# 1735 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((++__first) == __last) {
# 1736 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first; } }
# 1738 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator __next = __first;
# 1740 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((++__next) != __last) {
# 1741 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__pred(*__next))
# 1742 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1743 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::iter_swap(__first, __next);
# 1744 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 1745 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} }
# 1747 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first;
# 1748 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1751 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _BidirectionalIterator, class _Predicate> _BidirectionalIterator
# 1753 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__partition(_BidirectionalIterator __first, _BidirectionalIterator __last, _Predicate
# 1754 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__pred, bidirectional_iterator_tag)
# 1755 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1756 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while (true)
# 1757 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1758 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while (true) {
# 1759 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first == __last) {
# 1760 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first; } else {
# 1761 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__pred(*__first)) {
# 1762 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first; } else {
# 1764 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
break; } } }
# 1765 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
--__last;
# 1766 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while (true) {
# 1767 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first == __last) {
# 1768 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first; } else {
# 1769 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (!((bool)__pred(*__last))) {
# 1770 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
--__last; } else {
# 1772 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
break; } } }
# 1773 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::iter_swap(__first, __last);
# 1774 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 1775 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1776 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1783 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _ForwardIterator, class _Predicate, class _Distance> _ForwardIterator
# 1785 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__inplace_stable_partition(_ForwardIterator __first, _Predicate
# 1786 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__pred, _Distance __len)
# 1787 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1788 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__len == 1) {
# 1789 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first; }
# 1790 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator __middle = __first;
# 1791 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::advance(__middle, __len / 2);
# 1792 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator __left_split = std::__inplace_stable_partition(__first, __pred, __len / 2);
# 1796 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_Distance __right_len = __len - (__len / 2);
# 1797 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator __right_split = std::__find_if_not_n(__middle, __right_len, __pred);
# 1799 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__right_len) {
# 1800 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__right_split = std::__inplace_stable_partition(__middle, __pred, __right_len); }
# 1803 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::rotate(__left_split, __middle, __right_split);
# 1804 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::advance(__left_split, std::distance(__middle, __right_split));
# 1805 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __left_split;
# 1806 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1814 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _ForwardIterator, class _Pointer, class _Predicate, class
# 1815 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_Distance> _ForwardIterator
# 1817 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__stable_partition_adaptive(_ForwardIterator __first, _ForwardIterator
# 1818 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last, _Predicate
# 1819 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__pred, _Distance __len, _Pointer
# 1820 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__buffer, _Distance
# 1821 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__buffer_size)
# 1822 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1823 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__len <= __buffer_size)
# 1824 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1825 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator __result1 = __first;
# 1826 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_Pointer __result2 = __buffer;
# 1830 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result2) = (*__first);
# 1831 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__result2;
# 1832 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 1833 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
for (; __first != __last; ++__first) {
# 1834 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__pred(*__first))
# 1835 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1836 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result1) = (*__first);
# 1837 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__result1;
# 1838 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else
# 1840 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1841 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result2) = (*__first);
# 1842 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__result2;
# 1843 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} }
# 1844 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::copy(__buffer, __result2, __result1);
# 1845 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __result1;
# 1846 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else
# 1848 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1849 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator __middle = __first;
# 1850 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::advance(__middle, __len / 2);
# 1851 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator __left_split = std::__stable_partition_adaptive(__first, __middle, __pred, __len / 2, __buffer, __buffer_size);
# 1857 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_Distance __right_len = __len - (__len / 2);
# 1858 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator __right_split = std::__find_if_not_n(__middle, __right_len, __pred);
# 1860 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__right_len) {
# 1861 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__right_split = std::__stable_partition_adaptive(__right_split, __last, __pred, __right_len, __buffer, __buffer_size); }
# 1865 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::rotate(__left_split, __middle, __right_split);
# 1866 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::advance(__left_split, std::distance(__middle, __right_split));
# 1867 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __left_split;
# 1868 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1869 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1888 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _ForwardIterator, class _Predicate> _ForwardIterator
# 1890 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
stable_partition(_ForwardIterator __first, _ForwardIterator __last, _Predicate
# 1891 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__pred)
# 1892 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1898 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 1900 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first = std::__find_if_not(__first, __last, __pred);
# 1902 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first == __last) {
# 1903 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first; } else
# 1905 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1907 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _ForwardIterator> ::value_type _ValueType;
# 1909 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _ForwardIterator> ::difference_type _DistanceType;
# 1911 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_Temporary_buffer< _ForwardIterator, typename iterator_traits< _ForwardIterator> ::value_type> __buf(__first, __last);
# 1913 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((__buf.size()) > 0) {
# 1914 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return std::__stable_partition_adaptive(__first, __last, __pred, (_DistanceType)(__buf.requested_size()), (__buf.begin()), (_DistanceType)(__buf.size())); } else {
# 1920 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return std::__inplace_stable_partition(__first, __pred, (_DistanceType)(__buf.requested_size())); }
# 1923 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1924 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1927 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator> void
# 1929 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__heap_select(_RandomAccessIterator __first, _RandomAccessIterator
# 1930 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__middle, _RandomAccessIterator
# 1931 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last)
# 1932 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1933 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::make_heap(__first, __middle);
# 1934 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
for (_RandomAccessIterator __i = __middle; __i < __last; ++__i) {
# 1935 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((*__i) < (*__first)) {
# 1936 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__pop_heap(__first, __middle, __i); } }
# 1937 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1940 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator, class _Compare> void
# 1942 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__heap_select(_RandomAccessIterator __first, _RandomAccessIterator
# 1943 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__middle, _RandomAccessIterator
# 1944 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last, _Compare __comp)
# 1945 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1946 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::make_heap(__first, __middle, __comp);
# 1947 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
for (_RandomAccessIterator __i = __middle; __i < __last; ++__i) {
# 1948 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__comp(*__i, *__first)) {
# 1949 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__pop_heap(__first, __middle, __i, __comp); } }
# 1950 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 1972 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _InputIterator, class _RandomAccessIterator> _RandomAccessIterator
# 1974 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
partial_sort_copy(_InputIterator __first, _InputIterator __last, _RandomAccessIterator
# 1975 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result_first, _RandomAccessIterator
# 1976 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result_last)
# 1977 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 1979 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _InputIterator> ::value_type _InputValueType;
# 1981 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _RandomAccessIterator> ::value_type _OutputValueType;
# 1983 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _RandomAccessIterator> ::difference_type _DistanceType;
# 1992 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 1993 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 1995 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__result_first == __result_last) {
# 1996 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __result_last; }
# 1997 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_RandomAccessIterator __result_real_last = __result_first;
# 1998 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((__first != __last) && (__result_real_last != __result_last))
# 1999 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2000 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result_real_last) = (*__first);
# 2001 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__result_real_last;
# 2002 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 2003 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2004 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::make_heap(__result_first, __result_real_last);
# 2005 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while (__first != __last)
# 2006 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2007 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((*__first) < (*__result_first)) {
# 2008 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__adjust_heap(__result_first, (_DistanceType)0, (_DistanceType)(__result_real_last - __result_first), (_InputValueType)(*__first)); }
# 2012 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 2013 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2014 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::sort_heap(__result_first, __result_real_last);
# 2015 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __result_real_last;
# 2016 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2038 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _InputIterator, class _RandomAccessIterator, class _Compare> _RandomAccessIterator
# 2040 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
partial_sort_copy(_InputIterator __first, _InputIterator __last, _RandomAccessIterator
# 2041 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result_first, _RandomAccessIterator
# 2042 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result_last, _Compare
# 2043 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__comp)
# 2044 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2046 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _InputIterator> ::value_type _InputValueType;
# 2048 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _RandomAccessIterator> ::value_type _OutputValueType;
# 2050 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _RandomAccessIterator> ::difference_type _DistanceType;
# 2062 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 2063 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 2065 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__result_first == __result_last) {
# 2066 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __result_last; }
# 2067 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_RandomAccessIterator __result_real_last = __result_first;
# 2068 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((__first != __last) && (__result_real_last != __result_last))
# 2069 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2070 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result_real_last) = (*__first);
# 2071 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__result_real_last;
# 2072 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 2073 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2074 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::make_heap(__result_first, __result_real_last, __comp);
# 2075 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while (__first != __last)
# 2076 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2077 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__comp(*__first, *__result_first)) {
# 2078 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__adjust_heap(__result_first, (_DistanceType)0, (_DistanceType)(__result_real_last - __result_first), (_InputValueType)(*__first), __comp); }
# 2083 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 2084 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2085 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::sort_heap(__result_first, __result_real_last, __comp);
# 2086 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __result_real_last;
# 2087 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2090 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator> void
# 2092 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__unguarded_linear_insert(_RandomAccessIterator __last)
# 2093 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2095 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typename iterator_traits< _RandomAccessIterator> ::value_type __val = (*__last);
# 2096 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_RandomAccessIterator __next = __last;
# 2097 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
--__next;
# 2098 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while (__val < (*__next))
# 2099 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2100 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__last) = (*__next);
# 2101 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last = __next;
# 2102 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
--__next;
# 2103 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2104 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__last) = __val;
# 2105 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2108 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator, class _Compare> void
# 2110 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__unguarded_linear_insert(_RandomAccessIterator __last, _Compare
# 2111 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__comp)
# 2112 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2114 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typename iterator_traits< _RandomAccessIterator> ::value_type __val = (*__last);
# 2115 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_RandomAccessIterator __next = __last;
# 2116 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
--__next;
# 2117 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while (__comp(__val, *__next))
# 2118 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2119 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__last) = (*__next);
# 2120 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last = __next;
# 2121 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
--__next;
# 2122 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2123 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__last) = __val;
# 2124 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2127 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator> void
# 2129 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__insertion_sort(_RandomAccessIterator __first, _RandomAccessIterator
# 2130 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last)
# 2131 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2132 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first == __last) {
# 2133 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return; }
# 2135 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
# 2136 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2137 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((*__i) < (*__first))
# 2138 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2140 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typename iterator_traits< _RandomAccessIterator> ::value_type __val = (*__i);
# 2141 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::copy_backward(__first, __i, __i + 1);
# 2142 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__first) = __val;
# 2143 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else {
# 2145 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__unguarded_linear_insert(__i); }
# 2146 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2147 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2150 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator, class _Compare> void
# 2152 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__insertion_sort(_RandomAccessIterator __first, _RandomAccessIterator
# 2153 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last, _Compare __comp)
# 2154 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2155 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first == __last) { return; }
# 2157 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
# 2158 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2159 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__comp(*__i, *__first))
# 2160 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2162 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typename iterator_traits< _RandomAccessIterator> ::value_type __val = (*__i);
# 2163 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::copy_backward(__first, __i, __i + 1);
# 2164 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__first) = __val;
# 2165 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else {
# 2167 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__unguarded_linear_insert(__i, __comp); }
# 2168 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2169 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2172 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator> inline void
# 2174 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__unguarded_insertion_sort(_RandomAccessIterator __first, _RandomAccessIterator
# 2175 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last)
# 2176 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2178 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _RandomAccessIterator> ::value_type _ValueType;
# 2180 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
for (_RandomAccessIterator __i = __first; __i != __last; ++__i) {
# 2181 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__unguarded_linear_insert(__i); }
# 2182 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2185 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator, class _Compare> inline void
# 2187 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__unguarded_insertion_sort(_RandomAccessIterator __first, _RandomAccessIterator
# 2188 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last, _Compare __comp)
# 2189 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2191 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _RandomAccessIterator> ::value_type _ValueType;
# 2193 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
for (_RandomAccessIterator __i = __first; __i != __last; ++__i) {
# 2194 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__unguarded_linear_insert(__i, __comp); }
# 2195 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2201 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
enum { _S_threshold = 16};
# 2204 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator> void
# 2206 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__final_insertion_sort(_RandomAccessIterator __first, _RandomAccessIterator
# 2207 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last)
# 2208 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2209 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((__last - __first) > ((int)_S_threshold))
# 2210 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2211 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__insertion_sort(__first, __first + ((int)_S_threshold));
# 2212 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__unguarded_insertion_sort(__first + ((int)_S_threshold), __last);
# 2213 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else {
# 2215 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__insertion_sort(__first, __last); }
# 2216 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2219 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator, class _Compare> void
# 2221 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__final_insertion_sort(_RandomAccessIterator __first, _RandomAccessIterator
# 2222 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last, _Compare __comp)
# 2223 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2224 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((__last - __first) > ((int)_S_threshold))
# 2225 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2226 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__insertion_sort(__first, __first + ((int)_S_threshold), __comp);
# 2227 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__unguarded_insertion_sort(__first + ((int)_S_threshold), __last, __comp);
# 2229 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else {
# 2231 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__insertion_sort(__first, __last, __comp); }
# 2232 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2235 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator, class _Tp> _RandomAccessIterator
# 2237 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__unguarded_partition(_RandomAccessIterator __first, _RandomAccessIterator
# 2238 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last, const _Tp &__pivot)
# 2239 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2240 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while (true)
# 2241 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2242 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((*__first) < __pivot) {
# 2243 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first; }
# 2244 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
--__last;
# 2245 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while (__pivot < (*__last)) {
# 2246 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
--__last; }
# 2247 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (!(__first < __last)) {
# 2248 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first; }
# 2249 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::iter_swap(__first, __last);
# 2250 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 2251 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2252 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2255 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator, class _Tp, class _Compare> _RandomAccessIterator
# 2257 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__unguarded_partition(_RandomAccessIterator __first, _RandomAccessIterator
# 2258 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last, const _Tp &
# 2259 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__pivot, _Compare __comp)
# 2260 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2261 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while (true)
# 2262 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2263 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while (__comp(*__first, __pivot)) {
# 2264 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first; }
# 2265 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
--__last;
# 2266 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while (__comp(__pivot, *__last)) {
# 2267 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
--__last; }
# 2268 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (!(__first < __last)) {
# 2269 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first; }
# 2270 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::iter_swap(__first, __last);
# 2271 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 2272 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2273 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2276 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator> inline _RandomAccessIterator
# 2278 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__unguarded_partition_pivot(_RandomAccessIterator __first, _RandomAccessIterator
# 2279 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last)
# 2280 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2281 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_RandomAccessIterator __mid = __first + ((__last - __first) / 2);
# 2282 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__move_median_to_first(__first, __first + 1, __mid, __last - 1);
# 2283 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return std::__unguarded_partition(__first + 1, __last, *__first);
# 2284 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2288 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator, class _Compare> inline _RandomAccessIterator
# 2290 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__unguarded_partition_pivot(_RandomAccessIterator __first, _RandomAccessIterator
# 2291 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last, _Compare __comp)
# 2292 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2293 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_RandomAccessIterator __mid = __first + ((__last - __first) / 2);
# 2294 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__move_median_to_first(__first, __first + 1, __mid, __last - 1, __comp);
# 2296 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return std::__unguarded_partition(__first + 1, __last, *__first, __comp);
# 2297 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2300 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator, class _Size> void
# 2302 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__introsort_loop(_RandomAccessIterator __first, _RandomAccessIterator
# 2303 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last, _Size
# 2304 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__depth_limit)
# 2305 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2306 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((__last - __first) > ((int)_S_threshold))
# 2307 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2308 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__depth_limit == 0)
# 2309 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2310 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::partial_sort(__first, __last, __last);
# 2311 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return;
# 2312 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2313 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
--__depth_limit;
# 2314 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_RandomAccessIterator __cut = std::__unguarded_partition_pivot(__first, __last);
# 2316 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__introsort_loop(__cut, __last, __depth_limit);
# 2317 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last = __cut;
# 2318 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2319 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2322 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator, class _Size, class _Compare> void
# 2324 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__introsort_loop(_RandomAccessIterator __first, _RandomAccessIterator
# 2325 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last, _Size
# 2326 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__depth_limit, _Compare __comp)
# 2327 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2328 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((__last - __first) > ((int)_S_threshold))
# 2329 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2330 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__depth_limit == 0)
# 2331 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2332 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::partial_sort(__first, __last, __last, __comp);
# 2333 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return;
# 2334 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2335 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
--__depth_limit;
# 2336 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_RandomAccessIterator __cut = std::__unguarded_partition_pivot(__first, __last, __comp);
# 2338 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__introsort_loop(__cut, __last, __depth_limit, __comp);
# 2339 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last = __cut;
# 2340 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2341 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2345 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator, class _Size> void
# 2347 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__introselect(_RandomAccessIterator __first, _RandomAccessIterator __nth, _RandomAccessIterator
# 2348 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last, _Size __depth_limit)
# 2349 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2351 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _RandomAccessIterator> ::value_type _ValueType;
# 2353 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((__last - __first) > 3)
# 2354 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2355 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__depth_limit == 0)
# 2356 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2357 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__heap_select(__first, __nth + 1, __last);
# 2360 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::iter_swap(__first, __nth);
# 2361 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return;
# 2362 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2363 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
--__depth_limit;
# 2364 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_RandomAccessIterator __cut = std::__unguarded_partition_pivot(__first, __last);
# 2366 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__cut <= __nth) {
# 2367 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first = __cut; } else {
# 2369 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last = __cut; }
# 2370 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2371 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__insertion_sort(__first, __last);
# 2372 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2374 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator, class _Size, class _Compare> void
# 2376 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__introselect(_RandomAccessIterator __first, _RandomAccessIterator __nth, _RandomAccessIterator
# 2377 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last, _Size __depth_limit, _Compare
# 2378 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__comp)
# 2379 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2381 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _RandomAccessIterator> ::value_type _ValueType;
# 2383 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((__last - __first) > 3)
# 2384 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2385 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__depth_limit == 0)
# 2386 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2387 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__heap_select(__first, __nth + 1, __last, __comp);
# 2389 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::iter_swap(__first, __nth);
# 2390 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return;
# 2391 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2392 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
--__depth_limit;
# 2393 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_RandomAccessIterator __cut = std::__unguarded_partition_pivot(__first, __last, __comp);
# 2395 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__cut <= __nth) {
# 2396 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first = __cut; } else {
# 2398 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last = __cut; }
# 2399 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2400 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__insertion_sort(__first, __last, __comp);
# 2401 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2423 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _ForwardIterator, class _Tp, class _Compare> _ForwardIterator
# 2425 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
lower_bound(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 2426 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__val, _Compare __comp)
# 2427 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2429 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _ForwardIterator> ::value_type _ValueType;
# 2431 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _ForwardIterator> ::difference_type _DistanceType;
# 2438 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 2440 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_DistanceType __len = std::distance(__first, __last);
# 2442 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while (__len > 0)
# 2443 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2444 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_DistanceType __half = __len >> 1;
# 2445 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator __middle = __first;
# 2446 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::advance(__middle, __half);
# 2447 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__comp(*__middle, __val))
# 2448 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2449 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first = __middle;
# 2450 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 2451 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__len = ((__len - __half) - 1);
# 2452 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else {
# 2454 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__len = __half; }
# 2455 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2456 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first;
# 2457 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2470 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _ForwardIterator, class _Tp> _ForwardIterator
# 2472 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
upper_bound(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 2473 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__val)
# 2474 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2476 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _ForwardIterator> ::value_type _ValueType;
# 2478 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _ForwardIterator> ::difference_type _DistanceType;
# 2483 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 2485 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_DistanceType __len = std::distance(__first, __last);
# 2487 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while (__len > 0)
# 2488 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2489 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_DistanceType __half = __len >> 1;
# 2490 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator __middle = __first;
# 2491 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::advance(__middle, __half);
# 2492 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__val < (*__middle)) {
# 2493 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__len = __half; } else
# 2495 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2496 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first = __middle;
# 2497 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 2498 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__len = ((__len - __half) - 1);
# 2499 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2500 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2501 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first;
# 2502 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2519 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _ForwardIterator, class _Tp, class _Compare> _ForwardIterator
# 2521 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
upper_bound(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 2522 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__val, _Compare __comp)
# 2523 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2525 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _ForwardIterator> ::value_type _ValueType;
# 2527 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _ForwardIterator> ::difference_type _DistanceType;
# 2534 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 2536 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_DistanceType __len = std::distance(__first, __last);
# 2538 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while (__len > 0)
# 2539 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2540 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_DistanceType __half = __len >> 1;
# 2541 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator __middle = __first;
# 2542 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::advance(__middle, __half);
# 2543 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__comp(__val, *__middle)) {
# 2544 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__len = __half; } else
# 2546 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2547 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first = __middle;
# 2548 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 2549 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__len = ((__len - __half) - 1);
# 2550 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2551 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2552 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first;
# 2553 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2572 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _ForwardIterator, class _Tp> pair< _ForwardIterator, _ForwardIterator>
# 2574 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
equal_range(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 2575 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__val)
# 2576 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2578 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _ForwardIterator> ::value_type _ValueType;
# 2580 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _ForwardIterator> ::difference_type _DistanceType;
# 2586 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 2587 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 2589 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_DistanceType __len = std::distance(__first, __last);
# 2591 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while (__len > 0)
# 2592 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2593 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_DistanceType __half = __len >> 1;
# 2594 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator __middle = __first;
# 2595 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::advance(__middle, __half);
# 2596 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((*__middle) < __val)
# 2597 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2598 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first = __middle;
# 2599 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 2600 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__len = ((__len - __half) - 1);
# 2601 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else {
# 2602 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__val < (*__middle)) {
# 2603 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__len = __half; } else
# 2605 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2606 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator __left = std::lower_bound(__first, __middle, __val);
# 2608 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::advance(__first, __len);
# 2609 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator __right = std::upper_bound(++__middle, __first, __val);
# 2611 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return pair< _ForwardIterator, _ForwardIterator> (__left, __right);
# 2612 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} }
# 2613 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2614 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return pair< _ForwardIterator, _ForwardIterator> (__first, __first);
# 2615 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2634 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _ForwardIterator, class _Tp, class _Compare> pair< _ForwardIterator, _ForwardIterator>
# 2636 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
equal_range(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 2637 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__val, _Compare __comp)
# 2638 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2640 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _ForwardIterator> ::value_type _ValueType;
# 2642 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _ForwardIterator> ::difference_type _DistanceType;
# 2651 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 2653 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 2655 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_DistanceType __len = std::distance(__first, __last);
# 2657 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while (__len > 0)
# 2658 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2659 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_DistanceType __half = __len >> 1;
# 2660 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator __middle = __first;
# 2661 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::advance(__middle, __half);
# 2662 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__comp(*__middle, __val))
# 2663 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2664 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first = __middle;
# 2665 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first;
# 2666 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__len = ((__len - __half) - 1);
# 2667 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else {
# 2668 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__comp(__val, *__middle)) {
# 2669 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__len = __half; } else
# 2671 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2672 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator __left = std::lower_bound(__first, __middle, __val, __comp);
# 2674 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::advance(__first, __len);
# 2675 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator __right = std::upper_bound(++__middle, __first, __val, __comp);
# 2677 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return pair< _ForwardIterator, _ForwardIterator> (__left, __right);
# 2678 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} }
# 2679 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2680 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return pair< _ForwardIterator, _ForwardIterator> (__first, __first);
# 2681 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2695 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _ForwardIterator, class _Tp> bool
# 2697 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
binary_search(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 2698 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__val)
# 2699 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2701 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _ForwardIterator> ::value_type _ValueType;
# 2706 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 2707 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 2709 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator __i = std::lower_bound(__first, __last, __val);
# 2710 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return (__i != __last) && (!(__val < (*__i)));
# 2711 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2728 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _ForwardIterator, class _Tp, class _Compare> bool
# 2730 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
binary_search(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 2731 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__val, _Compare __comp)
# 2732 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2734 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _ForwardIterator> ::value_type _ValueType;
# 2741 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 2743 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 2745 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator __i = std::lower_bound(__first, __last, __val, __comp);
# 2746 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return (__i != __last) && (!((bool)__comp(__val, *__i)));
# 2747 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2752 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _InputIterator1, class _InputIterator2, class
# 2753 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_OutputIterator> void
# 2755 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__move_merge_adaptive(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2
# 2756 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first2, _InputIterator2 __last2, _OutputIterator
# 2757 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result)
# 2758 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2759 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((__first1 != __last1) && (__first2 != __last2))
# 2760 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2761 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((*__first2) < (*__first1))
# 2762 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2763 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = (*__first2);
# 2764 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first2;
# 2765 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else
# 2767 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2768 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = (*__first1);
# 2769 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first1;
# 2770 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2771 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__result;
# 2772 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2773 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first1 != __last1) {
# 2774 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::copy(__first1, __last1, __result); }
# 2775 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2778 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _InputIterator1, class _InputIterator2, class
# 2779 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_OutputIterator, class _Compare> void
# 2781 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__move_merge_adaptive(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2
# 2782 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first2, _InputIterator2 __last2, _OutputIterator
# 2783 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result, _Compare __comp)
# 2784 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2785 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((__first1 != __last1) && (__first2 != __last2))
# 2786 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2787 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__comp(*__first2, *__first1))
# 2788 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2789 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = (*__first2);
# 2790 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first2;
# 2791 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else
# 2793 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2794 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = (*__first1);
# 2795 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first1;
# 2796 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2797 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__result;
# 2798 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2799 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first1 != __last1) {
# 2800 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::copy(__first1, __last1, __result); }
# 2801 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2804 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _BidirectionalIterator1, class _BidirectionalIterator2, class
# 2805 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_BidirectionalIterator3> void
# 2807 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__move_merge_adaptive_backward(_BidirectionalIterator1 __first1, _BidirectionalIterator1
# 2808 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last1, _BidirectionalIterator2
# 2809 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first2, _BidirectionalIterator2
# 2810 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last2, _BidirectionalIterator3
# 2811 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result)
# 2812 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2813 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first1 == __last1)
# 2814 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2815 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::copy_backward(__first2, __last2, __result);
# 2816 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return;
# 2817 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else {
# 2818 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first2 == __last2) {
# 2819 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return; } }
# 2821 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
--__last1;
# 2822 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
--__last2;
# 2823 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while (true)
# 2824 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2825 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((*__last2) < (*__last1))
# 2826 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2827 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*(--__result)) = (*__last1);
# 2828 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first1 == __last1)
# 2829 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2830 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::copy_backward(__first2, ++__last2, __result);
# 2831 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return;
# 2832 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2833 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
--__last1;
# 2834 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else
# 2836 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2837 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*(--__result)) = (*__last2);
# 2838 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first2 == __last2) {
# 2839 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return; }
# 2840 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
--__last2;
# 2841 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2842 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2843 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2846 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _BidirectionalIterator1, class _BidirectionalIterator2, class
# 2847 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_BidirectionalIterator3, class _Compare> void
# 2849 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__move_merge_adaptive_backward(_BidirectionalIterator1 __first1, _BidirectionalIterator1
# 2850 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last1, _BidirectionalIterator2
# 2851 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first2, _BidirectionalIterator2
# 2852 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last2, _BidirectionalIterator3
# 2853 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result, _Compare
# 2854 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__comp)
# 2855 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2856 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first1 == __last1)
# 2857 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2858 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::copy_backward(__first2, __last2, __result);
# 2859 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return;
# 2860 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else {
# 2861 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first2 == __last2) {
# 2862 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return; } }
# 2864 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
--__last1;
# 2865 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
--__last2;
# 2866 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while (true)
# 2867 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2868 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__comp(*__last2, *__last1))
# 2869 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2870 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*(--__result)) = (*__last1);
# 2871 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first1 == __last1)
# 2872 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2873 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::copy_backward(__first2, ++__last2, __result);
# 2874 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return;
# 2875 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2876 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
--__last1;
# 2877 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else
# 2879 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2880 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*(--__result)) = (*__last2);
# 2881 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first2 == __last2) {
# 2882 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return; }
# 2883 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
--__last2;
# 2884 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2885 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2886 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2889 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _BidirectionalIterator1, class _BidirectionalIterator2, class
# 2890 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_Distance> _BidirectionalIterator1
# 2892 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__rotate_adaptive(_BidirectionalIterator1 __first, _BidirectionalIterator1
# 2893 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__middle, _BidirectionalIterator1
# 2894 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last, _Distance
# 2895 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__len1, _Distance __len2, _BidirectionalIterator2
# 2896 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__buffer, _Distance
# 2897 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__buffer_size)
# 2898 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2899 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_BidirectionalIterator2 __buffer_end;
# 2900 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((__len1 > __len2) && (__len2 <= __buffer_size))
# 2901 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2902 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__len2)
# 2903 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2904 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__buffer_end = std::copy(__middle, __last, __buffer);
# 2905 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::copy_backward(__first, __middle, __last);
# 2906 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return std::copy(__buffer, __buffer_end, __first);
# 2907 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else {
# 2909 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first; }
# 2910 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else {
# 2911 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__len1 <= __buffer_size)
# 2912 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2913 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__len1)
# 2914 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2915 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__buffer_end = std::copy(__first, __middle, __buffer);
# 2916 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::copy(__middle, __last, __first);
# 2917 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return std::copy_backward(__buffer, __buffer_end, __last);
# 2918 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else {
# 2920 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __last; }
# 2921 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else
# 2923 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2924 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::rotate(__first, __middle, __last);
# 2925 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::advance(__first, std::distance(__middle, __last));
# 2926 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first;
# 2927 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} }
# 2928 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2931 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _BidirectionalIterator, class _Distance, class
# 2932 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_Pointer> void
# 2934 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__merge_adaptive(_BidirectionalIterator __first, _BidirectionalIterator
# 2935 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__middle, _BidirectionalIterator
# 2936 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last, _Distance
# 2937 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__len1, _Distance __len2, _Pointer
# 2938 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__buffer, _Distance __buffer_size)
# 2939 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2940 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((__len1 <= __len2) && (__len1 <= __buffer_size))
# 2941 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2942 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_Pointer __buffer_end = std::copy(__first, __middle, __buffer);
# 2943 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__move_merge_adaptive(__buffer, __buffer_end, __middle, __last, __first);
# 2945 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else {
# 2946 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__len2 <= __buffer_size)
# 2947 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2948 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_Pointer __buffer_end = std::copy(__middle, __last, __buffer);
# 2949 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__move_merge_adaptive_backward(__first, __middle, __buffer, __buffer_end, __last);
# 2951 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else
# 2953 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2954 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_BidirectionalIterator __first_cut = __first;
# 2955 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_BidirectionalIterator __second_cut = __middle;
# 2956 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_Distance __len11 = (0);
# 2957 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_Distance __len22 = (0);
# 2958 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__len1 > __len2)
# 2959 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2960 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__len11 = (__len1 / 2);
# 2961 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::advance(__first_cut, __len11);
# 2962 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__second_cut = std::lower_bound(__middle, __last, *__first_cut);
# 2964 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__len22 = std::distance(__middle, __second_cut);
# 2965 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else
# 2967 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2968 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__len22 = (__len2 / 2);
# 2969 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::advance(__second_cut, __len22);
# 2970 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first_cut = std::upper_bound(__first, __middle, *__second_cut);
# 2972 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__len11 = std::distance(__first, __first_cut);
# 2973 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2974 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_BidirectionalIterator __new_middle = std::__rotate_adaptive(__first_cut, __middle, __second_cut, __len1 - __len11, __len22, __buffer, __buffer_size);
# 2978 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__merge_adaptive(__first, __first_cut, __new_middle, __len11, __len22, __buffer, __buffer_size);
# 2980 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__merge_adaptive(__new_middle, __second_cut, __last, __len1 - __len11, __len2 - __len22, __buffer, __buffer_size);
# 2983 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} }
# 2984 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 2987 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _BidirectionalIterator, class _Distance, class
# 2988 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_Pointer, class _Compare> void
# 2990 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__merge_adaptive(_BidirectionalIterator __first, _BidirectionalIterator
# 2991 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__middle, _BidirectionalIterator
# 2992 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last, _Distance
# 2993 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__len1, _Distance __len2, _Pointer
# 2994 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__buffer, _Distance __buffer_size, _Compare
# 2995 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__comp)
# 2996 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2997 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((__len1 <= __len2) && (__len1 <= __buffer_size))
# 2998 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 2999 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_Pointer __buffer_end = std::copy(__first, __middle, __buffer);
# 3000 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__move_merge_adaptive(__buffer, __buffer_end, __middle, __last, __first, __comp);
# 3002 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else {
# 3003 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__len2 <= __buffer_size)
# 3004 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3005 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_Pointer __buffer_end = std::copy(__middle, __last, __buffer);
# 3006 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__move_merge_adaptive_backward(__first, __middle, __buffer, __buffer_end, __last, __comp);
# 3008 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else
# 3010 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3011 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_BidirectionalIterator __first_cut = __first;
# 3012 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_BidirectionalIterator __second_cut = __middle;
# 3013 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_Distance __len11 = (0);
# 3014 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_Distance __len22 = (0);
# 3015 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__len1 > __len2)
# 3016 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3017 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__len11 = (__len1 / 2);
# 3018 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::advance(__first_cut, __len11);
# 3019 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__second_cut = std::lower_bound(__middle, __last, *__first_cut, __comp);
# 3021 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__len22 = std::distance(__middle, __second_cut);
# 3022 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else
# 3024 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3025 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__len22 = (__len2 / 2);
# 3026 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::advance(__second_cut, __len22);
# 3027 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first_cut = std::upper_bound(__first, __middle, *__second_cut, __comp);
# 3029 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__len11 = std::distance(__first, __first_cut);
# 3030 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3031 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_BidirectionalIterator __new_middle = std::__rotate_adaptive(__first_cut, __middle, __second_cut, __len1 - __len11, __len22, __buffer, __buffer_size);
# 3035 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__merge_adaptive(__first, __first_cut, __new_middle, __len11, __len22, __buffer, __buffer_size, __comp);
# 3037 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__merge_adaptive(__new_middle, __second_cut, __last, __len1 - __len11, __len2 - __len22, __buffer, __buffer_size, __comp);
# 3041 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} }
# 3042 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3045 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _BidirectionalIterator, class _Distance> void
# 3047 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__merge_without_buffer(_BidirectionalIterator __first, _BidirectionalIterator
# 3048 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__middle, _BidirectionalIterator
# 3049 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last, _Distance
# 3050 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__len1, _Distance __len2)
# 3051 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3052 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((__len1 == 0) || (__len2 == 0)) {
# 3053 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return; }
# 3054 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((__len1 + __len2) == 2)
# 3055 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3056 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((*__middle) < (*__first)) {
# 3057 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::iter_swap(__first, __middle); }
# 3058 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return;
# 3059 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3060 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_BidirectionalIterator __first_cut = __first;
# 3061 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_BidirectionalIterator __second_cut = __middle;
# 3062 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_Distance __len11 = (0);
# 3063 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_Distance __len22 = (0);
# 3064 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__len1 > __len2)
# 3065 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3066 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__len11 = (__len1 / 2);
# 3067 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::advance(__first_cut, __len11);
# 3068 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__second_cut = std::lower_bound(__middle, __last, *__first_cut);
# 3069 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__len22 = std::distance(__middle, __second_cut);
# 3070 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else
# 3072 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3073 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__len22 = (__len2 / 2);
# 3074 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::advance(__second_cut, __len22);
# 3075 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first_cut = std::upper_bound(__first, __middle, *__second_cut);
# 3076 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__len11 = std::distance(__first, __first_cut);
# 3077 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3078 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::rotate(__first_cut, __middle, __second_cut);
# 3079 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_BidirectionalIterator __new_middle = __first_cut;
# 3080 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::advance(__new_middle, std::distance(__middle, __second_cut));
# 3081 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__merge_without_buffer(__first, __first_cut, __new_middle, __len11, __len22);
# 3083 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__merge_without_buffer(__new_middle, __second_cut, __last, __len1 - __len11, __len2 - __len22);
# 3085 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3088 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _BidirectionalIterator, class _Distance, class
# 3089 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_Compare> void
# 3091 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__merge_without_buffer(_BidirectionalIterator __first, _BidirectionalIterator
# 3092 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__middle, _BidirectionalIterator
# 3093 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last, _Distance
# 3094 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__len1, _Distance __len2, _Compare
# 3095 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__comp)
# 3096 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3097 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((__len1 == 0) || (__len2 == 0)) {
# 3098 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return; }
# 3099 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((__len1 + __len2) == 2)
# 3100 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3101 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__comp(*__middle, *__first)) {
# 3102 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::iter_swap(__first, __middle); }
# 3103 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return;
# 3104 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3105 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_BidirectionalIterator __first_cut = __first;
# 3106 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_BidirectionalIterator __second_cut = __middle;
# 3107 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_Distance __len11 = (0);
# 3108 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_Distance __len22 = (0);
# 3109 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__len1 > __len2)
# 3110 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3111 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__len11 = (__len1 / 2);
# 3112 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::advance(__first_cut, __len11);
# 3113 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__second_cut = std::lower_bound(__middle, __last, *__first_cut, __comp);
# 3115 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__len22 = std::distance(__middle, __second_cut);
# 3116 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else
# 3118 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3119 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__len22 = (__len2 / 2);
# 3120 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::advance(__second_cut, __len22);
# 3121 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first_cut = std::upper_bound(__first, __middle, *__second_cut, __comp);
# 3123 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__len11 = std::distance(__first, __first_cut);
# 3124 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3125 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::rotate(__first_cut, __middle, __second_cut);
# 3126 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_BidirectionalIterator __new_middle = __first_cut;
# 3127 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::advance(__new_middle, std::distance(__middle, __second_cut));
# 3128 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__merge_without_buffer(__first, __first_cut, __new_middle, __len11, __len22, __comp);
# 3130 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__merge_without_buffer(__new_middle, __second_cut, __last, __len1 - __len11, __len2 - __len22, __comp);
# 3132 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3152 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _BidirectionalIterator> void
# 3154 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
inplace_merge(_BidirectionalIterator __first, _BidirectionalIterator
# 3155 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__middle, _BidirectionalIterator
# 3156 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last)
# 3157 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3159 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _BidirectionalIterator> ::value_type _ValueType;
# 3161 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _BidirectionalIterator> ::difference_type _DistanceType;
# 3167 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 3168 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 3170 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((__first == __middle) || (__middle == __last)) {
# 3171 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return; }
# 3173 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_DistanceType __len1 = std::distance(__first, __middle);
# 3174 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_DistanceType __len2 = std::distance(__middle, __last);
# 3176 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_Temporary_buffer< _BidirectionalIterator, typename iterator_traits< _BidirectionalIterator> ::value_type> __buf(__first, __last);
# 3178 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((__buf.begin()) == 0) {
# 3179 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__merge_without_buffer(__first, __middle, __last, __len1, __len2); } else {
# 3181 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__merge_adaptive(__first, __middle, __last, __len1, __len2, (__buf.begin()), (_DistanceType)(__buf.size())); }
# 3183 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3207 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _BidirectionalIterator, class _Compare> void
# 3209 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
inplace_merge(_BidirectionalIterator __first, _BidirectionalIterator
# 3210 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__middle, _BidirectionalIterator
# 3211 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last, _Compare
# 3212 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__comp)
# 3213 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3215 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _BidirectionalIterator> ::value_type _ValueType;
# 3217 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _BidirectionalIterator> ::difference_type _DistanceType;
# 3224 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 3225 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 3227 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((__first == __middle) || (__middle == __last)) {
# 3228 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return; }
# 3230 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
const _DistanceType __len1 = std::distance(__first, __middle);
# 3231 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
const _DistanceType __len2 = std::distance(__middle, __last);
# 3233 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_Temporary_buffer< _BidirectionalIterator, typename iterator_traits< _BidirectionalIterator> ::value_type> __buf(__first, __last);
# 3235 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((__buf.begin()) == 0) {
# 3236 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__merge_without_buffer(__first, __middle, __last, __len1, __len2, __comp); } else {
# 3239 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__merge_adaptive(__first, __middle, __last, __len1, __len2, (__buf.begin()), (_DistanceType)(__buf.size()), __comp); }
# 3242 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3246 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _InputIterator1, class _InputIterator2, class
# 3247 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_OutputIterator> _OutputIterator
# 3249 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__move_merge(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2
# 3250 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first2, _InputIterator2 __last2, _OutputIterator
# 3251 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result)
# 3252 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3253 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((__first1 != __last1) && (__first2 != __last2))
# 3254 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3255 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((*__first2) < (*__first1))
# 3256 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3257 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = (*__first2);
# 3258 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first2;
# 3259 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else
# 3261 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3262 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = (*__first1);
# 3263 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first1;
# 3264 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3265 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__result;
# 3266 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3267 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return std::copy(__first2, __last2, std::copy(__first1, __last1, __result));
# 3270 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3273 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _InputIterator1, class _InputIterator2, class
# 3274 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_OutputIterator, class _Compare> _OutputIterator
# 3276 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__move_merge(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2
# 3277 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first2, _InputIterator2 __last2, _OutputIterator
# 3278 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result, _Compare __comp)
# 3279 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3280 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((__first1 != __last1) && (__first2 != __last2))
# 3281 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3282 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__comp(*__first2, *__first1))
# 3283 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3284 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = (*__first2);
# 3285 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first2;
# 3286 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else
# 3288 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3289 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = (*__first1);
# 3290 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first1;
# 3291 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3292 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__result;
# 3293 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3294 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return std::copy(__first2, __last2, std::copy(__first1, __last1, __result));
# 3297 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3299 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator1, class _RandomAccessIterator2, class
# 3300 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_Distance> void
# 3302 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__merge_sort_loop(_RandomAccessIterator1 __first, _RandomAccessIterator1
# 3303 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last, _RandomAccessIterator2
# 3304 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result, _Distance
# 3305 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__step_size)
# 3306 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3307 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
const _Distance __two_step = 2 * __step_size;
# 3309 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((__last - __first) >= __two_step)
# 3310 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3311 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result = std::__move_merge(__first, __first + __step_size, __first + __step_size, __first + __two_step, __result);
# 3314 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first += __two_step;
# 3315 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3317 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__step_size = std::min((_Distance)(__last - __first), __step_size);
# 3318 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__move_merge(__first, __first + __step_size, __first + __step_size, __last, __result);
# 3320 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3322 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator1, class _RandomAccessIterator2, class
# 3323 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_Distance, class _Compare> void
# 3325 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__merge_sort_loop(_RandomAccessIterator1 __first, _RandomAccessIterator1
# 3326 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last, _RandomAccessIterator2
# 3327 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result, _Distance __step_size, _Compare
# 3328 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__comp)
# 3329 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3330 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
const _Distance __two_step = 2 * __step_size;
# 3332 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((__last - __first) >= __two_step)
# 3333 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3334 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result = std::__move_merge(__first, __first + __step_size, __first + __step_size, __first + __two_step, __result, __comp);
# 3338 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first += __two_step;
# 3339 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3340 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__step_size = std::min((_Distance)(__last - __first), __step_size);
# 3342 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__move_merge(__first, __first + __step_size, __first + __step_size, __last, __result, __comp);
# 3344 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3346 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator, class _Distance> void
# 3348 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__chunk_insertion_sort(_RandomAccessIterator __first, _RandomAccessIterator
# 3349 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last, _Distance
# 3350 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__chunk_size)
# 3351 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3352 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((__last - __first) >= __chunk_size)
# 3353 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3354 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__insertion_sort(__first, __first + __chunk_size);
# 3355 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first += __chunk_size;
# 3356 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3357 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__insertion_sort(__first, __last);
# 3358 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3360 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator, class _Distance, class
# 3361 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_Compare> void
# 3363 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__chunk_insertion_sort(_RandomAccessIterator __first, _RandomAccessIterator
# 3364 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last, _Distance
# 3365 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__chunk_size, _Compare __comp)
# 3366 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3367 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((__last - __first) >= __chunk_size)
# 3368 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3369 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__insertion_sort(__first, __first + __chunk_size, __comp);
# 3370 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first += __chunk_size;
# 3371 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3372 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__insertion_sort(__first, __last, __comp);
# 3373 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3375 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
enum { _S_chunk_size = 7};
# 3377 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator, class _Pointer> void
# 3379 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__merge_sort_with_buffer(_RandomAccessIterator __first, _RandomAccessIterator
# 3380 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last, _Pointer
# 3381 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__buffer)
# 3382 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3384 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _RandomAccessIterator> ::difference_type _Distance;
# 3386 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
const _Distance __len = __last - __first;
# 3387 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
const _Pointer __buffer_last = __buffer + __len;
# 3389 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_Distance __step_size = (_S_chunk_size);
# 3390 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__chunk_insertion_sort(__first, __last, __step_size);
# 3392 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while (__step_size < __len)
# 3393 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3394 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__merge_sort_loop(__first, __last, __buffer, __step_size);
# 3395 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__step_size *= 2;
# 3396 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__merge_sort_loop(__buffer, __buffer_last, __first, __step_size);
# 3397 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__step_size *= 2;
# 3398 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3399 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3401 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator, class _Pointer, class _Compare> void
# 3403 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__merge_sort_with_buffer(_RandomAccessIterator __first, _RandomAccessIterator
# 3404 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last, _Pointer
# 3405 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__buffer, _Compare __comp)
# 3406 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3408 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _RandomAccessIterator> ::difference_type _Distance;
# 3410 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
const _Distance __len = __last - __first;
# 3411 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
const _Pointer __buffer_last = __buffer + __len;
# 3413 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_Distance __step_size = (_S_chunk_size);
# 3414 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__chunk_insertion_sort(__first, __last, __step_size, __comp);
# 3416 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while (__step_size < __len)
# 3417 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3418 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__merge_sort_loop(__first, __last, __buffer, __step_size, __comp);
# 3420 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__step_size *= 2;
# 3421 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__merge_sort_loop(__buffer, __buffer_last, __first, __step_size, __comp);
# 3423 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__step_size *= 2;
# 3424 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3425 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3427 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator, class _Pointer, class
# 3428 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_Distance> void
# 3430 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__stable_sort_adaptive(_RandomAccessIterator __first, _RandomAccessIterator
# 3431 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last, _Pointer
# 3432 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__buffer, _Distance __buffer_size)
# 3433 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3434 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
const _Distance __len = ((__last - __first) + 1) / 2;
# 3435 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
const _RandomAccessIterator __middle = __first + __len;
# 3436 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__len > __buffer_size)
# 3437 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3438 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__stable_sort_adaptive(__first, __middle, __buffer, __buffer_size);
# 3440 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__stable_sort_adaptive(__middle, __last, __buffer, __buffer_size);
# 3442 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else
# 3444 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3445 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__merge_sort_with_buffer(__first, __middle, __buffer);
# 3446 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__merge_sort_with_buffer(__middle, __last, __buffer);
# 3447 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3448 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__merge_adaptive(__first, __middle, __last, (_Distance)(__middle - __first), (_Distance)(__last - __middle), __buffer, __buffer_size);
# 3452 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3454 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator, class _Pointer, class
# 3455 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_Distance, class _Compare> void
# 3457 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__stable_sort_adaptive(_RandomAccessIterator __first, _RandomAccessIterator
# 3458 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last, _Pointer
# 3459 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__buffer, _Distance __buffer_size, _Compare
# 3460 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__comp)
# 3461 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3462 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
const _Distance __len = ((__last - __first) + 1) / 2;
# 3463 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
const _RandomAccessIterator __middle = __first + __len;
# 3464 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__len > __buffer_size)
# 3465 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3466 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__stable_sort_adaptive(__first, __middle, __buffer, __buffer_size, __comp);
# 3468 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__stable_sort_adaptive(__middle, __last, __buffer, __buffer_size, __comp);
# 3470 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else
# 3472 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3473 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__merge_sort_with_buffer(__first, __middle, __buffer, __comp);
# 3474 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__merge_sort_with_buffer(__middle, __last, __buffer, __comp);
# 3475 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3476 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__merge_adaptive(__first, __middle, __last, (_Distance)(__middle - __first), (_Distance)(__last - __middle), __buffer, __buffer_size, __comp);
# 3481 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3484 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator> void
# 3486 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__inplace_stable_sort(_RandomAccessIterator __first, _RandomAccessIterator
# 3487 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last)
# 3488 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3489 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((__last - __first) < 15)
# 3490 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3491 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__insertion_sort(__first, __last);
# 3492 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return;
# 3493 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3494 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_RandomAccessIterator __middle = __first + ((__last - __first) / 2);
# 3495 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__inplace_stable_sort(__first, __middle);
# 3496 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__inplace_stable_sort(__middle, __last);
# 3497 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__merge_without_buffer(__first, __middle, __last, __middle - __first, __last - __middle);
# 3500 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3503 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator, class _Compare> void
# 3505 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__inplace_stable_sort(_RandomAccessIterator __first, _RandomAccessIterator
# 3506 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last, _Compare __comp)
# 3507 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3508 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((__last - __first) < 15)
# 3509 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3510 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__insertion_sort(__first, __last, __comp);
# 3511 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return;
# 3512 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3513 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_RandomAccessIterator __middle = __first + ((__last - __first) / 2);
# 3514 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__inplace_stable_sort(__first, __middle, __comp);
# 3515 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__inplace_stable_sort(__middle, __last, __comp);
# 3516 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__merge_without_buffer(__first, __middle, __last, __middle - __first, __last - __middle, __comp);
# 3520 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3547 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _InputIterator1, class _InputIterator2> bool
# 3549 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
includes(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2
# 3550 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first2, _InputIterator2 __last2)
# 3551 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3553 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _InputIterator1> ::value_type _ValueType1;
# 3555 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _InputIterator2> ::value_type _ValueType2;
# 3562 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 3563 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 3565 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((__first1 != __last1) && (__first2 != __last2)) {
# 3566 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((*__first2) < (*__first1)) {
# 3567 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return false; } else {
# 3568 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((*__first1) < (*__first2)) {
# 3569 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first1; } else {
# 3571 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(++__first1), (++__first2); } } }
# 3573 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first2 == __last2;
# 3574 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3597 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _InputIterator1, class _InputIterator2, class
# 3598 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_Compare> bool
# 3600 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
includes(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2
# 3601 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first2, _InputIterator2 __last2, _Compare
# 3602 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__comp)
# 3603 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3605 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _InputIterator1> ::value_type _ValueType1;
# 3607 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _InputIterator2> ::value_type _ValueType2;
# 3616 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 3617 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 3619 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((__first1 != __last1) && (__first2 != __last2)) {
# 3620 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__comp(*__first2, *__first1)) {
# 3621 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return false; } else {
# 3622 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__comp(*__first1, *__first2)) {
# 3623 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first1; } else {
# 3625 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(++__first1), (++__first2); } } }
# 3627 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first2 == __last2;
# 3628 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3652 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _BidirectionalIterator> bool
# 3654 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
next_permutation(_BidirectionalIterator __first, _BidirectionalIterator
# 3655 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last)
# 3656 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3662 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 3664 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first == __last) {
# 3665 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return false; }
# 3666 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_BidirectionalIterator __i = __first;
# 3667 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__i;
# 3668 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__i == __last) {
# 3669 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return false; }
# 3670 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__i = __last;
# 3671 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
--__i;
# 3673 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
for (; ;)
# 3674 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3675 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_BidirectionalIterator __ii = __i;
# 3676 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
--__i;
# 3677 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((*__i) < (*__ii))
# 3678 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3679 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_BidirectionalIterator __j = __last;
# 3680 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while (!((*__i) < (*(--__j))))
# 3681 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{ }
# 3682 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::iter_swap(__i, __j);
# 3683 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::reverse(__ii, __last);
# 3684 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return true;
# 3685 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3686 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__i == __first)
# 3687 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3688 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::reverse(__first, __last);
# 3689 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return false;
# 3690 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3691 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3692 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3709 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _BidirectionalIterator, class _Compare> bool
# 3711 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
next_permutation(_BidirectionalIterator __first, _BidirectionalIterator
# 3712 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last, _Compare __comp)
# 3713 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3720 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 3722 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first == __last) {
# 3723 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return false; }
# 3724 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_BidirectionalIterator __i = __first;
# 3725 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__i;
# 3726 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__i == __last) {
# 3727 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return false; }
# 3728 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__i = __last;
# 3729 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
--__i;
# 3731 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
for (; ;)
# 3732 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3733 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_BidirectionalIterator __ii = __i;
# 3734 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
--__i;
# 3735 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__comp(*__i, *__ii))
# 3736 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3737 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_BidirectionalIterator __j = __last;
# 3738 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while (!((bool)__comp(*__i, *(--__j))))
# 3739 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{ }
# 3740 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::iter_swap(__i, __j);
# 3741 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::reverse(__ii, __last);
# 3742 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return true;
# 3743 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3744 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__i == __first)
# 3745 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3746 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::reverse(__first, __last);
# 3747 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return false;
# 3748 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3749 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3750 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3765 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _BidirectionalIterator> bool
# 3767 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
prev_permutation(_BidirectionalIterator __first, _BidirectionalIterator
# 3768 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last)
# 3769 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3775 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 3777 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first == __last) {
# 3778 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return false; }
# 3779 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_BidirectionalIterator __i = __first;
# 3780 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__i;
# 3781 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__i == __last) {
# 3782 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return false; }
# 3783 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__i = __last;
# 3784 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
--__i;
# 3786 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
for (; ;)
# 3787 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3788 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_BidirectionalIterator __ii = __i;
# 3789 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
--__i;
# 3790 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((*__ii) < (*__i))
# 3791 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3792 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_BidirectionalIterator __j = __last;
# 3793 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while (!((*(--__j)) < (*__i)))
# 3794 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{ }
# 3795 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::iter_swap(__i, __j);
# 3796 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::reverse(__ii, __last);
# 3797 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return true;
# 3798 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3799 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__i == __first)
# 3800 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3801 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::reverse(__first, __last);
# 3802 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return false;
# 3803 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3804 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3805 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3822 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _BidirectionalIterator, class _Compare> bool
# 3824 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
prev_permutation(_BidirectionalIterator __first, _BidirectionalIterator
# 3825 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last, _Compare __comp)
# 3826 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3833 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 3835 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first == __last) {
# 3836 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return false; }
# 3837 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_BidirectionalIterator __i = __first;
# 3838 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__i;
# 3839 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__i == __last) {
# 3840 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return false; }
# 3841 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__i = __last;
# 3842 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
--__i;
# 3844 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
for (; ;)
# 3845 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3846 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_BidirectionalIterator __ii = __i;
# 3847 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
--__i;
# 3848 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__comp(*__ii, *__i))
# 3849 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3850 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_BidirectionalIterator __j = __last;
# 3851 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while (!((bool)__comp(*(--__j), *__i)))
# 3852 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{ }
# 3853 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::iter_swap(__i, __j);
# 3854 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::reverse(__ii, __last);
# 3855 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return true;
# 3856 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3857 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__i == __first)
# 3858 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3859 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::reverse(__first, __last);
# 3860 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return false;
# 3861 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3862 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3863 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3882 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _InputIterator, class _OutputIterator, class _Tp> _OutputIterator
# 3884 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
replace_copy(_InputIterator __first, _InputIterator __last, _OutputIterator
# 3885 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result, const _Tp &
# 3886 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__old_value, const _Tp &__new_value)
# 3887 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3894 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 3896 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
for (; __first != __last; (++__first), (++__result)) {
# 3897 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((*__first) == __old_value) {
# 3898 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = __new_value; } else {
# 3900 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = (*__first); } }
# 3901 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __result;
# 3902 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 3919 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _InputIterator, class _OutputIterator, class
# 3920 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_Predicate, class _Tp> _OutputIterator
# 3922 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
replace_copy_if(_InputIterator __first, _InputIterator __last, _OutputIterator
# 3923 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result, _Predicate
# 3924 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__pred, const _Tp &__new_value)
# 3925 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 3932 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 3934 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
for (; __first != __last; (++__first), (++__result)) {
# 3935 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__pred(*__first)) {
# 3936 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = __new_value; } else {
# 3938 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = (*__first); } }
# 3939 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __result;
# 3940 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 4409 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _InputIterator, class _Function> _Function
# 4411 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
for_each(_InputIterator __first, _InputIterator __last, _Function __f)
# 4412 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 4415 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 4416 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
for (; __first != __last; ++__first) {
# 4417 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__f(*__first); }
# 4418 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __f;
# 4419 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 4430 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _InputIterator, class _Tp> inline _InputIterator
# 4432 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
find(_InputIterator __first, _InputIterator __last, const _Tp &
# 4433 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__val)
# 4434 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 4439 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 4440 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return std::__find(__first, __last, __val, std::__iterator_category(__first));
# 4442 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 4454 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _InputIterator, class _Predicate> inline _InputIterator
# 4456 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
find_if(_InputIterator __first, _InputIterator __last, _Predicate
# 4457 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__pred)
# 4458 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 4463 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 4464 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return std::__find_if(__first, __last, __pred, std::__iterator_category(__first));
# 4466 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 4484 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _InputIterator, class _ForwardIterator> _InputIterator
# 4486 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
find_first_of(_InputIterator __first1, _InputIterator __last1, _ForwardIterator
# 4487 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first2, _ForwardIterator __last2)
# 4488 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 4495 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 4496 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 4498 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
for (; __first1 != __last1; ++__first1) {
# 4499 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
for (_ForwardIterator __iter = __first2; __iter != __last2; ++__iter) {
# 4500 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((*__first1) == (*__iter)) {
# 4501 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first1; } } }
# 4502 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __last1;
# 4503 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 4524 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _InputIterator, class _ForwardIterator, class
# 4525 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_BinaryPredicate> _InputIterator
# 4527 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
find_first_of(_InputIterator __first1, _InputIterator __last1, _ForwardIterator
# 4528 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first2, _ForwardIterator __last2, _BinaryPredicate
# 4529 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__comp)
# 4530 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 4537 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 4538 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 4540 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
for (; __first1 != __last1; ++__first1) {
# 4541 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
for (_ForwardIterator __iter = __first2; __iter != __last2; ++__iter) {
# 4542 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__comp(*__first1, *__iter)) {
# 4543 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first1; } } }
# 4544 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __last1;
# 4545 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 4556 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _ForwardIterator> _ForwardIterator
# 4558 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
adjacent_find(_ForwardIterator __first, _ForwardIterator __last)
# 4559 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 4564 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 4565 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first == __last) {
# 4566 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __last; }
# 4567 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator __next = __first;
# 4568 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((++__next) != __last)
# 4569 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 4570 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((*__first) == (*__next)) {
# 4571 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first; }
# 4572 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first = __next;
# 4573 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 4574 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __last;
# 4575 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 4588 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _ForwardIterator, class _BinaryPredicate> _ForwardIterator
# 4590 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
adjacent_find(_ForwardIterator __first, _ForwardIterator __last, _BinaryPredicate
# 4591 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__binary_pred)
# 4592 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 4598 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 4599 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first == __last) {
# 4600 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __last; }
# 4601 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator __next = __first;
# 4602 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((++__next) != __last)
# 4603 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 4604 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__binary_pred(*__first, *__next)) {
# 4605 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first; }
# 4606 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first = __next;
# 4607 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 4608 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __last;
# 4609 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 4620 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _InputIterator, class _Tp> typename iterator_traits< _InputIterator> ::difference_type
# 4622 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
count(_InputIterator __first, _InputIterator __last, const _Tp &__value)
# 4623 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 4628 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 4629 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typename iterator_traits< _InputIterator> ::difference_type __n = (0);
# 4630 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
for (; __first != __last; ++__first) {
# 4631 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((*__first) == __value) {
# 4632 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__n; } }
# 4633 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __n;
# 4634 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 4645 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _InputIterator, class _Predicate> typename iterator_traits< _InputIterator> ::difference_type
# 4647 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
count_if(_InputIterator __first, _InputIterator __last, _Predicate __pred)
# 4648 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 4653 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 4654 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typename iterator_traits< _InputIterator> ::difference_type __n = (0);
# 4655 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
for (; __first != __last; ++__first) {
# 4656 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__pred(*__first)) {
# 4657 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__n; } }
# 4658 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __n;
# 4659 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 4687 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _ForwardIterator1, class _ForwardIterator2> _ForwardIterator1
# 4689 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
search(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2
# 4690 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first2, _ForwardIterator2 __last2)
# 4691 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 4698 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 4699 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 4702 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((__first1 == __last1) || (__first2 == __last2)) {
# 4703 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first1; }
# 4706 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator2 __p1(__first2);
# 4707 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((++__p1) == __last2) {
# 4708 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return std::find(__first1, __last1, *__first2); }
# 4711 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator2 __p;
# 4712 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator1 __current = __first1;
# 4714 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
for (; ;)
# 4715 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 4716 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first1 = std::find(__first1, __last1, *__first2);
# 4717 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first1 == __last1) {
# 4718 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __last1; }
# 4720 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__p = __p1;
# 4721 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__current = __first1;
# 4722 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((++__current) == __last1) {
# 4723 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __last1; }
# 4725 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((*__current) == (*__p))
# 4726 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 4727 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((++__p) == __last2) {
# 4728 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first1; }
# 4729 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((++__current) == __last1) {
# 4730 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __last1; }
# 4731 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 4732 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first1;
# 4733 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 4734 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first1;
# 4735 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 4758 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _ForwardIterator1, class _ForwardIterator2, class
# 4759 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_BinaryPredicate> _ForwardIterator1
# 4761 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
search(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2
# 4762 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first2, _ForwardIterator2 __last2, _BinaryPredicate
# 4763 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__predicate)
# 4764 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 4771 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 4772 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 4775 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((__first1 == __last1) || (__first2 == __last2)) {
# 4776 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first1; }
# 4779 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator2 __p1(__first2);
# 4780 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((++__p1) == __last2)
# 4781 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 4782 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((__first1 != __last1) && (!((bool)__predicate(*__first1, *__first2)))) {
# 4784 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first1; }
# 4785 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first1;
# 4786 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 4789 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator2 __p;
# 4790 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator1 __current = __first1;
# 4792 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
for (; ;)
# 4793 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 4794 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((__first1 != __last1) && (!((bool)__predicate(*__first1, *__first2)))) {
# 4796 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first1; }
# 4797 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first1 == __last1) {
# 4798 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __last1; }
# 4800 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__p = __p1;
# 4801 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__current = __first1;
# 4802 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((++__current) == __last1) {
# 4803 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __last1; }
# 4805 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while (__predicate(*__current, *__p))
# 4806 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 4807 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((++__p) == __last2) {
# 4808 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first1; }
# 4809 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((++__current) == __last1) {
# 4810 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __last1; }
# 4811 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 4812 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first1;
# 4813 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 4814 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first1;
# 4815 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 4833 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _ForwardIterator, class _Integer, class _Tp> _ForwardIterator
# 4835 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
search_n(_ForwardIterator __first, _ForwardIterator __last, _Integer
# 4836 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__count, const _Tp &__val)
# 4837 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 4842 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 4844 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__count <= 0) {
# 4845 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first; }
# 4846 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__count == 1) {
# 4847 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return std::find(__first, __last, __val); }
# 4848 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return std::__search_n(__first, __last, __count, __val, std::__iterator_category(__first));
# 4850 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 4870 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _ForwardIterator, class _Integer, class _Tp, class
# 4871 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_BinaryPredicate> _ForwardIterator
# 4873 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
search_n(_ForwardIterator __first, _ForwardIterator __last, _Integer
# 4874 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__count, const _Tp &__val, _BinaryPredicate
# 4875 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__binary_pred)
# 4876 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 4881 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 4883 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__count <= 0) {
# 4884 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first; }
# 4885 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__count == 1)
# 4886 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 4887 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((__first != __last) && (!((bool)__binary_pred(*__first, __val)))) {
# 4888 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first; }
# 4889 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first;
# 4890 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 4891 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return std::__search_n(__first, __last, __count, __val, __binary_pred, std::__iterator_category(__first));
# 4893 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 4912 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _InputIterator, class _OutputIterator, class
# 4913 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_UnaryOperation> _OutputIterator
# 4915 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
transform(_InputIterator __first, _InputIterator __last, _OutputIterator
# 4916 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result, _UnaryOperation __unary_op)
# 4917 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 4923 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 4925 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
for (; __first != __last; (++__first), (++__result)) {
# 4926 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = __unary_op(*__first); }
# 4927 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __result;
# 4928 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 4949 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _InputIterator1, class _InputIterator2, class
# 4950 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_OutputIterator, class _BinaryOperation> _OutputIterator
# 4952 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
transform(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2
# 4953 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first2, _OutputIterator __result, _BinaryOperation
# 4954 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__binary_op)
# 4955 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 4962 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 4964 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
for (; __first1 != __last1; ((++__first1), (++__first2)), (++__result)) {
# 4965 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = __binary_op(*__first1, *__first2); }
# 4966 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __result;
# 4967 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 4982 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _ForwardIterator, class _Tp> void
# 4984 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
replace(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 4985 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__old_value, const _Tp &__new_value)
# 4986 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 4994 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 4996 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
for (; __first != __last; ++__first) {
# 4997 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((*__first) == __old_value) {
# 4998 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__first) = __new_value; } }
# 4999 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 5014 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _ForwardIterator, class _Predicate, class _Tp> void
# 5016 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
replace_if(_ForwardIterator __first, _ForwardIterator __last, _Predicate
# 5017 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__pred, const _Tp &__new_value)
# 5018 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5026 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 5028 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
for (; __first != __last; ++__first) {
# 5029 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__pred(*__first)) {
# 5030 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__first) = __new_value; } }
# 5031 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 5046 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _ForwardIterator, class _Generator> void
# 5048 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
generate(_ForwardIterator __first, _ForwardIterator __last, _Generator
# 5049 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__gen)
# 5050 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5055 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 5057 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
for (; __first != __last; ++__first) {
# 5058 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__first) = __gen(); }
# 5059 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 5077 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _OutputIterator, class _Size, class _Generator> _OutputIterator
# 5079 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
generate_n(_OutputIterator __first, _Size __n, _Generator __gen)
# 5080 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5086 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
for (__decltype((__n + 0)) __niter = __n; __niter > 0; (--__niter), (++__first)) {
# 5088 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__first) = __gen(); }
# 5089 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first;
# 5090 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 5114 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _InputIterator, class _OutputIterator> inline _OutputIterator
# 5116 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
unique_copy(_InputIterator __first, _InputIterator __last, _OutputIterator
# 5117 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result)
# 5118 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5125 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 5127 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first == __last) {
# 5128 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __result; }
# 5129 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return std::__unique_copy(__first, __last, __result, std::__iterator_category(__first), std::__iterator_category(__result));
# 5132 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 5153 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _InputIterator, class _OutputIterator, class
# 5154 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_BinaryPredicate> inline _OutputIterator
# 5156 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
unique_copy(_InputIterator __first, _InputIterator __last, _OutputIterator
# 5157 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result, _BinaryPredicate
# 5158 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__binary_pred)
# 5159 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5164 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 5166 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first == __last) {
# 5167 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __result; }
# 5168 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return std::__unique_copy(__first, __last, __result, __binary_pred, std::__iterator_category(__first), std::__iterator_category(__result));
# 5171 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 5185 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator> inline void
# 5187 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
random_shuffle(_RandomAccessIterator __first, _RandomAccessIterator __last)
# 5188 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5192 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 5194 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first != __last) {
# 5195 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
# 5196 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5197 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_RandomAccessIterator __j = __first + (std::rand() % ((__i - __first) + 1));
# 5199 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__i != __j) {
# 5200 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::iter_swap(__i, __j); }
# 5201 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} }
# 5202 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 5218 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator, class _RandomNumberGenerator> void
# 5220 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
random_shuffle(_RandomAccessIterator __first, _RandomAccessIterator __last, _RandomNumberGenerator &
# 5224 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__rand)
# 5226 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5230 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 5232 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first == __last) {
# 5233 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return; }
# 5234 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
# 5235 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5236 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_RandomAccessIterator __j = __first + __rand((__i - __first) + 1);
# 5237 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__i != __j) {
# 5238 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::iter_swap(__i, __j); }
# 5239 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 5240 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 5258 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _ForwardIterator, class _Predicate> inline _ForwardIterator
# 5260 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
partition(_ForwardIterator __first, _ForwardIterator __last, _Predicate
# 5261 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__pred)
# 5262 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5268 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 5270 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return std::__partition(__first, __last, __pred, std::__iterator_category(__first));
# 5272 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 5292 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator> inline void
# 5294 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
partial_sort(_RandomAccessIterator __first, _RandomAccessIterator
# 5295 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__middle, _RandomAccessIterator
# 5296 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last)
# 5297 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5299 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _RandomAccessIterator> ::value_type _ValueType;
# 5305 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 5306 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 5308 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__heap_select(__first, __middle, __last);
# 5309 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::sort_heap(__first, __middle);
# 5310 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 5331 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator, class _Compare> inline void
# 5333 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
partial_sort(_RandomAccessIterator __first, _RandomAccessIterator
# 5334 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__middle, _RandomAccessIterator
# 5335 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last, _Compare
# 5336 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__comp)
# 5337 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5339 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _RandomAccessIterator> ::value_type _ValueType;
# 5346 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 5347 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 5349 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__heap_select(__first, __middle, __last, __comp);
# 5350 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::sort_heap(__first, __middle, __comp);
# 5351 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 5368 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator> inline void
# 5370 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
nth_element(_RandomAccessIterator __first, _RandomAccessIterator __nth, _RandomAccessIterator
# 5371 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last)
# 5372 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5374 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _RandomAccessIterator> ::value_type _ValueType;
# 5380 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 5381 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 5383 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((__first == __last) || (__nth == __last)) {
# 5384 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return; }
# 5386 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__introselect(__first, __nth, __last, std::__lg(__last - __first) * 2);
# 5388 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 5407 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator, class _Compare> inline void
# 5409 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
nth_element(_RandomAccessIterator __first, _RandomAccessIterator __nth, _RandomAccessIterator
# 5410 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__last, _Compare __comp)
# 5411 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5413 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _RandomAccessIterator> ::value_type _ValueType;
# 5420 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 5421 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 5423 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((__first == __last) || (__nth == __last)) {
# 5424 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return; }
# 5426 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__introselect(__first, __nth, __last, std::__lg(__last - __first) * 2, __comp);
# 5428 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 5445 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator> inline void
# 5447 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
sort(_RandomAccessIterator __first, _RandomAccessIterator __last)
# 5448 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5450 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _RandomAccessIterator> ::value_type _ValueType;
# 5456 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 5458 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first != __last)
# 5459 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5460 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__introsort_loop(__first, __last, std::__lg(__last - __first) * 2);
# 5462 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__final_insertion_sort(__first, __last);
# 5463 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 5464 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 5481 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator, class _Compare> inline void
# 5483 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
sort(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare
# 5484 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__comp)
# 5485 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5487 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _RandomAccessIterator> ::value_type _ValueType;
# 5494 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 5496 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first != __last)
# 5497 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5498 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__introsort_loop(__first, __last, std::__lg(__last - __first) * 2, __comp);
# 5500 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__final_insertion_sort(__first, __last, __comp);
# 5501 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 5502 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 5523 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _InputIterator1, class _InputIterator2, class
# 5524 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_OutputIterator> _OutputIterator
# 5526 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
merge(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2
# 5527 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first2, _InputIterator2 __last2, _OutputIterator
# 5528 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result)
# 5529 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5531 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _InputIterator1> ::value_type _ValueType1;
# 5533 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _InputIterator2> ::value_type _ValueType2;
# 5543 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 5544 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 5546 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((__first1 != __last1) && (__first2 != __last2))
# 5547 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5548 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((*__first2) < (*__first1))
# 5549 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5550 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = (*__first2);
# 5551 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first2;
# 5552 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else
# 5554 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5555 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = (*__first1);
# 5556 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first1;
# 5557 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 5558 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__result;
# 5559 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 5560 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return std::copy(__first2, __last2, std::copy(__first1, __last1, __result));
# 5562 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 5587 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _InputIterator1, class _InputIterator2, class
# 5588 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_OutputIterator, class _Compare> _OutputIterator
# 5590 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
merge(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2
# 5591 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first2, _InputIterator2 __last2, _OutputIterator
# 5592 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result, _Compare __comp)
# 5593 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5595 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _InputIterator1> ::value_type _ValueType1;
# 5597 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _InputIterator2> ::value_type _ValueType2;
# 5608 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 5609 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 5611 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((__first1 != __last1) && (__first2 != __last2))
# 5612 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5613 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__comp(*__first2, *__first1))
# 5614 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5615 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = (*__first2);
# 5616 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first2;
# 5617 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else
# 5619 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5620 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = (*__first1);
# 5621 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first1;
# 5622 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 5623 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__result;
# 5624 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 5625 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return std::copy(__first2, __last2, std::copy(__first1, __last1, __result));
# 5627 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 5647 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator> inline void
# 5649 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
stable_sort(_RandomAccessIterator __first, _RandomAccessIterator __last)
# 5650 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5652 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _RandomAccessIterator> ::value_type _ValueType;
# 5654 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _RandomAccessIterator> ::difference_type _DistanceType;
# 5660 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 5662 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_Temporary_buffer< _RandomAccessIterator, typename iterator_traits< _RandomAccessIterator> ::value_type> __buf(__first, __last);
# 5664 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((__buf.begin()) == 0) {
# 5665 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__inplace_stable_sort(__first, __last); } else {
# 5667 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__stable_sort_adaptive(__first, __last, (__buf.begin()), (_DistanceType)(__buf.size())); }
# 5669 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 5689 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _RandomAccessIterator, class _Compare> inline void
# 5691 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
stable_sort(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare
# 5692 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__comp)
# 5693 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5695 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _RandomAccessIterator> ::value_type _ValueType;
# 5697 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _RandomAccessIterator> ::difference_type _DistanceType;
# 5705 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 5707 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_Temporary_buffer< _RandomAccessIterator, typename iterator_traits< _RandomAccessIterator> ::value_type> __buf(__first, __last);
# 5709 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((__buf.begin()) == 0) {
# 5710 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__inplace_stable_sort(__first, __last, __comp); } else {
# 5712 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
std::__stable_sort_adaptive(__first, __last, (__buf.begin()), (_DistanceType)(__buf.size()), __comp); }
# 5714 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 5735 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _InputIterator1, class _InputIterator2, class
# 5736 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_OutputIterator> _OutputIterator
# 5738 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
set_union(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2
# 5739 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first2, _InputIterator2 __last2, _OutputIterator
# 5740 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result)
# 5741 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5743 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _InputIterator1> ::value_type _ValueType1;
# 5745 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _InputIterator2> ::value_type _ValueType2;
# 5756 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 5757 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 5759 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((__first1 != __last1) && (__first2 != __last2))
# 5760 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5761 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((*__first1) < (*__first2))
# 5762 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5763 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = (*__first1);
# 5764 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first1;
# 5765 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else {
# 5766 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((*__first2) < (*__first1))
# 5767 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5768 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = (*__first2);
# 5769 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first2;
# 5770 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else
# 5772 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5773 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = (*__first1);
# 5774 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first1;
# 5775 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first2;
# 5776 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} }
# 5777 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__result;
# 5778 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 5779 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return std::copy(__first2, __last2, std::copy(__first1, __last1, __result));
# 5781 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 5802 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _InputIterator1, class _InputIterator2, class
# 5803 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_OutputIterator, class _Compare> _OutputIterator
# 5805 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
set_union(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2
# 5806 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first2, _InputIterator2 __last2, _OutputIterator
# 5807 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result, _Compare __comp)
# 5808 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5810 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _InputIterator1> ::value_type _ValueType1;
# 5812 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _InputIterator2> ::value_type _ValueType2;
# 5825 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 5826 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 5828 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((__first1 != __last1) && (__first2 != __last2))
# 5829 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5830 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__comp(*__first1, *__first2))
# 5831 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5832 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = (*__first1);
# 5833 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first1;
# 5834 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else {
# 5835 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__comp(*__first2, *__first1))
# 5836 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5837 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = (*__first2);
# 5838 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first2;
# 5839 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else
# 5841 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5842 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = (*__first1);
# 5843 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first1;
# 5844 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first2;
# 5845 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} }
# 5846 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__result;
# 5847 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 5848 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return std::copy(__first2, __last2, std::copy(__first1, __last1, __result));
# 5850 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 5869 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _InputIterator1, class _InputIterator2, class
# 5870 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_OutputIterator> _OutputIterator
# 5872 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
set_intersection(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2
# 5873 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first2, _InputIterator2 __last2, _OutputIterator
# 5874 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result)
# 5875 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5877 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _InputIterator1> ::value_type _ValueType1;
# 5879 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _InputIterator2> ::value_type _ValueType2;
# 5888 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 5889 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 5891 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((__first1 != __last1) && (__first2 != __last2)) {
# 5892 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((*__first1) < (*__first2)) {
# 5893 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first1; } else {
# 5894 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((*__first2) < (*__first1)) {
# 5895 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first2; } else
# 5897 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5898 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = (*__first1);
# 5899 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first1;
# 5900 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first2;
# 5901 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__result;
# 5902 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} } }
# 5903 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __result;
# 5904 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 5926 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _InputIterator1, class _InputIterator2, class
# 5927 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_OutputIterator, class _Compare> _OutputIterator
# 5929 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
set_intersection(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2
# 5930 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first2, _InputIterator2 __last2, _OutputIterator
# 5931 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result, _Compare __comp)
# 5932 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5934 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _InputIterator1> ::value_type _ValueType1;
# 5936 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _InputIterator2> ::value_type _ValueType2;
# 5947 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 5948 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 5950 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((__first1 != __last1) && (__first2 != __last2)) {
# 5951 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__comp(*__first1, *__first2)) {
# 5952 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first1; } else {
# 5953 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__comp(*__first2, *__first1)) {
# 5954 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first2; } else
# 5956 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5957 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = (*__first1);
# 5958 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first1;
# 5959 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first2;
# 5960 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__result;
# 5961 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} } }
# 5962 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __result;
# 5963 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 5984 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _InputIterator1, class _InputIterator2, class
# 5985 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_OutputIterator> _OutputIterator
# 5987 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
set_difference(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2
# 5988 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first2, _InputIterator2 __last2, _OutputIterator
# 5989 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result)
# 5990 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 5992 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _InputIterator1> ::value_type _ValueType1;
# 5994 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _InputIterator2> ::value_type _ValueType2;
# 6003 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 6004 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 6006 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((__first1 != __last1) && (__first2 != __last2)) {
# 6007 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((*__first1) < (*__first2))
# 6008 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 6009 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = (*__first1);
# 6010 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first1;
# 6011 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__result;
# 6012 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else {
# 6013 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((*__first2) < (*__first1)) {
# 6014 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first2; } else
# 6016 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 6017 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first1;
# 6018 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first2;
# 6019 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} } }
# 6020 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return std::copy(__first1, __last1, __result);
# 6021 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 6045 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _InputIterator1, class _InputIterator2, class
# 6046 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_OutputIterator, class _Compare> _OutputIterator
# 6048 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
set_difference(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2
# 6049 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first2, _InputIterator2 __last2, _OutputIterator
# 6050 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result, _Compare __comp)
# 6051 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 6053 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _InputIterator1> ::value_type _ValueType1;
# 6055 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _InputIterator2> ::value_type _ValueType2;
# 6066 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 6067 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 6069 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((__first1 != __last1) && (__first2 != __last2)) {
# 6070 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__comp(*__first1, *__first2))
# 6071 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 6072 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = (*__first1);
# 6073 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first1;
# 6074 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__result;
# 6075 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else {
# 6076 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__comp(*__first2, *__first1)) {
# 6077 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first2; } else
# 6079 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 6080 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first1;
# 6081 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first2;
# 6082 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} } }
# 6083 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return std::copy(__first1, __last1, __result);
# 6084 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 6103 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _InputIterator1, class _InputIterator2, class
# 6104 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_OutputIterator> _OutputIterator
# 6106 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
set_symmetric_difference(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2
# 6107 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first2, _InputIterator2 __last2, _OutputIterator
# 6108 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result)
# 6109 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 6111 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _InputIterator1> ::value_type _ValueType1;
# 6113 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _InputIterator2> ::value_type _ValueType2;
# 6124 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 6125 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 6127 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((__first1 != __last1) && (__first2 != __last2)) {
# 6128 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((*__first1) < (*__first2))
# 6129 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 6130 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = (*__first1);
# 6131 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first1;
# 6132 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__result;
# 6133 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else {
# 6134 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((*__first2) < (*__first1))
# 6135 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 6136 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = (*__first2);
# 6137 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first2;
# 6138 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__result;
# 6139 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else
# 6141 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 6142 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first1;
# 6143 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first2;
# 6144 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} } }
# 6145 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return std::copy(__first2, __last2, std::copy(__first1, __last1, __result));
# 6147 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 6169 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _InputIterator1, class _InputIterator2, class
# 6170 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_OutputIterator, class _Compare> _OutputIterator
# 6172 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
set_symmetric_difference(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2
# 6173 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__first2, _InputIterator2 __last2, _OutputIterator
# 6174 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result, _Compare
# 6175 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__comp)
# 6176 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 6178 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _InputIterator1> ::value_type _ValueType1;
# 6180 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
typedef typename iterator_traits< _InputIterator2> ::value_type _ValueType2;
# 6193 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 6194 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 6196 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((__first1 != __last1) && (__first2 != __last2)) {
# 6197 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__comp(*__first1, *__first2))
# 6198 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 6199 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = (*__first1);
# 6200 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first1;
# 6201 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__result;
# 6202 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else {
# 6203 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__comp(*__first2, *__first1))
# 6204 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 6205 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
(*__result) = (*__first2);
# 6206 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first2;
# 6207 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__result;
# 6208 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} else
# 6210 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 6211 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first1;
# 6212 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
++__first2;
# 6213 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
} } }
# 6214 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return std::copy(__first2, __last2, std::copy(__first1, __last1, __result));
# 6216 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 6226 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _ForwardIterator> _ForwardIterator
# 6228 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
min_element(_ForwardIterator __first, _ForwardIterator __last)
# 6229 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 6234 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 6236 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first == __last) {
# 6237 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first; }
# 6238 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator __result = __first;
# 6239 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((++__first) != __last) {
# 6240 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((*__first) < (*__result)) {
# 6241 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result = __first; } }
# 6242 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __result;
# 6243 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 6254 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _ForwardIterator, class _Compare> _ForwardIterator
# 6256 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
min_element(_ForwardIterator __first, _ForwardIterator __last, _Compare
# 6257 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__comp)
# 6258 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 6264 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 6266 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first == __last) {
# 6267 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first; }
# 6268 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator __result = __first;
# 6269 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((++__first) != __last) {
# 6270 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__comp(*__first, *__result)) {
# 6271 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result = __first; } }
# 6272 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __result;
# 6273 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 6282 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _ForwardIterator> _ForwardIterator
# 6284 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
max_element(_ForwardIterator __first, _ForwardIterator __last)
# 6285 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 6290 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 6292 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first == __last) {
# 6293 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __first; }
# 6294 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator __result = __first;
# 6295 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((++__first) != __last) {
# 6296 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if ((*__result) < (*__first)) {
# 6297 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result = __first; } }
# 6298 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __result;
# 6299 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 6310 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
template< class _ForwardIterator, class _Compare> _ForwardIterator
# 6312 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
max_element(_ForwardIterator __first, _ForwardIterator __last, _Compare
# 6313 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__comp)
# 6314 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
{
# 6320 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
;
# 6322 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__first == __last) { return __first; }
# 6323 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
_ForwardIterator __result = __first;
# 6324 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
while ((++__first) != __last) {
# 6325 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
if (__comp(*__result, *__first)) {
# 6326 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
__result = __first; } }
# 6327 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
return __result;
# 6328 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 6331 "/usr/include/c++/4.8.2/bits/stl_algo.h" 3
}
# 42 "/usr/include/c++/4.8.2/bits/stringfwd.h" 3
namespace std __attribute((__visibility__("default"))) {
# 52 "/usr/include/c++/4.8.2/bits/stringfwd.h" 3
template< class _CharT> struct char_traits;
# 55 "/usr/include/c++/4.8.2/bits/stringfwd.h" 3
template< class _CharT, class _Traits = char_traits< _CharT> , class
# 56 "/usr/include/c++/4.8.2/bits/stringfwd.h" 3
_Alloc = allocator< _CharT> > class basic_string;
# 59 "/usr/include/c++/4.8.2/bits/stringfwd.h" 3
template<> struct char_traits< char> ;
# 62 "/usr/include/c++/4.8.2/bits/stringfwd.h" 3
typedef basic_string< char> string;
# 65 "/usr/include/c++/4.8.2/bits/stringfwd.h" 3
template<> struct char_traits< wchar_t> ;
# 68 "/usr/include/c++/4.8.2/bits/stringfwd.h" 3
typedef basic_string< wchar_t> wstring;
# 87 "/usr/include/c++/4.8.2/bits/stringfwd.h" 3
}
# 353 "/usr/lib/gcc/x86_64-redhat-linux/4.8.5/include/stddef.h" 3
typedef unsigned wint_t;
# 106 "/usr/include/wchar.h" 3
typedef __mbstate_t mbstate_t;
# 132 "/usr/include/wchar.h" 3
extern "C" {
# 137 "/usr/include/wchar.h" 3
struct tm;
# 147 "/usr/include/wchar.h" 3
extern wchar_t *wcscpy(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src) throw();
# 150 "/usr/include/wchar.h" 3
extern wchar_t *wcsncpy(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, size_t __n) throw();
# 155 "/usr/include/wchar.h" 3
extern wchar_t *wcscat(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src) throw();
# 158 "/usr/include/wchar.h" 3
extern wchar_t *wcsncat(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, size_t __n) throw();
# 163 "/usr/include/wchar.h" 3
extern int wcscmp(const wchar_t * __s1, const wchar_t * __s2) throw()
# 164 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 166 "/usr/include/wchar.h" 3
extern int wcsncmp(const wchar_t * __s1, const wchar_t * __s2, size_t __n) throw()
# 167 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 172 "/usr/include/wchar.h" 3
extern int wcscasecmp(const wchar_t * __s1, const wchar_t * __s2) throw();
# 175 "/usr/include/wchar.h" 3
extern int wcsncasecmp(const wchar_t * __s1, const wchar_t * __s2, size_t __n) throw();
# 182 "/usr/include/wchar.h" 3
extern int wcscasecmp_l(const wchar_t * __s1, const wchar_t * __s2, __locale_t __loc) throw();
# 185 "/usr/include/wchar.h" 3
extern int wcsncasecmp_l(const wchar_t * __s1, const wchar_t * __s2, size_t __n, __locale_t __loc) throw();
# 192 "/usr/include/wchar.h" 3
extern int wcscoll(const wchar_t * __s1, const wchar_t * __s2) throw();
# 196 "/usr/include/wchar.h" 3
extern size_t wcsxfrm(wchar_t *__restrict__ __s1, const wchar_t *__restrict__ __s2, size_t __n) throw();
# 206 "/usr/include/wchar.h" 3
extern int wcscoll_l(const wchar_t * __s1, const wchar_t * __s2, __locale_t __loc) throw();
# 212 "/usr/include/wchar.h" 3
extern size_t wcsxfrm_l(wchar_t * __s1, const wchar_t * __s2, size_t __n, __locale_t __loc) throw();
# 216 "/usr/include/wchar.h" 3
extern wchar_t *wcsdup(const wchar_t * __s) throw() __attribute((__malloc__));
# 222 "/usr/include/wchar.h" 3
extern "C++" wchar_t *wcschr(wchar_t * __wcs, wchar_t __wc) throw() __asm__("wcschr")
# 223 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 224 "/usr/include/wchar.h" 3
extern "C++" const wchar_t *wcschr(const wchar_t * __wcs, wchar_t __wc) throw() __asm__("wcschr")
# 225 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 232 "/usr/include/wchar.h" 3
extern "C++" wchar_t *wcsrchr(wchar_t * __wcs, wchar_t __wc) throw() __asm__("wcsrchr")
# 233 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 234 "/usr/include/wchar.h" 3
extern "C++" const wchar_t *wcsrchr(const wchar_t * __wcs, wchar_t __wc) throw() __asm__("wcsrchr")
# 235 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 245 "/usr/include/wchar.h" 3
extern wchar_t *wcschrnul(const wchar_t * __s, wchar_t __wc) throw()
# 246 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 252 "/usr/include/wchar.h" 3
extern size_t wcscspn(const wchar_t * __wcs, const wchar_t * __reject) throw()
# 253 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 256 "/usr/include/wchar.h" 3
extern size_t wcsspn(const wchar_t * __wcs, const wchar_t * __accept) throw()
# 257 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 260 "/usr/include/wchar.h" 3
extern "C++" wchar_t *wcspbrk(wchar_t * __wcs, const wchar_t * __accept) throw() __asm__("wcspbrk")
# 261 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 262 "/usr/include/wchar.h" 3
extern "C++" const wchar_t *wcspbrk(const wchar_t * __wcs, const wchar_t * __accept) throw() __asm__("wcspbrk")
# 264 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 271 "/usr/include/wchar.h" 3
extern "C++" wchar_t *wcsstr(wchar_t * __haystack, const wchar_t * __needle) throw() __asm__("wcsstr")
# 272 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 273 "/usr/include/wchar.h" 3
extern "C++" const wchar_t *wcsstr(const wchar_t * __haystack, const wchar_t * __needle) throw() __asm__("wcsstr")
# 275 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 282 "/usr/include/wchar.h" 3
extern wchar_t *wcstok(wchar_t *__restrict__ __s, const wchar_t *__restrict__ __delim, wchar_t **__restrict__ __ptr) throw();
# 287 "/usr/include/wchar.h" 3
extern size_t wcslen(const wchar_t * __s) throw() __attribute((__pure__));
# 293 "/usr/include/wchar.h" 3
extern "C++" wchar_t *wcswcs(wchar_t * __haystack, const wchar_t * __needle) throw() __asm__("wcswcs")
# 294 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 295 "/usr/include/wchar.h" 3
extern "C++" const wchar_t *wcswcs(const wchar_t * __haystack, const wchar_t * __needle) throw() __asm__("wcswcs")
# 297 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 306 "/usr/include/wchar.h" 3
extern size_t wcsnlen(const wchar_t * __s, size_t __maxlen) throw()
# 307 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 314 "/usr/include/wchar.h" 3
extern "C++" wchar_t *wmemchr(wchar_t * __s, wchar_t __c, size_t __n) throw() __asm__("wmemchr")
# 315 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 316 "/usr/include/wchar.h" 3
extern "C++" const wchar_t *wmemchr(const wchar_t * __s, wchar_t __c, size_t __n) throw() __asm__("wmemchr")
# 318 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 325 "/usr/include/wchar.h" 3
extern int wmemcmp(const wchar_t * __s1, const wchar_t * __s2, size_t __n) throw()
# 326 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 329 "/usr/include/wchar.h" 3
extern wchar_t *wmemcpy(wchar_t *__restrict__ __s1, const wchar_t *__restrict__ __s2, size_t __n) throw();
# 334 "/usr/include/wchar.h" 3
extern wchar_t *wmemmove(wchar_t * __s1, const wchar_t * __s2, size_t __n) throw();
# 338 "/usr/include/wchar.h" 3
extern wchar_t *wmemset(wchar_t * __s, wchar_t __c, size_t __n) throw();
# 344 "/usr/include/wchar.h" 3
extern wchar_t *wmempcpy(wchar_t *__restrict__ __s1, const wchar_t *__restrict__ __s2, size_t __n) throw();
# 353 "/usr/include/wchar.h" 3
extern wint_t btowc(int __c) throw();
# 357 "/usr/include/wchar.h" 3
extern int wctob(wint_t __c) throw();
# 361 "/usr/include/wchar.h" 3
extern int mbsinit(const mbstate_t * __ps) throw() __attribute((__pure__));
# 365 "/usr/include/wchar.h" 3
extern size_t mbrtowc(wchar_t *__restrict__ __pwc, const char *__restrict__ __s, size_t __n, mbstate_t *__restrict__ __p) throw();
# 370 "/usr/include/wchar.h" 3
extern size_t wcrtomb(char *__restrict__ __s, wchar_t __wc, mbstate_t *__restrict__ __ps) throw();
# 374 "/usr/include/wchar.h" 3
extern size_t __mbrlen(const char *__restrict__ __s, size_t __n, mbstate_t *__restrict__ __ps) throw();
# 376 "/usr/include/wchar.h" 3
extern size_t mbrlen(const char *__restrict__ __s, size_t __n, mbstate_t *__restrict__ __ps) throw();
# 408 "/usr/include/wchar.h" 3
extern size_t mbsrtowcs(wchar_t *__restrict__ __dst, const char **__restrict__ __src, size_t __len, mbstate_t *__restrict__ __ps) throw();
# 414 "/usr/include/wchar.h" 3
extern size_t wcsrtombs(char *__restrict__ __dst, const wchar_t **__restrict__ __src, size_t __len, mbstate_t *__restrict__ __ps) throw();
# 423 "/usr/include/wchar.h" 3
extern size_t mbsnrtowcs(wchar_t *__restrict__ __dst, const char **__restrict__ __src, size_t __nmc, size_t __len, mbstate_t *__restrict__ __ps) throw();
# 429 "/usr/include/wchar.h" 3
extern size_t wcsnrtombs(char *__restrict__ __dst, const wchar_t **__restrict__ __src, size_t __nwc, size_t __len, mbstate_t *__restrict__ __ps) throw();
# 439 "/usr/include/wchar.h" 3
extern int wcwidth(wchar_t __c) throw();
# 443 "/usr/include/wchar.h" 3
extern int wcswidth(const wchar_t * __s, size_t __n) throw();
# 450 "/usr/include/wchar.h" 3
extern double wcstod(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr) throw();
# 457 "/usr/include/wchar.h" 3
extern float wcstof(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr) throw();
# 459 "/usr/include/wchar.h" 3
extern long double wcstold(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr) throw();
# 468 "/usr/include/wchar.h" 3
extern long wcstol(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, int __base) throw();
# 473 "/usr/include/wchar.h" 3
extern unsigned long wcstoul(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, int __base) throw();
# 483 "/usr/include/wchar.h" 3
__extension__ extern long long wcstoll(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, int __base) throw();
# 490 "/usr/include/wchar.h" 3
__extension__ extern unsigned long long wcstoull(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, int __base) throw();
# 500 "/usr/include/wchar.h" 3
__extension__ extern long long wcstoq(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, int __base) throw();
# 507 "/usr/include/wchar.h" 3
__extension__ extern unsigned long long wcstouq(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, int __base) throw();
# 530 "/usr/include/wchar.h" 3
extern long wcstol_l(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, int __base, __locale_t __loc) throw();
# 534 "/usr/include/wchar.h" 3
extern unsigned long wcstoul_l(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, int __base, __locale_t __loc) throw();
# 539 "/usr/include/wchar.h" 3
__extension__ extern long long wcstoll_l(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, int __base, __locale_t __loc) throw();
# 544 "/usr/include/wchar.h" 3
__extension__ extern unsigned long long wcstoull_l(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, int __base, __locale_t __loc) throw();
# 549 "/usr/include/wchar.h" 3
extern double wcstod_l(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, __locale_t __loc) throw();
# 553 "/usr/include/wchar.h" 3
extern float wcstof_l(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, __locale_t __loc) throw();
# 557 "/usr/include/wchar.h" 3
extern long double wcstold_l(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, __locale_t __loc) throw();
# 566 "/usr/include/wchar.h" 3
extern wchar_t *wcpcpy(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src) throw();
# 571 "/usr/include/wchar.h" 3
extern wchar_t *wcpncpy(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, size_t __n) throw();
# 580 "/usr/include/wchar.h" 3
extern __FILE *open_wmemstream(wchar_t ** __bufloc, size_t * __sizeloc) throw();
# 587 "/usr/include/wchar.h" 3
extern int fwide(__FILE * __fp, int __mode) throw();
# 594 "/usr/include/wchar.h" 3
extern int fwprintf(__FILE *__restrict__ __stream, const wchar_t *__restrict__ __format, ...);
# 601 "/usr/include/wchar.h" 3
extern int wprintf(const wchar_t *__restrict__ __format, ...);
# 604 "/usr/include/wchar.h" 3
extern int swprintf(wchar_t *__restrict__ __s, size_t __n, const wchar_t *__restrict__ __format, ...) throw();
# 612 "/usr/include/wchar.h" 3
extern int vfwprintf(__FILE *__restrict__ __s, const wchar_t *__restrict__ __format, __gnuc_va_list __arg);
# 620 "/usr/include/wchar.h" 3
extern int vwprintf(const wchar_t *__restrict__ __format, __gnuc_va_list __arg);
# 625 "/usr/include/wchar.h" 3
extern int vswprintf(wchar_t *__restrict__ __s, size_t __n, const wchar_t *__restrict__ __format, __gnuc_va_list __arg) throw();
# 635 "/usr/include/wchar.h" 3
extern int fwscanf(__FILE *__restrict__ __stream, const wchar_t *__restrict__ __format, ...);
# 642 "/usr/include/wchar.h" 3
extern int wscanf(const wchar_t *__restrict__ __format, ...);
# 645 "/usr/include/wchar.h" 3
extern int swscanf(const wchar_t *__restrict__ __s, const wchar_t *__restrict__ __format, ...) throw();
# 689 "/usr/include/wchar.h" 3
extern int vfwscanf(__FILE *__restrict__ __s, const wchar_t *__restrict__ __format, __gnuc_va_list __arg);
# 697 "/usr/include/wchar.h" 3
extern int vwscanf(const wchar_t *__restrict__ __format, __gnuc_va_list __arg);
# 701 "/usr/include/wchar.h" 3
extern int vswscanf(const wchar_t *__restrict__ __s, const wchar_t *__restrict__ __format, __gnuc_va_list __arg) throw();
# 745 "/usr/include/wchar.h" 3
extern wint_t fgetwc(__FILE * __stream);
# 746 "/usr/include/wchar.h" 3
extern wint_t getwc(__FILE * __stream);
# 752 "/usr/include/wchar.h" 3
extern wint_t getwchar();
# 759 "/usr/include/wchar.h" 3
extern wint_t fputwc(wchar_t __wc, __FILE * __stream);
# 760 "/usr/include/wchar.h" 3
extern wint_t putwc(wchar_t __wc, __FILE * __stream);
# 766 "/usr/include/wchar.h" 3
extern wint_t putwchar(wchar_t __wc);
# 774 "/usr/include/wchar.h" 3
extern wchar_t *fgetws(wchar_t *__restrict__ __ws, int __n, __FILE *__restrict__ __stream);
# 781 "/usr/include/wchar.h" 3
extern int fputws(const wchar_t *__restrict__ __ws, __FILE *__restrict__ __stream);
# 789 "/usr/include/wchar.h" 3
extern wint_t ungetwc(wint_t __wc, __FILE * __stream);
# 801 "/usr/include/wchar.h" 3
extern wint_t getwc_unlocked(__FILE * __stream);
# 802 "/usr/include/wchar.h" 3
extern wint_t getwchar_unlocked();
# 810 "/usr/include/wchar.h" 3
extern wint_t fgetwc_unlocked(__FILE * __stream);
# 818 "/usr/include/wchar.h" 3
extern wint_t fputwc_unlocked(wchar_t __wc, __FILE * __stream);
# 827 "/usr/include/wchar.h" 3
extern wint_t putwc_unlocked(wchar_t __wc, __FILE * __stream);
# 828 "/usr/include/wchar.h" 3
extern wint_t putwchar_unlocked(wchar_t __wc);
# 837 "/usr/include/wchar.h" 3
extern wchar_t *fgetws_unlocked(wchar_t *__restrict__ __ws, int __n, __FILE *__restrict__ __stream);
# 846 "/usr/include/wchar.h" 3
extern int fputws_unlocked(const wchar_t *__restrict__ __ws, __FILE *__restrict__ __stream);
# 855 "/usr/include/wchar.h" 3
extern size_t wcsftime(wchar_t *__restrict__ __s, size_t __maxsize, const wchar_t *__restrict__ __format, const tm *__restrict__ __tp) throw();
# 865 "/usr/include/wchar.h" 3
extern size_t wcsftime_l(wchar_t *__restrict__ __s, size_t __maxsize, const wchar_t *__restrict__ __format, const tm *__restrict__ __tp, __locale_t __loc) throw();
# 891 "/usr/include/wchar.h" 3
}
# 62 "/usr/include/c++/4.8.2/cwchar" 3
namespace std {
# 64 "/usr/include/c++/4.8.2/cwchar" 3
using ::mbstate_t;
# 65 "/usr/include/c++/4.8.2/cwchar" 3
}
# 135 "/usr/include/c++/4.8.2/cwchar" 3
namespace std __attribute((__visibility__("default"))) {
# 139 "/usr/include/c++/4.8.2/cwchar" 3
using ::wint_t;
# 141 "/usr/include/c++/4.8.2/cwchar" 3
using ::btowc;
# 142 "/usr/include/c++/4.8.2/cwchar" 3
using ::fgetwc;
# 143 "/usr/include/c++/4.8.2/cwchar" 3
using ::fgetws;
# 144 "/usr/include/c++/4.8.2/cwchar" 3
using ::fputwc;
# 145 "/usr/include/c++/4.8.2/cwchar" 3
using ::fputws;
# 146 "/usr/include/c++/4.8.2/cwchar" 3
using ::fwide;
# 147 "/usr/include/c++/4.8.2/cwchar" 3
using ::fwprintf;
# 148 "/usr/include/c++/4.8.2/cwchar" 3
using ::fwscanf;
# 149 "/usr/include/c++/4.8.2/cwchar" 3
using ::getwc;
# 150 "/usr/include/c++/4.8.2/cwchar" 3
using ::getwchar;
# 151 "/usr/include/c++/4.8.2/cwchar" 3
using ::mbrlen;
# 152 "/usr/include/c++/4.8.2/cwchar" 3
using ::mbrtowc;
# 153 "/usr/include/c++/4.8.2/cwchar" 3
using ::mbsinit;
# 154 "/usr/include/c++/4.8.2/cwchar" 3
using ::mbsrtowcs;
# 155 "/usr/include/c++/4.8.2/cwchar" 3
using ::putwc;
# 156 "/usr/include/c++/4.8.2/cwchar" 3
using ::putwchar;
# 158 "/usr/include/c++/4.8.2/cwchar" 3
using ::swprintf;
# 160 "/usr/include/c++/4.8.2/cwchar" 3
using ::swscanf;
# 161 "/usr/include/c++/4.8.2/cwchar" 3
using ::ungetwc;
# 162 "/usr/include/c++/4.8.2/cwchar" 3
using ::vfwprintf;
# 164 "/usr/include/c++/4.8.2/cwchar" 3
using ::vfwscanf;
# 167 "/usr/include/c++/4.8.2/cwchar" 3
using ::vswprintf;
# 170 "/usr/include/c++/4.8.2/cwchar" 3
using ::vswscanf;
# 172 "/usr/include/c++/4.8.2/cwchar" 3
using ::vwprintf;
# 174 "/usr/include/c++/4.8.2/cwchar" 3
using ::vwscanf;
# 176 "/usr/include/c++/4.8.2/cwchar" 3
using ::wcrtomb;
# 177 "/usr/include/c++/4.8.2/cwchar" 3
using ::wcscat;
# 178 "/usr/include/c++/4.8.2/cwchar" 3
using ::wcscmp;
# 179 "/usr/include/c++/4.8.2/cwchar" 3
using ::wcscoll;
# 180 "/usr/include/c++/4.8.2/cwchar" 3
using ::wcscpy;
# 181 "/usr/include/c++/4.8.2/cwchar" 3
using ::wcscspn;
# 182 "/usr/include/c++/4.8.2/cwchar" 3
using ::wcsftime;
# 183 "/usr/include/c++/4.8.2/cwchar" 3
using ::wcslen;
# 184 "/usr/include/c++/4.8.2/cwchar" 3
using ::wcsncat;
# 185 "/usr/include/c++/4.8.2/cwchar" 3
using ::wcsncmp;
# 186 "/usr/include/c++/4.8.2/cwchar" 3
using ::wcsncpy;
# 187 "/usr/include/c++/4.8.2/cwchar" 3
using ::wcsrtombs;
# 188 "/usr/include/c++/4.8.2/cwchar" 3
using ::wcsspn;
# 189 "/usr/include/c++/4.8.2/cwchar" 3
using ::wcstod;
# 191 "/usr/include/c++/4.8.2/cwchar" 3
using ::wcstof;
# 193 "/usr/include/c++/4.8.2/cwchar" 3
using ::wcstok;
# 194 "/usr/include/c++/4.8.2/cwchar" 3
using ::wcstol;
# 195 "/usr/include/c++/4.8.2/cwchar" 3
using ::wcstoul;
# 196 "/usr/include/c++/4.8.2/cwchar" 3
using ::wcsxfrm;
# 197 "/usr/include/c++/4.8.2/cwchar" 3
using ::wctob;
# 198 "/usr/include/c++/4.8.2/cwchar" 3
using ::wmemcmp;
# 199 "/usr/include/c++/4.8.2/cwchar" 3
using ::wmemcpy;
# 200 "/usr/include/c++/4.8.2/cwchar" 3
using ::wmemmove;
# 201 "/usr/include/c++/4.8.2/cwchar" 3
using ::wmemset;
# 202 "/usr/include/c++/4.8.2/cwchar" 3
using ::wprintf;
# 203 "/usr/include/c++/4.8.2/cwchar" 3
using ::wscanf;
# 204 "/usr/include/c++/4.8.2/cwchar" 3
using ::wcschr;
# 205 "/usr/include/c++/4.8.2/cwchar" 3
using ::wcspbrk;
# 206 "/usr/include/c++/4.8.2/cwchar" 3
using ::wcsrchr;
# 207 "/usr/include/c++/4.8.2/cwchar" 3
using ::wcsstr;
# 208 "/usr/include/c++/4.8.2/cwchar" 3
using ::wmemchr;
# 233 "/usr/include/c++/4.8.2/cwchar" 3
}
# 241 "/usr/include/c++/4.8.2/cwchar" 3
namespace __gnu_cxx {
# 248 "/usr/include/c++/4.8.2/cwchar" 3
using ::wcstold;
# 257 "/usr/include/c++/4.8.2/cwchar" 3
using ::wcstoll;
# 258 "/usr/include/c++/4.8.2/cwchar" 3
using ::wcstoull;
# 260 "/usr/include/c++/4.8.2/cwchar" 3
}
# 262 "/usr/include/c++/4.8.2/cwchar" 3
namespace std {
# 264 "/usr/include/c++/4.8.2/cwchar" 3
using __gnu_cxx::wcstold;
# 265 "/usr/include/c++/4.8.2/cwchar" 3
using __gnu_cxx::wcstoll;
# 266 "/usr/include/c++/4.8.2/cwchar" 3
using __gnu_cxx::wcstoull;
# 267 "/usr/include/c++/4.8.2/cwchar" 3
}
# 68 "/usr/include/c++/4.8.2/bits/postypes.h" 3
namespace std __attribute((__visibility__("default"))) {
# 88 "/usr/include/c++/4.8.2/bits/postypes.h" 3
typedef long streamoff;
# 98 "/usr/include/c++/4.8.2/bits/postypes.h" 3
typedef ptrdiff_t streamsize;
# 111 "/usr/include/c++/4.8.2/bits/postypes.h" 3
template< class _StateT>
# 112 "/usr/include/c++/4.8.2/bits/postypes.h" 3
class fpos {
# 115 "/usr/include/c++/4.8.2/bits/postypes.h" 3
streamoff _M_off;
# 116 "/usr/include/c++/4.8.2/bits/postypes.h" 3
_StateT _M_state;
# 123 "/usr/include/c++/4.8.2/bits/postypes.h" 3
public: fpos() : _M_off((0)), _M_state()
# 124 "/usr/include/c++/4.8.2/bits/postypes.h" 3
{ }
# 133 "/usr/include/c++/4.8.2/bits/postypes.h" 3
fpos(streamoff __off) : _M_off(__off), _M_state()
# 134 "/usr/include/c++/4.8.2/bits/postypes.h" 3
{ }
# 137 "/usr/include/c++/4.8.2/bits/postypes.h" 3
operator streamoff() const { return _M_off; }
# 141 "/usr/include/c++/4.8.2/bits/postypes.h" 3
void state(_StateT __st)
# 142 "/usr/include/c++/4.8.2/bits/postypes.h" 3
{ (_M_state) = __st; }
# 146 "/usr/include/c++/4.8.2/bits/postypes.h" 3
_StateT state() const
# 147 "/usr/include/c++/4.8.2/bits/postypes.h" 3
{ return _M_state; }
# 154 "/usr/include/c++/4.8.2/bits/postypes.h" 3
fpos &operator+=(streamoff __off)
# 155 "/usr/include/c++/4.8.2/bits/postypes.h" 3
{
# 156 "/usr/include/c++/4.8.2/bits/postypes.h" 3
(_M_off) += __off;
# 157 "/usr/include/c++/4.8.2/bits/postypes.h" 3
return *this;
# 158 "/usr/include/c++/4.8.2/bits/postypes.h" 3
}
# 165 "/usr/include/c++/4.8.2/bits/postypes.h" 3
fpos &operator-=(streamoff __off)
# 166 "/usr/include/c++/4.8.2/bits/postypes.h" 3
{
# 167 "/usr/include/c++/4.8.2/bits/postypes.h" 3
(_M_off) -= __off;
# 168 "/usr/include/c++/4.8.2/bits/postypes.h" 3
return *this;
# 169 "/usr/include/c++/4.8.2/bits/postypes.h" 3
}
# 178 "/usr/include/c++/4.8.2/bits/postypes.h" 3
fpos operator+(streamoff __off) const
# 179 "/usr/include/c++/4.8.2/bits/postypes.h" 3
{
# 180 "/usr/include/c++/4.8.2/bits/postypes.h" 3
fpos __pos(*this);
# 181 "/usr/include/c++/4.8.2/bits/postypes.h" 3
__pos += __off;
# 182 "/usr/include/c++/4.8.2/bits/postypes.h" 3
return __pos;
# 183 "/usr/include/c++/4.8.2/bits/postypes.h" 3
}
# 192 "/usr/include/c++/4.8.2/bits/postypes.h" 3
fpos operator-(streamoff __off) const
# 193 "/usr/include/c++/4.8.2/bits/postypes.h" 3
{
# 194 "/usr/include/c++/4.8.2/bits/postypes.h" 3
fpos __pos(*this);
# 195 "/usr/include/c++/4.8.2/bits/postypes.h" 3
__pos -= __off;
# 196 "/usr/include/c++/4.8.2/bits/postypes.h" 3
return __pos;
# 197 "/usr/include/c++/4.8.2/bits/postypes.h" 3
}
# 205 "/usr/include/c++/4.8.2/bits/postypes.h" 3
streamoff operator-(const fpos &__other) const
# 206 "/usr/include/c++/4.8.2/bits/postypes.h" 3
{ return (_M_off) - (__other._M_off); }
# 207 "/usr/include/c++/4.8.2/bits/postypes.h" 3
};
# 214 "/usr/include/c++/4.8.2/bits/postypes.h" 3
template< class _StateT> inline bool
# 216 "/usr/include/c++/4.8.2/bits/postypes.h" 3
operator==(const fpos< _StateT> &__lhs, const fpos< _StateT> &__rhs)
# 217 "/usr/include/c++/4.8.2/bits/postypes.h" 3
{ return ((streamoff)__lhs) == ((streamoff)__rhs); }
# 219 "/usr/include/c++/4.8.2/bits/postypes.h" 3
template< class _StateT> inline bool
# 221 "/usr/include/c++/4.8.2/bits/postypes.h" 3
operator!=(const fpos< _StateT> &__lhs, const fpos< _StateT> &__rhs)
# 222 "/usr/include/c++/4.8.2/bits/postypes.h" 3
{ return ((streamoff)__lhs) != ((streamoff)__rhs); }
# 228 "/usr/include/c++/4.8.2/bits/postypes.h" 3
typedef fpos< __mbstate_t> streampos;
# 230 "/usr/include/c++/4.8.2/bits/postypes.h" 3
typedef fpos< __mbstate_t> wstreampos;
# 240 "/usr/include/c++/4.8.2/bits/postypes.h" 3
}
# 42 "/usr/include/c++/4.8.2/iosfwd" 3
namespace std __attribute((__visibility__("default"))) {
# 74 "/usr/include/c++/4.8.2/iosfwd" 3
class ios_base;
# 76 "/usr/include/c++/4.8.2/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_ios;
# 79 "/usr/include/c++/4.8.2/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_streambuf;
# 82 "/usr/include/c++/4.8.2/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_istream;
# 85 "/usr/include/c++/4.8.2/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_ostream;
# 88 "/usr/include/c++/4.8.2/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_iostream;
# 91 "/usr/include/c++/4.8.2/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> , class
# 92 "/usr/include/c++/4.8.2/iosfwd" 3
_Alloc = allocator< _CharT> > class basic_stringbuf;
# 95 "/usr/include/c++/4.8.2/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> , class
# 96 "/usr/include/c++/4.8.2/iosfwd" 3
_Alloc = allocator< _CharT> > class basic_istringstream;
# 99 "/usr/include/c++/4.8.2/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> , class
# 100 "/usr/include/c++/4.8.2/iosfwd" 3
_Alloc = allocator< _CharT> > class basic_ostringstream;
# 103 "/usr/include/c++/4.8.2/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> , class
# 104 "/usr/include/c++/4.8.2/iosfwd" 3
_Alloc = allocator< _CharT> > class basic_stringstream;
# 107 "/usr/include/c++/4.8.2/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_filebuf;
# 110 "/usr/include/c++/4.8.2/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_ifstream;
# 113 "/usr/include/c++/4.8.2/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_ofstream;
# 116 "/usr/include/c++/4.8.2/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_fstream;
# 119 "/usr/include/c++/4.8.2/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class istreambuf_iterator;
# 122 "/usr/include/c++/4.8.2/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class ostreambuf_iterator;
# 127 "/usr/include/c++/4.8.2/iosfwd" 3
typedef basic_ios< char> ios;
# 130 "/usr/include/c++/4.8.2/iosfwd" 3
typedef basic_streambuf< char> streambuf;
# 133 "/usr/include/c++/4.8.2/iosfwd" 3
typedef basic_istream< char> istream;
# 136 "/usr/include/c++/4.8.2/iosfwd" 3
typedef basic_ostream< char> ostream;
# 139 "/usr/include/c++/4.8.2/iosfwd" 3
typedef basic_iostream< char> iostream;
# 142 "/usr/include/c++/4.8.2/iosfwd" 3
typedef basic_stringbuf< char> stringbuf;
# 145 "/usr/include/c++/4.8.2/iosfwd" 3
typedef basic_istringstream< char> istringstream;
# 148 "/usr/include/c++/4.8.2/iosfwd" 3
typedef basic_ostringstream< char> ostringstream;
# 151 "/usr/include/c++/4.8.2/iosfwd" 3
typedef basic_stringstream< char> stringstream;
# 154 "/usr/include/c++/4.8.2/iosfwd" 3
typedef basic_filebuf< char> filebuf;
# 157 "/usr/include/c++/4.8.2/iosfwd" 3
typedef basic_ifstream< char> ifstream;
# 160 "/usr/include/c++/4.8.2/iosfwd" 3
typedef basic_ofstream< char> ofstream;
# 163 "/usr/include/c++/4.8.2/iosfwd" 3
typedef basic_fstream< char> fstream;
# 167 "/usr/include/c++/4.8.2/iosfwd" 3
typedef basic_ios< wchar_t> wios;
# 170 "/usr/include/c++/4.8.2/iosfwd" 3
typedef basic_streambuf< wchar_t> wstreambuf;
# 173 "/usr/include/c++/4.8.2/iosfwd" 3
typedef basic_istream< wchar_t> wistream;
# 176 "/usr/include/c++/4.8.2/iosfwd" 3
typedef basic_ostream< wchar_t> wostream;
# 179 "/usr/include/c++/4.8.2/iosfwd" 3
typedef basic_iostream< wchar_t> wiostream;
# 182 "/usr/include/c++/4.8.2/iosfwd" 3
typedef basic_stringbuf< wchar_t> wstringbuf;
# 185 "/usr/include/c++/4.8.2/iosfwd" 3
typedef basic_istringstream< wchar_t> wistringstream;
# 188 "/usr/include/c++/4.8.2/iosfwd" 3
typedef basic_ostringstream< wchar_t> wostringstream;
# 191 "/usr/include/c++/4.8.2/iosfwd" 3
typedef basic_stringstream< wchar_t> wstringstream;
# 194 "/usr/include/c++/4.8.2/iosfwd" 3
typedef basic_filebuf< wchar_t> wfilebuf;
# 197 "/usr/include/c++/4.8.2/iosfwd" 3
typedef basic_ifstream< wchar_t> wifstream;
# 200 "/usr/include/c++/4.8.2/iosfwd" 3
typedef basic_ofstream< wchar_t> wofstream;
# 203 "/usr/include/c++/4.8.2/iosfwd" 3
typedef basic_fstream< wchar_t> wfstream;
# 208 "/usr/include/c++/4.8.2/iosfwd" 3
}
# 43 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 57 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
template< class _CharT>
# 58 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
struct _Char_types {
# 60 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
typedef unsigned long int_type;
# 61 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
typedef std::streampos pos_type;
# 62 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
typedef std::streamoff off_type;
# 63 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
typedef mbstate_t state_type;
# 64 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
};
# 82 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
template< class _CharT>
# 83 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
struct char_traits {
# 85 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
typedef _CharT char_type;
# 86 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
typedef typename _Char_types< _CharT> ::int_type int_type;
# 87 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
typedef typename _Char_types< _CharT> ::pos_type pos_type;
# 88 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
typedef typename _Char_types< _CharT> ::off_type off_type;
# 89 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
typedef typename _Char_types< _CharT> ::state_type state_type;
# 92 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
static void assign(char_type &__c1, const char_type &__c2)
# 93 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
{ __c1 = __c2; }
# 96 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
static bool eq(const char_type &__c1, const char_type &__c2)
# 97 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 100 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
static bool lt(const char_type &__c1, const char_type &__c2)
# 101 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
{ return __c1 < __c2; }
# 104 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
static int compare(const char_type * __s1, const char_type * __s2, std::size_t __n);
# 107 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
static std::size_t length(const char_type * __s);
# 110 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
static const char_type *find(const char_type * __s, std::size_t __n, const char_type & __a);
# 113 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
static char_type *move(char_type * __s1, const char_type * __s2, std::size_t __n);
# 116 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
static char_type *copy(char_type * __s1, const char_type * __s2, std::size_t __n);
# 119 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
static char_type *assign(char_type * __s, std::size_t __n, char_type __a);
# 122 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
static char_type to_char_type(const int_type &__c)
# 123 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
{ return static_cast< char_type>(__c); }
# 126 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
static int_type to_int_type(const char_type &__c)
# 127 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
{ return static_cast< int_type>(__c); }
# 130 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
static bool eq_int_type(const int_type &__c1, const int_type &__c2)
# 131 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 134 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
static int_type eof()
# 135 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
{ return static_cast< int_type>(-1); }
# 138 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
static int_type not_eof(const int_type &__c)
# 139 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
{ return (!(eq_int_type)(__c, (eof)())) ? __c : (to_int_type)(char_type()); }
# 140 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
};
# 142 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
template< class _CharT> int
# 145 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
char_traits< _CharT> ::compare(const char_type *__s1, const char_type *__s2, std::size_t __n)
# 146 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
{
# 147 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
for (std::size_t __i = (0); __i < __n; ++__i) {
# 148 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
if ((lt)(__s1[__i], __s2[__i])) {
# 149 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
return -1; } else {
# 150 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
if ((lt)(__s2[__i], __s1[__i])) {
# 151 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
return 1; } } }
# 152 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
return 0;
# 153 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
}
# 155 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
template< class _CharT> std::size_t
# 158 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
char_traits< _CharT> ::length(const char_type *__p)
# 159 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
{
# 160 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
std::size_t __i = (0);
# 161 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
while (!(eq)(__p[__i], char_type())) {
# 162 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
++__i; }
# 163 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
return __i;
# 164 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
}
# 166 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
template< class _CharT> const typename char_traits< _CharT> ::char_type *
# 169 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
char_traits< _CharT> ::find(const char_type *__s, std::size_t __n, const char_type &__a)
# 170 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
{
# 171 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
for (std::size_t __i = (0); __i < __n; ++__i) {
# 172 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
if ((eq)(__s[__i], __a)) {
# 173 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
return __s + __i; } }
# 174 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
return 0;
# 175 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
}
# 177 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
template< class _CharT> typename char_traits< _CharT> ::char_type *
# 180 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
char_traits< _CharT> ::move(char_type *__s1, const char_type *__s2, std::size_t __n)
# 181 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
{
# 182 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
return static_cast< _CharT *>(__builtin_memmove(__s1, __s2, __n * sizeof(char_type)));
# 184 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
}
# 186 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
template< class _CharT> typename char_traits< _CharT> ::char_type *
# 189 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
char_traits< _CharT> ::copy(char_type *__s1, const char_type *__s2, std::size_t __n)
# 190 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
{
# 192 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
std::copy(__s2, __s2 + __n, __s1);
# 193 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
return __s1;
# 194 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
}
# 196 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
template< class _CharT> typename char_traits< _CharT> ::char_type *
# 199 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
char_traits< _CharT> ::assign(char_type *__s, std::size_t __n, char_type __a)
# 200 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
{
# 202 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
std::fill_n(__s, __n, __a);
# 203 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
return __s;
# 204 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
}
# 207 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
}
# 209 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
namespace std __attribute((__visibility__("default"))) {
# 226 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
template< class _CharT>
# 227 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
struct char_traits : public __gnu_cxx::char_traits< _CharT> {
# 228 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
};
# 233 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
template<> struct char_traits< char> {
# 235 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
typedef char char_type;
# 236 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
typedef int int_type;
# 237 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
typedef streampos pos_type;
# 238 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
typedef streamoff off_type;
# 239 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
typedef mbstate_t state_type;
# 242 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
static void assign(char_type &__c1, const char_type &__c2)
# 243 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
{ __c1 = __c2; }
# 246 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
static bool eq(const char_type &__c1, const char_type &__c2)
# 247 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 250 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
static bool lt(const char_type &__c1, const char_type &__c2)
# 251 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
{ return __c1 < __c2; }
# 254 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
static int compare(const char_type *__s1, const char_type *__s2, size_t __n)
# 255 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
{ return __builtin_memcmp(__s1, __s2, __n); }
# 258 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
static size_t length(const char_type *__s)
# 259 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
{ return __builtin_strlen(__s); }
# 262 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
static const char_type *find(const char_type *__s, size_t __n, const char_type &__a)
# 263 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
{ return static_cast< const char_type *>(__builtin_memchr(__s, __a, __n)); }
# 266 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
static char_type *move(char_type *__s1, const char_type *__s2, size_t __n)
# 267 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
{ return static_cast< char_type *>(__builtin_memmove(__s1, __s2, __n)); }
# 270 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n)
# 271 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
{ return static_cast< char_type *>(__builtin_memcpy(__s1, __s2, __n)); }
# 274 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
static char_type *assign(char_type *__s, size_t __n, char_type __a)
# 275 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
{ return static_cast< char_type *>(__builtin_memset(__s, __a, __n)); }
# 278 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
static char_type to_char_type(const int_type &__c)
# 279 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
{ return static_cast< char_type>(__c); }
# 284 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
static int_type to_int_type(const char_type &__c)
# 285 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
{ return static_cast< int_type>(static_cast< unsigned char>(__c)); }
# 288 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
static bool eq_int_type(const int_type &__c1, const int_type &__c2)
# 289 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 292 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
static int_type eof()
# 293 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
{ return static_cast< int_type>(-1); }
# 296 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
static int_type not_eof(const int_type &__c)
# 297 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
{ return (__c == eof()) ? 0 : __c; }
# 298 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
};
# 304 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
template<> struct char_traits< wchar_t> {
# 306 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
typedef wchar_t char_type;
# 307 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
typedef wint_t int_type;
# 308 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
typedef streamoff off_type;
# 309 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
typedef wstreampos pos_type;
# 310 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
typedef mbstate_t state_type;
# 313 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
static void assign(char_type &__c1, const char_type &__c2)
# 314 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
{ __c1 = __c2; }
# 317 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
static bool eq(const char_type &__c1, const char_type &__c2)
# 318 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 321 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
static bool lt(const char_type &__c1, const char_type &__c2)
# 322 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
{ return __c1 < __c2; }
# 325 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
static int compare(const char_type *__s1, const char_type *__s2, size_t __n)
# 326 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
{ return wmemcmp(__s1, __s2, __n); }
# 329 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
static size_t length(const char_type *__s)
# 330 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
{ return wcslen(__s); }
# 333 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
static const char_type *find(const char_type *__s, size_t __n, const char_type &__a)
# 334 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
{ return wmemchr(__s, __a, __n); }
# 337 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
static char_type *move(char_type *__s1, const char_type *__s2, size_t __n)
# 338 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
{ return wmemmove(__s1, __s2, __n); }
# 341 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n)
# 342 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
{ return wmemcpy(__s1, __s2, __n); }
# 345 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
static char_type *assign(char_type *__s, size_t __n, char_type __a)
# 346 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
{ return wmemset(__s, __a, __n); }
# 349 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
static char_type to_char_type(const int_type &__c)
# 350 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
{ return (char_type)__c; }
# 353 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
static int_type to_int_type(const char_type &__c)
# 354 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
{ return (int_type)__c; }
# 357 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
static bool eq_int_type(const int_type &__c1, const int_type &__c2)
# 358 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 361 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
static int_type eof()
# 362 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
{ return static_cast< int_type>(4294967295U); }
# 365 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
static int_type not_eof(const int_type &__c)
# 366 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
{ return eq_int_type(__c, eof()) ? 0 : __c; }
# 367 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
};
# 371 "/usr/include/c++/4.8.2/bits/char_traits.h" 3
}
# 32 "/usr/include/locale.h" 3
extern "C" {
# 54 "/usr/include/locale.h" 3
struct lconv {
# 58 "/usr/include/locale.h" 3
char *decimal_point;
# 59 "/usr/include/locale.h" 3
char *thousands_sep;
# 65 "/usr/include/locale.h" 3
char *grouping;
# 71 "/usr/include/locale.h" 3
char *int_curr_symbol;
# 72 "/usr/include/locale.h" 3
char *currency_symbol;
# 73 "/usr/include/locale.h" 3
char *mon_decimal_point;
# 74 "/usr/include/locale.h" 3
char *mon_thousands_sep;
# 75 "/usr/include/locale.h" 3
char *mon_grouping;
# 76 "/usr/include/locale.h" 3
char *positive_sign;
# 77 "/usr/include/locale.h" 3
char *negative_sign;
# 78 "/usr/include/locale.h" 3
char int_frac_digits;
# 79 "/usr/include/locale.h" 3
char frac_digits;
# 81 "/usr/include/locale.h" 3
char p_cs_precedes;
# 83 "/usr/include/locale.h" 3
char p_sep_by_space;
# 85 "/usr/include/locale.h" 3
char n_cs_precedes;
# 87 "/usr/include/locale.h" 3
char n_sep_by_space;
# 94 "/usr/include/locale.h" 3
char p_sign_posn;
# 95 "/usr/include/locale.h" 3
char n_sign_posn;
# 98 "/usr/include/locale.h" 3
char int_p_cs_precedes;
# 100 "/usr/include/locale.h" 3
char int_p_sep_by_space;
# 102 "/usr/include/locale.h" 3
char int_n_cs_precedes;
# 104 "/usr/include/locale.h" 3
char int_n_sep_by_space;
# 111 "/usr/include/locale.h" 3
char int_p_sign_posn;
# 112 "/usr/include/locale.h" 3
char int_n_sign_posn;
# 121 "/usr/include/locale.h" 3
};
# 125 "/usr/include/locale.h" 3
extern char *setlocale(int __category, const char * __locale) throw();
# 128 "/usr/include/locale.h" 3
extern lconv *localeconv() throw();
# 152 "/usr/include/locale.h" 3
extern __locale_t newlocale(int __category_mask, const char * __locale, __locale_t __base) throw();
# 187 "/usr/include/locale.h" 3
extern __locale_t duplocale(__locale_t __dataset) throw();
# 191 "/usr/include/locale.h" 3
extern void freelocale(__locale_t __dataset) throw();
# 198 "/usr/include/locale.h" 3
extern __locale_t uselocale(__locale_t __dataset) throw();
# 206 "/usr/include/locale.h" 3
}
# 51 "/usr/include/c++/4.8.2/clocale" 3
namespace std {
# 53 "/usr/include/c++/4.8.2/clocale" 3
using ::lconv;
# 54 "/usr/include/c++/4.8.2/clocale" 3
using ::setlocale;
# 55 "/usr/include/c++/4.8.2/clocale" 3
using ::localeconv;
# 56 "/usr/include/c++/4.8.2/clocale" 3
}
# 48 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/c++locale.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 52 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/c++locale.h" 3
extern "C" __typeof__(uselocale) __uselocale;
# 55 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/c++locale.h" 3
}
# 58 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/c++locale.h" 3
namespace std __attribute((__visibility__("default"))) {
# 62 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/c++locale.h" 3
typedef __locale_t __c_locale;
# 69 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/c++locale.h" 3
inline int __convert_from_v(const __c_locale &__cloc __attribute((__unused__)), char *
# 70 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/c++locale.h" 3
__out, const int
# 71 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/c++locale.h" 3
__size __attribute((__unused__)), const char *
# 72 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/c++locale.h" 3
__fmt, ...)
# 73 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/c++locale.h" 3
{
# 75 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/c++locale.h" 3
__c_locale __old = __gnu_cxx::__uselocale(__cloc);
# 88 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/c++locale.h" 3
__builtin_va_list __args;
# 89 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/c++locale.h" 3
__builtin_va_start((__args),__fmt);
# 92 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/c++locale.h" 3
const int __ret = __builtin_vsnprintf(__out, __size, __fmt, __args);
# 97 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/c++locale.h" 3
__builtin_va_end(__args);
# 100 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/c++locale.h" 3
__gnu_cxx::__uselocale(__old);
# 108 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/c++locale.h" 3
return __ret;
# 109 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/c++locale.h" 3
}
# 112 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/c++locale.h" 3
}
# 29 "/usr/include/ctype.h" 3
extern "C" {
# 48 "/usr/include/ctype.h" 3
enum {
# 49 "/usr/include/ctype.h" 3
_ISupper = 256,
# 50 "/usr/include/ctype.h" 3
_ISlower = 512,
# 51 "/usr/include/ctype.h" 3
_ISalpha = 1024,
# 52 "/usr/include/ctype.h" 3
_ISdigit = 2048,
# 53 "/usr/include/ctype.h" 3
_ISxdigit = 4096,
# 54 "/usr/include/ctype.h" 3
_ISspace = 8192,
# 55 "/usr/include/ctype.h" 3
_ISprint = 16384,
# 56 "/usr/include/ctype.h" 3
_ISgraph = 32768,
# 57 "/usr/include/ctype.h" 3
_ISblank = 1,
# 58 "/usr/include/ctype.h" 3
_IScntrl,
# 59 "/usr/include/ctype.h" 3
_ISpunct = 4,
# 60 "/usr/include/ctype.h" 3
_ISalnum = 8
# 61 "/usr/include/ctype.h" 3
};
# 80 "/usr/include/ctype.h" 3
extern const unsigned short **__ctype_b_loc() throw()
# 81 "/usr/include/ctype.h" 3
 __attribute((const));
# 82 "/usr/include/ctype.h" 3
extern const __int32_t **__ctype_tolower_loc() throw()
# 83 "/usr/include/ctype.h" 3
 __attribute((const));
# 84 "/usr/include/ctype.h" 3
extern const __int32_t **__ctype_toupper_loc() throw()
# 85 "/usr/include/ctype.h" 3
 __attribute((const));
# 111 "/usr/include/ctype.h" 3
extern int isalnum(int) throw();
# 112 "/usr/include/ctype.h" 3
extern int isalpha(int) throw();
# 113 "/usr/include/ctype.h" 3
extern int iscntrl(int) throw();
# 114 "/usr/include/ctype.h" 3
extern int isdigit(int) throw();
# 115 "/usr/include/ctype.h" 3
extern int islower(int) throw();
# 116 "/usr/include/ctype.h" 3
extern int isgraph(int) throw();
# 117 "/usr/include/ctype.h" 3
extern int isprint(int) throw();
# 118 "/usr/include/ctype.h" 3
extern int ispunct(int) throw();
# 119 "/usr/include/ctype.h" 3
extern int isspace(int) throw();
# 120 "/usr/include/ctype.h" 3
extern int isupper(int) throw();
# 121 "/usr/include/ctype.h" 3
extern int isxdigit(int) throw();
# 125 "/usr/include/ctype.h" 3
extern int tolower(int __c) throw();
# 128 "/usr/include/ctype.h" 3
extern int toupper(int __c) throw();
# 137 "/usr/include/ctype.h" 3
extern int isblank(int) throw();
# 144 "/usr/include/ctype.h" 3
extern int isctype(int __c, int __mask) throw();
# 151 "/usr/include/ctype.h" 3
extern int isascii(int __c) throw();
# 155 "/usr/include/ctype.h" 3
extern int toascii(int __c) throw();
# 159 "/usr/include/ctype.h" 3
extern int _toupper(int) throw();
# 160 "/usr/include/ctype.h" 3
extern int _tolower(int) throw();
# 272 "/usr/include/ctype.h" 3
extern int isalnum_l(int, __locale_t) throw();
# 273 "/usr/include/ctype.h" 3
extern int isalpha_l(int, __locale_t) throw();
# 274 "/usr/include/ctype.h" 3
extern int iscntrl_l(int, __locale_t) throw();
# 275 "/usr/include/ctype.h" 3
extern int isdigit_l(int, __locale_t) throw();
# 276 "/usr/include/ctype.h" 3
extern int islower_l(int, __locale_t) throw();
# 277 "/usr/include/ctype.h" 3
extern int isgraph_l(int, __locale_t) throw();
# 278 "/usr/include/ctype.h" 3
extern int isprint_l(int, __locale_t) throw();
# 279 "/usr/include/ctype.h" 3
extern int ispunct_l(int, __locale_t) throw();
# 280 "/usr/include/ctype.h" 3
extern int isspace_l(int, __locale_t) throw();
# 281 "/usr/include/ctype.h" 3
extern int isupper_l(int, __locale_t) throw();
# 282 "/usr/include/ctype.h" 3
extern int isxdigit_l(int, __locale_t) throw();
# 284 "/usr/include/ctype.h" 3
extern int isblank_l(int, __locale_t) throw();
# 288 "/usr/include/ctype.h" 3
extern int __tolower_l(int __c, __locale_t __l) throw();
# 289 "/usr/include/ctype.h" 3
extern int tolower_l(int __c, __locale_t __l) throw();
# 292 "/usr/include/ctype.h" 3
extern int __toupper_l(int __c, __locale_t __l) throw();
# 293 "/usr/include/ctype.h" 3
extern int toupper_l(int __c, __locale_t __l) throw();
# 348 "/usr/include/ctype.h" 3
}
# 62 "/usr/include/c++/4.8.2/cctype" 3
namespace std {
# 64 "/usr/include/c++/4.8.2/cctype" 3
using ::isalnum;
# 65 "/usr/include/c++/4.8.2/cctype" 3
using ::isalpha;
# 66 "/usr/include/c++/4.8.2/cctype" 3
using ::iscntrl;
# 67 "/usr/include/c++/4.8.2/cctype" 3
using ::isdigit;
# 68 "/usr/include/c++/4.8.2/cctype" 3
using ::isgraph;
# 69 "/usr/include/c++/4.8.2/cctype" 3
using ::islower;
# 70 "/usr/include/c++/4.8.2/cctype" 3
using ::isprint;
# 71 "/usr/include/c++/4.8.2/cctype" 3
using ::ispunct;
# 72 "/usr/include/c++/4.8.2/cctype" 3
using ::isspace;
# 73 "/usr/include/c++/4.8.2/cctype" 3
using ::isupper;
# 74 "/usr/include/c++/4.8.2/cctype" 3
using ::isxdigit;
# 75 "/usr/include/c++/4.8.2/cctype" 3
using ::tolower;
# 76 "/usr/include/c++/4.8.2/cctype" 3
using ::toupper;
# 77 "/usr/include/c++/4.8.2/cctype" 3
}
# 44 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
namespace std __attribute((__visibility__("default"))) {
# 55 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
class locale;
# 57 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
template< class _Facet> bool has_facet(const locale &) throw();
# 61 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
template< class _Facet> const _Facet &use_facet(const locale &);
# 66 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
template< class _CharT> inline bool isspace(_CharT, const locale &);
# 70 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
template< class _CharT> inline bool isprint(_CharT, const locale &);
# 74 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
template< class _CharT> inline bool iscntrl(_CharT, const locale &);
# 78 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
template< class _CharT> inline bool isupper(_CharT, const locale &);
# 82 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
template< class _CharT> inline bool islower(_CharT, const locale &);
# 86 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
template< class _CharT> inline bool isalpha(_CharT, const locale &);
# 90 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
template< class _CharT> inline bool isdigit(_CharT, const locale &);
# 94 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
template< class _CharT> inline bool ispunct(_CharT, const locale &);
# 98 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
template< class _CharT> inline bool isxdigit(_CharT, const locale &);
# 102 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
template< class _CharT> inline bool isalnum(_CharT, const locale &);
# 106 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
template< class _CharT> inline bool isgraph(_CharT, const locale &);
# 110 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
template< class _CharT> inline _CharT toupper(_CharT, const locale &);
# 114 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
template< class _CharT> inline _CharT tolower(_CharT, const locale &);
# 119 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
struct ctype_base;
# 120 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
template< class _CharT> class ctype;
# 122 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
template<> class ctype< char> ;
# 124 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
template<> class ctype< wchar_t> ;
# 126 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
template< class _CharT> class ctype_byname;
# 130 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
class codecvt_base;
# 131 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
template< class _InternT, class _ExternT, class _StateT> class codecvt;
# 133 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
template<> class codecvt< char, char, __mbstate_t> ;
# 135 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
template<> class codecvt< wchar_t, char, __mbstate_t> ;
# 137 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
template< class _InternT, class _ExternT, class _StateT> class codecvt_byname;
# 142 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
template< class _CharT, class _InIter = istreambuf_iterator< _CharT> > class num_get;
# 144 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
template< class _CharT, class _OutIter = ostreambuf_iterator< _CharT> > class num_put;
# 147 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
template< class _CharT> class numpunct;
# 148 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
template< class _CharT> class numpunct_byname;
# 151 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
template< class _CharT> class collate;
# 153 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
template< class _CharT> class collate_byname;
# 157 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
class time_base;
# 158 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
template< class _CharT, class _InIter = istreambuf_iterator< _CharT> > class time_get;
# 160 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
template< class _CharT, class _InIter = istreambuf_iterator< _CharT> > class time_get_byname;
# 162 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
template< class _CharT, class _OutIter = ostreambuf_iterator< _CharT> > class time_put;
# 164 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
template< class _CharT, class _OutIter = ostreambuf_iterator< _CharT> > class time_put_byname;
# 168 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
class money_base;
# 170 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
template< class _CharT, class _InIter = istreambuf_iterator< _CharT> > class money_get;
# 172 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
template< class _CharT, class _OutIter = ostreambuf_iterator< _CharT> > class money_put;
# 175 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
template< class _CharT, bool _Intl = false> class moneypunct;
# 177 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
template< class _CharT, bool _Intl = false> class moneypunct_byname;
# 181 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
class messages_base;
# 182 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
template< class _CharT> class messages;
# 184 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
template< class _CharT> class messages_byname;
# 188 "/usr/include/c++/4.8.2/bits/localefwd.h" 3
}
# 30 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr.h" 3
#pragma GCC visibility push ( default )
# 73 "/usr/include/bits/sched.h" 3
struct sched_param {
# 75 "/usr/include/bits/sched.h" 3
int __sched_priority;
# 76 "/usr/include/bits/sched.h" 3
};
# 78 "/usr/include/bits/sched.h" 3
extern "C" {
# 82 "/usr/include/bits/sched.h" 3
extern int clone(int (* __fn)(void * __arg), void * __child_stack, int __flags, void * __arg, ...) throw();
# 86 "/usr/include/bits/sched.h" 3
extern int unshare(int __flags) throw();
# 89 "/usr/include/bits/sched.h" 3
extern int sched_getcpu() throw();
# 92 "/usr/include/bits/sched.h" 3
extern int setns(int __fd, int __nstype) throw();
# 96 "/usr/include/bits/sched.h" 3
}
# 104 "/usr/include/bits/sched.h" 3
struct __sched_param {
# 106 "/usr/include/bits/sched.h" 3
int __sched_priority;
# 107 "/usr/include/bits/sched.h" 3
};
# 119 "/usr/include/bits/sched.h" 3
typedef unsigned long __cpu_mask;
# 129 "/usr/include/bits/sched.h" 3
typedef
# 127 "/usr/include/bits/sched.h" 3
struct {
# 128 "/usr/include/bits/sched.h" 3
__cpu_mask __bits[(1024) / ((8) * sizeof(__cpu_mask))];
# 129 "/usr/include/bits/sched.h" 3
} cpu_set_t;
# 202 "/usr/include/bits/sched.h" 3
extern "C" {
# 204 "/usr/include/bits/sched.h" 3
extern int __sched_cpucount(size_t __setsize, const cpu_set_t * __setp) throw();
# 206 "/usr/include/bits/sched.h" 3
extern cpu_set_t *__sched_cpualloc(size_t __count) throw();
# 207 "/usr/include/bits/sched.h" 3
extern void __sched_cpufree(cpu_set_t * __set) throw();
# 209 "/usr/include/bits/sched.h" 3
}
# 47 "/usr/include/sched.h" 3
extern "C" {
# 50 "/usr/include/sched.h" 3
extern int sched_setparam(__pid_t __pid, const sched_param * __param) throw();
# 54 "/usr/include/sched.h" 3
extern int sched_getparam(__pid_t __pid, sched_param * __param) throw();
# 57 "/usr/include/sched.h" 3
extern int sched_setscheduler(__pid_t __pid, int __policy, const sched_param * __param) throw();
# 61 "/usr/include/sched.h" 3
extern int sched_getscheduler(__pid_t __pid) throw();
# 64 "/usr/include/sched.h" 3
extern int sched_yield() throw();
# 67 "/usr/include/sched.h" 3
extern int sched_get_priority_max(int __algorithm) throw();
# 70 "/usr/include/sched.h" 3
extern int sched_get_priority_min(int __algorithm) throw();
# 73 "/usr/include/sched.h" 3
extern int sched_rr_get_interval(__pid_t __pid, timespec * __t) throw();
# 117 "/usr/include/sched.h" 3
extern int sched_setaffinity(__pid_t __pid, size_t __cpusetsize, const cpu_set_t * __cpuset) throw();
# 121 "/usr/include/sched.h" 3
extern int sched_getaffinity(__pid_t __pid, size_t __cpusetsize, cpu_set_t * __cpuset) throw();
# 125 "/usr/include/sched.h" 3
}
# 31 "/usr/include/bits/setjmp.h" 3
typedef long __jmp_buf[8];
# 33 "/usr/include/pthread.h" 3
enum {
# 34 "/usr/include/pthread.h" 3
PTHREAD_CREATE_JOINABLE,
# 36 "/usr/include/pthread.h" 3
PTHREAD_CREATE_DETACHED
# 38 "/usr/include/pthread.h" 3
};
# 43 "/usr/include/pthread.h" 3
enum {
# 44 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_TIMED_NP,
# 45 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_RECURSIVE_NP,
# 46 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ERRORCHECK_NP,
# 47 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ADAPTIVE_NP,
# 50 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_NORMAL = 0,
# 51 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_RECURSIVE,
# 52 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ERRORCHECK,
# 53 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_DEFAULT = 0,
# 57 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_FAST_NP = 0
# 59 "/usr/include/pthread.h" 3
};
# 65 "/usr/include/pthread.h" 3
enum {
# 66 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_STALLED,
# 67 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_STALLED_NP = 0,
# 68 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ROBUST,
# 69 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ROBUST_NP = 1
# 70 "/usr/include/pthread.h" 3
};
# 77 "/usr/include/pthread.h" 3
enum {
# 78 "/usr/include/pthread.h" 3
PTHREAD_PRIO_NONE,
# 79 "/usr/include/pthread.h" 3
PTHREAD_PRIO_INHERIT,
# 80 "/usr/include/pthread.h" 3
PTHREAD_PRIO_PROTECT
# 81 "/usr/include/pthread.h" 3
};
# 126 "/usr/include/pthread.h" 3
enum {
# 127 "/usr/include/pthread.h" 3
PTHREAD_RWLOCK_PREFER_READER_NP,
# 128 "/usr/include/pthread.h" 3
PTHREAD_RWLOCK_PREFER_WRITER_NP,
# 129 "/usr/include/pthread.h" 3
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP,
# 130 "/usr/include/pthread.h" 3
PTHREAD_RWLOCK_DEFAULT_NP = 0
# 131 "/usr/include/pthread.h" 3
};
# 167 "/usr/include/pthread.h" 3
enum {
# 168 "/usr/include/pthread.h" 3
PTHREAD_INHERIT_SCHED,
# 170 "/usr/include/pthread.h" 3
PTHREAD_EXPLICIT_SCHED
# 172 "/usr/include/pthread.h" 3
};
# 177 "/usr/include/pthread.h" 3
enum {
# 178 "/usr/include/pthread.h" 3
PTHREAD_SCOPE_SYSTEM,
# 180 "/usr/include/pthread.h" 3
PTHREAD_SCOPE_PROCESS
# 182 "/usr/include/pthread.h" 3
};
# 187 "/usr/include/pthread.h" 3
enum {
# 188 "/usr/include/pthread.h" 3
PTHREAD_PROCESS_PRIVATE,
# 190 "/usr/include/pthread.h" 3
PTHREAD_PROCESS_SHARED
# 192 "/usr/include/pthread.h" 3
};
# 201 "/usr/include/pthread.h" 3
struct _pthread_cleanup_buffer {
# 203 "/usr/include/pthread.h" 3
void (*__routine)(void *);
# 204 "/usr/include/pthread.h" 3
void *__arg;
# 205 "/usr/include/pthread.h" 3
int __canceltype;
# 206 "/usr/include/pthread.h" 3
_pthread_cleanup_buffer *__prev;
# 207 "/usr/include/pthread.h" 3
};
# 211 "/usr/include/pthread.h" 3
enum {
# 212 "/usr/include/pthread.h" 3
PTHREAD_CANCEL_ENABLE,
# 214 "/usr/include/pthread.h" 3
PTHREAD_CANCEL_DISABLE
# 216 "/usr/include/pthread.h" 3
};
# 218 "/usr/include/pthread.h" 3
enum {
# 219 "/usr/include/pthread.h" 3
PTHREAD_CANCEL_DEFERRED,
# 221 "/usr/include/pthread.h" 3
PTHREAD_CANCEL_ASYNCHRONOUS
# 223 "/usr/include/pthread.h" 3
};
# 239 "/usr/include/pthread.h" 3
extern "C" {
# 244 "/usr/include/pthread.h" 3
extern int pthread_create(pthread_t *__restrict__ __newthread, const pthread_attr_t *__restrict__ __attr, void *(* __start_routine)(void *), void *__restrict__ __arg) throw()
# 247 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 3)));
# 253 "/usr/include/pthread.h" 3
extern void pthread_exit(void * __retval) __attribute((__noreturn__));
# 261 "/usr/include/pthread.h" 3
extern int pthread_join(pthread_t __th, void ** __thread_return);
# 266 "/usr/include/pthread.h" 3
extern int pthread_tryjoin_np(pthread_t __th, void ** __thread_return) throw();
# 274 "/usr/include/pthread.h" 3
extern int pthread_timedjoin_np(pthread_t __th, void ** __thread_return, const timespec * __abstime);
# 282 "/usr/include/pthread.h" 3
extern int pthread_detach(pthread_t __th) throw();
# 286 "/usr/include/pthread.h" 3
extern pthread_t pthread_self() throw() __attribute((const));
# 289 "/usr/include/pthread.h" 3
extern int pthread_equal(pthread_t __thread1, pthread_t __thread2) throw()
# 290 "/usr/include/pthread.h" 3
 __attribute((const));
# 298 "/usr/include/pthread.h" 3
extern int pthread_attr_init(pthread_attr_t * __attr) throw() __attribute((__nonnull__(1)));
# 301 "/usr/include/pthread.h" 3
extern int pthread_attr_destroy(pthread_attr_t * __attr) throw()
# 302 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 305 "/usr/include/pthread.h" 3
extern int pthread_attr_getdetachstate(const pthread_attr_t * __attr, int * __detachstate) throw()
# 307 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 310 "/usr/include/pthread.h" 3
extern int pthread_attr_setdetachstate(pthread_attr_t * __attr, int __detachstate) throw()
# 312 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 316 "/usr/include/pthread.h" 3
extern int pthread_attr_getguardsize(const pthread_attr_t * __attr, size_t * __guardsize) throw()
# 318 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 321 "/usr/include/pthread.h" 3
extern int pthread_attr_setguardsize(pthread_attr_t * __attr, size_t __guardsize) throw()
# 323 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 327 "/usr/include/pthread.h" 3
extern int pthread_attr_getschedparam(const pthread_attr_t *__restrict__ __attr, sched_param *__restrict__ __param) throw()
# 329 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 332 "/usr/include/pthread.h" 3
extern int pthread_attr_setschedparam(pthread_attr_t *__restrict__ __attr, const sched_param *__restrict__ __param) throw()
# 334 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 337 "/usr/include/pthread.h" 3
extern int pthread_attr_getschedpolicy(const pthread_attr_t *__restrict__ __attr, int *__restrict__ __policy) throw()
# 339 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 342 "/usr/include/pthread.h" 3
extern int pthread_attr_setschedpolicy(pthread_attr_t * __attr, int __policy) throw()
# 343 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 346 "/usr/include/pthread.h" 3
extern int pthread_attr_getinheritsched(const pthread_attr_t *__restrict__ __attr, int *__restrict__ __inherit) throw()
# 348 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 351 "/usr/include/pthread.h" 3
extern int pthread_attr_setinheritsched(pthread_attr_t * __attr, int __inherit) throw()
# 353 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 357 "/usr/include/pthread.h" 3
extern int pthread_attr_getscope(const pthread_attr_t *__restrict__ __attr, int *__restrict__ __scope) throw()
# 359 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 362 "/usr/include/pthread.h" 3
extern int pthread_attr_setscope(pthread_attr_t * __attr, int __scope) throw()
# 363 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 366 "/usr/include/pthread.h" 3
extern int pthread_attr_getstackaddr(const pthread_attr_t *__restrict__ __attr, void **__restrict__ __stackaddr) throw()
# 368 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2))) __attribute((__deprecated__));
# 374 "/usr/include/pthread.h" 3
extern int pthread_attr_setstackaddr(pthread_attr_t * __attr, void * __stackaddr) throw()
# 376 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1))) __attribute((__deprecated__));
# 379 "/usr/include/pthread.h" 3
extern int pthread_attr_getstacksize(const pthread_attr_t *__restrict__ __attr, size_t *__restrict__ __stacksize) throw()
# 381 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 386 "/usr/include/pthread.h" 3
extern int pthread_attr_setstacksize(pthread_attr_t * __attr, size_t __stacksize) throw()
# 388 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 392 "/usr/include/pthread.h" 3
extern int pthread_attr_getstack(const pthread_attr_t *__restrict__ __attr, void **__restrict__ __stackaddr, size_t *__restrict__ __stacksize) throw()
# 395 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2, 3)));
# 400 "/usr/include/pthread.h" 3
extern int pthread_attr_setstack(pthread_attr_t * __attr, void * __stackaddr, size_t __stacksize) throw()
# 401 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 407 "/usr/include/pthread.h" 3
extern int pthread_attr_setaffinity_np(pthread_attr_t * __attr, size_t __cpusetsize, const cpu_set_t * __cpuset) throw()
# 410 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 3)));
# 414 "/usr/include/pthread.h" 3
extern int pthread_attr_getaffinity_np(const pthread_attr_t * __attr, size_t __cpusetsize, cpu_set_t * __cpuset) throw()
# 417 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 3)));
# 423 "/usr/include/pthread.h" 3
extern int pthread_getattr_np(pthread_t __th, pthread_attr_t * __attr) throw()
# 424 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(2)));
# 432 "/usr/include/pthread.h" 3
extern int pthread_setschedparam(pthread_t __target_thread, int __policy, const sched_param * __param) throw()
# 434 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(3)));
# 437 "/usr/include/pthread.h" 3
extern int pthread_getschedparam(pthread_t __target_thread, int *__restrict__ __policy, sched_param *__restrict__ __param) throw()
# 440 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(2, 3)));
# 443 "/usr/include/pthread.h" 3
extern int pthread_setschedprio(pthread_t __target_thread, int __prio) throw();
# 449 "/usr/include/pthread.h" 3
extern int pthread_getname_np(pthread_t __target_thread, char * __buf, size_t __buflen) throw()
# 451 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(2)));
# 454 "/usr/include/pthread.h" 3
extern int pthread_setname_np(pthread_t __target_thread, const char * __name) throw()
# 455 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(2)));
# 461 "/usr/include/pthread.h" 3
extern int pthread_getconcurrency() throw();
# 464 "/usr/include/pthread.h" 3
extern int pthread_setconcurrency(int __level) throw();
# 472 "/usr/include/pthread.h" 3
extern int pthread_yield() throw();
# 477 "/usr/include/pthread.h" 3
extern int pthread_setaffinity_np(pthread_t __th, size_t __cpusetsize, const cpu_set_t * __cpuset) throw()
# 479 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(3)));
# 482 "/usr/include/pthread.h" 3
extern int pthread_getaffinity_np(pthread_t __th, size_t __cpusetsize, cpu_set_t * __cpuset) throw()
# 484 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(3)));
# 497 "/usr/include/pthread.h" 3
extern int pthread_once(pthread_once_t * __once_control, void (* __init_routine)(void))
# 498 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 509 "/usr/include/pthread.h" 3
extern int pthread_setcancelstate(int __state, int * __oldstate);
# 513 "/usr/include/pthread.h" 3
extern int pthread_setcanceltype(int __type, int * __oldtype);
# 516 "/usr/include/pthread.h" 3
extern int pthread_cancel(pthread_t __th);
# 521 "/usr/include/pthread.h" 3
extern void pthread_testcancel();
# 534 "/usr/include/pthread.h" 3
typedef
# 527 "/usr/include/pthread.h" 3
struct {
# 529 "/usr/include/pthread.h" 3
struct {
# 530 "/usr/include/pthread.h" 3
__jmp_buf __cancel_jmp_buf;
# 531 "/usr/include/pthread.h" 3
int __mask_was_saved;
# 532 "/usr/include/pthread.h" 3
} __cancel_jmp_buf[1];
# 533 "/usr/include/pthread.h" 3
void *__pad[4];
# 534 "/usr/include/pthread.h" 3
} __pthread_unwind_buf_t __attribute((__aligned__));
# 543 "/usr/include/pthread.h" 3
struct __pthread_cleanup_frame {
# 545 "/usr/include/pthread.h" 3
void (*__cancel_routine)(void *);
# 546 "/usr/include/pthread.h" 3
void *__cancel_arg;
# 547 "/usr/include/pthread.h" 3
int __do_it;
# 548 "/usr/include/pthread.h" 3
int __cancel_type;
# 549 "/usr/include/pthread.h" 3
};
# 554 "/usr/include/pthread.h" 3
class __pthread_cleanup_class {
# 556 "/usr/include/pthread.h" 3
void (*__cancel_routine)(void *);
# 557 "/usr/include/pthread.h" 3
void *__cancel_arg;
# 558 "/usr/include/pthread.h" 3
int __do_it;
# 559 "/usr/include/pthread.h" 3
int __cancel_type;
# 562 "/usr/include/pthread.h" 3
public: __pthread_cleanup_class(void (*__fct)(void *), void *__arg) : __cancel_routine(__fct), __cancel_arg(__arg), __do_it(1)
# 563 "/usr/include/pthread.h" 3
{ }
# 564 "/usr/include/pthread.h" 3
~__pthread_cleanup_class() { if (__do_it) { (__cancel_routine)(__cancel_arg); } }
# 565 "/usr/include/pthread.h" 3
void __setdoit(int __newval) { (__do_it) = __newval; }
# 566 "/usr/include/pthread.h" 3
void __defer() { pthread_setcanceltype(PTHREAD_CANCEL_DEFERRED, &(__cancel_type));
# 567 "/usr/include/pthread.h" 3
}
# 568 "/usr/include/pthread.h" 3
void __restore() const { pthread_setcanceltype(__cancel_type, 0); }
# 569 "/usr/include/pthread.h" 3
};
# 745 "/usr/include/pthread.h" 3
struct __jmp_buf_tag;
# 746 "/usr/include/pthread.h" 3
extern int __sigsetjmp(__jmp_buf_tag * __env, int __savemask) throw();
# 752 "/usr/include/pthread.h" 3
extern int pthread_mutex_init(pthread_mutex_t * __mutex, const pthread_mutexattr_t * __mutexattr) throw()
# 754 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 757 "/usr/include/pthread.h" 3
extern int pthread_mutex_destroy(pthread_mutex_t * __mutex) throw()
# 758 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 761 "/usr/include/pthread.h" 3
extern int pthread_mutex_trylock(pthread_mutex_t * __mutex) throw()
# 762 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 765 "/usr/include/pthread.h" 3
extern int pthread_mutex_lock(pthread_mutex_t * __mutex) throw()
# 766 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 770 "/usr/include/pthread.h" 3
extern int pthread_mutex_timedlock(pthread_mutex_t *__restrict__ __mutex, const timespec *__restrict__ __abstime) throw()
# 772 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 776 "/usr/include/pthread.h" 3
extern int pthread_mutex_unlock(pthread_mutex_t * __mutex) throw()
# 777 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 781 "/usr/include/pthread.h" 3
extern int pthread_mutex_getprioceiling(const pthread_mutex_t *__restrict__ __mutex, int *__restrict__ __prioceiling) throw()
# 784 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 788 "/usr/include/pthread.h" 3
extern int pthread_mutex_setprioceiling(pthread_mutex_t *__restrict__ __mutex, int __prioceiling, int *__restrict__ __old_ceiling) throw()
# 791 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 3)));
# 796 "/usr/include/pthread.h" 3
extern int pthread_mutex_consistent(pthread_mutex_t * __mutex) throw()
# 797 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 799 "/usr/include/pthread.h" 3
extern int pthread_mutex_consistent_np(pthread_mutex_t * __mutex) throw()
# 800 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 809 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_init(pthread_mutexattr_t * __attr) throw()
# 810 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 813 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_destroy(pthread_mutexattr_t * __attr) throw()
# 814 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 817 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_getpshared(const pthread_mutexattr_t *__restrict__ __attr, int *__restrict__ __pshared) throw()
# 820 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 823 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_setpshared(pthread_mutexattr_t * __attr, int __pshared) throw()
# 825 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 829 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_gettype(const pthread_mutexattr_t *__restrict__ __attr, int *__restrict__ __kind) throw()
# 831 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 836 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_settype(pthread_mutexattr_t * __attr, int __kind) throw()
# 837 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 841 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_getprotocol(const pthread_mutexattr_t *__restrict__ __attr, int *__restrict__ __protocol) throw()
# 844 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 848 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_setprotocol(pthread_mutexattr_t * __attr, int __protocol) throw()
# 850 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 853 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_getprioceiling(const pthread_mutexattr_t *__restrict__ __attr, int *__restrict__ __prioceiling) throw()
# 856 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 859 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_setprioceiling(pthread_mutexattr_t * __attr, int __prioceiling) throw()
# 861 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 865 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_getrobust(const pthread_mutexattr_t * __attr, int * __robustness) throw()
# 867 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 869 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_getrobust_np(const pthread_mutexattr_t * __attr, int * __robustness) throw()
# 871 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 875 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_setrobust(pthread_mutexattr_t * __attr, int __robustness) throw()
# 877 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 879 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_setrobust_np(pthread_mutexattr_t * __attr, int __robustness) throw()
# 881 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 891 "/usr/include/pthread.h" 3
extern int pthread_rwlock_init(pthread_rwlock_t *__restrict__ __rwlock, const pthread_rwlockattr_t *__restrict__ __attr) throw()
# 893 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 896 "/usr/include/pthread.h" 3
extern int pthread_rwlock_destroy(pthread_rwlock_t * __rwlock) throw()
# 897 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 900 "/usr/include/pthread.h" 3
extern int pthread_rwlock_rdlock(pthread_rwlock_t * __rwlock) throw()
# 901 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 904 "/usr/include/pthread.h" 3
extern int pthread_rwlock_tryrdlock(pthread_rwlock_t * __rwlock) throw()
# 905 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 909 "/usr/include/pthread.h" 3
extern int pthread_rwlock_timedrdlock(pthread_rwlock_t *__restrict__ __rwlock, const timespec *__restrict__ __abstime) throw()
# 911 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 915 "/usr/include/pthread.h" 3
extern int pthread_rwlock_wrlock(pthread_rwlock_t * __rwlock) throw()
# 916 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 919 "/usr/include/pthread.h" 3
extern int pthread_rwlock_trywrlock(pthread_rwlock_t * __rwlock) throw()
# 920 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 924 "/usr/include/pthread.h" 3
extern int pthread_rwlock_timedwrlock(pthread_rwlock_t *__restrict__ __rwlock, const timespec *__restrict__ __abstime) throw()
# 926 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 930 "/usr/include/pthread.h" 3
extern int pthread_rwlock_unlock(pthread_rwlock_t * __rwlock) throw()
# 931 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 937 "/usr/include/pthread.h" 3
extern int pthread_rwlockattr_init(pthread_rwlockattr_t * __attr) throw()
# 938 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 941 "/usr/include/pthread.h" 3
extern int pthread_rwlockattr_destroy(pthread_rwlockattr_t * __attr) throw()
# 942 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 945 "/usr/include/pthread.h" 3
extern int pthread_rwlockattr_getpshared(const pthread_rwlockattr_t *__restrict__ __attr, int *__restrict__ __pshared) throw()
# 948 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 951 "/usr/include/pthread.h" 3
extern int pthread_rwlockattr_setpshared(pthread_rwlockattr_t * __attr, int __pshared) throw()
# 953 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 956 "/usr/include/pthread.h" 3
extern int pthread_rwlockattr_getkind_np(const pthread_rwlockattr_t *__restrict__ __attr, int *__restrict__ __pref) throw()
# 959 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 962 "/usr/include/pthread.h" 3
extern int pthread_rwlockattr_setkind_np(pthread_rwlockattr_t * __attr, int __pref) throw()
# 963 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 971 "/usr/include/pthread.h" 3
extern int pthread_cond_init(pthread_cond_t *__restrict__ __cond, const pthread_condattr_t *__restrict__ __cond_attr) throw()
# 973 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 976 "/usr/include/pthread.h" 3
extern int pthread_cond_destroy(pthread_cond_t * __cond) throw()
# 977 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 980 "/usr/include/pthread.h" 3
extern int pthread_cond_signal(pthread_cond_t * __cond) throw()
# 981 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 984 "/usr/include/pthread.h" 3
extern int pthread_cond_broadcast(pthread_cond_t * __cond) throw()
# 985 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 992 "/usr/include/pthread.h" 3
extern int pthread_cond_wait(pthread_cond_t *__restrict__ __cond, pthread_mutex_t *__restrict__ __mutex)
# 994 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 1003 "/usr/include/pthread.h" 3
extern int pthread_cond_timedwait(pthread_cond_t *__restrict__ __cond, pthread_mutex_t *__restrict__ __mutex, const timespec *__restrict__ __abstime)
# 1006 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2, 3)));
# 1011 "/usr/include/pthread.h" 3
extern int pthread_condattr_init(pthread_condattr_t * __attr) throw()
# 1012 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1015 "/usr/include/pthread.h" 3
extern int pthread_condattr_destroy(pthread_condattr_t * __attr) throw()
# 1016 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1019 "/usr/include/pthread.h" 3
extern int pthread_condattr_getpshared(const pthread_condattr_t *__restrict__ __attr, int *__restrict__ __pshared) throw()
# 1022 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 1025 "/usr/include/pthread.h" 3
extern int pthread_condattr_setpshared(pthread_condattr_t * __attr, int __pshared) throw()
# 1026 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1030 "/usr/include/pthread.h" 3
extern int pthread_condattr_getclock(const pthread_condattr_t *__restrict__ __attr, __clockid_t *__restrict__ __clock_id) throw()
# 1033 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 1036 "/usr/include/pthread.h" 3
extern int pthread_condattr_setclock(pthread_condattr_t * __attr, __clockid_t __clock_id) throw()
# 1038 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1047 "/usr/include/pthread.h" 3
extern int pthread_spin_init(pthread_spinlock_t * __lock, int __pshared) throw()
# 1048 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1051 "/usr/include/pthread.h" 3
extern int pthread_spin_destroy(pthread_spinlock_t * __lock) throw()
# 1052 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1055 "/usr/include/pthread.h" 3
extern int pthread_spin_lock(pthread_spinlock_t * __lock) throw()
# 1056 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1059 "/usr/include/pthread.h" 3
extern int pthread_spin_trylock(pthread_spinlock_t * __lock) throw()
# 1060 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1063 "/usr/include/pthread.h" 3
extern int pthread_spin_unlock(pthread_spinlock_t * __lock) throw()
# 1064 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1071 "/usr/include/pthread.h" 3
extern int pthread_barrier_init(pthread_barrier_t *__restrict__ __barrier, const pthread_barrierattr_t *__restrict__ __attr, unsigned __count) throw()
# 1074 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1077 "/usr/include/pthread.h" 3
extern int pthread_barrier_destroy(pthread_barrier_t * __barrier) throw()
# 1078 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1081 "/usr/include/pthread.h" 3
extern int pthread_barrier_wait(pthread_barrier_t * __barrier) throw()
# 1082 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1086 "/usr/include/pthread.h" 3
extern int pthread_barrierattr_init(pthread_barrierattr_t * __attr) throw()
# 1087 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1090 "/usr/include/pthread.h" 3
extern int pthread_barrierattr_destroy(pthread_barrierattr_t * __attr) throw()
# 1091 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1094 "/usr/include/pthread.h" 3
extern int pthread_barrierattr_getpshared(const pthread_barrierattr_t *__restrict__ __attr, int *__restrict__ __pshared) throw()
# 1097 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 1100 "/usr/include/pthread.h" 3
extern int pthread_barrierattr_setpshared(pthread_barrierattr_t * __attr, int __pshared) throw()
# 1102 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1114 "/usr/include/pthread.h" 3
extern int pthread_key_create(pthread_key_t * __key, void (* __destr_function)(void *)) throw()
# 1116 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1119 "/usr/include/pthread.h" 3
extern int pthread_key_delete(pthread_key_t __key) throw();
# 1122 "/usr/include/pthread.h" 3
extern void *pthread_getspecific(pthread_key_t __key) throw();
# 1125 "/usr/include/pthread.h" 3
extern int pthread_setspecific(pthread_key_t __key, const void * __pointer) throw();
# 1131 "/usr/include/pthread.h" 3
extern int pthread_getcpuclockid(pthread_t __thread_id, __clockid_t * __clock_id) throw()
# 1133 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(2)));
# 1148 "/usr/include/pthread.h" 3
extern int pthread_atfork(void (* __prepare)(void), void (* __parent)(void), void (* __child)(void)) throw();
# 1162 "/usr/include/pthread.h" 3
}
# 47 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
typedef pthread_t __gthread_t;
# 48 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
typedef pthread_key_t __gthread_key_t;
# 49 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
typedef pthread_once_t __gthread_once_t;
# 50 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
typedef pthread_mutex_t __gthread_mutex_t;
# 51 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
typedef pthread_mutex_t __gthread_recursive_mutex_t;
# 52 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
typedef pthread_cond_t __gthread_cond_t;
# 53 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
typedef timespec __gthread_time_t;
# 101 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static __typeof__(pthread_once) __gthrw_pthread_once __attribute((__weakref__("pthread_once")));
# 102 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static __typeof__(pthread_getspecific) __gthrw_pthread_getspecific __attribute((__weakref__("pthread_getspecific")));
# 103 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static __typeof__(pthread_setspecific) __gthrw_pthread_setspecific __attribute((__weakref__("pthread_setspecific")));
# 105 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static __typeof__(pthread_create) __gthrw_pthread_create __attribute((__weakref__("pthread_create")));
# 106 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static __typeof__(pthread_join) __gthrw_pthread_join __attribute((__weakref__("pthread_join")));
# 107 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static __typeof__(pthread_equal) __gthrw_pthread_equal __attribute((__weakref__("pthread_equal")));
# 108 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static __typeof__(pthread_self) __gthrw_pthread_self __attribute((__weakref__("pthread_self")));
# 109 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static __typeof__(pthread_detach) __gthrw_pthread_detach __attribute((__weakref__("pthread_detach")));
# 111 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static __typeof__(pthread_cancel) __gthrw_pthread_cancel __attribute((__weakref__("pthread_cancel")));
# 113 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static __typeof__(sched_yield) __gthrw_sched_yield __attribute((__weakref__("sched_yield")));
# 115 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static __typeof__(pthread_mutex_lock) __gthrw_pthread_mutex_lock __attribute((__weakref__("pthread_mutex_lock")));
# 116 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static __typeof__(pthread_mutex_trylock) __gthrw_pthread_mutex_trylock __attribute((__weakref__("pthread_mutex_trylock")));
# 118 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static __typeof__(pthread_mutex_timedlock) __gthrw_pthread_mutex_timedlock __attribute((__weakref__("pthread_mutex_timedlock")));
# 120 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static __typeof__(pthread_mutex_unlock) __gthrw_pthread_mutex_unlock __attribute((__weakref__("pthread_mutex_unlock")));
# 121 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static __typeof__(pthread_mutex_init) __gthrw_pthread_mutex_init __attribute((__weakref__("pthread_mutex_init")));
# 122 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static __typeof__(pthread_mutex_destroy) __gthrw_pthread_mutex_destroy __attribute((__weakref__("pthread_mutex_destroy")));
# 124 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static __typeof__(pthread_cond_init) __gthrw_pthread_cond_init __attribute((__weakref__("pthread_cond_init")));
# 125 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static __typeof__(pthread_cond_broadcast) __gthrw_pthread_cond_broadcast __attribute((__weakref__("pthread_cond_broadcast")));
# 126 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static __typeof__(pthread_cond_signal) __gthrw_pthread_cond_signal __attribute((__weakref__("pthread_cond_signal")));
# 127 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static __typeof__(pthread_cond_wait) __gthrw_pthread_cond_wait __attribute((__weakref__("pthread_cond_wait")));
# 128 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static __typeof__(pthread_cond_timedwait) __gthrw_pthread_cond_timedwait __attribute((__weakref__("pthread_cond_timedwait")));
# 129 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static __typeof__(pthread_cond_destroy) __gthrw_pthread_cond_destroy __attribute((__weakref__("pthread_cond_destroy")));
# 131 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static __typeof__(pthread_key_create) __gthrw_pthread_key_create __attribute((__weakref__("pthread_key_create")));
# 132 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static __typeof__(pthread_key_delete) __gthrw_pthread_key_delete __attribute((__weakref__("pthread_key_delete")));
# 133 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static __typeof__(pthread_mutexattr_init) __gthrw_pthread_mutexattr_init __attribute((__weakref__("pthread_mutexattr_init")));
# 134 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static __typeof__(pthread_mutexattr_settype) __gthrw_pthread_mutexattr_settype __attribute((__weakref__("pthread_mutexattr_settype")));
# 135 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static __typeof__(pthread_mutexattr_destroy) __gthrw_pthread_mutexattr_destroy __attribute((__weakref__("pthread_mutexattr_destroy")));
# 236 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static __typeof__(pthread_key_create) __gthrw___pthread_key_create __attribute((__weakref__("__pthread_key_create")));
# 247 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static inline int __gthread_active_p()
# 248 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
{
# 249 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static void *const __gthread_active_ptr = __extension__ ((void *)(&__gthrw___pthread_key_create));
# 251 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
return __gthread_active_ptr != (0);
# 252 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
}
# 659 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static inline int __gthread_create(__gthread_t *__threadid, void *(*__func)(void *), void *
# 660 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
__args)
# 661 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
{
# 662 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
return __gthrw_pthread_create(__threadid, __null, __func, __args);
# 663 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
}
# 666 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static inline int __gthread_join(__gthread_t __threadid, void **__value_ptr)
# 667 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
{
# 668 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
return __gthrw_pthread_join(__threadid, __value_ptr);
# 669 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
}
# 672 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static inline int __gthread_detach(__gthread_t __threadid)
# 673 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
{
# 674 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
return __gthrw_pthread_detach(__threadid);
# 675 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
}
# 678 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static inline int __gthread_equal(__gthread_t __t1, __gthread_t __t2)
# 679 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
{
# 680 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
return __gthrw_pthread_equal(__t1, __t2);
# 681 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
}
# 684 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static inline __gthread_t __gthread_self()
# 685 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
{
# 686 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
return __gthrw_pthread_self();
# 687 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
}
# 690 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static inline int __gthread_yield()
# 691 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
{
# 692 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
return __gthrw_sched_yield();
# 693 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
}
# 696 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static inline int __gthread_once(__gthread_once_t *__once, void (*__func)(void))
# 697 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
{
# 698 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 699 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
return __gthrw_pthread_once(__once, __func); } else {
# 701 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
return -1; }
# 702 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
}
# 705 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static inline int __gthread_key_create(__gthread_key_t *__key, void (*__dtor)(void *))
# 706 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
{
# 707 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
return __gthrw_pthread_key_create(__key, __dtor);
# 708 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
}
# 711 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static inline int __gthread_key_delete(__gthread_key_t __key)
# 712 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
{
# 713 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
return __gthrw_pthread_key_delete(__key);
# 714 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
}
# 717 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static inline void *__gthread_getspecific(__gthread_key_t __key)
# 718 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
{
# 719 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
return __gthrw_pthread_getspecific(__key);
# 720 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
}
# 723 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static inline int __gthread_setspecific(__gthread_key_t __key, const void *__ptr)
# 724 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
{
# 725 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
return __gthrw_pthread_setspecific(__key, __ptr);
# 726 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
}
# 729 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static inline void __gthread_mutex_init_function(__gthread_mutex_t *__mutex)
# 730 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
{
# 731 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 732 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
__gthrw_pthread_mutex_init(__mutex, __null); }
# 733 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
}
# 736 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static inline int __gthread_mutex_destroy(__gthread_mutex_t *__mutex)
# 737 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
{
# 738 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 739 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
return __gthrw_pthread_mutex_destroy(__mutex); } else {
# 741 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
return 0; }
# 742 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
}
# 745 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static inline int __gthread_mutex_lock(__gthread_mutex_t *__mutex)
# 746 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
{
# 747 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 748 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
return __gthrw_pthread_mutex_lock(__mutex); } else {
# 750 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
return 0; }
# 751 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
}
# 754 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static inline int __gthread_mutex_trylock(__gthread_mutex_t *__mutex)
# 755 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
{
# 756 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 757 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
return __gthrw_pthread_mutex_trylock(__mutex); } else {
# 759 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
return 0; }
# 760 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
}
# 764 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static inline int __gthread_mutex_timedlock(__gthread_mutex_t *__mutex, const __gthread_time_t *
# 765 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
__abs_timeout)
# 766 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
{
# 767 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 768 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
return __gthrw_pthread_mutex_timedlock(__mutex, __abs_timeout); } else {
# 770 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
return 0; }
# 771 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
}
# 775 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static inline int __gthread_mutex_unlock(__gthread_mutex_t *__mutex)
# 776 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
{
# 777 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 778 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
return __gthrw_pthread_mutex_unlock(__mutex); } else {
# 780 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
return 0; }
# 781 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
}
# 808 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static inline int __gthread_recursive_mutex_lock(__gthread_recursive_mutex_t *__mutex)
# 809 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
{
# 810 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
return __gthread_mutex_lock(__mutex);
# 811 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
}
# 814 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static inline int __gthread_recursive_mutex_trylock(__gthread_recursive_mutex_t *__mutex)
# 815 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
{
# 816 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
return __gthread_mutex_trylock(__mutex);
# 817 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
}
# 821 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static inline int __gthread_recursive_mutex_timedlock(__gthread_recursive_mutex_t *__mutex, const __gthread_time_t *
# 822 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
__abs_timeout)
# 823 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
{
# 824 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
return __gthread_mutex_timedlock(__mutex, __abs_timeout);
# 825 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
}
# 829 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static inline int __gthread_recursive_mutex_unlock(__gthread_recursive_mutex_t *__mutex)
# 830 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
{
# 831 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
return __gthread_mutex_unlock(__mutex);
# 832 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
}
# 835 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static inline int __gthread_recursive_mutex_destroy(__gthread_recursive_mutex_t *__mutex)
# 836 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
{
# 837 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
return __gthread_mutex_destroy(__mutex);
# 838 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
}
# 850 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static inline int __gthread_cond_broadcast(__gthread_cond_t *__cond)
# 851 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
{
# 852 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
return __gthrw_pthread_cond_broadcast(__cond);
# 853 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
}
# 856 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static inline int __gthread_cond_signal(__gthread_cond_t *__cond)
# 857 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
{
# 858 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
return __gthrw_pthread_cond_signal(__cond);
# 859 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
}
# 862 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static inline int __gthread_cond_wait(__gthread_cond_t *__cond, __gthread_mutex_t *__mutex)
# 863 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
{
# 864 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
return __gthrw_pthread_cond_wait(__cond, __mutex);
# 865 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
}
# 868 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static inline int __gthread_cond_timedwait(__gthread_cond_t *__cond, __gthread_mutex_t *__mutex, const __gthread_time_t *
# 869 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
__abs_timeout)
# 870 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
{
# 871 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
return __gthrw_pthread_cond_timedwait(__cond, __mutex, __abs_timeout);
# 872 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
}
# 875 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static inline int __gthread_cond_wait_recursive(__gthread_cond_t *__cond, __gthread_recursive_mutex_t *
# 876 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
__mutex)
# 877 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
{
# 878 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
return __gthread_cond_wait(__cond, __mutex);
# 879 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
}
# 882 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
static inline int __gthread_cond_destroy(__gthread_cond_t *__cond)
# 883 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
{
# 884 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
return __gthrw_pthread_cond_destroy(__cond);
# 885 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr-default.h" 3
}
# 151 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/gthr.h" 3
#pragma GCC visibility pop
# 32 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/atomic_word.h" 3
typedef int _Atomic_word;
# 38 "/usr/include/c++/4.8.2/ext/atomicity.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 48 "/usr/include/c++/4.8.2/ext/atomicity.h" 3
static inline _Atomic_word __exchange_and_add(volatile _Atomic_word *__mem, int __val)
# 49 "/usr/include/c++/4.8.2/ext/atomicity.h" 3
{ return __atomic_fetch_add(__mem, __val, 4); }
# 52 "/usr/include/c++/4.8.2/ext/atomicity.h" 3
static inline void __atomic_add(volatile _Atomic_word *__mem, int __val)
# 53 "/usr/include/c++/4.8.2/ext/atomicity.h" 3
{ __atomic_fetch_add(__mem, __val, 4); }
# 65 "/usr/include/c++/4.8.2/ext/atomicity.h" 3
static inline _Atomic_word __exchange_and_add_single(_Atomic_word *__mem, int __val)
# 66 "/usr/include/c++/4.8.2/ext/atomicity.h" 3
{
# 67 "/usr/include/c++/4.8.2/ext/atomicity.h" 3
_Atomic_word __result = *__mem;
# 68 "/usr/include/c++/4.8.2/ext/atomicity.h" 3
(*__mem) += __val;
# 69 "/usr/include/c++/4.8.2/ext/atomicity.h" 3
return __result;
# 70 "/usr/include/c++/4.8.2/ext/atomicity.h" 3
}
# 73 "/usr/include/c++/4.8.2/ext/atomicity.h" 3
static inline void __atomic_add_single(_Atomic_word *__mem, int __val)
# 74 "/usr/include/c++/4.8.2/ext/atomicity.h" 3
{ (*__mem) += __val; }
# 77 "/usr/include/c++/4.8.2/ext/atomicity.h" 3
__attribute((__unused__)) static inline _Atomic_word
# 78 "/usr/include/c++/4.8.2/ext/atomicity.h" 3
__exchange_and_add_dispatch(_Atomic_word *__mem, int __val)
# 79 "/usr/include/c++/4.8.2/ext/atomicity.h" 3
{
# 81 "/usr/include/c++/4.8.2/ext/atomicity.h" 3
if (__gthread_active_p()) {
# 82 "/usr/include/c++/4.8.2/ext/atomicity.h" 3
return __exchange_and_add(__mem, __val); } else {
# 84 "/usr/include/c++/4.8.2/ext/atomicity.h" 3
return __exchange_and_add_single(__mem, __val); }
# 88 "/usr/include/c++/4.8.2/ext/atomicity.h" 3
}
# 91 "/usr/include/c++/4.8.2/ext/atomicity.h" 3
__attribute((__unused__)) static inline void
# 92 "/usr/include/c++/4.8.2/ext/atomicity.h" 3
__atomic_add_dispatch(_Atomic_word *__mem, int __val)
# 93 "/usr/include/c++/4.8.2/ext/atomicity.h" 3
{
# 95 "/usr/include/c++/4.8.2/ext/atomicity.h" 3
if (__gthread_active_p()) {
# 96 "/usr/include/c++/4.8.2/ext/atomicity.h" 3
__atomic_add(__mem, __val); } else {
# 98 "/usr/include/c++/4.8.2/ext/atomicity.h" 3
__atomic_add_single(__mem, __val); }
# 102 "/usr/include/c++/4.8.2/ext/atomicity.h" 3
}
# 105 "/usr/include/c++/4.8.2/ext/atomicity.h" 3
}
# 36 "/usr/include/c++/4.8.2/bits/cxxabi_forced.h" 3
#pragma GCC visibility push ( default )
# 39 "/usr/include/c++/4.8.2/bits/cxxabi_forced.h" 3
namespace __cxxabiv1 {
# 48 "/usr/include/c++/4.8.2/bits/cxxabi_forced.h" 3
class __forced_unwind {
# 50 "/usr/include/c++/4.8.2/bits/cxxabi_forced.h" 3
virtual ~__forced_unwind() throw();
# 53 "/usr/include/c++/4.8.2/bits/cxxabi_forced.h" 3
virtual void __pure_dummy() = 0;
# 54 "/usr/include/c++/4.8.2/bits/cxxabi_forced.h" 3
};
# 55 "/usr/include/c++/4.8.2/bits/cxxabi_forced.h" 3
}
# 58 "/usr/include/c++/4.8.2/bits/cxxabi_forced.h" 3
#pragma GCC visibility pop
# 38 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
namespace std __attribute((__visibility__("default"))) {
# 42 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
template< class _CharT, class _Traits> inline void
# 44 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
__ostream_write(basic_ostream< _CharT, _Traits> &__out, const _CharT *
# 45 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
__s, streamsize __n)
# 46 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
{
# 47 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
typedef basic_ostream< _CharT, _Traits> __ostream_type;
# 48 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
typedef typename basic_ostream< _CharT, _Traits> ::ios_base __ios_base;
# 50 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
const streamsize __put = ((__out.rdbuf())->sputn(__s, __n));
# 51 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
if (__put != __n) {
# 52 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
(__out.setstate(__ios_base::badbit)); }
# 53 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
}
# 55 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
template< class _CharT, class _Traits> inline void
# 57 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
__ostream_fill(basic_ostream< _CharT, _Traits> &__out, streamsize __n)
# 58 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
{
# 59 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
typedef basic_ostream< _CharT, _Traits> __ostream_type;
# 60 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
typedef typename basic_ostream< _CharT, _Traits> ::ios_base __ios_base;
# 62 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
const _CharT __c = (__out.fill());
# 63 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
for (; __n > (0); --__n)
# 64 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
{
# 65 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
const typename _Traits::int_type __put = ((__out.rdbuf())->sputc(__c));
# 66 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
if (_Traits::eq_int_type(__put, _Traits::eof()))
# 67 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
{
# 68 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
(__out.setstate(__ios_base::badbit));
# 69 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
break;
# 70 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
}
# 71 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
}
# 72 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
}
# 74 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
template< class _CharT, class _Traits> basic_ostream< _CharT, _Traits> &
# 76 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
__ostream_insert(basic_ostream< _CharT, _Traits> &__out, const _CharT *
# 77 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
__s, streamsize __n)
# 78 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
{
# 79 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
typedef basic_ostream< _CharT, _Traits> __ostream_type;
# 80 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
typedef typename basic_ostream< _CharT, _Traits> ::ios_base __ios_base;
# 82 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
typename basic_ostream< _CharT, _Traits> ::sentry __cerb(__out);
# 83 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
if (__cerb)
# 84 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
{
# 85 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
try
# 86 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
{
# 87 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
const streamsize __w = (__out.width());
# 88 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
if (__w > __n)
# 89 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
{
# 90 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
const bool __left = ((__out.flags()) & __ios_base::adjustfield) == __ios_base::left;
# 93 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
if (!__left) {
# 94 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
__ostream_fill(__out, __w - __n); }
# 95 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
if ((__out.good())) {
# 96 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
__ostream_write(__out, __s, __n); }
# 97 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
if (__left && (__out.good())) {
# 98 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
__ostream_fill(__out, __w - __n); }
# 99 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
} else {
# 101 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
__ostream_write(__out, __s, __n); }
# 102 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
(__out.width(0));
# 103 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
}
# 104 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
catch (__cxxabiv1::__forced_unwind &)
# 105 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
{
# 106 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
(__out._M_setstate(__ios_base::badbit));
# 107 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
throw;
# 108 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
}
# 109 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
catch (...)
# 110 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
{ (__out._M_setstate(__ios_base::badbit)); }
# 111 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
}
# 112 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
return __out;
# 113 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
}
# 118 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
extern template basic_ostream< char> &__ostream_insert(basic_ostream< char> & __out, const char * __s, streamsize __n);
# 121 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
extern template basic_ostream< wchar_t> &__ostream_insert(basic_ostream< wchar_t> & __out, const wchar_t * __s, streamsize __n);
# 127 "/usr/include/c++/4.8.2/bits/ostream_insert.h" 3
}
# 59 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
namespace std __attribute((__visibility__("default"))) {
# 100 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Arg, class _Result>
# 101 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
struct unary_function {
# 104 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
typedef _Arg argument_type;
# 107 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
typedef _Result result_type;
# 108 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
};
# 113 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Arg1, class _Arg2, class _Result>
# 114 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
struct binary_function {
# 117 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
typedef _Arg1 first_argument_type;
# 120 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
typedef _Arg2 second_argument_type;
# 123 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
typedef _Result result_type;
# 124 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
};
# 139 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Tp>
# 140 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
struct plus : public binary_function< _Tp, _Tp, _Tp> {
# 143 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
_Tp operator()(const _Tp &__x, const _Tp &__y) const
# 144 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return __x + __y; }
# 145 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
};
# 148 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Tp>
# 149 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
struct minus : public binary_function< _Tp, _Tp, _Tp> {
# 152 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
_Tp operator()(const _Tp &__x, const _Tp &__y) const
# 153 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return __x - __y; }
# 154 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
};
# 157 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Tp>
# 158 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
struct multiplies : public binary_function< _Tp, _Tp, _Tp> {
# 161 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
_Tp operator()(const _Tp &__x, const _Tp &__y) const
# 162 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return __x * __y; }
# 163 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
};
# 166 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Tp>
# 167 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
struct divides : public binary_function< _Tp, _Tp, _Tp> {
# 170 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
_Tp operator()(const _Tp &__x, const _Tp &__y) const
# 171 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return __x / __y; }
# 172 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
};
# 175 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Tp>
# 176 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
struct modulus : public binary_function< _Tp, _Tp, _Tp> {
# 179 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
_Tp operator()(const _Tp &__x, const _Tp &__y) const
# 180 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return __x % __y; }
# 181 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
};
# 184 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Tp>
# 185 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
struct negate : public unary_function< _Tp, _Tp> {
# 188 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
_Tp operator()(const _Tp &__x) const
# 189 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return -__x; }
# 190 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
};
# 203 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Tp>
# 204 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
struct equal_to : public binary_function< _Tp, _Tp, bool> {
# 207 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
bool operator()(const _Tp &__x, const _Tp &__y) const
# 208 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return __x == __y; }
# 209 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
};
# 212 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Tp>
# 213 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
struct not_equal_to : public binary_function< _Tp, _Tp, bool> {
# 216 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
bool operator()(const _Tp &__x, const _Tp &__y) const
# 217 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return __x != __y; }
# 218 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
};
# 221 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Tp>
# 222 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
struct greater : public binary_function< _Tp, _Tp, bool> {
# 225 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
bool operator()(const _Tp &__x, const _Tp &__y) const
# 226 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return __x > __y; }
# 227 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
};
# 230 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Tp>
# 231 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
struct less : public binary_function< _Tp, _Tp, bool> {
# 234 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
bool operator()(const _Tp &__x, const _Tp &__y) const
# 235 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return __x < __y; }
# 236 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
};
# 239 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Tp>
# 240 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
struct greater_equal : public binary_function< _Tp, _Tp, bool> {
# 243 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
bool operator()(const _Tp &__x, const _Tp &__y) const
# 244 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return __x >= __y; }
# 245 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
};
# 248 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Tp>
# 249 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
struct less_equal : public binary_function< _Tp, _Tp, bool> {
# 252 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
bool operator()(const _Tp &__x, const _Tp &__y) const
# 253 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return __x <= __y; }
# 254 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
};
# 267 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Tp>
# 268 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
struct logical_and : public binary_function< _Tp, _Tp, bool> {
# 271 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
bool operator()(const _Tp &__x, const _Tp &__y) const
# 272 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return __x && __y; }
# 273 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
};
# 276 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Tp>
# 277 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
struct logical_or : public binary_function< _Tp, _Tp, bool> {
# 280 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
bool operator()(const _Tp &__x, const _Tp &__y) const
# 281 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return __x || __y; }
# 282 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
};
# 285 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Tp>
# 286 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
struct logical_not : public unary_function< _Tp, bool> {
# 289 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
bool operator()(const _Tp &__x) const
# 290 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return !__x; }
# 291 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
};
# 296 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Tp>
# 297 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
struct bit_and : public binary_function< _Tp, _Tp, _Tp> {
# 300 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
_Tp operator()(const _Tp &__x, const _Tp &__y) const
# 301 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return __x & __y; }
# 302 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
};
# 304 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Tp>
# 305 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
struct bit_or : public binary_function< _Tp, _Tp, _Tp> {
# 308 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
_Tp operator()(const _Tp &__x, const _Tp &__y) const
# 309 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return __x | __y; }
# 310 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
};
# 312 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Tp>
# 313 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
struct bit_xor : public binary_function< _Tp, _Tp, _Tp> {
# 316 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
_Tp operator()(const _Tp &__x, const _Tp &__y) const
# 317 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return __x ^ __y; }
# 318 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
};
# 350 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Predicate>
# 351 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
class unary_negate : public unary_function< typename _Predicate::argument_type, bool> {
# 355 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
protected: _Predicate _M_pred;
# 359 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
public: explicit unary_negate(const _Predicate &__x) : _M_pred(__x) { }
# 362 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
bool operator()(const typename _Predicate::argument_type &__x) const
# 363 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return !(_M_pred)(__x); }
# 364 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
};
# 367 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Predicate> inline unary_negate< _Predicate>
# 369 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
not1(const _Predicate &__pred)
# 370 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return ((unary_negate< _Predicate> )(__pred)); }
# 373 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Predicate>
# 374 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
class binary_negate : public binary_function< typename _Predicate::first_argument_type, typename _Predicate::second_argument_type, bool> {
# 379 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
protected: _Predicate _M_pred;
# 383 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
public: explicit binary_negate(const _Predicate &__x) : _M_pred(__x) { }
# 386 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
bool operator()(const typename _Predicate::first_argument_type &__x, const typename _Predicate::second_argument_type &
# 387 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
__y) const
# 388 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return !(_M_pred)(__x, __y); }
# 389 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
};
# 392 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Predicate> inline binary_negate< _Predicate>
# 394 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
not2(const _Predicate &__pred)
# 395 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return ((binary_negate< _Predicate> )(__pred)); }
# 421 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Arg, class _Result>
# 422 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
class pointer_to_unary_function : public unary_function< _Arg, _Result> {
# 425 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
protected: _Result (*_M_ptr)(_Arg);
# 428 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
public: pointer_to_unary_function() { }
# 431 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
explicit pointer_to_unary_function(_Result (*__x)(_Arg)) : _M_ptr(__x)
# 432 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ }
# 435 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
_Result operator()(_Arg __x) const
# 436 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return (_M_ptr)(__x); }
# 437 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
};
# 440 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Arg, class _Result> inline pointer_to_unary_function< _Arg, _Result>
# 442 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
ptr_fun(_Result (*__x)(_Arg))
# 443 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return ((pointer_to_unary_function< _Arg, _Result> )(__x)); }
# 446 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Arg1, class _Arg2, class _Result>
# 447 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
class pointer_to_binary_function : public binary_function< _Arg1, _Arg2, _Result> {
# 451 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
protected: _Result (*_M_ptr)(_Arg1, _Arg2);
# 454 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
public: pointer_to_binary_function() { }
# 457 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
explicit pointer_to_binary_function(_Result (*__x)(_Arg1, _Arg2)) : _M_ptr(__x)
# 458 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ }
# 461 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
_Result operator()(_Arg1 __x, _Arg2 __y) const
# 462 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return (_M_ptr)(__x, __y); }
# 463 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
};
# 466 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Arg1, class _Arg2, class _Result> inline pointer_to_binary_function< _Arg1, _Arg2, _Result>
# 468 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
ptr_fun(_Result (*__x)(_Arg1, _Arg2))
# 469 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return ((pointer_to_binary_function< _Arg1, _Arg2, _Result> )(__x)); }
# 472 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Tp>
# 473 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
struct _Identity : public unary_function< _Tp, _Tp> {
# 477 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
_Tp &operator()(_Tp &__x) const
# 478 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return __x; }
# 481 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
const _Tp &operator()(const _Tp &__x) const
# 482 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return __x; }
# 483 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
};
# 485 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Pair>
# 486 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
struct _Select1st : public unary_function< _Pair, typename _Pair::first_type> {
# 490 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
typename _Pair::first_type &operator()(_Pair &__x) const
# 491 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return __x.first; }
# 494 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
const typename _Pair::first_type &operator()(const _Pair &__x) const
# 495 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return __x.first; }
# 508 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
};
# 510 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Pair>
# 511 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
struct _Select2nd : public unary_function< _Pair, typename _Pair::second_type> {
# 515 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
typename _Pair::second_type &operator()(_Pair &__x) const
# 516 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return __x.second; }
# 519 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
const typename _Pair::second_type &operator()(const _Pair &__x) const
# 520 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return __x.second; }
# 521 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
};
# 541 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Ret, class _Tp>
# 542 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
class mem_fun_t : public unary_function< _Tp *, _Ret> {
# 546 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
public: explicit mem_fun_t(_Ret (_Tp::*__pf)(void)) : _M_f(__pf)
# 547 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ }
# 550 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
_Ret operator()(_Tp *__p) const
# 551 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return (__p->*(_M_f))(); }
# 554 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
private: _Ret (_Tp::*_M_f)(void);
# 555 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
};
# 559 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Ret, class _Tp>
# 560 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
class const_mem_fun_t : public unary_function< const _Tp *, _Ret> {
# 564 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
public: explicit const_mem_fun_t(_Ret (_Tp::*__pf)(void) const) : _M_f(__pf)
# 565 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ }
# 568 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
_Ret operator()(const _Tp *__p) const
# 569 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return (__p->*(_M_f))(); }
# 572 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
private: _Ret (_Tp::*_M_f)(void) const;
# 573 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
};
# 577 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Ret, class _Tp>
# 578 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
class mem_fun_ref_t : public unary_function< _Tp, _Ret> {
# 582 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
public: explicit mem_fun_ref_t(_Ret (_Tp::*__pf)(void)) : _M_f(__pf)
# 583 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ }
# 586 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
_Ret operator()(_Tp &__r) const
# 587 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return (__r.*(_M_f))(); }
# 590 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
private: _Ret (_Tp::*_M_f)(void);
# 591 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
};
# 595 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Ret, class _Tp>
# 596 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
class const_mem_fun_ref_t : public unary_function< _Tp, _Ret> {
# 600 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
public: explicit const_mem_fun_ref_t(_Ret (_Tp::*__pf)(void) const) : _M_f(__pf)
# 601 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ }
# 604 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
_Ret operator()(const _Tp &__r) const
# 605 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return (__r.*(_M_f))(); }
# 608 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
private: _Ret (_Tp::*_M_f)(void) const;
# 609 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
};
# 613 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Ret, class _Tp, class _Arg>
# 614 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
class mem_fun1_t : public binary_function< _Tp *, _Arg, _Ret> {
# 618 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
public: explicit mem_fun1_t(_Ret (_Tp::*__pf)(_Arg)) : _M_f(__pf)
# 619 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ }
# 622 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
_Ret operator()(_Tp *__p, _Arg __x) const
# 623 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return (__p->*(_M_f))(__x); }
# 626 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
private: _Ret (_Tp::*_M_f)(_Arg);
# 627 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
};
# 631 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Ret, class _Tp, class _Arg>
# 632 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
class const_mem_fun1_t : public binary_function< const _Tp *, _Arg, _Ret> {
# 636 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
public: explicit const_mem_fun1_t(_Ret (_Tp::*__pf)(_Arg) const) : _M_f(__pf)
# 637 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ }
# 640 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
_Ret operator()(const _Tp *__p, _Arg __x) const
# 641 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return (__p->*(_M_f))(__x); }
# 644 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
private: _Ret (_Tp::*_M_f)(_Arg) const;
# 645 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
};
# 649 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Ret, class _Tp, class _Arg>
# 650 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
class mem_fun1_ref_t : public binary_function< _Tp, _Arg, _Ret> {
# 654 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
public: explicit mem_fun1_ref_t(_Ret (_Tp::*__pf)(_Arg)) : _M_f(__pf)
# 655 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ }
# 658 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
_Ret operator()(_Tp &__r, _Arg __x) const
# 659 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return (__r.*(_M_f))(__x); }
# 662 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
private: _Ret (_Tp::*_M_f)(_Arg);
# 663 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
};
# 667 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Ret, class _Tp, class _Arg>
# 668 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
class const_mem_fun1_ref_t : public binary_function< _Tp, _Arg, _Ret> {
# 672 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
public: explicit const_mem_fun1_ref_t(_Ret (_Tp::*__pf)(_Arg) const) : _M_f(__pf)
# 673 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ }
# 676 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
_Ret operator()(const _Tp &__r, _Arg __x) const
# 677 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return (__r.*(_M_f))(__x); }
# 680 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
private: _Ret (_Tp::*_M_f)(_Arg) const;
# 681 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
};
# 685 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Ret, class _Tp> inline mem_fun_t< _Ret, _Tp>
# 687 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
mem_fun(_Ret (_Tp::*__f)(void))
# 688 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return ((mem_fun_t< _Ret, _Tp> )(__f)); }
# 690 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Ret, class _Tp> inline const_mem_fun_t< _Ret, _Tp>
# 692 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
mem_fun(_Ret (_Tp::*__f)(void) const)
# 693 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return ((const_mem_fun_t< _Ret, _Tp> )(__f)); }
# 695 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Ret, class _Tp> inline mem_fun_ref_t< _Ret, _Tp>
# 697 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
mem_fun_ref(_Ret (_Tp::*__f)(void))
# 698 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return ((mem_fun_ref_t< _Ret, _Tp> )(__f)); }
# 700 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Ret, class _Tp> inline const_mem_fun_ref_t< _Ret, _Tp>
# 702 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
mem_fun_ref(_Ret (_Tp::*__f)(void) const)
# 703 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return ((const_mem_fun_ref_t< _Ret, _Tp> )(__f)); }
# 705 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Ret, class _Tp, class _Arg> inline mem_fun1_t< _Ret, _Tp, _Arg>
# 707 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
mem_fun(_Ret (_Tp::*__f)(_Arg))
# 708 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return ((mem_fun1_t< _Ret, _Tp, _Arg> )(__f)); }
# 710 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Ret, class _Tp, class _Arg> inline const_mem_fun1_t< _Ret, _Tp, _Arg>
# 712 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
mem_fun(_Ret (_Tp::*__f)(_Arg) const)
# 713 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return ((const_mem_fun1_t< _Ret, _Tp, _Arg> )(__f)); }
# 715 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Ret, class _Tp, class _Arg> inline mem_fun1_ref_t< _Ret, _Tp, _Arg>
# 717 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
mem_fun_ref(_Ret (_Tp::*__f)(_Arg))
# 718 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return ((mem_fun1_ref_t< _Ret, _Tp, _Arg> )(__f)); }
# 720 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
template< class _Ret, class _Tp, class _Arg> inline const_mem_fun1_ref_t< _Ret, _Tp, _Arg>
# 722 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
mem_fun_ref(_Ret (_Tp::*__f)(_Arg) const)
# 723 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
{ return ((const_mem_fun1_ref_t< _Ret, _Tp, _Arg> )(__f)); }
# 728 "/usr/include/c++/4.8.2/bits/stl_function.h" 3
}
# 59 "/usr/include/c++/4.8.2/backward/binders.h" 3
namespace std __attribute((__visibility__("default"))) {
# 103 "/usr/include/c++/4.8.2/backward/binders.h" 3
template< class _Operation>
# 104 "/usr/include/c++/4.8.2/backward/binders.h" 3
class binder1st : public unary_function< typename _Operation::second_argument_type, typename _Operation::result_type> {
# 109 "/usr/include/c++/4.8.2/backward/binders.h" 3
protected: _Operation op;
# 110 "/usr/include/c++/4.8.2/backward/binders.h" 3
typename _Operation::first_argument_type value;
# 113 "/usr/include/c++/4.8.2/backward/binders.h" 3
public: binder1st(const _Operation &__x, const typename _Operation::first_argument_type &
# 114 "/usr/include/c++/4.8.2/backward/binders.h" 3
__y) : op(__x), value(__y)
# 115 "/usr/include/c++/4.8.2/backward/binders.h" 3
{ }
# 118 "/usr/include/c++/4.8.2/backward/binders.h" 3
typename _Operation::result_type operator()(const typename _Operation::second_argument_type &__x) const
# 119 "/usr/include/c++/4.8.2/backward/binders.h" 3
{ return (op)(value, __x); }
# 124 "/usr/include/c++/4.8.2/backward/binders.h" 3
typename _Operation::result_type operator()(typename _Operation::second_argument_type &__x) const
# 125 "/usr/include/c++/4.8.2/backward/binders.h" 3
{ return (op)(value, __x); }
# 126 "/usr/include/c++/4.8.2/backward/binders.h" 3
};
# 129 "/usr/include/c++/4.8.2/backward/binders.h" 3
template< class _Operation, class _Tp> inline binder1st< _Operation>
# 131 "/usr/include/c++/4.8.2/backward/binders.h" 3
bind1st(const _Operation &__fn, const _Tp &__x)
# 132 "/usr/include/c++/4.8.2/backward/binders.h" 3
{
# 133 "/usr/include/c++/4.8.2/backward/binders.h" 3
typedef typename _Operation::first_argument_type _Arg1_type;
# 134 "/usr/include/c++/4.8.2/backward/binders.h" 3
return binder1st< _Operation> (__fn, (_Arg1_type)__x);
# 135 "/usr/include/c++/4.8.2/backward/binders.h" 3
}
# 138 "/usr/include/c++/4.8.2/backward/binders.h" 3
template< class _Operation>
# 139 "/usr/include/c++/4.8.2/backward/binders.h" 3
class binder2nd : public unary_function< typename _Operation::first_argument_type, typename _Operation::result_type> {
# 144 "/usr/include/c++/4.8.2/backward/binders.h" 3
protected: _Operation op;
# 145 "/usr/include/c++/4.8.2/backward/binders.h" 3
typename _Operation::second_argument_type value;
# 148 "/usr/include/c++/4.8.2/backward/binders.h" 3
public: binder2nd(const _Operation &__x, const typename _Operation::second_argument_type &
# 149 "/usr/include/c++/4.8.2/backward/binders.h" 3
__y) : op(__x), value(__y)
# 150 "/usr/include/c++/4.8.2/backward/binders.h" 3
{ }
# 153 "/usr/include/c++/4.8.2/backward/binders.h" 3
typename _Operation::result_type operator()(const typename _Operation::first_argument_type &__x) const
# 154 "/usr/include/c++/4.8.2/backward/binders.h" 3
{ return (op)(__x, value); }
# 159 "/usr/include/c++/4.8.2/backward/binders.h" 3
typename _Operation::result_type operator()(typename _Operation::first_argument_type &__x) const
# 160 "/usr/include/c++/4.8.2/backward/binders.h" 3
{ return (op)(__x, value); }
# 161 "/usr/include/c++/4.8.2/backward/binders.h" 3
};
# 164 "/usr/include/c++/4.8.2/backward/binders.h" 3
template< class _Operation, class _Tp> inline binder2nd< _Operation>
# 166 "/usr/include/c++/4.8.2/backward/binders.h" 3
bind2nd(const _Operation &__fn, const _Tp &__x)
# 167 "/usr/include/c++/4.8.2/backward/binders.h" 3
{
# 168 "/usr/include/c++/4.8.2/backward/binders.h" 3
typedef typename _Operation::second_argument_type _Arg2_type;
# 169 "/usr/include/c++/4.8.2/backward/binders.h" 3
return binder2nd< _Operation> (__fn, (_Arg2_type)__x);
# 170 "/usr/include/c++/4.8.2/backward/binders.h" 3
}
# 174 "/usr/include/c++/4.8.2/backward/binders.h" 3
}
# 45 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
namespace std __attribute((__visibility__("default"))) {
# 111 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc>
# 112 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
class basic_string {
# 114 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
typedef typename _Alloc::template rebind< _CharT> ::other _CharT_alloc_type;
# 118 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
public: typedef _Traits traits_type;
# 119 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
typedef typename _Traits::char_type value_type;
# 120 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
typedef _Alloc allocator_type;
# 121 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
typedef typename _Alloc::template rebind< _CharT> ::other::size_type size_type;
# 122 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
typedef typename _Alloc::template rebind< _CharT> ::other::difference_type difference_type;
# 123 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
typedef typename _Alloc::template rebind< _CharT> ::other::reference reference;
# 124 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
typedef typename _Alloc::template rebind< _CharT> ::other::const_reference const_reference;
# 125 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
typedef typename _Alloc::template rebind< _CharT> ::other::pointer pointer;
# 126 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
typedef typename _Alloc::template rebind< _CharT> ::other::const_pointer const_pointer;
# 127 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
typedef __gnu_cxx::__normal_iterator< typename _Alloc::template rebind< _CharT> ::other::pointer, basic_string> iterator;
# 129 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
typedef __gnu_cxx::__normal_iterator< typename _Alloc::template rebind< _CharT> ::other::const_pointer, basic_string> const_iterator;
# 130 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
typedef std::reverse_iterator< __gnu_cxx::__normal_iterator< typename _Alloc::template rebind< _CharT> ::other::const_pointer, basic_string> > const_reverse_iterator;
# 131 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
typedef std::reverse_iterator< __gnu_cxx::__normal_iterator< typename _Alloc::template rebind< _CharT> ::other::pointer, basic_string> > reverse_iterator;
# 148 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
private: struct _Rep_base {
# 150 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
size_type _M_length;
# 151 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
size_type _M_capacity;
# 152 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
_Atomic_word _M_refcount;
# 153 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
};
# 155 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
struct _Rep : public _Rep_base {
# 158 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
typedef typename _Alloc::template rebind< char> ::other _Raw_bytes_alloc;
# 173 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
static const typename std::basic_string< _CharT, _Traits, _Alloc> ::size_type _S_max_size;
# 174 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
static const _CharT _S_terminal;
# 178 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
static typename std::basic_string< _CharT, _Traits, _Alloc> ::size_type _S_empty_rep_storage[];
# 181 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
static _Rep &_S_empty_rep()
# 182 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 186 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
void *__p = (reinterpret_cast< void *>(&_S_empty_rep_storage));
# 187 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return *(reinterpret_cast< _Rep *>(__p));
# 188 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 191 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
bool _M_is_leaked() const
# 192 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return (this->_M_refcount) < 0; }
# 195 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
bool _M_is_shared() const
# 196 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return (this->_M_refcount) > 0; }
# 199 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
void _M_set_leaked()
# 200 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ (this->_M_refcount) = (-1); }
# 203 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
void _M_set_sharable()
# 204 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ (this->_M_refcount) = 0; }
# 207 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
void _M_set_length_and_sharable(typename std::basic_string< _CharT, _Traits, _Alloc> ::size_type __n)
# 208 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 210 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
if (__builtin_expect(this != (&(_S_empty_rep)()), false))
# 212 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 213 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
this->_M_set_sharable();
# 214 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
(this->_M_length) = __n;
# 215 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
traits_type::assign(this->_M_refdata()[__n], _S_terminal);
# 218 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 219 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 222 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
_CharT *_M_refdata() throw()
# 223 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return reinterpret_cast< _CharT *>(this + 1); }
# 226 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
_CharT *_M_grab(const _Alloc &__alloc1, const _Alloc &__alloc2)
# 227 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 228 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return ((!_M_is_leaked()) && (__alloc1 == __alloc2)) ? _M_refcopy() : _M_clone(__alloc1);
# 230 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 234 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
static _Rep *_S_create(typename std::basic_string< _CharT, _Traits, _Alloc> ::size_type, typename std::basic_string< _CharT, _Traits, _Alloc> ::size_type, const _Alloc &);
# 237 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
void _M_dispose(const _Alloc &__a)
# 238 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 240 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
if (__builtin_expect(this != (&(_S_empty_rep)()), false))
# 242 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 244 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
;
# 245 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
if (__gnu_cxx::__exchange_and_add_dispatch(&(this->_M_refcount), -1) <= 0)
# 247 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 248 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
;
# 249 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
_M_destroy(__a);
# 250 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 251 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 252 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 255 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
void _M_destroy(const _Alloc &) throw();
# 258 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
_CharT *_M_refcopy() throw()
# 259 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 261 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
if (__builtin_expect(this != (&(_S_empty_rep)()), false)) {
# 263 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
__gnu_cxx::__atomic_add_dispatch(&(this->_M_refcount), 1); }
# 264 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return _M_refdata();
# 265 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 268 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
_CharT *_M_clone(const _Alloc &, typename std::basic_string< _CharT, _Traits, _Alloc> ::size_type __res = 0);
# 269 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
};
# 272 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
struct _Alloc_hider : public _Alloc {
# 274 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
_Alloc_hider(_CharT *__dat, const _Alloc &__a) : _Alloc(__a), _M_p(__dat)
# 275 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ }
# 277 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
_CharT *_M_p;
# 278 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
};
# 285 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
public: static const size_type npos = (static_cast< size_type>(-1));
# 289 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
private: mutable _Alloc_hider _M_dataplus;
# 292 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
_CharT *_M_data() const
# 293 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return (_M_dataplus)._M_p; }
# 296 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
_CharT *_M_data(_CharT *__p)
# 297 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return ((_M_dataplus)._M_p) = __p; }
# 300 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
_Rep *_M_rep() const
# 301 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return &((reinterpret_cast< _Rep *>(_M_data()))[-1]); }
# 306 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
iterator _M_ibegin() const
# 307 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return ((__gnu_cxx::__normal_iterator< typename _Alloc::template rebind< _CharT> ::other::pointer, basic_string> )(_M_data())); }
# 310 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
iterator _M_iend() const
# 311 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return ((__gnu_cxx::__normal_iterator< typename _Alloc::template rebind< _CharT> ::other::pointer, basic_string> )(_M_data() + this->size())); }
# 314 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
void _M_leak()
# 315 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 316 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
if (!(_M_rep()->_M_is_leaked())) {
# 317 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
_M_leak_hard(); }
# 318 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 321 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
size_type _M_check(size_type __pos, const char *__s) const
# 322 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 323 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
if (__pos > this->size()) {
# 324 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
__throw_out_of_range(__s); }
# 325 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return __pos;
# 326 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 329 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
void _M_check_length(size_type __n1, size_type __n2, const char *__s) const
# 330 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 331 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
if ((this->max_size() - (this->size() - __n1)) < __n2) {
# 332 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
__throw_length_error(__s); }
# 333 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 337 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
size_type _M_limit(size_type __pos, size_type __off) const
# 338 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 339 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
const bool __testoff = __off < (this->size() - __pos);
# 340 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return __testoff ? __off : (this->size() - __pos);
# 341 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 345 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
bool _M_disjunct(const _CharT *__s) const
# 346 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 347 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return less< const _CharT *> ()(__s, _M_data()) || less< const _CharT *> ()(_M_data() + this->size(), __s);
# 349 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 354 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
static void _M_copy(_CharT *__d, const _CharT *__s, size_type __n)
# 355 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 356 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
if (__n == 1) {
# 357 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
traits_type::assign(*__d, *__s); } else {
# 359 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
traits_type::copy(__d, __s, __n); }
# 360 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 363 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
static void _M_move(_CharT *__d, const _CharT *__s, size_type __n)
# 364 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 365 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
if (__n == 1) {
# 366 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
traits_type::assign(*__d, *__s); } else {
# 368 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
traits_type::move(__d, __s, __n); }
# 369 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 372 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
static void _M_assign(_CharT *__d, size_type __n, _CharT __c)
# 373 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 374 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
if (__n == 1) {
# 375 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
traits_type::assign(*__d, __c); } else {
# 377 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
traits_type::assign(__d, __n, __c); }
# 378 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 382 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _Iterator> static void
# 384 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
_S_copy_chars(_CharT *__p, _Iterator __k1, _Iterator __k2)
# 385 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 386 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
for (; __k1 != __k2; (++__k1), (++__p)) {
# 387 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
traits_type::assign(*__p, *__k1); }
# 388 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 391 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
static void _S_copy_chars(_CharT *__p, iterator __k1, iterator __k2)
# 392 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ _S_copy_chars(__p, (__k1.base()), (__k2.base())); }
# 395 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
static void _S_copy_chars(_CharT *__p, const_iterator __k1, const_iterator __k2)
# 396 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ _S_copy_chars(__p, (__k1.base()), (__k2.base())); }
# 399 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
static void _S_copy_chars(_CharT *__p, _CharT *__k1, _CharT *__k2)
# 400 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ (_M_copy)(__p, __k1, __k2 - __k1); }
# 403 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
static void _S_copy_chars(_CharT *__p, const _CharT *__k1, const _CharT *__k2)
# 404 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ (_M_copy)(__p, __k1, __k2 - __k1); }
# 407 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
static int _S_compare(size_type __n1, size_type __n2)
# 408 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 409 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
const difference_type __d = (difference_type)(__n1 - __n2);
# 411 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
if (__d > __gnu_cxx::__numeric_traits< int> ::__max) {
# 412 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return __gnu_cxx::__numeric_traits_integer< int> ::__max; } else {
# 413 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
if (__d < __gnu_cxx::__numeric_traits< int> ::__min) {
# 414 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return __gnu_cxx::__numeric_traits_integer< int> ::__min; } else {
# 416 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return (int)__d; } }
# 417 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 420 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
# 423 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
void _M_leak_hard();
# 426 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
static _Rep &_S_empty_rep()
# 427 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return _Rep::_S_empty_rep(); }
# 437 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
public: basic_string() : _M_dataplus(((_S_empty_rep)()._M_refdata()), _Alloc())
# 439 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ }
# 448 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
explicit basic_string(const _Alloc & __a);
# 455 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string(const basic_string & __str);
# 462 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string(const basic_string & __str, size_type __pos, size_type __n = npos);
# 471 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string(const basic_string & __str, size_type __pos, size_type __n, const _Alloc & __a);
# 483 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string(const _CharT * __s, size_type __n, const _Alloc & __a = _Alloc());
# 490 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string(const _CharT * __s, const _Alloc & __a = _Alloc());
# 497 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string(size_type __n, _CharT __c, const _Alloc & __a = _Alloc());
# 531 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const _Alloc & __a = _Alloc());
# 538 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
~basic_string()
# 539 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ (_M_rep()->_M_dispose(this->get_allocator())); }
# 546 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string &operator=(const basic_string &__str)
# 547 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return (this->assign(__str)); }
# 554 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string &operator=(const _CharT *__s)
# 555 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return (this->assign(__s)); }
# 565 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string &operator=(_CharT __c)
# 566 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 567 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
(this->assign(1, __c));
# 568 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return *this;
# 569 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 605 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
iterator begin()
# 606 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 607 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
_M_leak();
# 608 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return ((__gnu_cxx::__normal_iterator< typename _Alloc::template rebind< _CharT> ::other::pointer, basic_string> )(_M_data()));
# 609 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 616 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
const_iterator begin() const
# 617 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return ((__gnu_cxx::__normal_iterator< typename _Alloc::template rebind< _CharT> ::other::const_pointer, basic_string> )(_M_data())); }
# 624 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
iterator end()
# 625 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 626 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
_M_leak();
# 627 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return ((__gnu_cxx::__normal_iterator< typename _Alloc::template rebind< _CharT> ::other::pointer, basic_string> )(_M_data() + this->size()));
# 628 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 635 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
const_iterator end() const
# 636 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return ((__gnu_cxx::__normal_iterator< typename _Alloc::template rebind< _CharT> ::other::const_pointer, basic_string> )(_M_data() + this->size())); }
# 644 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
reverse_iterator rbegin()
# 645 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return ((std::reverse_iterator< __gnu_cxx::__normal_iterator< typename _Alloc::template rebind< _CharT> ::other::pointer, basic_string> > )(this->end())); }
# 653 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
const_reverse_iterator rbegin() const
# 654 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return ((std::reverse_iterator< __gnu_cxx::__normal_iterator< typename _Alloc::template rebind< _CharT> ::other::const_pointer, basic_string> > )(this->end())); }
# 662 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
reverse_iterator rend()
# 663 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return ((std::reverse_iterator< __gnu_cxx::__normal_iterator< typename _Alloc::template rebind< _CharT> ::other::pointer, basic_string> > )(this->begin())); }
# 671 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
const_reverse_iterator rend() const
# 672 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return ((std::reverse_iterator< __gnu_cxx::__normal_iterator< typename _Alloc::template rebind< _CharT> ::other::const_pointer, basic_string> > )(this->begin())); }
# 715 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
size_type size() const
# 716 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return _M_rep()->_M_length; }
# 721 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
size_type length() const
# 722 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return _M_rep()->_M_length; }
# 726 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
size_type max_size() const
# 727 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return _Rep::_S_max_size; }
# 740 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
void resize(size_type __n, _CharT __c);
# 753 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
void resize(size_type __n)
# 754 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ (this->resize(__n, _CharT())); }
# 776 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
size_type capacity() const
# 777 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return _M_rep()->_M_capacity; }
# 797 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
void reserve(size_type __res_arg = 0);
# 803 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
void clear()
# 804 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ _M_mutate(0, this->size(), 0); }
# 811 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
bool empty() const
# 812 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return this->size() == 0; }
# 826 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
const_reference operator[](size_type __pos) const
# 827 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 828 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
;
# 829 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return _M_data()[__pos];
# 830 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 843 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
reference operator[](size_type __pos)
# 844 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 846 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
;
# 848 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
;
# 849 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
_M_leak();
# 850 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return _M_data()[__pos];
# 851 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 864 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
const_reference at(size_type __n) const
# 865 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 866 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
if (__n >= this->size()) {
# 867 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
__throw_out_of_range("basic_string::at"); }
# 868 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return _M_data()[__n];
# 869 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 883 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
reference at(size_type __n)
# 884 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 885 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
if (__n >= size()) {
# 886 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
__throw_out_of_range("basic_string::at"); }
# 887 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
_M_leak();
# 888 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return _M_data()[__n];
# 889 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 932 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string &operator+=(const basic_string &__str)
# 933 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return (this->append(__str)); }
# 941 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string &operator+=(const _CharT *__s)
# 942 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return (this->append(__s)); }
# 950 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string &operator+=(_CharT __c)
# 951 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 952 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
this->push_back(__c);
# 953 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return *this;
# 954 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 973 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string &append(const basic_string & __str);
# 989 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string &append(const basic_string & __str, size_type __pos, size_type __n);
# 998 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string &append(const _CharT * __s, size_type __n);
# 1006 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string &append(const _CharT *__s)
# 1007 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 1008 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
;
# 1009 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return (this->append(__s, traits_type::length(__s)));
# 1010 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 1021 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string &append(size_type __n, _CharT __c);
# 1042 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _InputIterator> basic_string &
# 1044 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
append(_InputIterator __first, _InputIterator __last)
# 1045 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return (this->replace(_M_iend(), _M_iend(), __first, __last)); }
# 1052 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
void push_back(_CharT __c)
# 1053 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 1054 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
const size_type __len = 1 + this->size();
# 1055 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
if ((__len > this->capacity()) || (_M_rep()->_M_is_shared())) {
# 1056 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
this->reserve(__len); }
# 1057 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
traits_type::assign(_M_data()[this->size()], __c);
# 1058 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
(_M_rep()->_M_set_length_and_sharable(__len));
# 1059 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 1067 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string &assign(const basic_string & __str);
# 1100 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string &assign(const basic_string &__str, size_type __pos, size_type __n)
# 1101 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return (this->assign((__str._M_data()) + (__str._M_check(__pos, "basic_string::assign")), (__str._M_limit(__pos, __n))));
# 1103 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 1116 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string &assign(const _CharT * __s, size_type __n);
# 1128 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string &assign(const _CharT *__s)
# 1129 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 1130 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
;
# 1131 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return (this->assign(__s, traits_type::length(__s)));
# 1132 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 1144 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string &assign(size_type __n, _CharT __c)
# 1145 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return _M_replace_aux((size_type)0, this->size(), __n, __c); }
# 1155 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _InputIterator> basic_string &
# 1157 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
assign(_InputIterator __first, _InputIterator __last)
# 1158 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return (this->replace(_M_ibegin(), _M_iend(), __first, __last)); }
# 1185 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
void insert(iterator __p, size_type __n, _CharT __c)
# 1186 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ (this->replace(__p, __p, __n, __c)); }
# 1200 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _InputIterator> void
# 1202 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
insert(iterator __p, _InputIterator __beg, _InputIterator __end)
# 1203 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ (this->replace(__p, __p, __beg, __end)); }
# 1233 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string &insert(size_type __pos1, const basic_string &__str)
# 1234 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return (this->insert(__pos1, __str, (size_type)0, (__str.size()))); }
# 1255 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string &insert(size_type __pos1, const basic_string &__str, size_type
# 1256 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
__pos2, size_type __n)
# 1257 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return (this->insert(__pos1, (__str._M_data()) + (__str._M_check(__pos2, "basic_string::insert")), (__str._M_limit(__pos2, __n))));
# 1259 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 1278 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string &insert(size_type __pos, const _CharT * __s, size_type __n);
# 1296 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string &insert(size_type __pos, const _CharT *__s)
# 1297 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 1298 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
;
# 1299 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return (this->insert(__pos, __s, traits_type::length(__s)));
# 1300 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 1319 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string &insert(size_type __pos, size_type __n, _CharT __c)
# 1320 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return _M_replace_aux(_M_check(__pos, "basic_string::insert"), (size_type)0, __n, __c);
# 1321 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 1337 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
iterator insert(iterator __p, _CharT __c)
# 1338 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 1339 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
;
# 1340 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
const size_type __pos = __p - _M_ibegin();
# 1341 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
_M_replace_aux(__pos, (size_type)0, (size_type)1, __c);
# 1342 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
(_M_rep()->_M_set_leaked());
# 1343 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return ((__gnu_cxx::__normal_iterator< typename _Alloc::template rebind< _CharT> ::other::pointer, basic_string> )(_M_data() + __pos));
# 1344 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 1362 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string &erase(size_type __pos = 0, size_type __n = npos)
# 1363 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 1364 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
_M_mutate(_M_check(__pos, "basic_string::erase"), _M_limit(__pos, __n), (size_type)0);
# 1366 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return *this;
# 1367 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 1378 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
iterator erase(iterator __position)
# 1379 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 1381 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
;
# 1382 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
const size_type __pos = __position - _M_ibegin();
# 1383 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
_M_mutate(__pos, (size_type)1, (size_type)0);
# 1384 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
(_M_rep()->_M_set_leaked());
# 1385 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return ((__gnu_cxx::__normal_iterator< typename _Alloc::template rebind< _CharT> ::other::pointer, basic_string> )(_M_data() + __pos));
# 1386 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 1398 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
iterator erase(iterator __first, iterator __last);
# 1429 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string &replace(size_type __pos, size_type __n, const basic_string &__str)
# 1430 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return (this->replace(__pos, __n, (__str._M_data()), (__str.size()))); }
# 1451 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string &replace(size_type __pos1, size_type __n1, const basic_string &__str, size_type
# 1452 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
__pos2, size_type __n2)
# 1453 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return (this->replace(__pos1, __n1, (__str._M_data()) + (__str._M_check(__pos2, "basic_string::replace")), (__str._M_limit(__pos2, __n2))));
# 1455 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 1476 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string &replace(size_type __pos, size_type __n1, const _CharT * __s, size_type __n2);
# 1496 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string &replace(size_type __pos, size_type __n1, const _CharT *__s)
# 1497 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 1498 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
;
# 1499 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return (this->replace(__pos, __n1, __s, traits_type::length(__s)));
# 1500 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 1520 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string &replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
# 1521 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return _M_replace_aux(_M_check(__pos, "basic_string::replace"), _M_limit(__pos, __n1), __n2, __c);
# 1522 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 1538 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string &replace(iterator __i1, iterator __i2, const basic_string &__str)
# 1539 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return (this->replace(__i1, __i2, (__str._M_data()), (__str.size()))); }
# 1557 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string &replace(iterator __i1, iterator __i2, const _CharT *__s, size_type __n)
# 1558 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 1560 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
;
# 1561 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return (this->replace(__i1 - _M_ibegin(), __i2 - __i1, __s, __n));
# 1562 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 1578 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string &replace(iterator __i1, iterator __i2, const _CharT *__s)
# 1579 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 1580 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
;
# 1581 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return (this->replace(__i1, __i2, __s, traits_type::length(__s)));
# 1582 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 1599 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string &replace(iterator __i1, iterator __i2, size_type __n, _CharT __c)
# 1600 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 1602 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
;
# 1603 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __c);
# 1604 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 1621 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _InputIterator> basic_string &
# 1623 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
replace(iterator __i1, iterator __i2, _InputIterator
# 1624 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
__k1, _InputIterator __k2)
# 1625 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 1627 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
;
# 1628 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
;
# 1629 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
typedef typename __is_integer< _InputIterator> ::__type _Integral;
# 1630 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
# 1631 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 1636 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string &replace(iterator __i1, iterator __i2, _CharT *__k1, _CharT *__k2)
# 1637 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 1639 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
;
# 1640 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
;
# 1641 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return (this->replace(__i1 - _M_ibegin(), __i2 - __i1, __k1, __k2 - __k1));
# 1643 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 1646 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string &replace(iterator __i1, iterator __i2, const _CharT *
# 1647 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
__k1, const _CharT *__k2)
# 1648 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 1650 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
;
# 1651 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
;
# 1652 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return (this->replace(__i1 - _M_ibegin(), __i2 - __i1, __k1, __k2 - __k1));
# 1654 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 1657 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2)
# 1658 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 1660 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
;
# 1661 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
;
# 1662 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return (this->replace(__i1 - _M_ibegin(), __i2 - __i1, (__k1.base()), __k2 - __k1));
# 1664 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 1667 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string &replace(iterator __i1, iterator __i2, const_iterator
# 1668 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
__k1, const_iterator __k2)
# 1669 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 1671 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
;
# 1672 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
;
# 1673 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return (this->replace(__i1 - _M_ibegin(), __i2 - __i1, (__k1.base()), __k2 - __k1));
# 1675 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 1700 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
private:
# 1698 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _Integer> basic_string &
# 1700 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer
# 1701 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
__val, __true_type)
# 1702 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __val); }
# 1704 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _InputIterator> basic_string &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, __false_type);
# 1710 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, _CharT __c);
# 1714 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string &_M_replace_safe(size_type __pos1, size_type __n1, const _CharT * __s, size_type __n2);
# 1719 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _InIterator> static _CharT *
# 1721 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
_S_construct_aux(_InIterator __beg, _InIterator __end, const _Alloc &
# 1722 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
__a, __false_type)
# 1723 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 1724 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
typedef typename iterator_traits< _InIterator> ::iterator_category _Tag;
# 1725 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return _S_construct(__beg, __end, __a, _Tag());
# 1726 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 1730 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _Integer> static _CharT *
# 1732 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
_S_construct_aux(_Integer __beg, _Integer __end, const _Alloc &
# 1733 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
__a, __true_type)
# 1734 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return (_S_construct_aux_2)(static_cast< size_type>(__beg), __end, __a);
# 1735 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 1738 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
static _CharT *_S_construct_aux_2(size_type __req, _CharT __c, const _Alloc &__a)
# 1739 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return _S_construct(__req, __c, __a); }
# 1741 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _InIterator> static _CharT *
# 1743 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
_S_construct(_InIterator __beg, _InIterator __end, const _Alloc &__a)
# 1744 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 1745 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
typedef typename __is_integer< _InIterator> ::__type _Integral;
# 1746 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return _S_construct_aux(__beg, __end, __a, _Integral());
# 1747 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 1750 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _InIterator> static _CharT *_S_construct(_InIterator __beg, _InIterator __end, const _Alloc & __a, input_iterator_tag);
# 1757 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _FwdIterator> static _CharT *_S_construct(_FwdIterator __beg, _FwdIterator __end, const _Alloc & __a, forward_iterator_tag);
# 1763 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
static _CharT *_S_construct(size_type __req, _CharT __c, const _Alloc & __a);
# 1780 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
public: size_type copy(_CharT * __s, size_type __n, size_type __pos = 0) const;
# 1790 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
void swap(basic_string & __s);
# 1800 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
const _CharT *c_str() const
# 1801 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return _M_data(); }
# 1810 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
const _CharT *data() const
# 1811 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return _M_data(); }
# 1817 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
allocator_type get_allocator() const
# 1818 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return _M_dataplus; }
# 1833 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
size_type find(const _CharT * __s, size_type __pos, size_type __n) const;
# 1846 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
size_type find(const basic_string &__str, size_type __pos = 0) const
# 1848 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return (this->find((__str.data()), __pos, (__str.size()))); }
# 1861 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
size_type find(const _CharT *__s, size_type __pos = 0) const
# 1862 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 1863 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
;
# 1864 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return (this->find(__s, __pos, traits_type::length(__s)));
# 1865 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 1878 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
size_type find(_CharT __c, size_type __pos = 0) const;
# 1891 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
size_type rfind(const basic_string &__str, size_type __pos = npos) const
# 1893 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return (this->rfind((__str.data()), __pos, (__str.size()))); }
# 1908 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
size_type rfind(const _CharT * __s, size_type __pos, size_type __n) const;
# 1921 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
size_type rfind(const _CharT *__s, size_type __pos = npos) const
# 1922 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 1923 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
;
# 1924 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return (this->rfind(__s, __pos, traits_type::length(__s)));
# 1925 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 1938 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
size_type rfind(_CharT __c, size_type __pos = npos) const;
# 1952 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
size_type find_first_of(const basic_string &__str, size_type __pos = 0) const
# 1954 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return (this->find_first_of((__str.data()), __pos, (__str.size()))); }
# 1969 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
size_type find_first_of(const _CharT * __s, size_type __pos, size_type __n) const;
# 1982 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
size_type find_first_of(const _CharT *__s, size_type __pos = 0) const
# 1983 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 1984 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
;
# 1985 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return (this->find_first_of(__s, __pos, traits_type::length(__s)));
# 1986 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 2001 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
size_type find_first_of(_CharT __c, size_type __pos = 0) const
# 2002 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return (this->find(__c, __pos)); }
# 2016 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
size_type find_last_of(const basic_string &__str, size_type __pos = npos) const
# 2018 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return (this->find_last_of((__str.data()), __pos, (__str.size()))); }
# 2033 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
size_type find_last_of(const _CharT * __s, size_type __pos, size_type __n) const;
# 2046 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
size_type find_last_of(const _CharT *__s, size_type __pos = npos) const
# 2047 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 2048 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
;
# 2049 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return (this->find_last_of(__s, __pos, traits_type::length(__s)));
# 2050 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 2065 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
size_type find_last_of(_CharT __c, size_type __pos = npos) const
# 2066 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return (this->rfind(__c, __pos)); }
# 2079 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
size_type find_first_not_of(const basic_string &__str, size_type __pos = 0) const
# 2081 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return (this->find_first_not_of((__str.data()), __pos, (__str.size()))); }
# 2096 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
size_type find_first_not_of(const _CharT * __s, size_type __pos, size_type __n) const;
# 2110 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
size_type find_first_not_of(const _CharT *__s, size_type __pos = 0) const
# 2111 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 2112 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
;
# 2113 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return (this->find_first_not_of(__s, __pos, traits_type::length(__s)));
# 2114 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 2127 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
size_type find_first_not_of(_CharT __c, size_type __pos = 0) const;
# 2142 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
size_type find_last_not_of(const basic_string &__str, size_type __pos = npos) const
# 2144 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return (this->find_last_not_of((__str.data()), __pos, (__str.size()))); }
# 2159 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
size_type find_last_not_of(const _CharT * __s, size_type __pos, size_type __n) const;
# 2173 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
size_type find_last_not_of(const _CharT *__s, size_type __pos = npos) const
# 2174 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 2175 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
;
# 2176 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return (this->find_last_not_of(__s, __pos, traits_type::length(__s)));
# 2177 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 2190 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
size_type find_last_not_of(_CharT __c, size_type __pos = npos) const;
# 2206 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string substr(size_type __pos = 0, size_type __n = npos) const
# 2207 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return basic_string(*this, _M_check(__pos, "basic_string::substr"), __n);
# 2208 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 2225 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
int compare(const basic_string &__str) const
# 2226 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 2227 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
const size_type __size = this->size();
# 2228 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
const size_type __osize = (__str.size());
# 2229 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
const size_type __len = std::min(__size, __osize);
# 2231 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
int __r = traits_type::compare(_M_data(), (__str.data()), __len);
# 2232 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
if (!__r) {
# 2233 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
__r = (_S_compare)(__size, __osize); }
# 2234 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return __r;
# 2235 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 2257 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
int compare(size_type __pos, size_type __n, const basic_string & __str) const;
# 2283 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
int compare(size_type __pos1, size_type __n1, const basic_string & __str, size_type __pos2, size_type __n2) const;
# 2301 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
int compare(const _CharT * __s) const;
# 2325 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
int compare(size_type __pos, size_type __n1, const _CharT * __s) const;
# 2352 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
int compare(size_type __pos, size_type __n1, const _CharT * __s, size_type __n2) const;
# 2354 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
};
# 2363 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> basic_string< _CharT, _Traits, _Alloc>
# 2365 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
operator+(const basic_string< _CharT, _Traits, _Alloc> &__lhs, const basic_string< _CharT, _Traits, _Alloc> &
# 2366 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
__rhs)
# 2367 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 2368 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string< _CharT, _Traits, _Alloc> __str(__lhs);
# 2369 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
(__str.append(__rhs));
# 2370 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return __str;
# 2371 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 2379 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> basic_string< _CharT, _Traits, _Alloc> operator+(const _CharT * __lhs, const basic_string< _CharT, _Traits, _Alloc> & __rhs);
# 2390 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> basic_string< _CharT, _Traits, _Alloc> operator+(_CharT __lhs, const basic_string< _CharT, _Traits, _Alloc> & __rhs);
# 2400 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline basic_string< _CharT, _Traits, _Alloc>
# 2402 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
operator+(const basic_string< _CharT, _Traits, _Alloc> &__lhs, const _CharT *
# 2403 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
__rhs)
# 2404 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 2405 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
basic_string< _CharT, _Traits, _Alloc> __str(__lhs);
# 2406 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
(__str.append(__rhs));
# 2407 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return __str;
# 2408 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 2416 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline basic_string< _CharT, _Traits, _Alloc>
# 2418 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
operator+(const basic_string< _CharT, _Traits, _Alloc> &__lhs, _CharT __rhs)
# 2419 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 2420 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
typedef basic_string< _CharT, _Traits, _Alloc> __string_type;
# 2421 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
typedef typename basic_string< _CharT, _Traits, _Alloc> ::size_type __size_type;
# 2422 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
__string_type __str(__lhs);
# 2423 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
(__str.append((__size_type)1, __rhs));
# 2424 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return __str;
# 2425 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 2484 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 2486 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
operator==(const basic_string< _CharT, _Traits, _Alloc> &__lhs, const basic_string< _CharT, _Traits, _Alloc> &
# 2487 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
__rhs)
# 2488 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return (__lhs.compare(__rhs)) == 0; }
# 2490 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _CharT> inline typename __gnu_cxx::__enable_if< __is_char< _CharT> ::__value, bool> ::__type
# 2493 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
operator==(const basic_string< _CharT, char_traits< _CharT> , allocator< _CharT> > &__lhs, const basic_string< _CharT, char_traits< _CharT> , allocator< _CharT> > &
# 2494 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
__rhs)
# 2495 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return ((__lhs.size()) == (__rhs.size())) && (!std::char_traits< _CharT> ::compare((__lhs.data()), (__rhs.data()), (__lhs.size())));
# 2497 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 2505 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 2507 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
operator==(const _CharT *__lhs, const basic_string< _CharT, _Traits, _Alloc> &
# 2508 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
__rhs)
# 2509 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return (__rhs.compare(__lhs)) == 0; }
# 2517 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 2519 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
operator==(const basic_string< _CharT, _Traits, _Alloc> &__lhs, const _CharT *
# 2520 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
__rhs)
# 2521 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return (__lhs.compare(__rhs)) == 0; }
# 2530 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 2532 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
operator!=(const basic_string< _CharT, _Traits, _Alloc> &__lhs, const basic_string< _CharT, _Traits, _Alloc> &
# 2533 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
__rhs)
# 2534 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return !(__lhs == __rhs); }
# 2542 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 2544 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
operator!=(const _CharT *__lhs, const basic_string< _CharT, _Traits, _Alloc> &
# 2545 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
__rhs)
# 2546 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return !(__lhs == __rhs); }
# 2554 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 2556 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
operator!=(const basic_string< _CharT, _Traits, _Alloc> &__lhs, const _CharT *
# 2557 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
__rhs)
# 2558 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return !(__lhs == __rhs); }
# 2567 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 2569 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
operator<(const basic_string< _CharT, _Traits, _Alloc> &__lhs, const basic_string< _CharT, _Traits, _Alloc> &
# 2570 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
__rhs)
# 2571 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return (__lhs.compare(__rhs)) < 0; }
# 2579 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 2581 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
operator<(const basic_string< _CharT, _Traits, _Alloc> &__lhs, const _CharT *
# 2582 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
__rhs)
# 2583 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return (__lhs.compare(__rhs)) < 0; }
# 2591 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 2593 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
operator<(const _CharT *__lhs, const basic_string< _CharT, _Traits, _Alloc> &
# 2594 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
__rhs)
# 2595 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return (__rhs.compare(__lhs)) > 0; }
# 2604 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 2606 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
operator>(const basic_string< _CharT, _Traits, _Alloc> &__lhs, const basic_string< _CharT, _Traits, _Alloc> &
# 2607 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
__rhs)
# 2608 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return (__lhs.compare(__rhs)) > 0; }
# 2616 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 2618 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
operator>(const basic_string< _CharT, _Traits, _Alloc> &__lhs, const _CharT *
# 2619 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
__rhs)
# 2620 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return (__lhs.compare(__rhs)) > 0; }
# 2628 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 2630 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
operator>(const _CharT *__lhs, const basic_string< _CharT, _Traits, _Alloc> &
# 2631 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
__rhs)
# 2632 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return (__rhs.compare(__lhs)) < 0; }
# 2641 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 2643 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
operator<=(const basic_string< _CharT, _Traits, _Alloc> &__lhs, const basic_string< _CharT, _Traits, _Alloc> &
# 2644 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
__rhs)
# 2645 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return (__lhs.compare(__rhs)) <= 0; }
# 2653 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 2655 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
operator<=(const basic_string< _CharT, _Traits, _Alloc> &__lhs, const _CharT *
# 2656 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
__rhs)
# 2657 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return (__lhs.compare(__rhs)) <= 0; }
# 2665 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 2667 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
operator<=(const _CharT *__lhs, const basic_string< _CharT, _Traits, _Alloc> &
# 2668 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
__rhs)
# 2669 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return (__rhs.compare(__lhs)) >= 0; }
# 2678 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 2680 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
operator>=(const basic_string< _CharT, _Traits, _Alloc> &__lhs, const basic_string< _CharT, _Traits, _Alloc> &
# 2681 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
__rhs)
# 2682 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return (__lhs.compare(__rhs)) >= 0; }
# 2690 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 2692 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
operator>=(const basic_string< _CharT, _Traits, _Alloc> &__lhs, const _CharT *
# 2693 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
__rhs)
# 2694 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return (__lhs.compare(__rhs)) >= 0; }
# 2702 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 2704 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
operator>=(const _CharT *__lhs, const basic_string< _CharT, _Traits, _Alloc> &
# 2705 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
__rhs)
# 2706 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return (__rhs.compare(__lhs)) <= 0; }
# 2715 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline void
# 2717 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
swap(basic_string< _CharT, _Traits, _Alloc> &__lhs, basic_string< _CharT, _Traits, _Alloc> &
# 2718 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
__rhs)
# 2719 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ (__lhs.swap(__rhs)); }
# 2733 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> basic_istream< _CharT, _Traits> &operator>>(basic_istream< _CharT, _Traits> & __is, basic_string< _CharT, _Traits, _Alloc> & __str);
# 2740 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template<> basic_istream< char> &operator>>(basic_istream< char> & __is, basic_string< char, char_traits< char> , allocator< char> > & __str);
# 2751 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline basic_ostream< _CharT, _Traits> &
# 2753 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
operator<<(basic_ostream< _CharT, _Traits> &__os, const basic_string< _CharT, _Traits, _Alloc> &
# 2754 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
__str)
# 2755 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{
# 2758 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
return __ostream_insert(__os, (__str.data()), (__str.size()));
# 2759 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 2774 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> basic_istream< _CharT, _Traits> &getline(basic_istream< _CharT, _Traits> & __is, basic_string< _CharT, _Traits, _Alloc> & __str, _CharT __delim);
# 2791 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline basic_istream< _CharT, _Traits> &
# 2793 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
getline(basic_istream< _CharT, _Traits> &__is, basic_string< _CharT, _Traits, _Alloc> &
# 2794 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
__str)
# 2795 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
{ return getline(__is, __str, (__is.widen('\n'))); }
# 2799 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template<> basic_istream< char> &getline(basic_istream< char> & __in, basic_string< char, char_traits< char> , allocator< char> > & __str, char __delim);
# 2805 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
template<> basic_istream< wchar_t> &getline(basic_istream< wchar_t> & __in, basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & __str, wchar_t __delim);
# 2810 "/usr/include/c++/4.8.2/bits/basic_string.h" 3
}
# 44 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 48 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> const typename basic_string< _CharT, _Traits, _Alloc> ::size_type
# 51 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::_Rep::_S_max_size = (((npos - sizeof(typename std::basic_string< _CharT, _Traits, _Alloc> ::_Rep_base)) / sizeof(_CharT)) - 1) / 4;
# 53 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> const _CharT
# 56 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::_Rep::_S_terminal = (_CharT());
# 58 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> const typename basic_string< _CharT, _Traits, _Alloc> ::size_type
# 60 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::npos;
# 64 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename basic_string< _CharT, _Traits, _Alloc> ::size_type
# 66 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::_Rep::_S_empty_rep_storage[(((sizeof(typename std::basic_string< _CharT, _Traits, _Alloc> ::_Rep_base) + sizeof(_CharT)) + sizeof(typename std::basic_string< _CharT, _Traits, _Alloc> ::size_type)) - (1)) / sizeof(typename std::basic_string< _CharT, _Traits, _Alloc> ::size_type)];
# 74 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc>
# 75 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _InIterator> _CharT *
# 78 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::_S_construct(_InIterator __beg, _InIterator __end, const _Alloc &__a, input_iterator_tag)
# 80 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 82 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if ((__beg == __end) && (__a == _Alloc())) {
# 83 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return ((_S_empty_rep)()._M_refdata()); }
# 86 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
_CharT __buf[128];
# 87 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
size_type __len = (0);
# 88 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
while ((__beg != __end) && (__len < (sizeof(__buf) / sizeof(_CharT))))
# 89 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 90 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(__buf[__len++]) = (*__beg);
# 91 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
++__beg;
# 92 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 93 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
_Rep *__r = _Rep::_S_create(__len, (size_type)0, __a);
# 94 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(_M_copy)((__r->_M_refdata()), __buf, __len);
# 95 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
try
# 96 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 97 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
while (__beg != __end)
# 98 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 99 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (__len == (__r->_M_capacity))
# 100 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 102 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
_Rep *__another = _Rep::_S_create(__len + 1, __len, __a);
# 103 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(_M_copy)((__another->_M_refdata()), (__r->_M_refdata()), __len);
# 104 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(__r->_M_destroy(__a));
# 105 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__r = __another;
# 106 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 107 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
((__r->_M_refdata())[__len++]) = (*__beg);
# 108 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
++__beg;
# 109 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 110 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 111 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
catch (...)
# 112 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 113 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(__r->_M_destroy(__a));
# 114 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
throw;
# 115 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 116 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(__r->_M_set_length_and_sharable(__len));
# 117 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return (__r->_M_refdata());
# 118 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 120 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc>
# 121 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _InIterator> _CharT *
# 124 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::_S_construct(_InIterator __beg, _InIterator __end, const _Alloc &__a, forward_iterator_tag)
# 126 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 128 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if ((__beg == __end) && (__a == _Alloc())) {
# 129 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return ((_S_empty_rep)()._M_refdata()); }
# 132 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (__gnu_cxx::__is_null_pointer(__beg) && (__beg != __end)) {
# 133 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__throw_logic_error("basic_string::_S_construct null not valid"); }
# 135 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const size_type __dnew = static_cast< size_type>(std::distance(__beg, __end));
# 138 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
_Rep *__r = _Rep::_S_create(__dnew, (size_type)0, __a);
# 139 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
try
# 140 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{ _S_copy_chars((__r->_M_refdata()), __beg, __end); }
# 141 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
catch (...)
# 142 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 143 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(__r->_M_destroy(__a));
# 144 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
throw;
# 145 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 146 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(__r->_M_set_length_and_sharable(__dnew));
# 147 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return (__r->_M_refdata());
# 148 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 150 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> _CharT *
# 153 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::_S_construct(size_type __n, _CharT __c, const _Alloc &__a)
# 154 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 156 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if ((__n == 0) && (__a == _Alloc())) {
# 157 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return ((_S_empty_rep)()._M_refdata()); }
# 160 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
_Rep *__r = _Rep::_S_create(__n, (size_type)0, __a);
# 161 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (__n) {
# 162 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(_M_assign)((__r->_M_refdata()), __n, __c); }
# 164 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(__r->_M_set_length_and_sharable(__n));
# 165 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return (__r->_M_refdata());
# 166 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 168 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc>
# 170 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::basic_string(const basic_string &__str) : _M_dataplus(((__str._M_rep())->_M_grab((_Alloc)(__str.get_allocator()), (__str.get_allocator()))), (__str.get_allocator()))
# 174 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{ }
# 176 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc>
# 178 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::basic_string(const _Alloc &__a) : _M_dataplus(_S_construct(size_type(), _CharT(), __a), __a)
# 180 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{ }
# 182 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc>
# 184 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::basic_string(const basic_string &__str, size_type __pos, size_type __n) : _M_dataplus(_S_construct((__str._M_data()) + (__str._M_check(__pos, "basic_string::basic_string")), ((__str._M_data()) + (__str._M_limit(__pos, __n))) + __pos, _Alloc()), _Alloc())
# 190 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{ }
# 192 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc>
# 194 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::basic_string(const basic_string &__str, size_type __pos, size_type
# 195 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__n, const _Alloc &__a) : _M_dataplus(_S_construct((__str._M_data()) + (__str._M_check(__pos, "basic_string::basic_string")), ((__str._M_data()) + (__str._M_limit(__pos, __n))) + __pos, __a), __a)
# 201 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{ }
# 204 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc>
# 206 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::basic_string(const _CharT *__s, size_type __n, const _Alloc &__a) : _M_dataplus(_S_construct(__s, __s + __n, __a), __a)
# 208 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{ }
# 211 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc>
# 213 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::basic_string(const _CharT *__s, const _Alloc &__a) : _M_dataplus(_S_construct(__s, (__s) ? __s + traits_type::length(__s) : (__s + npos), __a), __a)
# 216 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{ }
# 218 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc>
# 220 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::basic_string(size_type __n, _CharT __c, const _Alloc &__a) : _M_dataplus(_S_construct(__n, __c, __a), __a)
# 222 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{ }
# 225 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc>
# 226 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _InputIterator>
# 228 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::basic_string(_InputIterator __beg, _InputIterator __end, const _Alloc &__a) : _M_dataplus(_S_construct(__beg, __end, __a), __a)
# 230 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{ }
# 240 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> basic_string< _CharT, _Traits, _Alloc> &
# 243 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::assign(const basic_string &__str)
# 244 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 245 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (_M_rep() != (__str._M_rep()))
# 246 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 248 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const allocator_type __a = this->get_allocator();
# 249 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
_CharT *__tmp = ((__str._M_rep())->_M_grab(__a, (__str.get_allocator())));
# 250 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(_M_rep()->_M_dispose(__a));
# 251 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
_M_data(__tmp);
# 252 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 253 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return *this;
# 254 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 256 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> basic_string< _CharT, _Traits, _Alloc> &
# 259 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::assign(const _CharT *__s, size_type __n)
# 260 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 261 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
;
# 262 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
_M_check_length(this->size(), __n, "basic_string::assign");
# 263 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (_M_disjunct(__s) || (_M_rep()->_M_is_shared())) {
# 264 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return _M_replace_safe((size_type)0, this->size(), __s, __n); } else
# 266 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 268 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const size_type __pos = __s - _M_data();
# 269 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (__pos >= __n) {
# 270 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(_M_copy)(_M_data(), __s, __n); } else {
# 271 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (__pos) {
# 272 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(_M_move)(_M_data(), __s, __n); } }
# 273 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(_M_rep()->_M_set_length_and_sharable(__n));
# 274 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return *this;
# 275 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 276 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 278 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> basic_string< _CharT, _Traits, _Alloc> &
# 281 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::append(size_type __n, _CharT __c)
# 282 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 283 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (__n)
# 284 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 285 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
_M_check_length((size_type)0, __n, "basic_string::append");
# 286 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const size_type __len = __n + this->size();
# 287 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if ((__len > this->capacity()) || (_M_rep()->_M_is_shared())) {
# 288 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
this->reserve(__len); }
# 289 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(_M_assign)(_M_data() + this->size(), __n, __c);
# 290 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(_M_rep()->_M_set_length_and_sharable(__len));
# 291 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 292 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return *this;
# 293 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 295 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> basic_string< _CharT, _Traits, _Alloc> &
# 298 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::append(const _CharT *__s, size_type __n)
# 299 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 300 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
;
# 301 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (__n)
# 302 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 303 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
_M_check_length((size_type)0, __n, "basic_string::append");
# 304 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const size_type __len = __n + this->size();
# 305 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if ((__len > this->capacity()) || (_M_rep()->_M_is_shared()))
# 306 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 307 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (_M_disjunct(__s)) {
# 308 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
this->reserve(__len); } else
# 310 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 311 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const size_type __off = __s - _M_data();
# 312 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
this->reserve(__len);
# 313 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__s = (_M_data() + __off);
# 314 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 315 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 316 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(_M_copy)(_M_data() + this->size(), __s, __n);
# 317 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(_M_rep()->_M_set_length_and_sharable(__len));
# 318 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 319 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return *this;
# 320 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 322 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> basic_string< _CharT, _Traits, _Alloc> &
# 325 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::append(const basic_string &__str)
# 326 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 327 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const size_type __size = (__str.size());
# 328 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (__size)
# 329 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 330 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const size_type __len = __size + this->size();
# 331 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if ((__len > this->capacity()) || (_M_rep()->_M_is_shared())) {
# 332 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
this->reserve(__len); }
# 333 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(_M_copy)(_M_data() + this->size(), (__str._M_data()), __size);
# 334 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(_M_rep()->_M_set_length_and_sharable(__len));
# 335 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 336 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return *this;
# 337 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 339 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> basic_string< _CharT, _Traits, _Alloc> &
# 342 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::append(const basic_string &__str, size_type __pos, size_type __n)
# 343 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 344 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(__str._M_check(__pos, "basic_string::append"));
# 345 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__n = (__str._M_limit(__pos, __n));
# 346 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (__n)
# 347 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 348 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const size_type __len = __n + this->size();
# 349 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if ((__len > this->capacity()) || (_M_rep()->_M_is_shared())) {
# 350 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
this->reserve(__len); }
# 351 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(_M_copy)(_M_data() + this->size(), (__str._M_data()) + __pos, __n);
# 352 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(_M_rep()->_M_set_length_and_sharable(__len));
# 353 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 354 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return *this;
# 355 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 357 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> basic_string< _CharT, _Traits, _Alloc> &
# 360 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::insert(size_type __pos, const _CharT *__s, size_type __n)
# 361 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 362 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
;
# 363 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
_M_check(__pos, "basic_string::insert");
# 364 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
_M_check_length((size_type)0, __n, "basic_string::insert");
# 365 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (_M_disjunct(__s) || (_M_rep()->_M_is_shared())) {
# 366 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return _M_replace_safe(__pos, (size_type)0, __s, __n); } else
# 368 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 370 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const size_type __off = __s - _M_data();
# 371 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
_M_mutate(__pos, 0, __n);
# 372 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__s = (_M_data() + __off);
# 373 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
_CharT *__p = _M_data() + __pos;
# 374 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if ((__s + __n) <= __p) {
# 375 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(_M_copy)(__p, __s, __n); } else {
# 376 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (__s >= __p) {
# 377 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(_M_copy)(__p, __s + __n, __n); } else
# 379 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 380 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const size_type __nleft = __p - __s;
# 381 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(_M_copy)(__p, __s, __nleft);
# 382 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(_M_copy)(__p + __nleft, __p + __n, __n - __nleft);
# 383 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
} }
# 384 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return *this;
# 385 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 386 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 388 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename basic_string< _CharT, _Traits, _Alloc> ::iterator
# 391 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::erase(iterator __first, iterator __last)
# 392 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 394 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
;
# 399 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const size_type __size = __last - __first;
# 400 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (__size)
# 401 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 402 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const size_type __pos = __first - _M_ibegin();
# 403 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
_M_mutate(__pos, __size, (size_type)0);
# 404 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(_M_rep()->_M_set_leaked());
# 405 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return ((__gnu_cxx::__normal_iterator< typename _Alloc::template rebind< _CharT> ::other::pointer, basic_string> )(_M_data() + __pos));
# 406 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
} else {
# 408 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return __first; }
# 409 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 411 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> basic_string< _CharT, _Traits, _Alloc> &
# 414 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::replace(size_type __pos, size_type __n1, const _CharT *__s, size_type
# 415 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__n2)
# 416 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 417 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
;
# 418 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
_M_check(__pos, "basic_string::replace");
# 419 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__n1 = _M_limit(__pos, __n1);
# 420 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
_M_check_length(__n1, __n2, "basic_string::replace");
# 421 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
bool __left;
# 422 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (_M_disjunct(__s) || (_M_rep()->_M_is_shared())) {
# 423 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return _M_replace_safe(__pos, __n1, __s, __n2); } else {
# 424 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if ((__left = ((__s + __n2) <= (_M_data() + __pos))) || (((_M_data() + __pos) + __n1) <= __s))
# 426 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 428 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
size_type __off = __s - _M_data();
# 429 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__left ? __off : (__off += (__n2 - __n1));
# 430 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
_M_mutate(__pos, __n1, __n2);
# 431 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(_M_copy)(_M_data() + __pos, _M_data() + __off, __n2);
# 432 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return *this;
# 433 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
} else
# 435 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 437 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const basic_string __tmp(__s, __n2);
# 438 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return _M_replace_safe(__pos, __n1, (__tmp._M_data()), __n2);
# 439 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
} }
# 440 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 442 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> void
# 445 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::_Rep::_M_destroy(const _Alloc &__a) throw()
# 446 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 447 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const typename std::basic_string< _CharT, _Traits, _Alloc> ::size_type __size = sizeof(typename std::basic_string< _CharT, _Traits, _Alloc> ::_Rep_base) + (((this->_M_capacity) + 1) * sizeof(_CharT));
# 449 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(((_Raw_bytes_alloc)__a).deallocate(reinterpret_cast< char *>(this), __size));
# 450 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 452 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> void
# 455 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::_M_leak_hard()
# 456 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 458 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (_M_rep() == (&(_S_empty_rep)())) {
# 459 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return; }
# 461 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if ((_M_rep()->_M_is_shared())) {
# 462 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
_M_mutate(0, 0, 0); }
# 463 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(_M_rep()->_M_set_leaked());
# 464 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 466 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> void
# 469 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::_M_mutate(size_type __pos, size_type __len1, size_type __len2)
# 470 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 471 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const size_type __old_size = this->size();
# 472 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const size_type __new_size = (__old_size + __len2) - __len1;
# 473 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const size_type __how_much = (__old_size - __pos) - __len1;
# 475 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if ((__new_size > this->capacity()) || (_M_rep()->_M_is_shared()))
# 476 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 478 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const allocator_type __a = get_allocator();
# 479 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
_Rep *__r = _Rep::_S_create(__new_size, this->capacity(), __a);
# 481 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (__pos) {
# 482 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(_M_copy)((__r->_M_refdata()), _M_data(), __pos); }
# 483 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (__how_much) {
# 484 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(_M_copy)(((__r->_M_refdata()) + __pos) + __len2, (_M_data() + __pos) + __len1, __how_much); }
# 487 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(_M_rep()->_M_dispose(__a));
# 488 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
_M_data((__r->_M_refdata()));
# 489 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
} else {
# 490 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (__how_much && (__len1 != __len2))
# 491 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 493 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(_M_move)((_M_data() + __pos) + __len2, (_M_data() + __pos) + __len1, __how_much);
# 495 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
} }
# 496 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(_M_rep()->_M_set_length_and_sharable(__new_size));
# 497 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 499 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> void
# 502 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::reserve(size_type __res)
# 503 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 504 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if ((__res != this->capacity()) || (_M_rep()->_M_is_shared()))
# 505 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 507 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (__res < this->size()) {
# 508 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__res = this->size(); }
# 509 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const allocator_type __a = get_allocator();
# 510 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
_CharT *__tmp = (_M_rep()->_M_clone(__a, __res - this->size()));
# 511 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(_M_rep()->_M_dispose(__a));
# 512 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
_M_data(__tmp);
# 513 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 514 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 516 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> void
# 519 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::swap(basic_string &__s)
# 520 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 521 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if ((_M_rep()->_M_is_leaked())) {
# 522 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(_M_rep()->_M_set_sharable()); }
# 523 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (((__s._M_rep())->_M_is_leaked())) {
# 524 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
((__s._M_rep())->_M_set_sharable()); }
# 525 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (this->get_allocator() == (__s.get_allocator()))
# 526 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 527 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
_CharT *__tmp = _M_data();
# 528 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
_M_data((__s._M_data()));
# 529 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(__s._M_data(__tmp));
# 530 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
} else
# 533 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 534 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const basic_string __tmp1(_M_ibegin(), _M_iend(), (__s.get_allocator()));
# 536 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const basic_string __tmp2((__s._M_ibegin()), (__s._M_iend()), this->get_allocator());
# 538 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(*this) = __tmp2;
# 539 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__s = __tmp1;
# 540 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 541 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 543 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename basic_string< _CharT, _Traits, _Alloc> ::_Rep *
# 546 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::_Rep::_S_create(typename std::basic_string< _CharT, _Traits, _Alloc> ::size_type __capacity, typename std::basic_string< _CharT, _Traits, _Alloc> ::size_type __old_capacity, const _Alloc &
# 547 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__alloc)
# 548 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 551 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (__capacity > _S_max_size) {
# 552 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__throw_length_error("basic_string::_S_create"); }
# 577 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const typename std::basic_string< _CharT, _Traits, _Alloc> ::size_type __pagesize = (4096);
# 578 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const typename std::basic_string< _CharT, _Traits, _Alloc> ::size_type __malloc_header_size = ((4) * sizeof(void *));
# 586 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if ((__capacity > __old_capacity) && (__capacity < (2 * __old_capacity))) {
# 587 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__capacity = (2 * __old_capacity); }
# 592 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
typename std::basic_string< _CharT, _Traits, _Alloc> ::size_type __size = ((__capacity + 1) * sizeof(_CharT)) + sizeof(_Rep);
# 594 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const typename std::basic_string< _CharT, _Traits, _Alloc> ::size_type __adj_size = __size + __malloc_header_size;
# 595 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if ((__adj_size > __pagesize) && (__capacity > __old_capacity))
# 596 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 597 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const typename std::basic_string< _CharT, _Traits, _Alloc> ::size_type __extra = __pagesize - (__adj_size % __pagesize);
# 598 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__capacity += (__extra / sizeof(_CharT));
# 600 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (__capacity > _S_max_size) {
# 601 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__capacity = _S_max_size; }
# 602 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__size = (((__capacity + 1) * sizeof(_CharT)) + sizeof(_Rep));
# 603 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 607 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
void *__place = (((_Raw_bytes_alloc)__alloc).allocate(__size));
# 608 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
_Rep *__p = new (__place) _Rep;
# 609 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(__p->_M_capacity) = __capacity;
# 617 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__p->_M_set_sharable();
# 618 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return __p;
# 619 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 621 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> _CharT *
# 624 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::_Rep::_M_clone(const _Alloc &__alloc, typename std::basic_string< _CharT, _Traits, _Alloc> ::size_type __res)
# 625 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 627 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const typename std::basic_string< _CharT, _Traits, _Alloc> ::size_type __requested_cap = (this->_M_length) + __res;
# 628 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
_Rep *__r = (_S_create)(__requested_cap, (this->_M_capacity), __alloc);
# 630 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (this->_M_length) {
# 631 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(std::basic_string< _CharT, _Traits, _Alloc> ::_M_copy)(__r->_M_refdata(), _M_refdata(), (this->_M_length)); }
# 633 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__r->_M_set_length_and_sharable((this->_M_length));
# 634 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return __r->_M_refdata();
# 635 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 637 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> void
# 640 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::resize(size_type __n, _CharT __c)
# 641 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 642 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const size_type __size = this->size();
# 643 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
_M_check_length(__size, __n, "basic_string::resize");
# 644 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (__size < __n) {
# 645 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(this->append(__n - __size, __c)); } else {
# 646 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (__n < __size) {
# 647 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(this->erase(__n)); } }
# 649 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 651 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc>
# 652 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _InputIterator> basic_string< _CharT, _Traits, _Alloc> &
# 655 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator
# 656 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__k2, __false_type)
# 657 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 658 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const basic_string __s(__k1, __k2);
# 659 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const size_type __n1 = __i2 - __i1;
# 660 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
_M_check_length(__n1, (__s.size()), "basic_string::_M_replace_dispatch");
# 661 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return _M_replace_safe(__i1 - _M_ibegin(), __n1, (__s._M_data()), (__s.size()));
# 663 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 665 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> basic_string< _CharT, _Traits, _Alloc> &
# 668 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, _CharT
# 669 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__c)
# 670 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 671 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
_M_check_length(__n1, __n2, "basic_string::_M_replace_aux");
# 672 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
_M_mutate(__pos1, __n1, __n2);
# 673 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (__n2) {
# 674 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(_M_assign)(_M_data() + __pos1, __n2, __c); }
# 675 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return *this;
# 676 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 678 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> basic_string< _CharT, _Traits, _Alloc> &
# 681 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::_M_replace_safe(size_type __pos1, size_type __n1, const _CharT *__s, size_type
# 682 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__n2)
# 683 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 684 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
_M_mutate(__pos1, __n1, __n2);
# 685 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (__n2) {
# 686 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(_M_copy)(_M_data() + __pos1, __s, __n2); }
# 687 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return *this;
# 688 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 690 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> basic_string< _CharT, _Traits, _Alloc>
# 692 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
operator+(const _CharT *__lhs, const basic_string< _CharT, _Traits, _Alloc> &
# 693 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__rhs)
# 694 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 695 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
;
# 696 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
typedef basic_string< _CharT, _Traits, _Alloc> __string_type;
# 697 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
typedef typename basic_string< _CharT, _Traits, _Alloc> ::size_type __size_type;
# 698 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const __size_type __len = _Traits::length(__lhs);
# 699 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__string_type __str;
# 700 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(__str.reserve(__len + (__rhs.size())));
# 701 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(__str.append(__lhs, __len));
# 702 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(__str.append(__rhs));
# 703 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return __str;
# 704 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 706 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> basic_string< _CharT, _Traits, _Alloc>
# 708 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
operator+(_CharT __lhs, const basic_string< _CharT, _Traits, _Alloc> &__rhs)
# 709 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 710 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
typedef basic_string< _CharT, _Traits, _Alloc> __string_type;
# 711 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
typedef typename basic_string< _CharT, _Traits, _Alloc> ::size_type __size_type;
# 712 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__string_type __str;
# 713 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const __size_type __len = (__rhs.size());
# 714 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(__str.reserve(__len + 1));
# 715 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(__str.append((__size_type)1, __lhs));
# 716 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(__str.append(__rhs));
# 717 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return __str;
# 718 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 720 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename basic_string< _CharT, _Traits, _Alloc> ::size_type
# 723 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::copy(_CharT *__s, size_type __n, size_type __pos) const
# 724 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 725 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
_M_check(__pos, "basic_string::copy");
# 726 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__n = _M_limit(__pos, __n);
# 727 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
;
# 728 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (__n) {
# 729 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(_M_copy)(__s, _M_data() + __pos, __n); }
# 731 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return __n;
# 732 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 734 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename basic_string< _CharT, _Traits, _Alloc> ::size_type
# 737 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::find(const _CharT *__s, size_type __pos, size_type __n) const
# 738 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 739 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
;
# 740 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const size_type __size = this->size();
# 741 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const _CharT *__data = _M_data();
# 743 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (__n == 0) {
# 744 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return (__pos <= __size) ? __pos : npos; }
# 746 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (__n <= __size)
# 747 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 748 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
for (; __pos <= (__size - __n); ++__pos) {
# 749 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (traits_type::eq(__data[__pos], __s[0]) && (traits_type::compare((__data + __pos) + 1, __s + 1, __n - 1) == 0)) {
# 752 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return __pos; } }
# 753 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 754 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return npos;
# 755 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 757 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename basic_string< _CharT, _Traits, _Alloc> ::size_type
# 760 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::find(_CharT __c, size_type __pos) const
# 761 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 762 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
size_type __ret = npos;
# 763 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const size_type __size = this->size();
# 764 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (__pos < __size)
# 765 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 766 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const _CharT *__data = _M_data();
# 767 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const size_type __n = __size - __pos;
# 768 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const _CharT *__p = traits_type::find(__data + __pos, __n, __c);
# 769 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (__p) {
# 770 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__ret = (__p - __data); }
# 771 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 772 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return __ret;
# 773 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 775 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename basic_string< _CharT, _Traits, _Alloc> ::size_type
# 778 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::rfind(const _CharT *__s, size_type __pos, size_type __n) const
# 779 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 780 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
;
# 781 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const size_type __size = this->size();
# 782 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (__n <= __size)
# 783 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 784 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__pos = std::min((size_type)(__size - __n), __pos);
# 785 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const _CharT *__data = _M_data();
# 786 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
do
# 787 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 788 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (traits_type::compare(__data + __pos, __s, __n) == 0) {
# 789 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return __pos; }
# 790 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 791 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
while ((__pos--) > 0);
# 792 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 793 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return npos;
# 794 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 796 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename basic_string< _CharT, _Traits, _Alloc> ::size_type
# 799 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::rfind(_CharT __c, size_type __pos) const
# 800 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 801 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
size_type __size = this->size();
# 802 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (__size)
# 803 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 804 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if ((--__size) > __pos) {
# 805 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__size = __pos; }
# 806 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
for (++__size; (__size--) > 0;) {
# 807 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (traits_type::eq(_M_data()[__size], __c)) {
# 808 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return __size; } }
# 809 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 810 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return npos;
# 811 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 813 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename basic_string< _CharT, _Traits, _Alloc> ::size_type
# 816 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::find_first_of(const _CharT *__s, size_type __pos, size_type __n) const
# 817 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 818 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
;
# 819 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
for (; __n && (__pos < this->size()); ++__pos)
# 820 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 821 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const _CharT *__p = traits_type::find(__s, __n, _M_data()[__pos]);
# 822 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (__p) {
# 823 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return __pos; }
# 824 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 825 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return npos;
# 826 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 828 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename basic_string< _CharT, _Traits, _Alloc> ::size_type
# 831 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::find_last_of(const _CharT *__s, size_type __pos, size_type __n) const
# 832 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 833 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
;
# 834 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
size_type __size = this->size();
# 835 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (__size && __n)
# 836 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 837 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if ((--__size) > __pos) {
# 838 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__size = __pos; }
# 839 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
do
# 840 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 841 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (traits_type::find(__s, __n, _M_data()[__size])) {
# 842 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return __size; }
# 843 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 844 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
while ((__size--) != 0);
# 845 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 846 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return npos;
# 847 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 849 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename basic_string< _CharT, _Traits, _Alloc> ::size_type
# 852 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::find_first_not_of(const _CharT *__s, size_type __pos, size_type __n) const
# 853 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 854 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
;
# 855 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
for (; __pos < this->size(); ++__pos) {
# 856 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (!traits_type::find(__s, __n, _M_data()[__pos])) {
# 857 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return __pos; } }
# 858 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return npos;
# 859 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 861 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename basic_string< _CharT, _Traits, _Alloc> ::size_type
# 864 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::find_first_not_of(_CharT __c, size_type __pos) const
# 865 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 866 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
for (; __pos < this->size(); ++__pos) {
# 867 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (!traits_type::eq(_M_data()[__pos], __c)) {
# 868 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return __pos; } }
# 869 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return npos;
# 870 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 872 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename basic_string< _CharT, _Traits, _Alloc> ::size_type
# 875 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::find_last_not_of(const _CharT *__s, size_type __pos, size_type __n) const
# 876 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 877 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
;
# 878 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
size_type __size = this->size();
# 879 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (__size)
# 880 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 881 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if ((--__size) > __pos) {
# 882 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__size = __pos; }
# 883 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
do
# 884 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 885 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (!traits_type::find(__s, __n, _M_data()[__size])) {
# 886 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return __size; }
# 887 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 888 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
while (__size--);
# 889 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 890 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return npos;
# 891 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 893 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename basic_string< _CharT, _Traits, _Alloc> ::size_type
# 896 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::find_last_not_of(_CharT __c, size_type __pos) const
# 897 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 898 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
size_type __size = this->size();
# 899 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (__size)
# 900 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 901 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if ((--__size) > __pos) {
# 902 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__size = __pos; }
# 903 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
do
# 904 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 905 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (!traits_type::eq(_M_data()[__size], __c)) {
# 906 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return __size; }
# 907 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 908 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
while (__size--);
# 909 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 910 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return npos;
# 911 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 913 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> int
# 916 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::compare(size_type __pos, size_type __n, const basic_string &__str) const
# 917 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 918 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
_M_check(__pos, "basic_string::compare");
# 919 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__n = _M_limit(__pos, __n);
# 920 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const size_type __osize = (__str.size());
# 921 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const size_type __len = std::min(__n, __osize);
# 922 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
int __r = traits_type::compare(_M_data() + __pos, (__str.data()), __len);
# 923 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (!__r) {
# 924 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__r = (_S_compare)(__n, __osize); }
# 925 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return __r;
# 926 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 928 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> int
# 931 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::compare(size_type __pos1, size_type __n1, const basic_string &__str, size_type
# 932 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__pos2, size_type __n2) const
# 933 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 934 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
_M_check(__pos1, "basic_string::compare");
# 935 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(__str._M_check(__pos2, "basic_string::compare"));
# 936 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__n1 = _M_limit(__pos1, __n1);
# 937 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__n2 = (__str._M_limit(__pos2, __n2));
# 938 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const size_type __len = std::min(__n1, __n2);
# 939 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
int __r = traits_type::compare(_M_data() + __pos1, (__str.data()) + __pos2, __len);
# 941 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (!__r) {
# 942 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__r = (_S_compare)(__n1, __n2); }
# 943 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return __r;
# 944 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 946 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> int
# 949 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::compare(const _CharT *__s) const
# 950 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 951 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
;
# 952 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const size_type __size = this->size();
# 953 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const size_type __osize = traits_type::length(__s);
# 954 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const size_type __len = std::min(__size, __osize);
# 955 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
int __r = traits_type::compare(_M_data(), __s, __len);
# 956 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (!__r) {
# 957 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__r = (_S_compare)(__size, __osize); }
# 958 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return __r;
# 959 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 961 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> int
# 964 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::compare(size_type __pos, size_type __n1, const _CharT *__s) const
# 965 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 966 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
;
# 967 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
_M_check(__pos, "basic_string::compare");
# 968 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__n1 = _M_limit(__pos, __n1);
# 969 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const size_type __osize = traits_type::length(__s);
# 970 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const size_type __len = std::min(__n1, __osize);
# 971 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
int __r = traits_type::compare(_M_data() + __pos, __s, __len);
# 972 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (!__r) {
# 973 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__r = (_S_compare)(__n1, __osize); }
# 974 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return __r;
# 975 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 977 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> int
# 980 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::compare(size_type __pos, size_type __n1, const _CharT *__s, size_type
# 981 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__n2) const
# 982 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 983 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
;
# 984 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
_M_check(__pos, "basic_string::compare");
# 985 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__n1 = _M_limit(__pos, __n1);
# 986 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const size_type __len = std::min(__n1, __n2);
# 987 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
int __r = traits_type::compare(_M_data() + __pos, __s, __len);
# 988 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (!__r) {
# 989 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__r = (_S_compare)(__n1, __n2); }
# 990 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return __r;
# 991 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 994 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> basic_istream< _CharT, _Traits> &
# 996 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
operator>>(basic_istream< _CharT, _Traits> &__in, basic_string< _CharT, _Traits, _Alloc> &
# 997 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__str)
# 998 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 999 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
typedef basic_istream< _CharT, _Traits> __istream_type;
# 1000 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
typedef basic_string< _CharT, _Traits, _Alloc> __string_type;
# 1001 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
typedef typename basic_istream< _CharT, _Traits> ::ios_base __ios_base;
# 1002 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
typedef typename basic_istream< _CharT, _Traits> ::int_type __int_type;
# 1003 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
typedef typename basic_string< _CharT, _Traits, _Alloc> ::size_type __size_type;
# 1004 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
typedef ctype< _CharT> __ctype_type;
# 1005 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
typedef typename ctype< _CharT> ::ctype_base __ctype_base;
# 1007 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__size_type __extracted = (0);
# 1008 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
typename basic_istream< _CharT, _Traits> ::ios_base::iostate __err = (__ios_base::goodbit);
# 1009 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
typename basic_istream< _CharT, _Traits> ::sentry __cerb(__in, false);
# 1010 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (__cerb)
# 1011 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 1012 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
try
# 1013 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 1015 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(__str.erase());
# 1016 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
_CharT __buf[128];
# 1017 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__size_type __len = (0);
# 1018 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const streamsize __w = (__in.width());
# 1019 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const __size_type __n = (__w > (0)) ? static_cast< __size_type>(__w) : (__str.max_size());
# 1021 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const __ctype_type &__ct = use_facet< ctype< _CharT> > ((__in.getloc()));
# 1022 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const __int_type __eof = _Traits::eof();
# 1023 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__int_type __c = ((__in.rdbuf())->sgetc());
# 1025 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
while ((__extracted < __n) && (!_Traits::eq_int_type(__c, __eof)) && (!(__ct.is(__ctype_base::space, _Traits::to_char_type(__c)))))
# 1029 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 1030 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (__len == (sizeof(__buf) / sizeof(_CharT)))
# 1031 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 1032 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(__str.append(__buf, sizeof(__buf) / sizeof(_CharT)));
# 1033 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__len = 0;
# 1034 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 1035 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(__buf[__len++]) = _Traits::to_char_type(__c);
# 1036 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
++__extracted;
# 1037 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__c = ((__in.rdbuf())->snextc());
# 1038 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 1039 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(__str.append(__buf, __len));
# 1041 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (_Traits::eq_int_type(__c, __eof)) {
# 1042 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__err |= __ios_base::eofbit; }
# 1043 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(__in.width(0));
# 1044 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 1045 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 1046 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 1047 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(__in._M_setstate(__ios_base::badbit));
# 1048 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
throw;
# 1049 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 1050 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
catch (...)
# 1051 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 1055 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(__in._M_setstate(__ios_base::badbit));
# 1056 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 1057 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 1059 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (!__extracted) {
# 1060 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__err |= __ios_base::failbit; }
# 1061 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (__err) {
# 1062 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(__in.setstate(__err)); }
# 1063 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return __in;
# 1064 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 1066 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> basic_istream< _CharT, _Traits> &
# 1068 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
getline(basic_istream< _CharT, _Traits> &__in, basic_string< _CharT, _Traits, _Alloc> &
# 1069 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__str, _CharT __delim)
# 1070 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 1071 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
typedef basic_istream< _CharT, _Traits> __istream_type;
# 1072 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
typedef basic_string< _CharT, _Traits, _Alloc> __string_type;
# 1073 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
typedef typename basic_istream< _CharT, _Traits> ::ios_base __ios_base;
# 1074 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
typedef typename basic_istream< _CharT, _Traits> ::int_type __int_type;
# 1075 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
typedef typename basic_string< _CharT, _Traits, _Alloc> ::size_type __size_type;
# 1077 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__size_type __extracted = (0);
# 1078 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const __size_type __n = (__str.max_size());
# 1079 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
typename basic_istream< _CharT, _Traits> ::ios_base::iostate __err = (__ios_base::goodbit);
# 1080 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
typename basic_istream< _CharT, _Traits> ::sentry __cerb(__in, true);
# 1081 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (__cerb)
# 1082 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 1083 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
try
# 1084 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 1085 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(__str.erase());
# 1086 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const __int_type __idelim = _Traits::to_int_type(__delim);
# 1087 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
const __int_type __eof = _Traits::eof();
# 1088 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__int_type __c = ((__in.rdbuf())->sgetc());
# 1090 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
while ((__extracted < __n) && (!_Traits::eq_int_type(__c, __eof)) && (!_Traits::eq_int_type(__c, __idelim)))
# 1093 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 1094 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__str += _Traits::to_char_type(__c);
# 1095 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
++__extracted;
# 1096 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__c = ((__in.rdbuf())->snextc());
# 1097 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 1099 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (_Traits::eq_int_type(__c, __eof)) {
# 1100 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__err |= __ios_base::eofbit; } else {
# 1101 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (_Traits::eq_int_type(__c, __idelim))
# 1102 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 1103 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
++__extracted;
# 1104 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
((__in.rdbuf())->sbumpc());
# 1105 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
} else {
# 1107 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__err |= __ios_base::failbit; } }
# 1108 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 1109 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 1110 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 1111 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(__in._M_setstate(__ios_base::badbit));
# 1112 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
throw;
# 1113 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 1114 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
catch (...)
# 1115 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
{
# 1119 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(__in._M_setstate(__ios_base::badbit));
# 1120 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 1121 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 1122 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (!__extracted) {
# 1123 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
__err |= __ios_base::failbit; }
# 1124 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
if (__err) {
# 1125 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
(__in.setstate(__err)); }
# 1126 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
return __in;
# 1127 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 1132 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
extern template class basic_string< char, char_traits< char> , allocator< char> > ;
# 1133 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
extern template basic_istream< char> &operator>>(basic_istream< char> & __is, basic_string< char, char_traits< char> , allocator< char> > & __str);
# 1136 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
extern template basic_ostream< char> &operator<<(basic_ostream< char> & __os, const basic_string< char, char_traits< char> , allocator< char> > & __str);
# 1139 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
extern template basic_istream< char> &getline(basic_istream< char> & __is, basic_string< char, char_traits< char> , allocator< char> > & __str, char __delim);
# 1142 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
extern template basic_istream< char> &getline(basic_istream< char> & __is, basic_string< char, char_traits< char> , allocator< char> > & __str);
# 1147 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
extern template class basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > ;
# 1148 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
extern template basic_istream< wchar_t> &operator>>(basic_istream< wchar_t> & __is, basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & __str);
# 1151 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
extern template basic_ostream< wchar_t> &operator<<(basic_ostream< wchar_t> & __os, const basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & __str);
# 1154 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
extern template basic_istream< wchar_t> &getline(basic_istream< wchar_t> & __is, basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & __str, wchar_t __delim);
# 1157 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
extern template basic_istream< wchar_t> &getline(basic_istream< wchar_t> & __is, basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & __str);
# 1164 "/usr/include/c++/4.8.2/bits/basic_string.tcc" 3
}
# 43 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
namespace std __attribute((__visibility__("default"))) {
# 62 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
class locale {
# 67 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
public: typedef int category;
# 70 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
class facet;
# 71 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
class id;
# 72 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
class _Impl;
# 74 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
friend class facet;
# 75 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
friend class _Impl;
# 77 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
template< class _Facet> friend bool has_facet(const locale &) throw();
# 81 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
template< class _Facet> friend const _Facet &use_facet(const locale &);
# 85 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
template< class _Cache> friend struct __use_cache;
# 98 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
static const category none = 0;
# 99 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
static const category ctype = (1L << 0);
# 100 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
static const category numeric = (1L << 1);
# 101 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
static const category collate = (1L << 2);
# 102 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
static const category time = (1L << 3);
# 103 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
static const category monetary = (1L << 4);
# 104 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
static const category messages = (1L << 5);
# 105 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
static const category all = (((((ctype | numeric) | collate) | time) | monetary) | messages);
# 117 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
locale() throw();
# 126 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
locale(const locale & __other) throw();
# 137 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
explicit locale(const char * __s);
# 151 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
locale(const locale & __base, const char * __s, category __cat);
# 164 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
locale(const locale & __base, const locale & __add, category __cat);
# 177 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
template< class _Facet> locale(const locale & __other, _Facet * __f);
# 181 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
~locale() throw();
# 192 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
const locale &operator=(const locale & __other) throw();
# 206 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
template< class _Facet> locale combine(const locale & __other) const;
# 216 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
string name() const;
# 226 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
bool operator==(const locale & __other) const throw();
# 235 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
bool operator!=(const locale &__other) const throw()
# 236 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
{ return !this->operator==(__other); }
# 253 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
template< class _Char, class _Traits, class _Alloc> bool operator()(const basic_string< _Char, _Traits, _Alloc> & __s1, const basic_string< _Char, _Traits, _Alloc> & __s2) const;
# 270 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
static locale global(const locale & __loc);
# 276 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
static const locale &classic();
# 280 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
private: _Impl *_M_impl;
# 283 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
static _Impl *_S_classic;
# 286 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
static _Impl *_S_global;
# 292 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
static const char *const *const _S_categories;
# 304 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
enum { _S_categories_size = 12};
# 307 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
static __gthread_once_t _S_once;
# 311 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
explicit locale(_Impl *) throw();
# 314 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
static void _S_initialize();
# 317 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
static void _S_initialize_once() throw();
# 320 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
static category _S_normalize_category(category);
# 323 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
void _M_coalesce(const locale & __base, const locale & __add, category __cat);
# 324 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
};
# 338 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
class locale::facet {
# 341 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
friend class locale;
# 342 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
friend class _Impl;
# 344 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
mutable _Atomic_word _M_refcount;
# 347 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
static __c_locale _S_c_locale;
# 350 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
static const char _S_c_name[2];
# 353 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
static __gthread_once_t _S_once;
# 357 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
static void _S_initialize_once();
# 370 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
protected: explicit facet(size_t __refs = 0) throw() : _M_refcount((__refs) ? 1 : 0)
# 371 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
{ }
# 375 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
virtual ~facet();
# 378 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
static void _S_create_c_locale(__c_locale & __cloc, const char * __s, __c_locale __old = 0);
# 382 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
static __c_locale _S_clone_c_locale(__c_locale & __cloc) throw();
# 385 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
static void _S_destroy_c_locale(__c_locale & __cloc);
# 388 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
static __c_locale _S_lc_ctype_c_locale(__c_locale __cloc, const char * __s);
# 393 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
static __c_locale _S_get_c_locale();
# 395 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
__attribute((const)) static const char *
# 396 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
_S_get_c_name() throw();
# 400 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
private: void _M_add_reference() const throw()
# 401 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
{ __gnu_cxx::__atomic_add_dispatch(&(_M_refcount), 1); }
# 404 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
void _M_remove_reference() const throw()
# 405 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
{
# 407 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
;
# 408 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
if (__gnu_cxx::__exchange_and_add_dispatch(&(_M_refcount), -1) == 1)
# 409 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
{
# 410 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
;
# 411 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
try
# 412 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
{ delete this; }
# 413 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
catch (...)
# 414 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
{ }
# 415 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
}
# 416 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
}
# 418 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
facet(const facet &);
# 421 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
facet &operator=(const facet &);
# 422 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
};
# 436 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
class locale::id {
# 439 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
friend class locale;
# 440 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
friend class _Impl;
# 442 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
template< class _Facet> friend const _Facet &use_facet(const locale &);
# 446 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
template< class _Facet> friend bool has_facet(const locale &) throw();
# 453 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
mutable size_t _M_index;
# 456 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
static _Atomic_word _S_refcount;
# 459 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
void operator=(const id &);
# 461 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
id(const id &);
# 467 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
public: id() { }
# 470 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
size_t _M_id() const throw();
# 471 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
};
# 475 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
class locale::_Impl {
# 479 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
friend class locale;
# 480 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
friend class facet;
# 482 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
template< class _Facet> friend bool has_facet(const locale &) throw();
# 486 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
template< class _Facet> friend const _Facet &use_facet(const locale &);
# 490 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
template< class _Cache> friend struct __use_cache;
# 495 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
_Atomic_word _M_refcount;
# 496 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
const facet **_M_facets;
# 497 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
size_t _M_facets_size;
# 498 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
const facet **_M_caches;
# 499 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
char **_M_names;
# 500 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
static const id *const _S_id_ctype[];
# 501 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
static const id *const _S_id_numeric[];
# 502 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
static const id *const _S_id_collate[];
# 503 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
static const id *const _S_id_time[];
# 504 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
static const id *const _S_id_monetary[];
# 505 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
static const id *const _S_id_messages[];
# 506 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
static const id *const *const _S_facet_categories[];
# 509 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
void _M_add_reference() throw()
# 510 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
{ __gnu_cxx::__atomic_add_dispatch(&(_M_refcount), 1); }
# 513 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
void _M_remove_reference() throw()
# 514 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
{
# 516 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
;
# 517 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
if (__gnu_cxx::__exchange_and_add_dispatch(&(_M_refcount), -1) == 1)
# 518 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
{
# 519 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
;
# 520 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
try
# 521 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
{ delete this; }
# 522 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
catch (...)
# 523 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
{ }
# 524 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
}
# 525 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
}
# 527 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
_Impl(const _Impl &, size_t);
# 528 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
_Impl(const char *, size_t);
# 529 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
_Impl(size_t) throw();
# 531 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
~_Impl() throw();
# 533 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
_Impl(const _Impl &);
# 536 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
void operator=(const _Impl &);
# 539 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
bool _M_check_same_name()
# 540 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
{
# 541 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
bool __ret = true;
# 542 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
if ((_M_names)[1]) {
# 544 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
for (size_t __i = (0); __ret && (__i < ((_S_categories_size) - 1)); ++__i) {
# 545 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
__ret = (__builtin_strcmp((_M_names)[__i], (_M_names)[__i + (1)]) == 0); } }
# 546 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
return __ret;
# 547 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
}
# 550 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
void _M_replace_categories(const _Impl *, category);
# 553 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
void _M_replace_category(const _Impl *, const id *const *);
# 556 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
void _M_replace_facet(const _Impl *, const id *);
# 559 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
void _M_install_facet(const id *, const facet *);
# 561 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
template< class _Facet> void
# 563 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
_M_init_facet(_Facet *__facet)
# 564 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
{ this->_M_install_facet(&_Facet::id, __facet); }
# 567 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
void _M_install_cache(const facet *, size_t);
# 568 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
};
# 583 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
template< class _CharT>
# 584 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
class collate : public locale::facet {
# 590 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
public: typedef _CharT char_type;
# 591 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
typedef basic_string< _CharT, char_traits< _CharT> , allocator< _CharT> > string_type;
# 597 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
protected: __c_locale _M_c_locale_collate;
# 601 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
public: static locale::id id;
# 611 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
explicit collate(size_t __refs = 0) : locale::facet(__refs), _M_c_locale_collate(_S_get_c_locale())
# 613 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
{ }
# 625 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
explicit collate(__c_locale __cloc, size_t __refs = 0) : locale::facet(__refs), _M_c_locale_collate(_S_clone_c_locale(__cloc))
# 627 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
{ }
# 642 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
int compare(const _CharT *__lo1, const _CharT *__hi1, const _CharT *
# 643 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
__lo2, const _CharT *__hi2) const
# 644 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
{ return this->do_compare(__lo1, __hi1, __lo2, __hi2); }
# 661 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
string_type transform(const _CharT *__lo, const _CharT *__hi) const
# 662 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
{ return this->do_transform(__lo, __hi); }
# 675 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
long hash(const _CharT *__lo, const _CharT *__hi) const
# 676 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
{ return this->do_hash(__lo, __hi); }
# 680 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
int _M_compare(const _CharT *, const _CharT *) const throw();
# 683 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
size_t _M_transform(_CharT *, const _CharT *, size_t) const throw();
# 688 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
protected: virtual ~collate()
# 689 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
{ _S_destroy_c_locale(_M_c_locale_collate); }
# 704 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
virtual int do_compare(const _CharT * __lo1, const _CharT * __hi1, const _CharT * __lo2, const _CharT * __hi2) const;
# 718 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
virtual string_type do_transform(const _CharT * __lo, const _CharT * __hi) const;
# 731 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
virtual long do_hash(const _CharT * __lo, const _CharT * __hi) const;
# 732 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
};
# 734 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
template< class _CharT> locale::id
# 735 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
collate< _CharT> ::id;
# 740 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
template<> int collate< char> ::_M_compare(const char *, const char *) const throw();
# 744 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
template<> size_t collate< char> ::_M_transform(char *, const char *, size_t) const throw();
# 749 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
template<> int collate< wchar_t> ::_M_compare(const wchar_t *, const wchar_t *) const throw();
# 753 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
template<> size_t collate< wchar_t> ::_M_transform(wchar_t *, const wchar_t *, size_t) const throw();
# 757 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
template< class _CharT>
# 758 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
class collate_byname : public collate< _CharT> {
# 763 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
public: typedef _CharT char_type;
# 764 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
typedef basic_string< _CharT, char_traits< _CharT> , allocator< _CharT> > string_type;
# 768 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
explicit collate_byname(const char *__s, std::size_t __refs = 0) : std::collate< _CharT> (__refs)
# 770 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
{
# 771 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
if ((__builtin_strcmp(__s, "C") != 0) && (__builtin_strcmp(__s, "POSIX") != 0))
# 773 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
{
# 774 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
(this->_S_destroy_c_locale((this->_M_c_locale_collate)));
# 775 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
(this->_S_create_c_locale((this->_M_c_locale_collate), __s));
# 776 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
}
# 777 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
}
# 781 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
protected: virtual ~collate_byname() { }
# 782 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
};
# 785 "/usr/include/c++/4.8.2/bits/locale_classes.h" 3
}
# 39 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 43 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
template< class _Facet>
# 45 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
locale::locale(const locale &__other, _Facet *__f)
# 46 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
{
# 47 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
(_M_impl) = (new _Impl(*(__other._M_impl), 1));
# 49 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
try
# 50 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
{ (_M_impl)->_M_install_facet(&_Facet::id, __f); }
# 51 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
catch (...)
# 52 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
{
# 53 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
(_M_impl)->_M_remove_reference();
# 54 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
throw;
# 55 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
}
# 56 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
delete [] (((_M_impl)->_M_names)[0]);
# 57 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
(((_M_impl)->_M_names)[0]) = (0);
# 58 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
}
# 60 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
template< class _Facet> locale
# 63 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
locale::combine(const locale &__other) const
# 64 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
{
# 65 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
_Impl *__tmp = new _Impl(*(_M_impl), 1);
# 66 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
try
# 67 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
{
# 68 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
__tmp->_M_replace_facet(__other._M_impl, &_Facet::id);
# 69 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
}
# 70 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
catch (...)
# 71 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
{
# 72 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
__tmp->_M_remove_reference();
# 73 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
throw;
# 74 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
}
# 75 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
return ((locale)(__tmp));
# 76 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
}
# 78 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
template< class _CharT, class _Traits, class _Alloc> bool
# 81 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
locale::operator()(const basic_string< _CharT, _Traits, _Alloc> &__s1, const basic_string< _CharT, _Traits, _Alloc> &
# 82 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
__s2) const
# 83 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
{
# 84 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
typedef std::collate< _CharT> __collate_type;
# 85 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
const __collate_type &__collate = use_facet< std::collate< _CharT> > (*this);
# 86 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
return (__collate.compare((__s1.data()), (__s1.data()) + (__s1.length()), (__s2.data()), (__s2.data()) + (__s2.length()))) < 0;
# 88 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
}
# 102 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
template< class _Facet> bool
# 104 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
has_facet(const locale &__loc) throw()
# 105 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
{
# 106 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
const size_t __i = (_Facet::id._M_id)();
# 107 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
const locale::facet **__facets = (__loc._M_impl)->_M_facets;
# 108 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
return (__i < ((__loc._M_impl)->_M_facets_size)) && (dynamic_cast< const _Facet *>(__facets[__i]));
# 114 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
}
# 130 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
template< class _Facet> const _Facet &
# 132 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
use_facet(const locale &__loc)
# 133 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
{
# 134 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
const size_t __i = (_Facet::id._M_id)();
# 135 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
const locale::facet **__facets = (__loc._M_impl)->_M_facets;
# 136 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
if ((__i >= ((__loc._M_impl)->_M_facets_size)) || (!(__facets[__i]))) {
# 137 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
__throw_bad_cast(); }
# 139 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
return dynamic_cast< const _Facet &>(*(__facets[__i]));
# 143 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
}
# 147 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
template< class _CharT> int
# 149 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
collate< _CharT> ::_M_compare(const _CharT *, const _CharT *) const throw()
# 150 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
{ return 0; }
# 153 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
template< class _CharT> size_t
# 155 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
collate< _CharT> ::_M_transform(_CharT *, const _CharT *, size_t) const throw()
# 156 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
{ return 0; }
# 158 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
template< class _CharT> int
# 161 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
collate< _CharT> ::do_compare(const _CharT *__lo1, const _CharT *__hi1, const _CharT *
# 162 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
__lo2, const _CharT *__hi2) const
# 163 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
{
# 166 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
const string_type __one(__lo1, __hi1);
# 167 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
const string_type __two(__lo2, __hi2);
# 169 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
const _CharT *__p = (__one.c_str());
# 170 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
const _CharT *__pend = (__one.data()) + (__one.length());
# 171 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
const _CharT *__q = (__two.c_str());
# 172 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
const _CharT *__qend = (__two.data()) + (__two.length());
# 177 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
for (; ;)
# 178 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
{
# 179 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
const int __res = _M_compare(__p, __q);
# 180 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
if (__res) {
# 181 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
return __res; }
# 183 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
__p += char_traits< _CharT> ::length(__p);
# 184 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
__q += char_traits< _CharT> ::length(__q);
# 185 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
if ((__p == __pend) && (__q == __qend)) {
# 186 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
return 0; } else {
# 187 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
if (__p == __pend) {
# 188 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
return -1; } else {
# 189 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
if (__q == __qend) {
# 190 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
return 1; } } }
# 192 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
__p++;
# 193 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
__q++;
# 194 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
}
# 195 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
}
# 197 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
template< class _CharT> typename collate< _CharT> ::string_type
# 200 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
collate< _CharT> ::do_transform(const _CharT *__lo, const _CharT *__hi) const
# 201 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
{
# 202 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
string_type __ret;
# 205 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
const string_type __str(__lo, __hi);
# 207 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
const _CharT *__p = (__str.c_str());
# 208 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
const _CharT *__pend = (__str.data()) + (__str.length());
# 210 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
size_t __len = (__hi - __lo) * 2;
# 212 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
_CharT *__c = new _CharT [__len];
# 214 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
try
# 215 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
{
# 219 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
for (; ;)
# 220 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
{
# 222 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
size_t __res = _M_transform(__c, __p, __len);
# 225 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
if (__res >= __len)
# 226 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
{
# 227 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
__len = (__res + (1));
# 228 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
(delete [] __c), (__c = 0);
# 229 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
__c = (new _CharT [__len]);
# 230 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
__res = _M_transform(__c, __p, __len);
# 231 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
}
# 233 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
(__ret.append(__c, __res));
# 234 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
__p += char_traits< _CharT> ::length(__p);
# 235 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
if (__p == __pend) {
# 236 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
break; }
# 238 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
__p++;
# 239 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
(__ret.push_back(_CharT()));
# 240 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
}
# 241 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
}
# 242 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
catch (...)
# 243 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
{
# 244 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
delete [] __c;
# 245 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
throw;
# 246 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
}
# 248 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
delete [] __c;
# 250 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
return __ret;
# 251 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
}
# 253 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
template< class _CharT> long
# 256 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
collate< _CharT> ::do_hash(const _CharT *__lo, const _CharT *__hi) const
# 257 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
{
# 258 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
unsigned long __val = (0);
# 259 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
for (; __lo < __hi; ++__lo) {
# 260 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
__val = ((*__lo) + ((__val << 7) | (__val >> (__gnu_cxx::__numeric_traits_integer< unsigned long> ::__digits - 7)))); }
# 264 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
return static_cast< long>(__val);
# 265 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
}
# 270 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
extern template class collate< char> ;
# 271 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
extern template class collate_byname< char> ;
# 273 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
extern template const collate< char> &use_facet< collate< char> > (const locale &);
# 277 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
extern template bool has_facet< collate< char> > (const locale &) throw();
# 282 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
extern template class collate< wchar_t> ;
# 283 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
extern template class collate_byname< wchar_t> ;
# 285 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
extern template const collate< wchar_t> &use_facet< collate< wchar_t> > (const locale &);
# 289 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
extern template bool has_facet< collate< wchar_t> > (const locale &) throw();
# 296 "/usr/include/c++/4.8.2/bits/locale_classes.tcc" 3
}
# 43 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
namespace std __attribute((__visibility__("default"))) {
# 51 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
enum _Ios_Fmtflags {
# 53 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_S_boolalpha = 1,
# 54 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_S_dec,
# 55 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_S_fixed = 4,
# 56 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_S_hex = 8,
# 57 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_S_internal = 16,
# 58 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_S_left = 32,
# 59 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_S_oct = 64,
# 60 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_S_right = 128,
# 61 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_S_scientific = 256,
# 62 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_S_showbase = 512,
# 63 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_S_showpoint = 1024,
# 64 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_S_showpos = 2048,
# 65 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_S_skipws = 4096,
# 66 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_S_unitbuf = 8192,
# 67 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_S_uppercase = 16384,
# 68 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_S_adjustfield = 176,
# 69 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_S_basefield = 74,
# 70 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_S_floatfield = 260,
# 71 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_S_ios_fmtflags_end = 65536
# 72 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
};
# 75 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline _Ios_Fmtflags operator&(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
# 76 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{ return (_Ios_Fmtflags)((static_cast< int>(__a)) & (static_cast< int>(__b))); }
# 79 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline _Ios_Fmtflags operator|(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
# 80 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{ return (_Ios_Fmtflags)((static_cast< int>(__a)) | (static_cast< int>(__b))); }
# 83 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline _Ios_Fmtflags operator^(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
# 84 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{ return (_Ios_Fmtflags)((static_cast< int>(__a)) ^ (static_cast< int>(__b))); }
# 87 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline _Ios_Fmtflags operator~(_Ios_Fmtflags __a)
# 88 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{ return (_Ios_Fmtflags)(~(static_cast< int>(__a))); }
# 91 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline const _Ios_Fmtflags &operator|=(_Ios_Fmtflags &__a, _Ios_Fmtflags __b)
# 92 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{ return __a = ((__a | __b)); }
# 95 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline const _Ios_Fmtflags &operator&=(_Ios_Fmtflags &__a, _Ios_Fmtflags __b)
# 96 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{ return __a = ((__a & __b)); }
# 99 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline const _Ios_Fmtflags &operator^=(_Ios_Fmtflags &__a, _Ios_Fmtflags __b)
# 100 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{ return __a = ((__a ^ __b)); }
# 103 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
enum _Ios_Openmode {
# 105 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_S_app = 1,
# 106 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_S_ate,
# 107 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_S_bin = 4,
# 108 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_S_in = 8,
# 109 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_S_out = 16,
# 110 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_S_trunc = 32,
# 111 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_S_ios_openmode_end = 65536
# 112 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
};
# 115 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline _Ios_Openmode operator&(_Ios_Openmode __a, _Ios_Openmode __b)
# 116 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{ return (_Ios_Openmode)((static_cast< int>(__a)) & (static_cast< int>(__b))); }
# 119 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline _Ios_Openmode operator|(_Ios_Openmode __a, _Ios_Openmode __b)
# 120 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{ return (_Ios_Openmode)((static_cast< int>(__a)) | (static_cast< int>(__b))); }
# 123 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline _Ios_Openmode operator^(_Ios_Openmode __a, _Ios_Openmode __b)
# 124 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{ return (_Ios_Openmode)((static_cast< int>(__a)) ^ (static_cast< int>(__b))); }
# 127 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline _Ios_Openmode operator~(_Ios_Openmode __a)
# 128 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{ return (_Ios_Openmode)(~(static_cast< int>(__a))); }
# 131 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline const _Ios_Openmode &operator|=(_Ios_Openmode &__a, _Ios_Openmode __b)
# 132 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{ return __a = ((__a | __b)); }
# 135 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline const _Ios_Openmode &operator&=(_Ios_Openmode &__a, _Ios_Openmode __b)
# 136 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{ return __a = ((__a & __b)); }
# 139 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline const _Ios_Openmode &operator^=(_Ios_Openmode &__a, _Ios_Openmode __b)
# 140 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{ return __a = ((__a ^ __b)); }
# 143 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
enum _Ios_Iostate {
# 145 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_S_goodbit,
# 146 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_S_badbit,
# 147 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_S_eofbit,
# 148 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_S_failbit = 4,
# 149 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_S_ios_iostate_end = 65536
# 150 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
};
# 153 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline _Ios_Iostate operator&(_Ios_Iostate __a, _Ios_Iostate __b)
# 154 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{ return (_Ios_Iostate)((static_cast< int>(__a)) & (static_cast< int>(__b))); }
# 157 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline _Ios_Iostate operator|(_Ios_Iostate __a, _Ios_Iostate __b)
# 158 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{ return (_Ios_Iostate)((static_cast< int>(__a)) | (static_cast< int>(__b))); }
# 161 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline _Ios_Iostate operator^(_Ios_Iostate __a, _Ios_Iostate __b)
# 162 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{ return (_Ios_Iostate)((static_cast< int>(__a)) ^ (static_cast< int>(__b))); }
# 165 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline _Ios_Iostate operator~(_Ios_Iostate __a)
# 166 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{ return (_Ios_Iostate)(~(static_cast< int>(__a))); }
# 169 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline const _Ios_Iostate &operator|=(_Ios_Iostate &__a, _Ios_Iostate __b)
# 170 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{ return __a = ((__a | __b)); }
# 173 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline const _Ios_Iostate &operator&=(_Ios_Iostate &__a, _Ios_Iostate __b)
# 174 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{ return __a = ((__a & __b)); }
# 177 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline const _Ios_Iostate &operator^=(_Ios_Iostate &__a, _Ios_Iostate __b)
# 178 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{ return __a = ((__a ^ __b)); }
# 181 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
enum _Ios_Seekdir {
# 183 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_S_beg,
# 184 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_S_cur,
# 185 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_S_end,
# 186 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_S_ios_seekdir_end = 65536
# 187 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
};
# 199 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
class ios_base {
# 209 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
public: class failure : public exception {
# 215 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
public: explicit failure(const string & __str) throw();
# 220 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
virtual ~failure() throw();
# 223 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
virtual const char *what() const throw();
# 226 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
private: string _M_msg;
# 227 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
};
# 255 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
typedef _Ios_Fmtflags fmtflags;
# 258 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
static const fmtflags boolalpha = _S_boolalpha;
# 261 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
static const fmtflags dec = _S_dec;
# 264 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
static const fmtflags fixed = _S_fixed;
# 267 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
static const fmtflags hex = _S_hex;
# 272 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
static const fmtflags internal = _S_internal;
# 276 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
static const fmtflags left = _S_left;
# 279 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
static const fmtflags oct = _S_oct;
# 283 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
static const fmtflags right = _S_right;
# 286 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
static const fmtflags scientific = _S_scientific;
# 290 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
static const fmtflags showbase = _S_showbase;
# 294 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
static const fmtflags showpoint = _S_showpoint;
# 297 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
static const fmtflags showpos = _S_showpos;
# 300 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
static const fmtflags skipws = _S_skipws;
# 303 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
static const fmtflags unitbuf = _S_unitbuf;
# 307 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
static const fmtflags uppercase = _S_uppercase;
# 310 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
static const fmtflags adjustfield = _S_adjustfield;
# 313 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
static const fmtflags basefield = _S_basefield;
# 316 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
static const fmtflags floatfield = _S_floatfield;
# 330 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
typedef _Ios_Iostate iostate;
# 334 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
static const iostate badbit = _S_badbit;
# 337 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
static const iostate eofbit = _S_eofbit;
# 342 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
static const iostate failbit = _S_failbit;
# 345 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
static const iostate goodbit = _S_goodbit;
# 361 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
typedef _Ios_Openmode openmode;
# 364 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
static const openmode app = _S_app;
# 367 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
static const openmode ate = _S_ate;
# 372 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
static const openmode binary = _S_bin;
# 375 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
static const openmode in = _S_in;
# 378 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
static const openmode out = _S_out;
# 381 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
static const openmode trunc = _S_trunc;
# 393 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
typedef _Ios_Seekdir seekdir;
# 396 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
static const seekdir beg = _S_beg;
# 399 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
static const seekdir cur = _S_cur;
# 402 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
static const seekdir end = _S_end;
# 405 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
typedef int io_state;
# 406 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
typedef int open_mode;
# 407 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
typedef int seek_dir;
# 409 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
typedef std::streampos streampos;
# 410 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
typedef std::streamoff streamoff;
# 419 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
enum event {
# 421 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
erase_event,
# 422 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
imbue_event,
# 423 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
copyfmt_event
# 424 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
};
# 436 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
typedef void (*event_callback)(event __e, ios_base & __b, int __i);
# 449 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
void register_callback(event_callback __fn, int __index);
# 452 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
protected: streamsize _M_precision;
# 453 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
streamsize _M_width;
# 454 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
fmtflags _M_flags;
# 455 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
iostate _M_exception;
# 456 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
iostate _M_streambuf_state;
# 460 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
struct _Callback_list {
# 463 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_Callback_list *_M_next;
# 464 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
event_callback _M_fn;
# 465 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
int _M_index;
# 466 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_Atomic_word _M_refcount;
# 468 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_Callback_list(event_callback __fn, int __index, _Callback_list *
# 469 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
__cb) : _M_next(__cb), _M_fn(__fn), _M_index(__index), _M_refcount(0)
# 470 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{ }
# 473 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
void _M_add_reference() { __gnu_cxx::__atomic_add_dispatch(&(_M_refcount), 1); }
# 477 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
int _M_remove_reference()
# 478 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{
# 480 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
;
# 481 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
int __res = __gnu_cxx::__exchange_and_add_dispatch(&(_M_refcount), -1);
# 482 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
if (__res == 0)
# 483 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{
# 484 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
;
# 485 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
}
# 486 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
return __res;
# 487 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
}
# 488 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
};
# 490 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_Callback_list *_M_callbacks;
# 493 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
void _M_call_callbacks(event __ev) throw();
# 496 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
void _M_dispose_callbacks() throw();
# 499 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
struct _Words {
# 501 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
void *_M_pword;
# 502 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
long _M_iword;
# 503 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_Words() : _M_pword((0)), _M_iword((0)) { }
# 504 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
};
# 507 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_Words _M_word_zero;
# 511 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
enum { _S_local_word_size = 8};
# 512 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_Words _M_local_word[_S_local_word_size];
# 515 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
int _M_word_size;
# 516 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_Words *_M_word;
# 519 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_Words &_M_grow_words(int __index, bool __iword);
# 522 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
locale _M_ios_locale;
# 525 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
void _M_init() throw();
# 533 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
public: class Init {
# 535 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
friend class ios_base;
# 537 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
public: Init();
# 538 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
~Init();
# 541 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
private: static _Atomic_word _S_refcount;
# 542 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
static bool _S_synced_with_stdio;
# 543 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
};
# 551 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
fmtflags flags() const
# 552 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{ return _M_flags; }
# 562 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
fmtflags flags(fmtflags __fmtfl)
# 563 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{
# 564 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
fmtflags __old = _M_flags;
# 565 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
(_M_flags) = __fmtfl;
# 566 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
return __old;
# 567 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
}
# 578 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
fmtflags setf(fmtflags __fmtfl)
# 579 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{
# 580 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
fmtflags __old = _M_flags;
# 581 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
((_M_flags) |= __fmtfl);
# 582 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
return __old;
# 583 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
}
# 595 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
fmtflags setf(fmtflags __fmtfl, fmtflags __mask)
# 596 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{
# 597 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
fmtflags __old = _M_flags;
# 598 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
((_M_flags) &= ((~__mask)));
# 599 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
((_M_flags) |= ((__fmtfl & __mask)));
# 600 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
return __old;
# 601 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
}
# 610 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
void unsetf(fmtflags __mask)
# 611 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{ ((_M_flags) &= ((~__mask))); }
# 621 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
streamsize precision() const
# 622 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{ return _M_precision; }
# 630 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
streamsize precision(streamsize __prec)
# 631 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{
# 632 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
streamsize __old = _M_precision;
# 633 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
(_M_precision) = __prec;
# 634 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
return __old;
# 635 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
}
# 644 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
streamsize width() const
# 645 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{ return _M_width; }
# 653 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
streamsize width(streamsize __wide)
# 654 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{
# 655 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
streamsize __old = _M_width;
# 656 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
(_M_width) = __wide;
# 657 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
return __old;
# 658 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
}
# 672 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
static bool sync_with_stdio(bool __sync = true);
# 684 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
locale imbue(const locale & __loc) throw();
# 695 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
locale getloc() const
# 696 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{ return _M_ios_locale; }
# 706 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
const locale &_M_getloc() const
# 707 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{ return _M_ios_locale; }
# 725 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
static int xalloc() throw();
# 741 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
long &iword(int __ix)
# 742 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{
# 743 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_Words &__word = (__ix < (_M_word_size)) ? (_M_word)[__ix] : this->_M_grow_words(__ix, true);
# 745 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
return __word._M_iword;
# 746 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
}
# 762 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
void *&pword(int __ix)
# 763 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{
# 764 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
_Words &__word = (__ix < (_M_word_size)) ? (_M_word)[__ix] : this->_M_grow_words(__ix, false);
# 766 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
return __word._M_pword;
# 767 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
}
# 778 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
virtual ~ios_base();
# 781 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
protected: ios_base() throw();
# 786 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
private: ios_base(const ios_base &);
# 789 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
ios_base &operator=(const ios_base &);
# 790 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
};
# 795 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline ios_base &boolalpha(ios_base &__base)
# 796 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{
# 797 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
__base.setf(ios_base::boolalpha);
# 798 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
return __base;
# 799 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
}
# 803 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline ios_base &noboolalpha(ios_base &__base)
# 804 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{
# 805 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
__base.unsetf(ios_base::boolalpha);
# 806 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
return __base;
# 807 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
}
# 811 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline ios_base &showbase(ios_base &__base)
# 812 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{
# 813 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
__base.setf(ios_base::showbase);
# 814 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
return __base;
# 815 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
}
# 819 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline ios_base &noshowbase(ios_base &__base)
# 820 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{
# 821 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
__base.unsetf(ios_base::showbase);
# 822 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
return __base;
# 823 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
}
# 827 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline ios_base &showpoint(ios_base &__base)
# 828 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{
# 829 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
__base.setf(ios_base::showpoint);
# 830 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
return __base;
# 831 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
}
# 835 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline ios_base &noshowpoint(ios_base &__base)
# 836 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{
# 837 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
__base.unsetf(ios_base::showpoint);
# 838 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
return __base;
# 839 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
}
# 843 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline ios_base &showpos(ios_base &__base)
# 844 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{
# 845 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
__base.setf(ios_base::showpos);
# 846 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
return __base;
# 847 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
}
# 851 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline ios_base &noshowpos(ios_base &__base)
# 852 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{
# 853 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
__base.unsetf(ios_base::showpos);
# 854 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
return __base;
# 855 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
}
# 859 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline ios_base &skipws(ios_base &__base)
# 860 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{
# 861 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
__base.setf(ios_base::skipws);
# 862 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
return __base;
# 863 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
}
# 867 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline ios_base &noskipws(ios_base &__base)
# 868 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{
# 869 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
__base.unsetf(ios_base::skipws);
# 870 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
return __base;
# 871 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
}
# 875 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline ios_base &uppercase(ios_base &__base)
# 876 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{
# 877 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
__base.setf(ios_base::uppercase);
# 878 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
return __base;
# 879 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
}
# 883 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline ios_base &nouppercase(ios_base &__base)
# 884 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{
# 885 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
__base.unsetf(ios_base::uppercase);
# 886 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
return __base;
# 887 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
}
# 891 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline ios_base &unitbuf(ios_base &__base)
# 892 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{
# 893 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
__base.setf(ios_base::unitbuf);
# 894 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
return __base;
# 895 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
}
# 899 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline ios_base &nounitbuf(ios_base &__base)
# 900 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{
# 901 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
__base.unsetf(ios_base::unitbuf);
# 902 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
return __base;
# 903 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
}
# 908 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline ios_base &internal(ios_base &__base)
# 909 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{
# 910 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
__base.setf(ios_base::internal, ios_base::adjustfield);
# 911 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
return __base;
# 912 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
}
# 916 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline ios_base &left(ios_base &__base)
# 917 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{
# 918 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
__base.setf(ios_base::left, ios_base::adjustfield);
# 919 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
return __base;
# 920 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
}
# 924 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline ios_base &right(ios_base &__base)
# 925 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{
# 926 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
__base.setf(ios_base::right, ios_base::adjustfield);
# 927 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
return __base;
# 928 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
}
# 933 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline ios_base &dec(ios_base &__base)
# 934 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{
# 935 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
__base.setf(ios_base::dec, ios_base::basefield);
# 936 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
return __base;
# 937 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
}
# 941 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline ios_base &hex(ios_base &__base)
# 942 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{
# 943 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
__base.setf(ios_base::hex, ios_base::basefield);
# 944 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
return __base;
# 945 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
}
# 949 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline ios_base &oct(ios_base &__base)
# 950 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{
# 951 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
__base.setf(ios_base::oct, ios_base::basefield);
# 952 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
return __base;
# 953 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
}
# 958 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline ios_base &fixed(ios_base &__base)
# 959 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{
# 960 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
__base.setf(ios_base::fixed, ios_base::floatfield);
# 961 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
return __base;
# 962 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
}
# 966 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
inline ios_base &scientific(ios_base &__base)
# 967 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
{
# 968 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
__base.setf(ios_base::scientific, ios_base::floatfield);
# 969 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
return __base;
# 970 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
}
# 973 "/usr/include/c++/4.8.2/bits/ios_base.h" 3
}
# 45 "/usr/include/c++/4.8.2/streambuf" 3
namespace std __attribute((__visibility__("default"))) {
# 49 "/usr/include/c++/4.8.2/streambuf" 3
template< class _CharT, class _Traits> streamsize __copy_streambufs_eof(basic_streambuf< _CharT, _Traits> *, basic_streambuf< _CharT, _Traits> *, bool &);
# 119 "/usr/include/c++/4.8.2/streambuf" 3
template< class _CharT, class _Traits>
# 120 "/usr/include/c++/4.8.2/streambuf" 3
class basic_streambuf {
# 129 "/usr/include/c++/4.8.2/streambuf" 3
public: typedef _CharT char_type;
# 130 "/usr/include/c++/4.8.2/streambuf" 3
typedef _Traits traits_type;
# 131 "/usr/include/c++/4.8.2/streambuf" 3
typedef typename _Traits::int_type int_type;
# 132 "/usr/include/c++/4.8.2/streambuf" 3
typedef typename _Traits::pos_type pos_type;
# 133 "/usr/include/c++/4.8.2/streambuf" 3
typedef typename _Traits::off_type off_type;
# 138 "/usr/include/c++/4.8.2/streambuf" 3
typedef basic_streambuf __streambuf_type;
# 141 "/usr/include/c++/4.8.2/streambuf" 3
friend class basic_ios< _CharT, _Traits> ;
# 142 "/usr/include/c++/4.8.2/streambuf" 3
friend class basic_istream< _CharT, _Traits> ;
# 143 "/usr/include/c++/4.8.2/streambuf" 3
friend class basic_ostream< _CharT, _Traits> ;
# 144 "/usr/include/c++/4.8.2/streambuf" 3
friend class istreambuf_iterator< _CharT, _Traits> ;
# 145 "/usr/include/c++/4.8.2/streambuf" 3
friend class ostreambuf_iterator< _CharT, _Traits> ;
# 148 "/usr/include/c++/4.8.2/streambuf" 3
friend streamsize __copy_streambufs_eof<> (basic_streambuf *, basic_streambuf *, bool &);
# 150 "/usr/include/c++/4.8.2/streambuf" 3
template< bool _IsMove, class _CharT2> friend typename __gnu_cxx::__enable_if< __is_char< _CharT2> ::__value, _CharT2 *> ::__type __copy_move_a2(istreambuf_iterator< _CharT2> , istreambuf_iterator< _CharT2> , _CharT2 *);
# 156 "/usr/include/c++/4.8.2/streambuf" 3
template< class _CharT2> friend typename __gnu_cxx::__enable_if< __is_char< _CharT2> ::__value, istreambuf_iterator< _CharT2> > ::__type find(istreambuf_iterator< _CharT2> , istreambuf_iterator< _CharT2> , const _CharT2 &);
# 162 "/usr/include/c++/4.8.2/streambuf" 3
template< class _CharT2, class _Traits2> friend basic_istream< _CharT2, _Traits2> &operator>>(basic_istream< _CharT2, _Traits2> &, _CharT2 *);
# 166 "/usr/include/c++/4.8.2/streambuf" 3
template< class _CharT2, class _Traits2, class _Alloc> friend basic_istream< _CharT2, _Traits2> &operator>>(basic_istream< _CharT2, _Traits2> &, basic_string< _CharT2, _Traits2, _Alloc> &);
# 171 "/usr/include/c++/4.8.2/streambuf" 3
template< class _CharT2, class _Traits2, class _Alloc> friend basic_istream< _CharT2, _Traits2> &getline(basic_istream< _CharT2, _Traits2> &, basic_string< _CharT2, _Traits2, _Alloc> &, _CharT2);
# 184 "/usr/include/c++/4.8.2/streambuf" 3
protected: char_type *_M_in_beg;
# 185 "/usr/include/c++/4.8.2/streambuf" 3
char_type *_M_in_cur;
# 186 "/usr/include/c++/4.8.2/streambuf" 3
char_type *_M_in_end;
# 187 "/usr/include/c++/4.8.2/streambuf" 3
char_type *_M_out_beg;
# 188 "/usr/include/c++/4.8.2/streambuf" 3
char_type *_M_out_cur;
# 189 "/usr/include/c++/4.8.2/streambuf" 3
char_type *_M_out_end;
# 192 "/usr/include/c++/4.8.2/streambuf" 3
locale _M_buf_locale;
# 197 "/usr/include/c++/4.8.2/streambuf" 3
public: virtual ~basic_streambuf()
# 198 "/usr/include/c++/4.8.2/streambuf" 3
{ }
# 209 "/usr/include/c++/4.8.2/streambuf" 3
locale pubimbue(const locale &__loc)
# 210 "/usr/include/c++/4.8.2/streambuf" 3
{
# 211 "/usr/include/c++/4.8.2/streambuf" 3
locale __tmp(this->getloc());
# 212 "/usr/include/c++/4.8.2/streambuf" 3
this->imbue(__loc);
# 213 "/usr/include/c++/4.8.2/streambuf" 3
((_M_buf_locale) = __loc);
# 214 "/usr/include/c++/4.8.2/streambuf" 3
return __tmp;
# 215 "/usr/include/c++/4.8.2/streambuf" 3
}
# 226 "/usr/include/c++/4.8.2/streambuf" 3
locale getloc() const
# 227 "/usr/include/c++/4.8.2/streambuf" 3
{ return _M_buf_locale; }
# 239 "/usr/include/c++/4.8.2/streambuf" 3
basic_streambuf *pubsetbuf(char_type *__s, streamsize __n)
# 240 "/usr/include/c++/4.8.2/streambuf" 3
{ return this->setbuf(__s, __n); }
# 251 "/usr/include/c++/4.8.2/streambuf" 3
pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode
# 252 "/usr/include/c++/4.8.2/streambuf" 3
__mode = (ios_base::in | ios_base::out))
# 253 "/usr/include/c++/4.8.2/streambuf" 3
{ return this->seekoff(__off, __way, __mode); }
# 263 "/usr/include/c++/4.8.2/streambuf" 3
pos_type pubseekpos(pos_type __sp, ios_base::openmode
# 264 "/usr/include/c++/4.8.2/streambuf" 3
__mode = (ios_base::in | ios_base::out))
# 265 "/usr/include/c++/4.8.2/streambuf" 3
{ return this->seekpos(__sp, __mode); }
# 271 "/usr/include/c++/4.8.2/streambuf" 3
int pubsync() { return this->sync(); }
# 284 "/usr/include/c++/4.8.2/streambuf" 3
streamsize in_avail()
# 285 "/usr/include/c++/4.8.2/streambuf" 3
{
# 286 "/usr/include/c++/4.8.2/streambuf" 3
const streamsize __ret = this->egptr() - this->gptr();
# 287 "/usr/include/c++/4.8.2/streambuf" 3
return (__ret) ? __ret : this->showmanyc();
# 288 "/usr/include/c++/4.8.2/streambuf" 3
}
# 298 "/usr/include/c++/4.8.2/streambuf" 3
int_type snextc()
# 299 "/usr/include/c++/4.8.2/streambuf" 3
{
# 300 "/usr/include/c++/4.8.2/streambuf" 3
int_type __ret = traits_type::eof();
# 301 "/usr/include/c++/4.8.2/streambuf" 3
if (__builtin_expect(!traits_type::eq_int_type(this->sbumpc(), __ret), true)) {
# 303 "/usr/include/c++/4.8.2/streambuf" 3
__ret = this->sgetc(); }
# 304 "/usr/include/c++/4.8.2/streambuf" 3
return __ret;
# 305 "/usr/include/c++/4.8.2/streambuf" 3
}
# 316 "/usr/include/c++/4.8.2/streambuf" 3
int_type sbumpc()
# 317 "/usr/include/c++/4.8.2/streambuf" 3
{
# 318 "/usr/include/c++/4.8.2/streambuf" 3
int_type __ret;
# 319 "/usr/include/c++/4.8.2/streambuf" 3
if (__builtin_expect(this->gptr() < this->egptr(), true))
# 320 "/usr/include/c++/4.8.2/streambuf" 3
{
# 321 "/usr/include/c++/4.8.2/streambuf" 3
__ret = traits_type::to_int_type(*this->gptr());
# 322 "/usr/include/c++/4.8.2/streambuf" 3
this->gbump(1);
# 323 "/usr/include/c++/4.8.2/streambuf" 3
} else {
# 325 "/usr/include/c++/4.8.2/streambuf" 3
__ret = this->uflow(); }
# 326 "/usr/include/c++/4.8.2/streambuf" 3
return __ret;
# 327 "/usr/include/c++/4.8.2/streambuf" 3
}
# 338 "/usr/include/c++/4.8.2/streambuf" 3
int_type sgetc()
# 339 "/usr/include/c++/4.8.2/streambuf" 3
{
# 340 "/usr/include/c++/4.8.2/streambuf" 3
int_type __ret;
# 341 "/usr/include/c++/4.8.2/streambuf" 3
if (__builtin_expect(this->gptr() < this->egptr(), true)) {
# 342 "/usr/include/c++/4.8.2/streambuf" 3
__ret = traits_type::to_int_type(*this->gptr()); } else {
# 344 "/usr/include/c++/4.8.2/streambuf" 3
__ret = this->underflow(); }
# 345 "/usr/include/c++/4.8.2/streambuf" 3
return __ret;
# 346 "/usr/include/c++/4.8.2/streambuf" 3
}
# 357 "/usr/include/c++/4.8.2/streambuf" 3
streamsize sgetn(char_type *__s, streamsize __n)
# 358 "/usr/include/c++/4.8.2/streambuf" 3
{ return this->xsgetn(__s, __n); }
# 372 "/usr/include/c++/4.8.2/streambuf" 3
int_type sputbackc(char_type __c)
# 373 "/usr/include/c++/4.8.2/streambuf" 3
{
# 374 "/usr/include/c++/4.8.2/streambuf" 3
int_type __ret;
# 375 "/usr/include/c++/4.8.2/streambuf" 3
const bool __testpos = this->eback() < this->gptr();
# 376 "/usr/include/c++/4.8.2/streambuf" 3
if (__builtin_expect((!__testpos) || (!traits_type::eq(__c, this->gptr()[-1])), false)) {
# 378 "/usr/include/c++/4.8.2/streambuf" 3
__ret = this->pbackfail(traits_type::to_int_type(__c)); } else
# 380 "/usr/include/c++/4.8.2/streambuf" 3
{
# 381 "/usr/include/c++/4.8.2/streambuf" 3
this->gbump(-1);
# 382 "/usr/include/c++/4.8.2/streambuf" 3
__ret = traits_type::to_int_type(*this->gptr());
# 383 "/usr/include/c++/4.8.2/streambuf" 3
}
# 384 "/usr/include/c++/4.8.2/streambuf" 3
return __ret;
# 385 "/usr/include/c++/4.8.2/streambuf" 3
}
# 397 "/usr/include/c++/4.8.2/streambuf" 3
int_type sungetc()
# 398 "/usr/include/c++/4.8.2/streambuf" 3
{
# 399 "/usr/include/c++/4.8.2/streambuf" 3
int_type __ret;
# 400 "/usr/include/c++/4.8.2/streambuf" 3
if (__builtin_expect(this->eback() < this->gptr(), true))
# 401 "/usr/include/c++/4.8.2/streambuf" 3
{
# 402 "/usr/include/c++/4.8.2/streambuf" 3
this->gbump(-1);
# 403 "/usr/include/c++/4.8.2/streambuf" 3
__ret = traits_type::to_int_type(*this->gptr());
# 404 "/usr/include/c++/4.8.2/streambuf" 3
} else {
# 406 "/usr/include/c++/4.8.2/streambuf" 3
__ret = this->pbackfail(); }
# 407 "/usr/include/c++/4.8.2/streambuf" 3
return __ret;
# 408 "/usr/include/c++/4.8.2/streambuf" 3
}
# 424 "/usr/include/c++/4.8.2/streambuf" 3
int_type sputc(char_type __c)
# 425 "/usr/include/c++/4.8.2/streambuf" 3
{
# 426 "/usr/include/c++/4.8.2/streambuf" 3
int_type __ret;
# 427 "/usr/include/c++/4.8.2/streambuf" 3
if (__builtin_expect(this->pptr() < this->epptr(), true))
# 428 "/usr/include/c++/4.8.2/streambuf" 3
{
# 429 "/usr/include/c++/4.8.2/streambuf" 3
(*this->pptr()) = __c;
# 430 "/usr/include/c++/4.8.2/streambuf" 3
this->pbump(1);
# 431 "/usr/include/c++/4.8.2/streambuf" 3
__ret = traits_type::to_int_type(__c);
# 432 "/usr/include/c++/4.8.2/streambuf" 3
} else {
# 434 "/usr/include/c++/4.8.2/streambuf" 3
__ret = this->overflow(traits_type::to_int_type(__c)); }
# 435 "/usr/include/c++/4.8.2/streambuf" 3
return __ret;
# 436 "/usr/include/c++/4.8.2/streambuf" 3
}
# 450 "/usr/include/c++/4.8.2/streambuf" 3
streamsize sputn(const char_type *__s, streamsize __n)
# 451 "/usr/include/c++/4.8.2/streambuf" 3
{ return this->xsputn(__s, __n); }
# 463 "/usr/include/c++/4.8.2/streambuf" 3
protected: basic_streambuf() : _M_in_beg((0)), _M_in_cur((0)), _M_in_end((0)), _M_out_beg((0)), _M_out_cur((0)), _M_out_end((0)), _M_buf_locale(locale())
# 467 "/usr/include/c++/4.8.2/streambuf" 3
{ }
# 482 "/usr/include/c++/4.8.2/streambuf" 3
char_type *eback() const { return _M_in_beg; }
# 485 "/usr/include/c++/4.8.2/streambuf" 3
char_type *gptr() const { return _M_in_cur; }
# 488 "/usr/include/c++/4.8.2/streambuf" 3
char_type *egptr() const { return _M_in_end; }
# 498 "/usr/include/c++/4.8.2/streambuf" 3
void gbump(int __n) { (_M_in_cur) += __n; }
# 509 "/usr/include/c++/4.8.2/streambuf" 3
void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend)
# 510 "/usr/include/c++/4.8.2/streambuf" 3
{
# 511 "/usr/include/c++/4.8.2/streambuf" 3
(_M_in_beg) = __gbeg;
# 512 "/usr/include/c++/4.8.2/streambuf" 3
(_M_in_cur) = __gnext;
# 513 "/usr/include/c++/4.8.2/streambuf" 3
(_M_in_end) = __gend;
# 514 "/usr/include/c++/4.8.2/streambuf" 3
}
# 529 "/usr/include/c++/4.8.2/streambuf" 3
char_type *pbase() const { return _M_out_beg; }
# 532 "/usr/include/c++/4.8.2/streambuf" 3
char_type *pptr() const { return _M_out_cur; }
# 535 "/usr/include/c++/4.8.2/streambuf" 3
char_type *epptr() const { return _M_out_end; }
# 545 "/usr/include/c++/4.8.2/streambuf" 3
void pbump(int __n) { (_M_out_cur) += __n; }
# 555 "/usr/include/c++/4.8.2/streambuf" 3
void setp(char_type *__pbeg, char_type *__pend)
# 556 "/usr/include/c++/4.8.2/streambuf" 3
{
# 557 "/usr/include/c++/4.8.2/streambuf" 3
(_M_out_beg) = ((_M_out_cur) = __pbeg);
# 558 "/usr/include/c++/4.8.2/streambuf" 3
(_M_out_end) = __pend;
# 559 "/usr/include/c++/4.8.2/streambuf" 3
}
# 576 "/usr/include/c++/4.8.2/streambuf" 3
virtual void imbue(const locale &__loc)
# 577 "/usr/include/c++/4.8.2/streambuf" 3
{ }
# 591 "/usr/include/c++/4.8.2/streambuf" 3
virtual basic_streambuf *setbuf(char_type *, streamsize)
# 592 "/usr/include/c++/4.8.2/streambuf" 3
{ return this; }
# 602 "/usr/include/c++/4.8.2/streambuf" 3
virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode = (ios_base::in | ios_base::out))
# 604 "/usr/include/c++/4.8.2/streambuf" 3
{ return (pos_type)((off_type)(-1)); }
# 614 "/usr/include/c++/4.8.2/streambuf" 3
virtual pos_type seekpos(pos_type, ios_base::openmode = (ios_base::in | ios_base::out))
# 616 "/usr/include/c++/4.8.2/streambuf" 3
{ return (pos_type)((off_type)(-1)); }
# 627 "/usr/include/c++/4.8.2/streambuf" 3
virtual int sync() { return 0; }
# 649 "/usr/include/c++/4.8.2/streambuf" 3
virtual streamsize showmanyc() { return 0; }
# 665 "/usr/include/c++/4.8.2/streambuf" 3
virtual streamsize xsgetn(char_type * __s, streamsize __n);
# 687 "/usr/include/c++/4.8.2/streambuf" 3
virtual int_type underflow()
# 688 "/usr/include/c++/4.8.2/streambuf" 3
{ return traits_type::eof(); }
# 700 "/usr/include/c++/4.8.2/streambuf" 3
virtual int_type uflow()
# 701 "/usr/include/c++/4.8.2/streambuf" 3
{
# 702 "/usr/include/c++/4.8.2/streambuf" 3
int_type __ret = traits_type::eof();
# 703 "/usr/include/c++/4.8.2/streambuf" 3
const bool __testeof = traits_type::eq_int_type(this->underflow(), __ret);
# 705 "/usr/include/c++/4.8.2/streambuf" 3
if (!__testeof)
# 706 "/usr/include/c++/4.8.2/streambuf" 3
{
# 707 "/usr/include/c++/4.8.2/streambuf" 3
__ret = traits_type::to_int_type(*this->gptr());
# 708 "/usr/include/c++/4.8.2/streambuf" 3
this->gbump(1);
# 709 "/usr/include/c++/4.8.2/streambuf" 3
}
# 710 "/usr/include/c++/4.8.2/streambuf" 3
return __ret;
# 711 "/usr/include/c++/4.8.2/streambuf" 3
}
# 724 "/usr/include/c++/4.8.2/streambuf" 3
virtual int_type pbackfail(int_type __c = traits_type::eof())
# 725 "/usr/include/c++/4.8.2/streambuf" 3
{ return traits_type::eof(); }
# 742 "/usr/include/c++/4.8.2/streambuf" 3
virtual streamsize xsputn(const char_type * __s, streamsize __n);
# 768 "/usr/include/c++/4.8.2/streambuf" 3
virtual int_type overflow(int_type __c = traits_type::eof())
# 769 "/usr/include/c++/4.8.2/streambuf" 3
{ return traits_type::eof(); }
# 783 "/usr/include/c++/4.8.2/streambuf" 3
public: void stossc()
# 784 "/usr/include/c++/4.8.2/streambuf" 3
{
# 785 "/usr/include/c++/4.8.2/streambuf" 3
if (this->gptr() < this->egptr()) {
# 786 "/usr/include/c++/4.8.2/streambuf" 3
this->gbump(1); } else {
# 788 "/usr/include/c++/4.8.2/streambuf" 3
this->uflow(); }
# 789 "/usr/include/c++/4.8.2/streambuf" 3
}
# 794 "/usr/include/c++/4.8.2/streambuf" 3
void __safe_gbump(streamsize __n) { (_M_in_cur) += __n; }
# 797 "/usr/include/c++/4.8.2/streambuf" 3
void __safe_pbump(streamsize __n) { (_M_out_cur) += __n; }
# 802 "/usr/include/c++/4.8.2/streambuf" 3
private: basic_streambuf(const basic_streambuf &__sb) : _M_in_beg(((__sb._M_in_beg))), _M_in_cur(((__sb._M_in_cur))), _M_in_end(((__sb._M_in_end))), _M_out_beg(((__sb._M_out_beg))), _M_out_cur(((__sb._M_out_cur))), _M_out_end(((__sb._M_out_end))), _M_buf_locale((__sb._M_buf_locale))
# 807 "/usr/include/c++/4.8.2/streambuf" 3
{ }
# 810 "/usr/include/c++/4.8.2/streambuf" 3
basic_streambuf &operator=(const basic_streambuf &__sb)
# 811 "/usr/include/c++/4.8.2/streambuf" 3
{
# 812 "/usr/include/c++/4.8.2/streambuf" 3
(_M_in_beg) = (__sb._M_in_beg);
# 813 "/usr/include/c++/4.8.2/streambuf" 3
(_M_in_cur) = (__sb._M_in_cur);
# 814 "/usr/include/c++/4.8.2/streambuf" 3
(_M_in_end) = (__sb._M_in_end);
# 815 "/usr/include/c++/4.8.2/streambuf" 3
(_M_out_beg) = (__sb._M_out_beg);
# 816 "/usr/include/c++/4.8.2/streambuf" 3
(_M_out_cur) = (__sb._M_out_cur);
# 817 "/usr/include/c++/4.8.2/streambuf" 3
(_M_out_end) = (__sb._M_out_end);
# 818 "/usr/include/c++/4.8.2/streambuf" 3
(_M_buf_locale) = (__sb._M_buf_locale);
# 819 "/usr/include/c++/4.8.2/streambuf" 3
return *this;
# 820 "/usr/include/c++/4.8.2/streambuf" 3
}
# 821 "/usr/include/c++/4.8.2/streambuf" 3
};
# 826 "/usr/include/c++/4.8.2/streambuf" 3
template<> streamsize __copy_streambufs_eof(basic_streambuf< char, char_traits< char> > * __sbin, basic_streambuf< char, char_traits< char> > * __sbout, bool & __ineof);
# 831 "/usr/include/c++/4.8.2/streambuf" 3
template<> streamsize __copy_streambufs_eof(basic_streambuf< wchar_t, char_traits< wchar_t> > * __sbin, basic_streambuf< wchar_t, char_traits< wchar_t> > * __sbout, bool & __ineof);
# 836 "/usr/include/c++/4.8.2/streambuf" 3
}
# 39 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 43 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
template< class _CharT, class _Traits> streamsize
# 46 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
basic_streambuf< _CharT, _Traits> ::xsgetn(char_type *__s, streamsize __n)
# 47 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
{
# 48 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
streamsize __ret = (0);
# 49 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
while (__ret < __n)
# 50 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
{
# 51 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
const streamsize __buf_len = this->egptr() - this->gptr();
# 52 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
if (__buf_len)
# 53 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
{
# 54 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
const streamsize __remaining = __n - __ret;
# 55 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
const streamsize __len = std::min(__buf_len, __remaining);
# 56 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
traits_type::copy(__s, this->gptr(), __len);
# 57 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
__ret += __len;
# 58 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
__s += __len;
# 59 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
this->__safe_gbump(__len);
# 60 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
}
# 62 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
if (__ret < __n)
# 63 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
{
# 64 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
const int_type __c = this->uflow();
# 65 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
if (!traits_type::eq_int_type(__c, traits_type::eof()))
# 66 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
{
# 67 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
traits_type::assign(*(__s++), traits_type::to_char_type(__c));
# 68 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
++__ret;
# 69 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
} else {
# 71 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
break; }
# 72 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
}
# 73 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
}
# 74 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
return __ret;
# 75 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
}
# 77 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
template< class _CharT, class _Traits> streamsize
# 80 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
basic_streambuf< _CharT, _Traits> ::xsputn(const char_type *__s, streamsize __n)
# 81 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
{
# 82 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
streamsize __ret = (0);
# 83 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
while (__ret < __n)
# 84 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
{
# 85 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
const streamsize __buf_len = this->epptr() - this->pptr();
# 86 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
if (__buf_len)
# 87 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
{
# 88 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
const streamsize __remaining = __n - __ret;
# 89 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
const streamsize __len = std::min(__buf_len, __remaining);
# 90 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
traits_type::copy(this->pptr(), __s, __len);
# 91 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
__ret += __len;
# 92 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
__s += __len;
# 93 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
this->__safe_pbump(__len);
# 94 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
}
# 96 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
if (__ret < __n)
# 97 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
{
# 98 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
int_type __c = this->overflow(traits_type::to_int_type(*__s));
# 99 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
if (!traits_type::eq_int_type(__c, traits_type::eof()))
# 100 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
{
# 101 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
++__ret;
# 102 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
++__s;
# 103 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
} else {
# 105 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
break; }
# 106 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
}
# 107 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
}
# 108 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
return __ret;
# 109 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
}
# 114 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
template< class _CharT, class _Traits> streamsize
# 116 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
__copy_streambufs_eof(basic_streambuf< _CharT, _Traits> *__sbin, basic_streambuf< _CharT, _Traits> *
# 117 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
__sbout, bool &
# 118 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
__ineof)
# 119 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
{
# 120 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
streamsize __ret = (0);
# 121 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
__ineof = true;
# 122 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
typename _Traits::int_type __c = (__sbin->sgetc());
# 123 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
while (!_Traits::eq_int_type(__c, _Traits::eof()))
# 124 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
{
# 125 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
__c = (__sbout->sputc(_Traits::to_char_type(__c)));
# 126 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
if (_Traits::eq_int_type(__c, _Traits::eof()))
# 127 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
{
# 128 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
__ineof = false;
# 129 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
break;
# 130 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
}
# 131 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
++__ret;
# 132 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
__c = (__sbin->snextc());
# 133 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
}
# 134 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
return __ret;
# 135 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
}
# 137 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
template< class _CharT, class _Traits> inline streamsize
# 139 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
__copy_streambufs(basic_streambuf< _CharT, _Traits> *__sbin, basic_streambuf< _CharT, _Traits> *
# 140 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
__sbout)
# 141 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
{
# 142 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
bool __ineof;
# 143 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
return __copy_streambufs_eof(__sbin, __sbout, __ineof);
# 144 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
}
# 149 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
extern template class basic_streambuf< char, char_traits< char> > ;
# 150 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
extern template streamsize __copy_streambufs(basic_streambuf< char, char_traits< char> > * __sbin, basic_streambuf< char, char_traits< char> > * __sbout);
# 154 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
extern template streamsize __copy_streambufs_eof< char, char_traits< char> > (basic_streambuf< char, char_traits< char> > *, basic_streambuf< char, char_traits< char> > *, bool &);
# 160 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
extern template class basic_streambuf< wchar_t, char_traits< wchar_t> > ;
# 161 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
extern template streamsize __copy_streambufs(basic_streambuf< wchar_t, char_traits< wchar_t> > * __sbin, basic_streambuf< wchar_t, char_traits< wchar_t> > * __sbout);
# 165 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
extern template streamsize __copy_streambufs_eof< wchar_t, char_traits< wchar_t> > (basic_streambuf< wchar_t, char_traits< wchar_t> > *, basic_streambuf< wchar_t, char_traits< wchar_t> > *, bool &);
# 173 "/usr/include/c++/4.8.2/bits/streambuf.tcc" 3
}
# 52 "/usr/include/wctype.h" 3
typedef unsigned long wctype_t;
# 72 "/usr/include/wctype.h" 3
enum {
# 73 "/usr/include/wctype.h" 3
__ISwupper,
# 74 "/usr/include/wctype.h" 3
__ISwlower,
# 75 "/usr/include/wctype.h" 3
__ISwalpha,
# 76 "/usr/include/wctype.h" 3
__ISwdigit,
# 77 "/usr/include/wctype.h" 3
__ISwxdigit,
# 78 "/usr/include/wctype.h" 3
__ISwspace,
# 79 "/usr/include/wctype.h" 3
__ISwprint,
# 80 "/usr/include/wctype.h" 3
__ISwgraph,
# 81 "/usr/include/wctype.h" 3
__ISwblank,
# 82 "/usr/include/wctype.h" 3
__ISwcntrl,
# 83 "/usr/include/wctype.h" 3
__ISwpunct,
# 84 "/usr/include/wctype.h" 3
__ISwalnum,
# 86 "/usr/include/wctype.h" 3
_ISwupper = 16777216,
# 87 "/usr/include/wctype.h" 3
_ISwlower = 33554432,
# 88 "/usr/include/wctype.h" 3
_ISwalpha = 67108864,
# 89 "/usr/include/wctype.h" 3
_ISwdigit = 134217728,
# 90 "/usr/include/wctype.h" 3
_ISwxdigit = 268435456,
# 91 "/usr/include/wctype.h" 3
_ISwspace = 536870912,
# 92 "/usr/include/wctype.h" 3
_ISwprint = 1073741824,
# 93 "/usr/include/wctype.h" 3
_ISwgraph = (-2147483647-1),
# 94 "/usr/include/wctype.h" 3
_ISwblank = 65536,
# 95 "/usr/include/wctype.h" 3
_ISwcntrl = 131072,
# 96 "/usr/include/wctype.h" 3
_ISwpunct = 262144,
# 97 "/usr/include/wctype.h" 3
_ISwalnum = 524288
# 98 "/usr/include/wctype.h" 3
};
# 102 "/usr/include/wctype.h" 3
extern "C" {
# 111 "/usr/include/wctype.h" 3
extern int iswalnum(wint_t __wc) throw();
# 117 "/usr/include/wctype.h" 3
extern int iswalpha(wint_t __wc) throw();
# 120 "/usr/include/wctype.h" 3
extern int iswcntrl(wint_t __wc) throw();
# 124 "/usr/include/wctype.h" 3
extern int iswdigit(wint_t __wc) throw();
# 128 "/usr/include/wctype.h" 3
extern int iswgraph(wint_t __wc) throw();
# 133 "/usr/include/wctype.h" 3
extern int iswlower(wint_t __wc) throw();
# 136 "/usr/include/wctype.h" 3
extern int iswprint(wint_t __wc) throw();
# 141 "/usr/include/wctype.h" 3
extern int iswpunct(wint_t __wc) throw();
# 146 "/usr/include/wctype.h" 3
extern int iswspace(wint_t __wc) throw();
# 151 "/usr/include/wctype.h" 3
extern int iswupper(wint_t __wc) throw();
# 156 "/usr/include/wctype.h" 3
extern int iswxdigit(wint_t __wc) throw();
# 162 "/usr/include/wctype.h" 3
extern int iswblank(wint_t __wc) throw();
# 171 "/usr/include/wctype.h" 3
extern wctype_t wctype(const char * __property) throw();
# 175 "/usr/include/wctype.h" 3
extern int iswctype(wint_t __wc, wctype_t __desc) throw();
# 186 "/usr/include/wctype.h" 3
typedef const __int32_t *wctrans_t;
# 194 "/usr/include/wctype.h" 3
extern wint_t towlower(wint_t __wc) throw();
# 197 "/usr/include/wctype.h" 3
extern wint_t towupper(wint_t __wc) throw();
# 200 "/usr/include/wctype.h" 3
}
# 213 "/usr/include/wctype.h" 3
extern "C" {
# 218 "/usr/include/wctype.h" 3
extern wctrans_t wctrans(const char * __property) throw();
# 221 "/usr/include/wctype.h" 3
extern wint_t towctrans(wint_t __wc, wctrans_t __desc) throw();
# 230 "/usr/include/wctype.h" 3
extern int iswalnum_l(wint_t __wc, __locale_t __locale) throw();
# 236 "/usr/include/wctype.h" 3
extern int iswalpha_l(wint_t __wc, __locale_t __locale) throw();
# 239 "/usr/include/wctype.h" 3
extern int iswcntrl_l(wint_t __wc, __locale_t __locale) throw();
# 243 "/usr/include/wctype.h" 3
extern int iswdigit_l(wint_t __wc, __locale_t __locale) throw();
# 247 "/usr/include/wctype.h" 3
extern int iswgraph_l(wint_t __wc, __locale_t __locale) throw();
# 252 "/usr/include/wctype.h" 3
extern int iswlower_l(wint_t __wc, __locale_t __locale) throw();
# 255 "/usr/include/wctype.h" 3
extern int iswprint_l(wint_t __wc, __locale_t __locale) throw();
# 260 "/usr/include/wctype.h" 3
extern int iswpunct_l(wint_t __wc, __locale_t __locale) throw();
# 265 "/usr/include/wctype.h" 3
extern int iswspace_l(wint_t __wc, __locale_t __locale) throw();
# 270 "/usr/include/wctype.h" 3
extern int iswupper_l(wint_t __wc, __locale_t __locale) throw();
# 275 "/usr/include/wctype.h" 3
extern int iswxdigit_l(wint_t __wc, __locale_t __locale) throw();
# 280 "/usr/include/wctype.h" 3
extern int iswblank_l(wint_t __wc, __locale_t __locale) throw();
# 284 "/usr/include/wctype.h" 3
extern wctype_t wctype_l(const char * __property, __locale_t __locale) throw();
# 289 "/usr/include/wctype.h" 3
extern int iswctype_l(wint_t __wc, wctype_t __desc, __locale_t __locale) throw();
# 298 "/usr/include/wctype.h" 3
extern wint_t towlower_l(wint_t __wc, __locale_t __locale) throw();
# 301 "/usr/include/wctype.h" 3
extern wint_t towupper_l(wint_t __wc, __locale_t __locale) throw();
# 305 "/usr/include/wctype.h" 3
extern wctrans_t wctrans_l(const char * __property, __locale_t __locale) throw();
# 309 "/usr/include/wctype.h" 3
extern wint_t towctrans_l(wint_t __wc, wctrans_t __desc, __locale_t __locale) throw();
# 314 "/usr/include/wctype.h" 3
}
# 80 "/usr/include/c++/4.8.2/cwctype" 3
namespace std {
# 82 "/usr/include/c++/4.8.2/cwctype" 3
using ::wctrans_t;
# 83 "/usr/include/c++/4.8.2/cwctype" 3
using ::wctype_t;
# 86 "/usr/include/c++/4.8.2/cwctype" 3
using ::iswalnum;
# 87 "/usr/include/c++/4.8.2/cwctype" 3
using ::iswalpha;
# 89 "/usr/include/c++/4.8.2/cwctype" 3
using ::iswblank;
# 91 "/usr/include/c++/4.8.2/cwctype" 3
using ::iswcntrl;
# 92 "/usr/include/c++/4.8.2/cwctype" 3
using ::iswctype;
# 93 "/usr/include/c++/4.8.2/cwctype" 3
using ::iswdigit;
# 94 "/usr/include/c++/4.8.2/cwctype" 3
using ::iswgraph;
# 95 "/usr/include/c++/4.8.2/cwctype" 3
using ::iswlower;
# 96 "/usr/include/c++/4.8.2/cwctype" 3
using ::iswprint;
# 97 "/usr/include/c++/4.8.2/cwctype" 3
using ::iswpunct;
# 98 "/usr/include/c++/4.8.2/cwctype" 3
using ::iswspace;
# 99 "/usr/include/c++/4.8.2/cwctype" 3
using ::iswupper;
# 100 "/usr/include/c++/4.8.2/cwctype" 3
using ::iswxdigit;
# 101 "/usr/include/c++/4.8.2/cwctype" 3
using ::towctrans;
# 102 "/usr/include/c++/4.8.2/cwctype" 3
using ::towlower;
# 103 "/usr/include/c++/4.8.2/cwctype" 3
using ::towupper;
# 104 "/usr/include/c++/4.8.2/cwctype" 3
using ::wctrans;
# 105 "/usr/include/c++/4.8.2/cwctype" 3
using ::wctype;
# 106 "/usr/include/c++/4.8.2/cwctype" 3
}
# 36 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/ctype_base.h" 3
namespace std __attribute((__visibility__("default"))) {
# 41 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/ctype_base.h" 3
struct ctype_base {
# 44 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/ctype_base.h" 3
typedef const int *__to_type;
# 48 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/ctype_base.h" 3
typedef unsigned short mask;
# 49 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/ctype_base.h" 3
static const mask upper = (_ISupper);
# 50 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/ctype_base.h" 3
static const mask lower = (_ISlower);
# 51 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/ctype_base.h" 3
static const mask alpha = (_ISalpha);
# 52 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/ctype_base.h" 3
static const mask digit = (_ISdigit);
# 53 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/ctype_base.h" 3
static const mask xdigit = (_ISxdigit);
# 54 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/ctype_base.h" 3
static const mask space = (_ISspace);
# 55 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/ctype_base.h" 3
static const mask print = (_ISprint);
# 56 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/ctype_base.h" 3
static const mask graph = (((_ISalpha) | (_ISdigit)) | (_ISpunct));
# 57 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/ctype_base.h" 3
static const mask cntrl = (_IScntrl);
# 58 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/ctype_base.h" 3
static const mask punct = (_ISpunct);
# 59 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/ctype_base.h" 3
static const mask alnum = ((_ISalpha) | (_ISdigit));
# 60 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/ctype_base.h" 3
};
# 63 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/ctype_base.h" 3
}
# 38 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
namespace std __attribute((__visibility__("default"))) {
# 49 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
template< class _CharT, class _Traits>
# 50 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
class istreambuf_iterator : public iterator< input_iterator_tag, _CharT, typename _Traits::off_type, _CharT *, _CharT &> {
# 64 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
public: typedef _CharT char_type;
# 65 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
typedef _Traits traits_type;
# 66 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
typedef typename _Traits::int_type int_type;
# 67 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
typedef basic_streambuf< _CharT, _Traits> streambuf_type;
# 68 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
typedef basic_istream< _CharT, _Traits> istream_type;
# 71 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
template< class _CharT2> friend typename __gnu_cxx::__enable_if< __is_char< _CharT2> ::__value, ostreambuf_iterator< _CharT2> > ::__type copy(std::istreambuf_iterator< _CharT2> , std::istreambuf_iterator< _CharT2> , ostreambuf_iterator< _CharT2> );
# 77 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
template< bool _IsMove, class _CharT2> friend typename __gnu_cxx::__enable_if< __is_char< _CharT2> ::__value, _CharT2 *> ::__type __copy_move_a2(std::istreambuf_iterator< _CharT2> , std::istreambuf_iterator< _CharT2> , _CharT2 *);
# 83 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
template< class _CharT2> friend typename __gnu_cxx::__enable_if< __is_char< _CharT2> ::__value, std::istreambuf_iterator< _CharT2> > ::__type find(std::istreambuf_iterator< _CharT2> , std::istreambuf_iterator< _CharT2> , const _CharT2 &);
# 97 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
private: mutable streambuf_type *_M_sbuf;
# 98 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
mutable int_type _M_c;
# 102 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
public: istreambuf_iterator() throw() : _M_sbuf((0)), _M_c(traits_type::eof())
# 103 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
{ }
# 112 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
istreambuf_iterator(istream_type &__s) throw() : _M_sbuf((__s.rdbuf())), _M_c(traits_type::eof())
# 113 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
{ }
# 116 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
istreambuf_iterator(streambuf_type *__s) throw() : _M_sbuf(__s), _M_c(traits_type::eof())
# 117 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
{ }
# 123 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
char_type operator*() const
# 124 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
{
# 132 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
return traits_type::to_char_type(_M_get());
# 133 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
}
# 137 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
istreambuf_iterator &operator++()
# 138 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
{
# 141 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
;
# 142 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
if (_M_sbuf)
# 143 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
{
# 144 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
((_M_sbuf)->sbumpc());
# 145 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
(_M_c) = traits_type::eof();
# 146 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
}
# 147 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
return *this;
# 148 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
}
# 152 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
istreambuf_iterator operator++(int)
# 153 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
{
# 156 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
;
# 158 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
istreambuf_iterator __old = *this;
# 159 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
if (_M_sbuf)
# 160 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
{
# 161 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
(__old._M_c) = ((_M_sbuf)->sbumpc());
# 162 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
(_M_c) = traits_type::eof();
# 163 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
}
# 164 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
return __old;
# 165 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
}
# 172 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
bool equal(const istreambuf_iterator &__b) const
# 173 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
{ return _M_at_eof() == (__b._M_at_eof()); }
# 177 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
private: int_type _M_get() const
# 178 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
{
# 179 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
const int_type __eof = traits_type::eof();
# 180 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
int_type __ret = __eof;
# 181 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
if (_M_sbuf)
# 182 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
{
# 183 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
if (!traits_type::eq_int_type(_M_c, __eof)) {
# 184 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
__ret = (_M_c); } else {
# 185 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
if (!traits_type::eq_int_type(__ret = ((_M_sbuf)->sgetc()), __eof)) {
# 187 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
(_M_c) = __ret; } else {
# 189 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
(_M_sbuf) = 0; } }
# 190 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
}
# 191 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
return __ret;
# 192 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
}
# 195 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
bool _M_at_eof() const
# 196 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
{
# 197 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
const int_type __eof = traits_type::eof();
# 198 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
return traits_type::eq_int_type(_M_get(), __eof);
# 199 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
}
# 200 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
};
# 202 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
template< class _CharT, class _Traits> inline bool
# 204 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
operator==(const istreambuf_iterator< _CharT, _Traits> &__a, const istreambuf_iterator< _CharT, _Traits> &
# 205 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
__b)
# 206 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
{ return (__a.equal(__b)); }
# 208 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
template< class _CharT, class _Traits> inline bool
# 210 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
operator!=(const istreambuf_iterator< _CharT, _Traits> &__a, const istreambuf_iterator< _CharT, _Traits> &
# 211 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
__b)
# 212 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
{ return !(__a.equal(__b)); }
# 215 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
template< class _CharT, class _Traits>
# 216 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
class ostreambuf_iterator : public iterator< output_iterator_tag, void, void, void, void> {
# 223 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
public: typedef _CharT char_type;
# 224 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
typedef _Traits traits_type;
# 225 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
typedef basic_streambuf< _CharT, _Traits> streambuf_type;
# 226 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
typedef basic_ostream< _CharT, _Traits> ostream_type;
# 229 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
template< class _CharT2> friend typename __gnu_cxx::__enable_if< __is_char< _CharT2> ::__value, std::ostreambuf_iterator< _CharT2> > ::__type copy(istreambuf_iterator< _CharT2, char_traits< _CharT2> > , istreambuf_iterator< _CharT2, char_traits< _CharT2> > , std::ostreambuf_iterator< _CharT2> );
# 236 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
private: streambuf_type *_M_sbuf;
# 237 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
bool _M_failed;
# 241 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
public: ostreambuf_iterator(ostream_type &__s) throw() : _M_sbuf((__s.rdbuf())), _M_failed((!(_M_sbuf)))
# 242 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
{ }
# 245 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
ostreambuf_iterator(streambuf_type *__s) throw() : _M_sbuf(__s), _M_failed((!(_M_sbuf)))
# 246 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
{ }
# 250 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
ostreambuf_iterator &operator=(_CharT __c)
# 251 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
{
# 252 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
if ((!(_M_failed)) && _Traits::eq_int_type(((_M_sbuf)->sputc(__c)), _Traits::eof())) {
# 254 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
(_M_failed) = true; }
# 255 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
return *this;
# 256 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
}
# 260 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
ostreambuf_iterator &operator*()
# 261 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
{ return *this; }
# 265 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
ostreambuf_iterator &operator++(int)
# 266 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
{ return *this; }
# 270 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
ostreambuf_iterator &operator++()
# 271 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
{ return *this; }
# 275 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
bool failed() const throw()
# 276 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
{ return _M_failed; }
# 279 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
ostreambuf_iterator &_M_put(const _CharT *__ws, streamsize __len)
# 280 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
{
# 281 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
if ((__builtin_expect(!(_M_failed), true)) && (__builtin_expect(((this->_M_sbuf)->sputn(__ws, __len)) != __len, false))) {
# 284 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
(_M_failed) = true; }
# 285 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
return *this;
# 286 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
}
# 287 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
};
# 290 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
template< class _CharT> typename __gnu_cxx::__enable_if< __is_char< _CharT> ::__value, ostreambuf_iterator< _CharT, char_traits< _CharT> > > ::__type
# 293 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
copy(istreambuf_iterator< _CharT, char_traits< _CharT> > __first, istreambuf_iterator< _CharT, char_traits< _CharT> >
# 294 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
__last, ostreambuf_iterator< _CharT, char_traits< _CharT> >
# 295 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
__result)
# 296 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
{
# 297 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
if ((__first._M_sbuf) && (!(__last._M_sbuf)) && (!(__result._M_failed)))
# 298 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
{
# 299 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
bool __ineof;
# 300 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
__copy_streambufs_eof((__first._M_sbuf), (__result._M_sbuf), __ineof);
# 301 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
if (!__ineof) {
# 302 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
(__result._M_failed) = true; }
# 303 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
}
# 304 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
return __result;
# 305 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
}
# 307 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
template< bool _IsMove, class _CharT> typename __gnu_cxx::__enable_if< __is_char< _CharT> ::__value, ostreambuf_iterator< _CharT, char_traits< _CharT> > > ::__type
# 310 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
__copy_move_a2(_CharT *__first, _CharT *__last, ostreambuf_iterator< _CharT, char_traits< _CharT> >
# 311 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
__result)
# 312 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
{
# 313 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
const streamsize __num = __last - __first;
# 314 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
if (__num > (0)) {
# 315 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
(__result._M_put(__first, __num)); }
# 316 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
return __result;
# 317 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
}
# 319 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
template< bool _IsMove, class _CharT> typename __gnu_cxx::__enable_if< __is_char< _CharT> ::__value, ostreambuf_iterator< _CharT, char_traits< _CharT> > > ::__type
# 322 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
__copy_move_a2(const _CharT *__first, const _CharT *__last, ostreambuf_iterator< _CharT, char_traits< _CharT> >
# 323 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
__result)
# 324 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
{
# 325 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
const streamsize __num = __last - __first;
# 326 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
if (__num > (0)) {
# 327 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
(__result._M_put(__first, __num)); }
# 328 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
return __result;
# 329 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
}
# 331 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
template< bool _IsMove, class _CharT> typename __gnu_cxx::__enable_if< __is_char< _CharT> ::__value, _CharT *> ::__type
# 334 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
__copy_move_a2(istreambuf_iterator< _CharT, char_traits< _CharT> > __first, istreambuf_iterator< _CharT, char_traits< _CharT> >
# 335 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
__last, _CharT *__result)
# 336 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
{
# 337 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
typedef istreambuf_iterator< _CharT, char_traits< _CharT> > __is_iterator_type;
# 338 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
typedef typename istreambuf_iterator< _CharT, char_traits< _CharT> > ::traits_type traits_type;
# 339 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
typedef typename istreambuf_iterator< _CharT, char_traits< _CharT> > ::streambuf_type streambuf_type;
# 340 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
typedef typename istreambuf_iterator< _CharT, char_traits< _CharT> > ::traits_type::int_type int_type;
# 342 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
if ((__first._M_sbuf) && (!(__last._M_sbuf)))
# 343 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
{
# 344 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
streambuf_type *__sb = ((__first._M_sbuf));
# 345 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
int_type __c = (__sb->sgetc());
# 346 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
while (!traits_type::eq_int_type(__c, traits_type::eof()))
# 347 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
{
# 348 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
const streamsize __n = (__sb->egptr()) - (__sb->gptr());
# 349 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
if (__n > (1))
# 350 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
{
# 351 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
traits_type::copy(__result, (__sb->gptr()), __n);
# 352 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
(__sb->__safe_gbump(__n));
# 353 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
__result += __n;
# 354 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
__c = (__sb->underflow());
# 355 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
} else
# 357 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
{
# 358 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
(*(__result++)) = traits_type::to_char_type(__c);
# 359 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
__c = (__sb->snextc());
# 360 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
}
# 361 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
}
# 362 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
}
# 363 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
return __result;
# 364 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
}
# 366 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
template< class _CharT> typename __gnu_cxx::__enable_if< __is_char< _CharT> ::__value, istreambuf_iterator< _CharT, char_traits< _CharT> > > ::__type
# 369 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
find(istreambuf_iterator< _CharT, char_traits< _CharT> > __first, istreambuf_iterator< _CharT, char_traits< _CharT> >
# 370 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
__last, const _CharT &__val)
# 371 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
{
# 372 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
typedef istreambuf_iterator< _CharT, char_traits< _CharT> > __is_iterator_type;
# 373 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
typedef typename istreambuf_iterator< _CharT, char_traits< _CharT> > ::traits_type traits_type;
# 374 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
typedef typename istreambuf_iterator< _CharT, char_traits< _CharT> > ::streambuf_type streambuf_type;
# 375 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
typedef typename istreambuf_iterator< _CharT, char_traits< _CharT> > ::traits_type::int_type int_type;
# 377 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
if ((__first._M_sbuf) && (!(__last._M_sbuf)))
# 378 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
{
# 379 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
const int_type __ival = traits_type::to_int_type(__val);
# 380 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
streambuf_type *__sb = ((__first._M_sbuf));
# 381 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
int_type __c = (__sb->sgetc());
# 382 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
while ((!traits_type::eq_int_type(__c, traits_type::eof())) && (!traits_type::eq_int_type(__c, __ival)))
# 384 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
{
# 385 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
streamsize __n = (__sb->egptr()) - (__sb->gptr());
# 386 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
if (__n > (1))
# 387 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
{
# 388 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
const _CharT *__p = traits_type::find((__sb->gptr()), __n, __val);
# 390 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
if (__p) {
# 391 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
__n = (__p - (__sb->gptr())); }
# 392 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
(__sb->__safe_gbump(__n));
# 393 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
__c = (__sb->sgetc());
# 394 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
} else {
# 396 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
__c = (__sb->snextc()); }
# 397 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
}
# 399 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
if (!traits_type::eq_int_type(__c, traits_type::eof())) {
# 400 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
(__first._M_c) = __c; } else {
# 402 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
(__first._M_sbuf) = 0; }
# 403 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
}
# 404 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
return __first;
# 405 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
}
# 410 "/usr/include/c++/4.8.2/bits/streambuf_iterator.h" 3
}
# 50 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
namespace std __attribute((__visibility__("default"))) {
# 64 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template< class _Tp> void __convert_to_v(const char *, _Tp &, ios_base::iostate &, const __c_locale &) throw();
# 72 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template<> void __convert_to_v(const char *, float &, ios_base::iostate &, const __c_locale &) throw();
# 77 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template<> void __convert_to_v(const char *, double &, ios_base::iostate &, const __c_locale &) throw();
# 82 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template<> void __convert_to_v(const char *, long double &, ios_base::iostate &, const __c_locale &) throw();
# 87 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template< class _CharT, class _Traits>
# 88 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
struct __pad {
# 91 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
static void _S_pad(ios_base & __io, _CharT __fill, _CharT * __news, const _CharT * __olds, streamsize __newlen, streamsize __oldlen);
# 93 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
};
# 100 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template< class _CharT> _CharT *__add_grouping(_CharT * __s, _CharT __sep, const char * __gbeg, size_t __gsize, const _CharT * __first, const _CharT * __last);
# 109 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template< class _CharT> inline ostreambuf_iterator< _CharT, char_traits< _CharT> >
# 112 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__write(ostreambuf_iterator< _CharT, char_traits< _CharT> > __s, const _CharT *__ws, int __len)
# 113 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{
# 114 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
(__s._M_put(__ws, __len));
# 115 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
return __s;
# 116 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
}
# 119 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template< class _CharT, class _OutIter> inline _OutIter
# 122 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__write(_OutIter __s, const _CharT *__ws, int __len)
# 123 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{
# 124 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
for (int __j = 0; __j < __len; (__j++), (++__s)) {
# 125 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
(*__s) = (__ws[__j]); }
# 126 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
return __s;
# 127 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
}
# 142 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template< class _CharT>
# 143 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
class __ctype_abstract_base : public locale::facet, public ctype_base {
# 148 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
public: typedef _CharT char_type;
# 162 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
bool is(mask __m, char_type __c) const
# 163 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (this->do_is(__m, __c)); }
# 179 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
const char_type *is(const char_type *__lo, const char_type *__hi, mask *__vec) const
# 180 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (this->do_is(__lo, __hi, __vec)); }
# 195 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
const char_type *scan_is(mask __m, const char_type *__lo, const char_type *__hi) const
# 196 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return this->do_scan_is(__m, __lo, __hi); }
# 211 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
const char_type *scan_not(mask __m, const char_type *__lo, const char_type *__hi) const
# 212 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return this->do_scan_not(__m, __lo, __hi); }
# 225 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
char_type toupper(char_type __c) const
# 226 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (this->do_toupper(__c)); }
# 240 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
const char_type *toupper(char_type *__lo, const char_type *__hi) const
# 241 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (this->do_toupper(__lo, __hi)); }
# 254 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
char_type tolower(char_type __c) const
# 255 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (this->do_tolower(__c)); }
# 269 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
const char_type *tolower(char_type *__lo, const char_type *__hi) const
# 270 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (this->do_tolower(__lo, __hi)); }
# 286 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
char_type widen(char __c) const
# 287 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (this->do_widen(__c)); }
# 305 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
const char *widen(const char *__lo, const char *__hi, char_type *__to) const
# 306 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (this->do_widen(__lo, __hi, __to)); }
# 324 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
char narrow(char_type __c, char __dfault) const
# 325 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (this->do_narrow(__c, __dfault)); }
# 346 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
const char_type *narrow(const char_type *__lo, const char_type *__hi, char
# 347 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__dfault, char *__to) const
# 348 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (this->do_narrow(__lo, __hi, __dfault, __to)); }
# 352 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
protected: explicit __ctype_abstract_base(size_t __refs = 0) : locale::facet(__refs) { }
# 355 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual ~__ctype_abstract_base() { }
# 371 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual bool do_is(mask __m, char_type __c) const = 0;
# 390 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual const char_type *do_is(const char_type * __lo, const char_type * __hi, mask * __vec) const = 0;
# 409 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual const char_type *do_scan_is(mask __m, const char_type * __lo, const char_type * __hi) const = 0;
# 428 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual const char_type *do_scan_not(mask __m, const char_type * __lo, const char_type * __hi) const = 0;
# 446 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual char_type do_toupper(char_type __c) const = 0;
# 463 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual const char_type *do_toupper(char_type * __lo, const char_type * __hi) const = 0;
# 479 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual char_type do_tolower(char_type __c) const = 0;
# 496 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual const char_type *do_tolower(char_type * __lo, const char_type * __hi) const = 0;
# 515 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual char_type do_widen(char __c) const = 0;
# 536 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual const char *do_widen(const char * __lo, const char * __hi, char_type * __to) const = 0;
# 557 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual char do_narrow(char_type __c, char __dfault) const = 0;
# 582 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual const char_type *do_narrow(const char_type * __lo, const char_type * __hi, char __dfault, char * __to) const = 0;
# 584 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
};
# 604 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template< class _CharT>
# 605 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
class ctype : public __ctype_abstract_base< _CharT> {
# 609 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
public: typedef _CharT char_type;
# 610 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
typedef typename std::__ctype_abstract_base< _CharT> ::mask mask;
# 613 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
static std::locale::id id;
# 616 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
explicit ctype(std::size_t __refs = 0) : std::__ctype_abstract_base< _CharT> (__refs) { }
# 620 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
protected: virtual ~ctype();
# 623 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual bool do_is(mask __m, char_type __c) const;
# 626 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual const char_type *do_is(const char_type * __lo, const char_type * __hi, mask * __vec) const;
# 629 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual const char_type *do_scan_is(mask __m, const char_type * __lo, const char_type * __hi) const;
# 632 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual const char_type *do_scan_not(mask __m, const char_type * __lo, const char_type * __hi) const;
# 636 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual char_type do_toupper(char_type __c) const;
# 639 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual const char_type *do_toupper(char_type * __lo, const char_type * __hi) const;
# 642 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual char_type do_tolower(char_type __c) const;
# 645 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual const char_type *do_tolower(char_type * __lo, const char_type * __hi) const;
# 648 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual char_type do_widen(char __c) const;
# 651 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual const char *do_widen(const char * __lo, const char * __hi, char_type * __dest) const;
# 654 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual char do_narrow(char_type, char __dfault) const;
# 657 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual const char_type *do_narrow(const char_type * __lo, const char_type * __hi, char __dfault, char * __to) const;
# 659 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
};
# 661 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template< class _CharT> locale::id
# 662 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
ctype< _CharT> ::id;
# 674 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template<> class ctype< char> : public locale::facet, public ctype_base {
# 679 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
public: typedef char char_type;
# 683 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
protected: __c_locale _M_c_locale_ctype;
# 684 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
bool _M_del;
# 685 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__to_type _M_toupper;
# 686 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__to_type _M_tolower;
# 687 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
const mask *_M_table;
# 688 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
mutable char _M_widen_ok;
# 689 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
mutable char _M_widen[1 + (static_cast< unsigned char>(-1))];
# 690 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
mutable char _M_narrow[1 + (static_cast< unsigned char>(-1))];
# 691 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
mutable char _M_narrow_ok;
# 696 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
public: static locale::id id;
# 698 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
static const size_t table_size = (1 + (static_cast< unsigned char>(-1)));
# 711 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
explicit ctype(const mask * __table = 0, bool __del = false, size_t __refs = 0);
# 724 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
explicit ctype(__c_locale __cloc, const mask * __table = 0, bool __del = false, size_t __refs = 0);
# 737 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
inline bool is(mask __m, char __c) const;
# 752 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
inline const char *is(const char * __lo, const char * __hi, mask * __vec) const;
# 766 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
inline const char *scan_is(mask __m, const char * __lo, const char * __hi) const;
# 780 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
inline const char *scan_not(mask __m, const char * __lo, const char * __hi) const;
# 795 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
char_type toupper(char_type __c) const
# 796 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return this->do_toupper(__c); }
# 812 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
const char_type *toupper(char_type *__lo, const char_type *__hi) const
# 813 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return this->do_toupper(__lo, __hi); }
# 828 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
char_type tolower(char_type __c) const
# 829 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return this->do_tolower(__c); }
# 845 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
const char_type *tolower(char_type *__lo, const char_type *__hi) const
# 846 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return this->do_tolower(__lo, __hi); }
# 865 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
char_type widen(char __c) const
# 866 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{
# 867 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
if (_M_widen_ok) {
# 868 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
return (_M_widen)[static_cast< unsigned char>(__c)]; }
# 869 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
this->_M_widen_init();
# 870 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
return this->do_widen(__c);
# 871 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
}
# 892 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
const char *widen(const char *__lo, const char *__hi, char_type *__to) const
# 893 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{
# 894 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
if ((_M_widen_ok) == 1)
# 895 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{
# 896 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__builtin_memcpy(__to, __lo, __hi - __lo);
# 897 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
return __hi;
# 898 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
}
# 899 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
if (!(_M_widen_ok)) {
# 900 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
this->_M_widen_init(); }
# 901 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
return this->do_widen(__lo, __hi, __to);
# 902 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
}
# 923 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
char narrow(char_type __c, char __dfault) const
# 924 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{
# 925 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
if ((_M_narrow)[static_cast< unsigned char>(__c)]) {
# 926 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
return (_M_narrow)[static_cast< unsigned char>(__c)]; }
# 927 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
const char __t = this->do_narrow(__c, __dfault);
# 928 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
if (__t != __dfault) {
# 929 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
((_M_narrow)[static_cast< unsigned char>(__c)]) = __t; }
# 930 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
return __t;
# 931 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
}
# 956 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
const char_type *narrow(const char_type *__lo, const char_type *__hi, char
# 957 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__dfault, char *__to) const
# 958 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{
# 959 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
if (__builtin_expect((_M_narrow_ok) == 1, true))
# 960 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{
# 961 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__builtin_memcpy(__to, __lo, __hi - __lo);
# 962 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
return __hi;
# 963 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
}
# 964 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
if (!(_M_narrow_ok)) {
# 965 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
this->_M_narrow_init(); }
# 966 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
return this->do_narrow(__lo, __hi, __dfault, __to);
# 967 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
}
# 974 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
const mask *table() const throw()
# 975 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return _M_table; }
# 979 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
static const mask *classic_table() throw();
# 989 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
protected: virtual ~ctype();
# 1005 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual char_type do_toupper(char_type __c) const;
# 1022 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual const char_type *do_toupper(char_type * __lo, const char_type * __hi) const;
# 1038 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual char_type do_tolower(char_type __c) const;
# 1055 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual const char_type *do_tolower(char_type * __lo, const char_type * __hi) const;
# 1075 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual char_type do_widen(char __c) const
# 1076 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return __c; }
# 1098 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__to) const
# 1099 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{
# 1100 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__builtin_memcpy(__to, __lo, __hi - __lo);
# 1101 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
return __hi;
# 1102 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
}
# 1124 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual char do_narrow(char_type __c, char __dfault) const
# 1125 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return __c; }
# 1150 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char
# 1151 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__dfault, char *__to) const
# 1152 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{
# 1153 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__builtin_memcpy(__to, __lo, __hi - __lo);
# 1154 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
return __hi;
# 1155 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
}
# 1158 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
private: void _M_narrow_init() const;
# 1159 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
void _M_widen_init() const;
# 1160 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
};
# 1175 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template<> class ctype< wchar_t> : public __ctype_abstract_base< wchar_t> {
# 1180 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
public: typedef wchar_t char_type;
# 1181 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
typedef wctype_t __wmask_type;
# 1184 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
protected: __c_locale _M_c_locale_ctype;
# 1187 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
bool _M_narrow_ok;
# 1188 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
char _M_narrow[128];
# 1189 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
wint_t _M_widen[1 + (static_cast< unsigned char>(-1))];
# 1192 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
mask _M_bit[16];
# 1193 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__wmask_type _M_wmask[16];
# 1198 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
public: static locale::id id;
# 1208 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
explicit ctype(size_t __refs = 0);
# 1219 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
explicit ctype(__c_locale __cloc, size_t __refs = 0);
# 1223 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
protected: __wmask_type _M_convert_to_wmask(const mask __m) const throw();
# 1227 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual ~ctype();
# 1243 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual bool do_is(mask __m, char_type __c) const;
# 1262 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual const char_type *do_is(const char_type * __lo, const char_type * __hi, mask * __vec) const;
# 1280 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual const char_type *do_scan_is(mask __m, const char_type * __lo, const char_type * __hi) const;
# 1298 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual const char_type *do_scan_not(mask __m, const char_type * __lo, const char_type * __hi) const;
# 1315 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual char_type do_toupper(char_type __c) const;
# 1332 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual const char_type *do_toupper(char_type * __lo, const char_type * __hi) const;
# 1348 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual char_type do_tolower(char_type __c) const;
# 1365 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual const char_type *do_tolower(char_type * __lo, const char_type * __hi) const;
# 1385 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual char_type do_widen(char __c) const;
# 1407 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual const char *do_widen(const char * __lo, const char * __hi, char_type * __to) const;
# 1430 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual char do_narrow(char_type __c, char __dfault) const;
# 1456 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual const char_type *do_narrow(const char_type * __lo, const char_type * __hi, char __dfault, char * __to) const;
# 1461 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
void _M_initialize_ctype() throw();
# 1462 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
};
# 1466 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template< class _CharT>
# 1467 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
class ctype_byname : public ctype< _CharT> {
# 1470 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
public: typedef typename std::ctype< _CharT> ::mask mask;
# 1473 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
explicit ctype_byname(const char * __s, std::size_t __refs = 0);
# 1477 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
protected: virtual ~ctype_byname() { }
# 1478 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
};
# 1482 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template<> class ctype_byname< char> : public ctype< char> {
# 1486 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
public: explicit ctype_byname(const char * __s, size_t __refs = 0);
# 1490 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
protected: virtual ~ctype_byname();
# 1491 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
};
# 1495 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template<> class ctype_byname< wchar_t> : public ctype< wchar_t> {
# 1499 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
public: explicit ctype_byname(const char * __s, size_t __refs = 0);
# 1503 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
protected: virtual ~ctype_byname();
# 1504 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
};
# 1508 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
}
# 37 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/ctype_inline.h" 3
namespace std __attribute((__visibility__("default"))) {
# 43 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/ctype_inline.h" 3
inline bool ctype< char> ::is(mask __m, char __c) const
# 44 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/ctype_inline.h" 3
{ return ((_M_table)[static_cast< unsigned char>(__c)]) & __m; }
# 48 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/ctype_inline.h" 3
inline const char *ctype< char> ::is(const char *__low, const char *__high, mask *__vec) const
# 49 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/ctype_inline.h" 3
{
# 50 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/ctype_inline.h" 3
while (__low < __high) {
# 51 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/ctype_inline.h" 3
(*(__vec++)) = ((_M_table)[static_cast< unsigned char>(*(__low++))]); }
# 52 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/ctype_inline.h" 3
return __high;
# 53 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/ctype_inline.h" 3
}
# 57 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/ctype_inline.h" 3
inline const char *ctype< char> ::scan_is(mask __m, const char *__low, const char *__high) const
# 58 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/ctype_inline.h" 3
{
# 59 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/ctype_inline.h" 3
while ((__low < __high) && (!(((_M_table)[static_cast< unsigned char>(*__low)]) & __m))) {
# 61 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/ctype_inline.h" 3
++__low; }
# 62 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/ctype_inline.h" 3
return __low;
# 63 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/ctype_inline.h" 3
}
# 67 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/ctype_inline.h" 3
inline const char *ctype< char> ::scan_not(mask __m, const char *__low, const char *__high) const
# 68 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/ctype_inline.h" 3
{
# 69 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/ctype_inline.h" 3
while ((__low < __high) && ((((_M_table)[static_cast< unsigned char>(*__low)]) & __m) != 0)) {
# 71 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/ctype_inline.h" 3
++__low; }
# 72 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/ctype_inline.h" 3
return __low;
# 73 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/ctype_inline.h" 3
}
# 76 "/usr/include/c++/4.8.2/x86_64-redhat-linux/bits/ctype_inline.h" 3
}
# 1513 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
namespace std __attribute((__visibility__("default"))) {
# 1518 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
class __num_base {
# 1524 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
public: enum {
# 1525 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
_S_ominus,
# 1526 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
_S_oplus,
# 1527 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
_S_ox,
# 1528 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
_S_oX,
# 1529 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
_S_odigits,
# 1530 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
_S_odigits_end = 20,
# 1531 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
_S_oudigits = 20,
# 1532 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
_S_oudigits_end = 36,
# 1533 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
_S_oe = 18,
# 1534 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
_S_oE = 34,
# 1535 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
_S_oend = 36
# 1536 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
};
# 1543 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
static const char *_S_atoms_out;
# 1547 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
static const char *_S_atoms_in;
# 1550 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
enum {
# 1551 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
_S_iminus,
# 1552 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
_S_iplus,
# 1553 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
_S_ix,
# 1554 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
_S_iX,
# 1555 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
_S_izero,
# 1556 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
_S_ie = 18,
# 1557 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
_S_iE = 24,
# 1558 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
_S_iend = 26
# 1559 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
};
# 1564 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
static void _S_format_float(const ios_base & __io, char * __fptr, char __mod) throw();
# 1565 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
};
# 1567 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template< class _CharT>
# 1568 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
struct __numpunct_cache : public locale::facet {
# 1570 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
const char *_M_grouping;
# 1571 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
size_t _M_grouping_size;
# 1572 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
bool _M_use_grouping;
# 1573 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
const _CharT *_M_truename;
# 1574 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
size_t _M_truename_size;
# 1575 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
const _CharT *_M_falsename;
# 1576 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
size_t _M_falsename_size;
# 1577 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
_CharT _M_decimal_point;
# 1578 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
_CharT _M_thousands_sep;
# 1584 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
_CharT _M_atoms_out[__num_base::_S_oend];
# 1590 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
_CharT _M_atoms_in[__num_base::_S_iend];
# 1592 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
bool _M_allocated;
# 1594 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__numpunct_cache(size_t __refs = 0) : locale::facet(__refs), _M_grouping((0)), _M_grouping_size((0)), _M_use_grouping(false), _M_truename((0)), _M_truename_size((0)), _M_falsename((0)), _M_falsename_size((0)), _M_decimal_point(_CharT()), _M_thousands_sep(_CharT()), _M_allocated(false)
# 1600 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ }
# 1602 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual ~__numpunct_cache();
# 1605 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
void _M_cache(const locale & __loc);
# 1609 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
private: __numpunct_cache &operator=(const __numpunct_cache &);
# 1612 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
explicit __numpunct_cache(const __numpunct_cache &);
# 1613 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
};
# 1615 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template< class _CharT>
# 1616 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__numpunct_cache< _CharT> ::~__numpunct_cache()
# 1617 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{
# 1618 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
if (_M_allocated)
# 1619 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{
# 1620 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
delete [] (_M_grouping);
# 1621 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
delete [] (_M_truename);
# 1622 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
delete [] (_M_falsename);
# 1623 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
}
# 1624 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
}
# 1640 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template< class _CharT>
# 1641 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
class numpunct : public locale::facet {
# 1647 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
public: typedef _CharT char_type;
# 1648 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
typedef basic_string< _CharT, char_traits< _CharT> , allocator< _CharT> > string_type;
# 1650 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
typedef __numpunct_cache< _CharT> __cache_type;
# 1653 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
protected: __cache_type *_M_data;
# 1657 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
public: static locale::id id;
# 1665 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
explicit numpunct(size_t __refs = 0) : locale::facet(__refs), _M_data((0))
# 1667 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ _M_initialize_numpunct(); }
# 1679 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
explicit numpunct(__cache_type *__cache, size_t __refs = 0) : locale::facet(__refs), _M_data(__cache)
# 1681 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ _M_initialize_numpunct(); }
# 1693 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
explicit numpunct(__c_locale __cloc, size_t __refs = 0) : locale::facet(__refs), _M_data((0))
# 1695 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ _M_initialize_numpunct(__cloc); }
# 1707 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
char_type decimal_point() const
# 1708 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return this->do_decimal_point(); }
# 1720 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
char_type thousands_sep() const
# 1721 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return this->do_thousands_sep(); }
# 1751 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
string grouping() const
# 1752 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return this->do_grouping(); }
# 1764 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
string_type truename() const
# 1765 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return this->do_truename(); }
# 1777 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
string_type falsename() const
# 1778 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return this->do_falsename(); }
# 1783 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
protected: virtual ~numpunct();
# 1794 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual char_type do_decimal_point() const
# 1795 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (_M_data)->_M_decimal_point; }
# 1806 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual char_type do_thousands_sep() const
# 1807 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (_M_data)->_M_thousands_sep; }
# 1819 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual string do_grouping() const
# 1820 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return ((_M_data)->_M_grouping); }
# 1832 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual string_type do_truename() const
# 1833 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (_M_data)->_M_truename; }
# 1845 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual string_type do_falsename() const
# 1846 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (_M_data)->_M_falsename; }
# 1850 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
void _M_initialize_numpunct(__c_locale __cloc = 0);
# 1851 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
};
# 1853 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template< class _CharT> locale::id
# 1854 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
numpunct< _CharT> ::id;
# 1857 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template<> numpunct< char> ::~numpunct();
# 1861 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template<> void numpunct< char> ::_M_initialize_numpunct(__c_locale __cloc);
# 1865 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template<> numpunct< wchar_t> ::~numpunct();
# 1869 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template<> void numpunct< wchar_t> ::_M_initialize_numpunct(__c_locale __cloc);
# 1873 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template< class _CharT>
# 1874 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
class numpunct_byname : public numpunct< _CharT> {
# 1877 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
public: typedef _CharT char_type;
# 1878 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
typedef basic_string< _CharT, char_traits< _CharT> , allocator< _CharT> > string_type;
# 1881 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
explicit numpunct_byname(const char *__s, std::size_t __refs = 0) : std::numpunct< _CharT> (__refs)
# 1883 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{
# 1884 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
if ((__builtin_strcmp(__s, "C") != 0) && (__builtin_strcmp(__s, "POSIX") != 0))
# 1886 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{
# 1887 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
std::__c_locale __tmp;
# 1888 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
(this->_S_create_c_locale(__tmp, __s));
# 1889 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
(this->_M_initialize_numpunct(__tmp));
# 1890 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
(this->_S_destroy_c_locale(__tmp));
# 1891 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
}
# 1892 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
}
# 1896 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
protected: virtual ~numpunct_byname() { }
# 1897 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
};
# 1914 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template< class _CharT, class _InIter>
# 1915 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
class num_get : public locale::facet {
# 1921 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
public: typedef _CharT char_type;
# 1922 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
typedef _InIter iter_type;
# 1926 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
static locale::id id;
# 1936 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
explicit num_get(size_t __refs = 0) : locale::facet(__refs) { }
# 1962 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
iter_type get(iter_type __in, iter_type __end, ios_base &__io, ios_base::iostate &
# 1963 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__err, bool &__v) const
# 1964 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (this->do_get(__in, __end, __io, __err, __v)); }
# 1999 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
iter_type get(iter_type __in, iter_type __end, ios_base &__io, ios_base::iostate &
# 2000 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__err, long &__v) const
# 2001 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (this->do_get(__in, __end, __io, __err, __v)); }
# 2004 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
iter_type get(iter_type __in, iter_type __end, ios_base &__io, ios_base::iostate &
# 2005 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__err, unsigned short &__v) const
# 2006 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (this->do_get(__in, __end, __io, __err, __v)); }
# 2009 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
iter_type get(iter_type __in, iter_type __end, ios_base &__io, ios_base::iostate &
# 2010 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__err, unsigned &__v) const
# 2011 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (this->do_get(__in, __end, __io, __err, __v)); }
# 2014 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
iter_type get(iter_type __in, iter_type __end, ios_base &__io, ios_base::iostate &
# 2015 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__err, unsigned long &__v) const
# 2016 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (this->do_get(__in, __end, __io, __err, __v)); }
# 2020 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
iter_type get(iter_type __in, iter_type __end, ios_base &__io, ios_base::iostate &
# 2021 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__err, long long &__v) const
# 2022 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (this->do_get(__in, __end, __io, __err, __v)); }
# 2025 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
iter_type get(iter_type __in, iter_type __end, ios_base &__io, ios_base::iostate &
# 2026 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__err, unsigned long long &__v) const
# 2027 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (this->do_get(__in, __end, __io, __err, __v)); }
# 2059 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
iter_type get(iter_type __in, iter_type __end, ios_base &__io, ios_base::iostate &
# 2060 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__err, float &__v) const
# 2061 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (this->do_get(__in, __end, __io, __err, __v)); }
# 2064 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
iter_type get(iter_type __in, iter_type __end, ios_base &__io, ios_base::iostate &
# 2065 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__err, double &__v) const
# 2066 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (this->do_get(__in, __end, __io, __err, __v)); }
# 2069 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
iter_type get(iter_type __in, iter_type __end, ios_base &__io, ios_base::iostate &
# 2070 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__err, long double &__v) const
# 2071 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (this->do_get(__in, __end, __io, __err, __v)); }
# 2102 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
iter_type get(iter_type __in, iter_type __end, ios_base &__io, ios_base::iostate &
# 2103 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__err, void *&__v) const
# 2104 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (this->do_get(__in, __end, __io, __err, __v)); }
# 2108 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
protected: virtual ~num_get() { }
# 2111 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
iter_type _M_extract_float(iter_type, iter_type, ios_base &, ios_base::iostate &, string &) const;
# 2114 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template< class _ValueT> iter_type _M_extract_int(iter_type, iter_type, ios_base &, ios_base::iostate &, _ValueT &) const;
# 2119 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template< class _CharT2> typename __gnu_cxx::__enable_if< __is_char< _CharT2> ::__value, int> ::__type
# 2121 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
_M_find(const _CharT2 *, size_t __len, _CharT2 __c) const
# 2122 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{
# 2123 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
int __ret = (-1);
# 2124 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
if (__len <= (10))
# 2125 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{
# 2126 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
if ((__c >= ((_CharT2)'0')) && (__c < ((_CharT2)(((_CharT2)'0') + __len)))) {
# 2127 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__ret = (__c - ((_CharT2)'0')); }
# 2128 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
} else
# 2130 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{
# 2131 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
if ((__c >= ((_CharT2)'0')) && (__c <= ((_CharT2)'9'))) {
# 2132 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__ret = (__c - ((_CharT2)'0')); } else {
# 2133 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
if ((__c >= ((_CharT2)'a')) && (__c <= ((_CharT2)'f'))) {
# 2134 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__ret = (10 + (__c - ((_CharT2)'a'))); } else {
# 2135 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
if ((__c >= ((_CharT2)'A')) && (__c <= ((_CharT2)'F'))) {
# 2136 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__ret = (10 + (__c - ((_CharT2)'A'))); } } }
# 2137 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
}
# 2138 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
return __ret;
# 2139 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
}
# 2141 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template< class _CharT2> typename __gnu_cxx::__enable_if< !__is_char< _CharT2> ::__value, int> ::__type
# 2144 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
_M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const
# 2145 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{
# 2146 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
int __ret = (-1);
# 2147 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
const char_type *__q = char_traits< _CharT2> ::find(__zero, __len, __c);
# 2148 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
if (__q)
# 2149 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{
# 2150 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__ret = (__q - __zero);
# 2151 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
if (__ret > 15) {
# 2152 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__ret -= 6; }
# 2153 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
}
# 2154 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
return __ret;
# 2155 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
}
# 2173 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual iter_type do_get(iter_type, iter_type, ios_base &, ios_base::iostate &, bool &) const;
# 2176 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual iter_type do_get(iter_type __beg, iter_type __end, ios_base &__io, ios_base::iostate &
# 2177 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__err, long &__v) const
# 2178 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return _M_extract_int(__beg, __end, __io, __err, __v); }
# 2181 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual iter_type do_get(iter_type __beg, iter_type __end, ios_base &__io, ios_base::iostate &
# 2182 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__err, unsigned short &__v) const
# 2183 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return _M_extract_int(__beg, __end, __io, __err, __v); }
# 2186 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual iter_type do_get(iter_type __beg, iter_type __end, ios_base &__io, ios_base::iostate &
# 2187 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__err, unsigned &__v) const
# 2188 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return _M_extract_int(__beg, __end, __io, __err, __v); }
# 2191 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual iter_type do_get(iter_type __beg, iter_type __end, ios_base &__io, ios_base::iostate &
# 2192 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__err, unsigned long &__v) const
# 2193 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return _M_extract_int(__beg, __end, __io, __err, __v); }
# 2197 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual iter_type do_get(iter_type __beg, iter_type __end, ios_base &__io, ios_base::iostate &
# 2198 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__err, long long &__v) const
# 2199 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return _M_extract_int(__beg, __end, __io, __err, __v); }
# 2202 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual iter_type do_get(iter_type __beg, iter_type __end, ios_base &__io, ios_base::iostate &
# 2203 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__err, unsigned long long &__v) const
# 2204 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return _M_extract_int(__beg, __end, __io, __err, __v); }
# 2208 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual iter_type do_get(iter_type, iter_type, ios_base &, ios_base::iostate &, float &) const;
# 2211 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual iter_type do_get(iter_type, iter_type, ios_base &, ios_base::iostate &, double &) const;
# 2221 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual iter_type do_get(iter_type, iter_type, ios_base &, ios_base::iostate &, long double &) const;
# 2226 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual iter_type do_get(iter_type, iter_type, ios_base &, ios_base::iostate &, void *&) const;
# 2235 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
};
# 2237 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template< class _CharT, class _InIter> locale::id
# 2238 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
num_get< _CharT, _InIter> ::id;
# 2253 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template< class _CharT, class _OutIter>
# 2254 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
class num_put : public locale::facet {
# 2260 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
public: typedef _CharT char_type;
# 2261 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
typedef _OutIter iter_type;
# 2265 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
static locale::id id;
# 2275 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
explicit num_put(size_t __refs = 0) : locale::facet(__refs) { }
# 2293 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
iter_type put(iter_type __s, ios_base &__io, char_type __fill, bool __v) const
# 2294 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (this->do_put(__s, __io, __fill, __v)); }
# 2335 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
iter_type put(iter_type __s, ios_base &__io, char_type __fill, long __v) const
# 2336 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (this->do_put(__s, __io, __fill, __v)); }
# 2339 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
iter_type put(iter_type __s, ios_base &__io, char_type __fill, unsigned long
# 2340 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__v) const
# 2341 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (this->do_put(__s, __io, __fill, __v)); }
# 2345 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
iter_type put(iter_type __s, ios_base &__io, char_type __fill, long long __v) const
# 2346 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (this->do_put(__s, __io, __fill, __v)); }
# 2349 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
iter_type put(iter_type __s, ios_base &__io, char_type __fill, unsigned long long
# 2350 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__v) const
# 2351 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (this->do_put(__s, __io, __fill, __v)); }
# 2398 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
iter_type put(iter_type __s, ios_base &__io, char_type __fill, double __v) const
# 2399 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (this->do_put(__s, __io, __fill, __v)); }
# 2402 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
iter_type put(iter_type __s, ios_base &__io, char_type __fill, long double
# 2403 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__v) const
# 2404 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (this->do_put(__s, __io, __fill, __v)); }
# 2423 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
iter_type put(iter_type __s, ios_base &__io, char_type __fill, const void *
# 2424 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__v) const
# 2425 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (this->do_put(__s, __io, __fill, __v)); }
# 2428 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
protected: template< class _ValueT> iter_type _M_insert_float(iter_type, ios_base & __io, char_type __fill, char __mod, _ValueT __v) const;
# 2434 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
void _M_group_float(const char * __grouping, size_t __grouping_size, char_type __sep, const char_type * __p, char_type * __new, char_type * __cs, int & __len) const;
# 2438 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template< class _ValueT> iter_type _M_insert_int(iter_type, ios_base & __io, char_type __fill, _ValueT __v) const;
# 2444 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
void _M_group_int(const char * __grouping, size_t __grouping_size, char_type __sep, ios_base & __io, char_type * __new, char_type * __cs, int & __len) const;
# 2449 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
void _M_pad(char_type __fill, streamsize __w, ios_base & __io, char_type * __new, const char_type * __cs, int & __len) const;
# 2454 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual ~num_put() { }
# 2471 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual iter_type do_put(iter_type __s, ios_base & __io, char_type __fill, bool __v) const;
# 2474 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual iter_type do_put(iter_type __s, ios_base &__io, char_type __fill, long __v) const
# 2475 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return _M_insert_int(__s, __io, __fill, __v); }
# 2478 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual iter_type do_put(iter_type __s, ios_base &__io, char_type __fill, unsigned long
# 2479 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__v) const
# 2480 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return _M_insert_int(__s, __io, __fill, __v); }
# 2484 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual iter_type do_put(iter_type __s, ios_base &__io, char_type __fill, long long
# 2485 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__v) const
# 2486 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return _M_insert_int(__s, __io, __fill, __v); }
# 2489 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual iter_type do_put(iter_type __s, ios_base &__io, char_type __fill, unsigned long long
# 2490 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
__v) const
# 2491 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return _M_insert_int(__s, __io, __fill, __v); }
# 2495 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual iter_type do_put(iter_type, ios_base &, char_type, double) const;
# 2503 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual iter_type do_put(iter_type, ios_base &, char_type, long double) const;
# 2507 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
virtual iter_type do_put(iter_type, ios_base &, char_type, const void *) const;
# 2515 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
};
# 2517 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template< class _CharT, class _OutIter> locale::id
# 2518 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
num_put< _CharT, _OutIter> ::id;
# 2528 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template< class _CharT> inline bool
# 2530 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
isspace(_CharT __c, const locale &__loc)
# 2531 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (use_facet< ctype< _CharT> > (__loc).is(ctype_base::space, __c)); }
# 2534 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template< class _CharT> inline bool
# 2536 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
isprint(_CharT __c, const locale &__loc)
# 2537 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (use_facet< ctype< _CharT> > (__loc).is(ctype_base::print, __c)); }
# 2540 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template< class _CharT> inline bool
# 2542 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
iscntrl(_CharT __c, const locale &__loc)
# 2543 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (use_facet< ctype< _CharT> > (__loc).is(ctype_base::cntrl, __c)); }
# 2546 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template< class _CharT> inline bool
# 2548 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
isupper(_CharT __c, const locale &__loc)
# 2549 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (use_facet< ctype< _CharT> > (__loc).is(ctype_base::upper, __c)); }
# 2552 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template< class _CharT> inline bool
# 2554 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
islower(_CharT __c, const locale &__loc)
# 2555 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (use_facet< ctype< _CharT> > (__loc).is(ctype_base::lower, __c)); }
# 2558 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template< class _CharT> inline bool
# 2560 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
isalpha(_CharT __c, const locale &__loc)
# 2561 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (use_facet< ctype< _CharT> > (__loc).is(ctype_base::alpha, __c)); }
# 2564 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template< class _CharT> inline bool
# 2566 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
isdigit(_CharT __c, const locale &__loc)
# 2567 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (use_facet< ctype< _CharT> > (__loc).is(ctype_base::digit, __c)); }
# 2570 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template< class _CharT> inline bool
# 2572 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
ispunct(_CharT __c, const locale &__loc)
# 2573 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (use_facet< ctype< _CharT> > (__loc).is(ctype_base::punct, __c)); }
# 2576 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template< class _CharT> inline bool
# 2578 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
isxdigit(_CharT __c, const locale &__loc)
# 2579 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (use_facet< ctype< _CharT> > (__loc).is(ctype_base::xdigit, __c)); }
# 2582 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template< class _CharT> inline bool
# 2584 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
isalnum(_CharT __c, const locale &__loc)
# 2585 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (use_facet< ctype< _CharT> > (__loc).is(ctype_base::alnum, __c)); }
# 2588 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template< class _CharT> inline bool
# 2590 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
isgraph(_CharT __c, const locale &__loc)
# 2591 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (use_facet< ctype< _CharT> > (__loc).is(ctype_base::graph, __c)); }
# 2594 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template< class _CharT> inline _CharT
# 2596 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
toupper(_CharT __c, const locale &__loc)
# 2597 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (use_facet< ctype< _CharT> > (__loc).toupper(__c)); }
# 2600 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
template< class _CharT> inline _CharT
# 2602 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
tolower(_CharT __c, const locale &__loc)
# 2603 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
{ return (use_facet< ctype< _CharT> > (__loc).tolower(__c)); }
# 2606 "/usr/include/c++/4.8.2/bits/locale_facets.h" 3
}
# 35 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 41 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
template< class _Facet>
# 42 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
struct __use_cache {
# 45 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const _Facet *operator()(const locale & __loc) const;
# 46 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
};
# 49 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
template< class _CharT>
# 50 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
struct __use_cache< __numpunct_cache< _CharT> > {
# 53 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const __numpunct_cache< _CharT> *operator()(const locale &__loc) const
# 54 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 55 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const size_t __i = (numpunct< _CharT> ::id._M_id)();
# 56 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const locale::facet **__caches = (__loc._M_impl)->_M_caches;
# 57 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (!(__caches[__i]))
# 58 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 59 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__numpunct_cache< _CharT> *__tmp = (0);
# 60 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
try
# 61 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 62 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__tmp = (new __numpunct_cache< _CharT> );
# 63 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(__tmp->_M_cache(__loc));
# 64 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 65 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
catch (...)
# 66 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 67 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
delete __tmp;
# 68 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
throw;
# 69 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 70 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(__loc._M_impl)->_M_install_cache(__tmp, __i);
# 71 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 72 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
return static_cast< const __numpunct_cache< _CharT> *>(__caches[__i]);
# 73 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 74 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
};
# 76 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
template< class _CharT> void
# 78 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__numpunct_cache< _CharT> ::_M_cache(const locale &__loc)
# 79 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 80 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(_M_allocated) = true;
# 82 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const numpunct< _CharT> &__np = use_facet< numpunct< _CharT> > (__loc);
# 84 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
char *__grouping = (0);
# 85 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
_CharT *__truename = (0);
# 86 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
_CharT *__falsename = (0);
# 87 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
try
# 88 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 89 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(_M_grouping_size) = ((__np.grouping()).size());
# 90 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__grouping = (new char [_M_grouping_size]);
# 91 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
((__np.grouping()).copy(__grouping, _M_grouping_size));
# 92 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(_M_grouping) = __grouping;
# 93 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(_M_use_grouping) = ((_M_grouping_size) && ((static_cast< signed char>((_M_grouping)[0])) > 0) && (((_M_grouping)[0]) != __gnu_cxx::__numeric_traits_integer< char> ::__max));
# 98 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(_M_truename_size) = ((__np.truename()).size());
# 99 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__truename = (new _CharT [_M_truename_size]);
# 100 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
((__np.truename()).copy(__truename, _M_truename_size));
# 101 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(_M_truename) = __truename;
# 103 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(_M_falsename_size) = ((__np.falsename()).size());
# 104 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__falsename = (new _CharT [_M_falsename_size]);
# 105 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
((__np.falsename()).copy(__falsename, _M_falsename_size));
# 106 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(_M_falsename) = __falsename;
# 108 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(_M_decimal_point) = (__np.decimal_point());
# 109 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(_M_thousands_sep) = (__np.thousands_sep());
# 111 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const ctype< _CharT> &__ct = use_facet< ctype< _CharT> > (__loc);
# 112 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(__ct.widen(__num_base::_S_atoms_out, __num_base::_S_atoms_out + __num_base::_S_oend, _M_atoms_out));
# 115 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(__ct.widen(__num_base::_S_atoms_in, __num_base::_S_atoms_in + __num_base::_S_iend, _M_atoms_in));
# 118 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 119 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
catch (...)
# 120 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 121 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
delete [] __grouping;
# 122 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
delete [] __truename;
# 123 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
delete [] __falsename;
# 124 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
throw;
# 125 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 126 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 136 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__attribute((__pure__)) bool
# 137 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__verify_grouping(const char * __grouping, size_t __grouping_size, const string & __grouping_tmp) throw();
# 142 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
template< class _CharT, class _InIter> _InIter
# 145 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
num_get< _CharT, _InIter> ::_M_extract_float(_InIter __beg, _InIter __end, ios_base &__io, ios_base::iostate &
# 146 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__err, string &__xtrc) const
# 147 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 148 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
typedef char_traits< _CharT> __traits_type;
# 149 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
typedef __numpunct_cache< _CharT> __cache_type;
# 150 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__use_cache< __numpunct_cache< _CharT> > __uc;
# 151 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const locale &__loc = __io._M_getloc();
# 152 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const __cache_type *__lc = __uc(__loc);
# 153 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const _CharT *__lit = ((__lc->_M_atoms_in));
# 154 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
char_type __c = (char_type());
# 157 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
bool __testeof = __beg == __end;
# 160 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (!__testeof)
# 161 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 162 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__c = (*__beg);
# 163 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const bool __plus = __c == (__lit[__num_base::_S_iplus]);
# 164 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if ((__plus || (__c == (__lit[__num_base::_S_iminus]))) && (!((__lc->_M_use_grouping) && (__c == (__lc->_M_thousands_sep)))) && (!(__c == (__lc->_M_decimal_point))))
# 167 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 168 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(__xtrc += (__plus ? '+' : '-'));
# 169 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if ((++__beg) != __end) {
# 170 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__c = (*__beg); } else {
# 172 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__testeof = true; }
# 173 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 174 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 177 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
bool __found_mantissa = false;
# 178 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
int __sep_pos = 0;
# 179 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
while (!__testeof)
# 180 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 181 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (((__lc->_M_use_grouping) && (__c == (__lc->_M_thousands_sep))) || (__c == (__lc->_M_decimal_point))) {
# 183 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
break; } else {
# 184 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__c == (__lit[__num_base::_S_izero]))
# 185 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 186 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (!__found_mantissa)
# 187 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 188 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(__xtrc += ('0'));
# 189 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__found_mantissa = true;
# 190 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 191 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
++__sep_pos;
# 193 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if ((++__beg) != __end) {
# 194 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__c = (*__beg); } else {
# 196 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__testeof = true; }
# 197 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
} else {
# 199 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
break; } }
# 200 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 203 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
bool __found_dec = false;
# 204 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
bool __found_sci = false;
# 205 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
string __found_grouping;
# 206 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__lc->_M_use_grouping) {
# 207 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__found_grouping.reserve(32); }
# 208 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const char_type *__lit_zero = __lit + __num_base::_S_izero;
# 210 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (!(__lc->_M_allocated)) {
# 212 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
while (!__testeof) {
# 213 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 214 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const int __digit = _M_find(__lit_zero, 10, __c);
# 215 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__digit != (-1))
# 216 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 217 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(__xtrc += (('0') + __digit));
# 218 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__found_mantissa = true;
# 219 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
} else {
# 220 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if ((__c == (__lc->_M_decimal_point)) && (!__found_dec) && (!__found_sci))
# 222 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 223 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(__xtrc += ('.'));
# 224 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__found_dec = true;
# 225 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
} else {
# 226 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (((__c == (__lit[__num_base::_S_ie])) || (__c == (__lit[__num_base::_S_iE]))) && (!__found_sci) && __found_mantissa)
# 229 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 231 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(__xtrc += ('e'));
# 232 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__found_sci = true;
# 235 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if ((++__beg) != __end)
# 236 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 237 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__c = (*__beg);
# 238 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const bool __plus = __c == (__lit[__num_base::_S_iplus]);
# 239 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__plus || (__c == (__lit[__num_base::_S_iminus]))) {
# 240 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(__xtrc += (__plus ? '+' : '-')); } else {
# 242 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
continue; }
# 243 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
} else
# 245 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 246 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__testeof = true;
# 247 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
break;
# 248 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 249 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
} else {
# 251 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
break; } } }
# 253 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if ((++__beg) != __end) {
# 254 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__c = (*__beg); } else {
# 256 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__testeof = true; }
# 257 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
} } } else {
# 259 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
while (!__testeof) {
# 260 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 263 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if ((__lc->_M_use_grouping) && (__c == (__lc->_M_thousands_sep)))
# 264 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 265 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if ((!__found_dec) && (!__found_sci))
# 266 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 269 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__sep_pos)
# 270 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 271 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(__found_grouping += (static_cast< char>(__sep_pos)));
# 272 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__sep_pos = 0;
# 273 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
} else
# 275 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 278 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__xtrc.clear();
# 279 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
break;
# 280 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 281 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
} else {
# 283 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
break; }
# 284 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
} else {
# 285 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__c == (__lc->_M_decimal_point))
# 286 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 287 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if ((!__found_dec) && (!__found_sci))
# 288 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 292 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__found_grouping.size()) {
# 293 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(__found_grouping += (static_cast< char>(__sep_pos))); }
# 294 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(__xtrc += ('.'));
# 295 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__found_dec = true;
# 296 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
} else {
# 298 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
break; }
# 299 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
} else
# 301 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 302 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const char_type *__q = __traits_type::find(__lit_zero, 10, __c);
# 304 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__q)
# 305 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 306 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__xtrc += ('0' + (__q - __lit_zero));
# 307 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__found_mantissa = true;
# 308 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
++__sep_pos;
# 309 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
} else {
# 310 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (((__c == (__lit[__num_base::_S_ie])) || (__c == (__lit[__num_base::_S_iE]))) && (!__found_sci) && __found_mantissa)
# 313 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 315 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if ((__found_grouping.size()) && (!__found_dec)) {
# 316 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(__found_grouping += (static_cast< char>(__sep_pos))); }
# 317 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(__xtrc += ('e'));
# 318 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__found_sci = true;
# 321 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if ((++__beg) != __end)
# 322 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 323 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__c = (*__beg);
# 324 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const bool __plus = __c == (__lit[__num_base::_S_iplus]);
# 325 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if ((__plus || (__c == (__lit[__num_base::_S_iminus]))) && (!((__lc->_M_use_grouping) && (__c == (__lc->_M_thousands_sep)))) && (!(__c == (__lc->_M_decimal_point)))) {
# 329 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(__xtrc += (__plus ? '+' : '-')); } else {
# 331 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
continue; }
# 332 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
} else
# 334 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 335 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__testeof = true;
# 336 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
break;
# 337 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 338 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
} else {
# 340 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
break; } }
# 341 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
} }
# 343 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if ((++__beg) != __end) {
# 344 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__c = (*__beg); } else {
# 346 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__testeof = true; }
# 347 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
} } }
# 351 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__found_grouping.size())
# 352 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 354 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if ((!__found_dec) && (!__found_sci)) {
# 355 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(__found_grouping += (static_cast< char>(__sep_pos))); }
# 357 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (!std::__verify_grouping((__lc->_M_grouping), (__lc->_M_grouping_size), __found_grouping)) {
# 360 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__err = ios_base::failbit; }
# 361 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 363 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
return __beg;
# 364 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 366 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
template< class _CharT, class _InIter>
# 367 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
template< class _ValueT> _InIter
# 370 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
num_get< _CharT, _InIter> ::_M_extract_int(_InIter __beg, _InIter __end, ios_base &__io, ios_base::iostate &
# 371 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__err, _ValueT &__v) const
# 372 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 373 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
typedef char_traits< _CharT> __traits_type;
# 374 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
using __gnu_cxx::__add_unsigned;
# 375 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
typedef typename __gnu_cxx::__add_unsigned< _ValueT> ::__type __unsigned_type;
# 376 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
typedef __numpunct_cache< _CharT> __cache_type;
# 377 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__use_cache< __numpunct_cache< _CharT> > __uc;
# 378 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const locale &__loc = __io._M_getloc();
# 379 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const __cache_type *__lc = __uc(__loc);
# 380 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const _CharT *__lit = ((__lc->_M_atoms_in));
# 381 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
char_type __c = (char_type());
# 384 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const ios_base::fmtflags __basefield = ((__io.flags()) & ios_base::basefield);
# 386 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const bool __oct = __basefield == ios_base::oct;
# 387 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
int __base = __oct ? 8 : ((__basefield == ios_base::hex) ? 16 : 10);
# 390 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
bool __testeof = __beg == __end;
# 393 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
bool __negative = false;
# 394 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (!__testeof)
# 395 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 396 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__c = (*__beg);
# 397 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__negative = (__c == (__lit[__num_base::_S_iminus]));
# 398 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if ((__negative || (__c == (__lit[__num_base::_S_iplus]))) && (!((__lc->_M_use_grouping) && (__c == (__lc->_M_thousands_sep)))) && (!(__c == (__lc->_M_decimal_point))))
# 401 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 402 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if ((++__beg) != __end) {
# 403 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__c = (*__beg); } else {
# 405 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__testeof = true; }
# 406 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 407 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 411 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
bool __found_zero = false;
# 412 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
int __sep_pos = 0;
# 413 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
while (!__testeof)
# 414 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 415 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (((__lc->_M_use_grouping) && (__c == (__lc->_M_thousands_sep))) || (__c == (__lc->_M_decimal_point))) {
# 417 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
break; } else {
# 418 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if ((__c == (__lit[__num_base::_S_izero])) && ((!__found_zero) || (__base == 10)))
# 420 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 421 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__found_zero = true;
# 422 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
++__sep_pos;
# 423 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__basefield == 0) {
# 424 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__base = 8; }
# 425 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__base == 8) {
# 426 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__sep_pos = 0; }
# 427 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
} else {
# 428 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__found_zero && ((__c == (__lit[__num_base::_S_ix])) || (__c == (__lit[__num_base::_S_iX]))))
# 431 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 432 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__basefield == 0) {
# 433 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__base = 16; }
# 434 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__base == 16)
# 435 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 436 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__found_zero = false;
# 437 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__sep_pos = 0;
# 438 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
} else {
# 440 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
break; }
# 441 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
} else {
# 443 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
break; } } }
# 445 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if ((++__beg) != __end)
# 446 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 447 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__c = (*__beg);
# 448 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (!__found_zero) {
# 449 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
break; }
# 450 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
} else {
# 452 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__testeof = true; }
# 453 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 457 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const size_t __len = (__base == 16) ? (__num_base::_S_iend) - (__num_base::_S_izero) : __base;
# 461 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
string __found_grouping;
# 462 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__lc->_M_use_grouping) {
# 463 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__found_grouping.reserve(32); }
# 464 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
bool __testfail = false;
# 465 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
bool __testoverflow = false;
# 466 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const __unsigned_type __max = (__negative && __gnu_cxx::__numeric_traits< _ValueT> ::__is_signed) ? -__gnu_cxx::__numeric_traits< _ValueT> ::__min : __gnu_cxx::__numeric_traits< _ValueT> ::__max;
# 470 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const __unsigned_type __smax = __max / __base;
# 471 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__unsigned_type __result = (0);
# 472 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
int __digit = 0;
# 473 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const char_type *__lit_zero = __lit + __num_base::_S_izero;
# 475 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (!(__lc->_M_allocated)) {
# 477 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
while (!__testeof)
# 478 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 479 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__digit = _M_find(__lit_zero, __len, __c);
# 480 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__digit == (-1)) {
# 481 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
break; }
# 483 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__result > __smax) {
# 484 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__testoverflow = true; } else
# 486 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 487 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__result *= __base;
# 488 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__testoverflow |= (__result > (__max - __digit));
# 489 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__result += __digit;
# 490 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
++__sep_pos;
# 491 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 493 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if ((++__beg) != __end) {
# 494 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__c = (*__beg); } else {
# 496 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__testeof = true; }
# 497 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
} } else {
# 499 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
while (!__testeof)
# 500 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 503 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if ((__lc->_M_use_grouping) && (__c == (__lc->_M_thousands_sep)))
# 504 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 507 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__sep_pos)
# 508 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 509 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(__found_grouping += (static_cast< char>(__sep_pos)));
# 510 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__sep_pos = 0;
# 511 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
} else
# 513 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 514 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__testfail = true;
# 515 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
break;
# 516 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 517 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
} else {
# 518 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__c == (__lc->_M_decimal_point)) {
# 519 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
break; } else
# 521 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 522 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const char_type *__q = __traits_type::find(__lit_zero, __len, __c);
# 524 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (!__q) {
# 525 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
break; }
# 527 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__digit = (__q - __lit_zero);
# 528 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__digit > 15) {
# 529 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__digit -= 6; }
# 530 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__result > __smax) {
# 531 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__testoverflow = true; } else
# 533 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 534 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__result *= __base;
# 535 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__testoverflow |= (__result > (__max - __digit));
# 536 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__result += __digit;
# 537 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
++__sep_pos;
# 538 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 539 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
} }
# 541 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if ((++__beg) != __end) {
# 542 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__c = (*__beg); } else {
# 544 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__testeof = true; }
# 545 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
} }
# 549 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__found_grouping.size())
# 550 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 552 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(__found_grouping += (static_cast< char>(__sep_pos)));
# 554 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (!std::__verify_grouping((__lc->_M_grouping), (__lc->_M_grouping_size), __found_grouping)) {
# 557 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__err = ios_base::failbit; }
# 558 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 562 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (((!__sep_pos) && (!__found_zero) && (!(__found_grouping.size()))) || __testfail)
# 564 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 565 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__v = 0;
# 566 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__err = ios_base::failbit;
# 567 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
} else {
# 568 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__testoverflow)
# 569 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 570 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__negative && __gnu_cxx::__numeric_traits< _ValueT> ::__is_signed) {
# 572 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__v = __gnu_cxx::__numeric_traits< _ValueT> ::__min; } else {
# 574 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__v = __gnu_cxx::__numeric_traits< _ValueT> ::__max; }
# 575 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__err = ios_base::failbit;
# 576 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
} else {
# 578 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__v = (__negative ? -__result : __result); } }
# 580 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__testeof) {
# 581 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(__err |= ios_base::eofbit); }
# 582 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
return __beg;
# 583 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 587 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
template< class _CharT, class _InIter> _InIter
# 590 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
num_get< _CharT, _InIter> ::do_get(iter_type __beg, iter_type __end, ios_base &__io, ios_base::iostate &
# 591 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__err, bool &__v) const
# 592 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 593 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (!(((__io.flags()) & ios_base::boolalpha)))
# 594 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 598 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
long __l = (-1);
# 599 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__beg = _M_extract_int(__beg, __end, __io, __err, __l);
# 600 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if ((__l == (0)) || (__l == (1))) {
# 601 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__v = ((bool)__l); } else
# 603 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 606 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__v = true;
# 607 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__err = ios_base::failbit;
# 608 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__beg == __end) {
# 609 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(__err |= ios_base::eofbit); }
# 610 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 611 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
} else
# 613 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 615 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
typedef __numpunct_cache< _CharT> __cache_type;
# 616 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__use_cache< __numpunct_cache< _CharT> > __uc;
# 617 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const locale &__loc = __io._M_getloc();
# 618 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const __cache_type *__lc = __uc(__loc);
# 620 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
bool __testf = true;
# 621 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
bool __testt = true;
# 622 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
bool __donef = (__lc->_M_falsename_size) == 0;
# 623 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
bool __donet = (__lc->_M_truename_size) == 0;
# 624 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
bool __testeof = false;
# 625 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
size_t __n = (0);
# 626 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
while ((!__donef) || (!__donet))
# 627 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 628 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__beg == __end)
# 629 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 630 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__testeof = true;
# 631 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
break;
# 632 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 634 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const char_type __c = (*__beg);
# 636 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (!__donef) {
# 637 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__testf = (__c == ((__lc->_M_falsename)[__n])); }
# 639 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if ((!__testf) && __donet) {
# 640 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
break; }
# 642 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (!__donet) {
# 643 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__testt = (__c == ((__lc->_M_truename)[__n])); }
# 645 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if ((!__testt) && __donef) {
# 646 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
break; }
# 648 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if ((!__testt) && (!__testf)) {
# 649 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
break; }
# 651 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
++__n;
# 652 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
++__beg;
# 654 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__donef = ((!__testf) || (__n >= (__lc->_M_falsename_size)));
# 655 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__donet = ((!__testt) || (__n >= (__lc->_M_truename_size)));
# 656 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 657 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__testf && (__n == (__lc->_M_falsename_size)) && __n)
# 658 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 659 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__v = false;
# 660 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__testt && (__n == (__lc->_M_truename_size))) {
# 661 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__err = ios_base::failbit; } else {
# 663 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__err = (__testeof ? ios_base::eofbit : ios_base::goodbit); }
# 664 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
} else {
# 665 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__testt && (__n == (__lc->_M_truename_size)) && __n)
# 666 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 667 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__v = true;
# 668 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__err = (__testeof ? ios_base::eofbit : ios_base::goodbit);
# 669 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
} else
# 671 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 674 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__v = false;
# 675 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__err = ios_base::failbit;
# 676 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__testeof) {
# 677 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(__err |= ios_base::eofbit); }
# 678 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
} }
# 679 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 680 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
return __beg;
# 681 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 683 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
template< class _CharT, class _InIter> _InIter
# 686 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
num_get< _CharT, _InIter> ::do_get(iter_type __beg, iter_type __end, ios_base &__io, ios_base::iostate &
# 687 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__err, float &__v) const
# 688 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 689 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
string __xtrc;
# 690 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__xtrc.reserve(32);
# 691 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__beg = _M_extract_float(__beg, __end, __io, __err, __xtrc);
# 692 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
std::__convert_to_v(__xtrc.c_str(), __v, __err, _S_get_c_locale());
# 693 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__beg == __end) {
# 694 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(__err |= ios_base::eofbit); }
# 695 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
return __beg;
# 696 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 698 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
template< class _CharT, class _InIter> _InIter
# 701 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
num_get< _CharT, _InIter> ::do_get(iter_type __beg, iter_type __end, ios_base &__io, ios_base::iostate &
# 702 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__err, double &__v) const
# 703 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 704 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
string __xtrc;
# 705 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__xtrc.reserve(32);
# 706 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__beg = _M_extract_float(__beg, __end, __io, __err, __xtrc);
# 707 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
std::__convert_to_v(__xtrc.c_str(), __v, __err, _S_get_c_locale());
# 708 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__beg == __end) {
# 709 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(__err |= ios_base::eofbit); }
# 710 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
return __beg;
# 711 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 730 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
template< class _CharT, class _InIter> _InIter
# 733 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
num_get< _CharT, _InIter> ::do_get(iter_type __beg, iter_type __end, ios_base &__io, ios_base::iostate &
# 734 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__err, long double &__v) const
# 735 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 736 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
string __xtrc;
# 737 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__xtrc.reserve(32);
# 738 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__beg = _M_extract_float(__beg, __end, __io, __err, __xtrc);
# 739 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
std::__convert_to_v(__xtrc.c_str(), __v, __err, _S_get_c_locale());
# 740 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__beg == __end) {
# 741 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(__err |= ios_base::eofbit); }
# 742 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
return __beg;
# 743 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 745 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
template< class _CharT, class _InIter> _InIter
# 748 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
num_get< _CharT, _InIter> ::do_get(iter_type __beg, iter_type __end, ios_base &__io, ios_base::iostate &
# 749 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__err, void *&__v) const
# 750 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 752 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
typedef ios_base::fmtflags fmtflags;
# 753 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const fmtflags __fmt = __io.flags();
# 754 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__io.flags((((__fmt & ((~ios_base::basefield)))) | ios_base::hex));
# 758 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
typedef __gnu_cxx::__conditional_type< true, unsigned long, unsigned long long> ::__type _UIntPtrType;
# 760 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
_UIntPtrType __ul;
# 761 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__beg = _M_extract_int(__beg, __end, __io, __err, __ul);
# 764 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__io.flags(__fmt);
# 766 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__v = (reinterpret_cast< void *>(__ul));
# 767 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
return __beg;
# 768 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 772 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
template< class _CharT, class _OutIter> void
# 775 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
num_put< _CharT, _OutIter> ::_M_pad(_CharT __fill, streamsize __w, ios_base &__io, _CharT *
# 776 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__new, const _CharT *__cs, int &__len) const
# 777 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 780 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__pad< _CharT, char_traits< _CharT> > ::_S_pad(__io, __fill, __new, __cs, __w, __len);
# 782 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__len = (static_cast< int>(__w));
# 783 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 787 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
template< class _CharT, class _ValueT> int
# 789 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__int_to_char(_CharT *__bufend, _ValueT __v, const _CharT *__lit, ios_base::fmtflags
# 790 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__flags, bool __dec)
# 791 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 792 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
_CharT *__buf = __bufend;
# 793 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__builtin_expect(__dec, true))
# 794 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 796 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
do
# 797 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 798 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(*(--__buf)) = (__lit[(__v % 10) + __num_base::_S_odigits]);
# 799 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__v /= 10;
# 800 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 801 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
while (__v != 0);
# 802 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
} else {
# 803 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (((__flags & ios_base::basefield)) == ios_base::oct)
# 804 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 806 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
do
# 807 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 808 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(*(--__buf)) = (__lit[(__v & 7) + __num_base::_S_odigits]);
# 809 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__v >>= 3;
# 810 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 811 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
while (__v != 0);
# 812 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
} else
# 814 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 816 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const bool __uppercase = (__flags & ios_base::uppercase);
# 817 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const int __case_offset = __uppercase ? __num_base::_S_oudigits : __num_base::_S_odigits;
# 819 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
do
# 820 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 821 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(*(--__buf)) = (__lit[(__v & 15) + __case_offset]);
# 822 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__v >>= 4;
# 823 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 824 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
while (__v != 0);
# 825 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
} }
# 826 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
return __bufend - __buf;
# 827 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 831 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
template< class _CharT, class _OutIter> void
# 834 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
num_put< _CharT, _OutIter> ::_M_group_int(const char *__grouping, size_t __grouping_size, _CharT __sep, ios_base &, _CharT *
# 835 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__new, _CharT *__cs, int &__len) const
# 836 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 837 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
_CharT *__p = std::__add_grouping(__new, __sep, __grouping, __grouping_size, __cs, __cs + __len);
# 839 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__len = (__p - __new);
# 840 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 842 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
template< class _CharT, class _OutIter>
# 843 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
template< class _ValueT> _OutIter
# 846 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
num_put< _CharT, _OutIter> ::_M_insert_int(_OutIter __s, ios_base &__io, _CharT __fill, _ValueT
# 847 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__v) const
# 848 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 849 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
using __gnu_cxx::__add_unsigned;
# 850 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
typedef typename __gnu_cxx::__add_unsigned< _ValueT> ::__type __unsigned_type;
# 851 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
typedef __numpunct_cache< _CharT> __cache_type;
# 852 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__use_cache< __numpunct_cache< _CharT> > __uc;
# 853 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const locale &__loc = __io._M_getloc();
# 854 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const __cache_type *__lc = __uc(__loc);
# 855 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const _CharT *__lit = ((__lc->_M_atoms_out));
# 856 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const ios_base::fmtflags __flags = __io.flags();
# 859 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const int __ilen = ((5) * sizeof(_ValueT));
# 860 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
_CharT *__cs = static_cast< _CharT *>(__builtin_alloca(sizeof(_CharT) * __ilen));
# 865 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const ios_base::fmtflags __basefield = (__flags & ios_base::basefield);
# 866 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const bool __dec = (__basefield != ios_base::oct) && (__basefield != ios_base::hex);
# 868 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const __unsigned_type __u = ((__v > 0) || (!__dec)) ? (__unsigned_type)__v : (-((__unsigned_type)__v));
# 871 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
int __len = __int_to_char(__cs + __ilen, __u, __lit, __flags, __dec);
# 872 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__cs += (__ilen - __len);
# 875 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__lc->_M_use_grouping)
# 876 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 879 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
_CharT *__cs2 = static_cast< _CharT *>(__builtin_alloca((sizeof(_CharT) * (__len + 1)) * (2)));
# 882 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
_M_group_int((__lc->_M_grouping), (__lc->_M_grouping_size), (__lc->_M_thousands_sep), __io, __cs2 + 2, __cs, __len);
# 884 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__cs = (__cs2 + 2);
# 885 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 888 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__builtin_expect(__dec, true))
# 889 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 891 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__v >= 0)
# 892 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 893 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (((bool)((__flags & ios_base::showpos))) && __gnu_cxx::__numeric_traits< _ValueT> ::__is_signed) {
# 895 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
((*(--__cs)) = (__lit[__num_base::_S_oplus])), (++__len); }
# 896 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
} else {
# 898 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
((*(--__cs)) = (__lit[__num_base::_S_ominus])), (++__len); }
# 899 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
} else {
# 900 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (((bool)((__flags & ios_base::showbase))) && __v)
# 901 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 902 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__basefield == ios_base::oct) {
# 903 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
((*(--__cs)) = (__lit[__num_base::_S_odigits])), (++__len); } else
# 905 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 907 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const bool __uppercase = (__flags & ios_base::uppercase);
# 908 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(*(--__cs)) = (__lit[(__num_base::_S_ox) + __uppercase]);
# 910 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(*(--__cs)) = (__lit[__num_base::_S_odigits]);
# 911 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__len += 2;
# 912 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 913 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
} }
# 916 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const streamsize __w = __io.width();
# 917 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__w > (static_cast< streamsize>(__len)))
# 918 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 919 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
_CharT *__cs3 = static_cast< _CharT *>(__builtin_alloca(sizeof(_CharT) * __w));
# 921 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
_M_pad(__fill, __w, __io, __cs3, __cs, __len);
# 922 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__cs = __cs3;
# 923 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 924 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__io.width(0);
# 928 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
return std::__write(__s, __cs, __len);
# 929 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 931 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
template< class _CharT, class _OutIter> void
# 934 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
num_put< _CharT, _OutIter> ::_M_group_float(const char *__grouping, size_t __grouping_size, _CharT
# 935 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__sep, const _CharT *__p, _CharT *__new, _CharT *
# 936 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__cs, int &__len) const
# 937 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 941 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const int __declen = (__p) ? __p - __cs : __len;
# 942 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
_CharT *__p2 = std::__add_grouping(__new, __sep, __grouping, __grouping_size, __cs, __cs + __declen);
# 947 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
int __newlen = __p2 - __new;
# 948 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__p)
# 949 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 950 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
char_traits< _CharT> ::copy(__p2, __p, __len - __declen);
# 951 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__newlen += (__len - __declen);
# 952 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 953 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__len = __newlen;
# 954 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 966 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
template< class _CharT, class _OutIter>
# 967 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
template< class _ValueT> _OutIter
# 970 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
num_put< _CharT, _OutIter> ::_M_insert_float(_OutIter __s, ios_base &__io, _CharT __fill, char __mod, _ValueT
# 971 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__v) const
# 972 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 973 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
typedef __numpunct_cache< _CharT> __cache_type;
# 974 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__use_cache< __numpunct_cache< _CharT> > __uc;
# 975 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const locale &__loc = __io._M_getloc();
# 976 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const __cache_type *__lc = __uc(__loc);
# 979 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const streamsize __prec = (__io.precision() < (0)) ? 6 : __io.precision();
# 981 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const int __max_digits = (__gnu_cxx::__numeric_traits< _ValueT> ::__digits10);
# 985 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
int __len;
# 987 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
char __fbuf[16];
# 988 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__num_base::_S_format_float(__io, __fbuf, __mod);
# 993 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
int __cs_size = (__max_digits * 3);
# 994 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
char *__cs = static_cast< char *>(__builtin_alloca(__cs_size));
# 995 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__len = std::__convert_from_v(_S_get_c_locale(), __cs, __cs_size, __fbuf, __prec, __v);
# 999 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__len >= __cs_size)
# 1000 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 1001 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__cs_size = (__len + 1);
# 1002 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__cs = (static_cast< char *>(__builtin_alloca(__cs_size)));
# 1003 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__len = std::__convert_from_v(_S_get_c_locale(), __cs, __cs_size, __fbuf, __prec, __v);
# 1005 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 1027 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const ctype< _CharT> &__ctype = use_facet< ctype< _CharT> > (__loc);
# 1029 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
_CharT *__ws = static_cast< _CharT *>(__builtin_alloca(sizeof(_CharT) * __len));
# 1031 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(__ctype.widen(__cs, __cs + __len, __ws));
# 1034 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
_CharT *__wp = (0);
# 1035 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const char *__p = char_traits< char> ::find(__cs, __len, '.');
# 1036 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__p)
# 1037 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 1038 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__wp = (__ws + (__p - __cs));
# 1039 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(*__wp) = (__lc->_M_decimal_point);
# 1040 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 1045 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if ((__lc->_M_use_grouping) && ((__wp || (__len < 3)) || (((__cs[1]) <= ('9')) && ((__cs[2]) <= ('9')) && ((__cs[1]) >= ('0')) && ((__cs[2]) >= ('0')))))
# 1048 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 1051 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
_CharT *__ws2 = static_cast< _CharT *>(__builtin_alloca((sizeof(_CharT) * __len) * (2)));
# 1054 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
streamsize __off = (0);
# 1055 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (((__cs[0]) == ('-')) || ((__cs[0]) == ('+')))
# 1056 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 1057 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__off = (1);
# 1058 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(__ws2[0]) = (__ws[0]);
# 1059 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__len -= 1;
# 1060 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 1062 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
_M_group_float((__lc->_M_grouping), (__lc->_M_grouping_size), (__lc->_M_thousands_sep), __wp, __ws2 + __off, __ws + __off, __len);
# 1065 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__len += __off;
# 1067 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__ws = __ws2;
# 1068 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 1071 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const streamsize __w = __io.width();
# 1072 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__w > (static_cast< streamsize>(__len)))
# 1073 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 1074 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
_CharT *__ws3 = static_cast< _CharT *>(__builtin_alloca(sizeof(_CharT) * __w));
# 1076 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
_M_pad(__fill, __w, __io, __ws3, __ws, __len);
# 1077 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__ws = __ws3;
# 1078 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 1079 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__io.width(0);
# 1083 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
return std::__write(__s, __ws, __len);
# 1084 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 1086 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
template< class _CharT, class _OutIter> _OutIter
# 1089 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
num_put< _CharT, _OutIter> ::do_put(iter_type __s, ios_base &__io, char_type __fill, bool __v) const
# 1090 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 1091 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const ios_base::fmtflags __flags = __io.flags();
# 1092 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (((__flags & ios_base::boolalpha)) == 0)
# 1093 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 1094 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const long __l = __v;
# 1095 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__s = _M_insert_int(__s, __io, __fill, __l);
# 1096 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
} else
# 1098 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 1099 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
typedef __numpunct_cache< _CharT> __cache_type;
# 1100 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__use_cache< __numpunct_cache< _CharT> > __uc;
# 1101 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const locale &__loc = __io._M_getloc();
# 1102 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const __cache_type *__lc = __uc(__loc);
# 1104 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const _CharT *__name = __v ? __lc->_M_truename : (__lc->_M_falsename);
# 1106 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
int __len = __v ? __lc->_M_truename_size : (__lc->_M_falsename_size);
# 1109 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const streamsize __w = __io.width();
# 1110 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__w > (static_cast< streamsize>(__len)))
# 1111 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 1112 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const streamsize __plen = __w - __len;
# 1113 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
_CharT *__ps = static_cast< _CharT *>(__builtin_alloca(sizeof(_CharT) * __plen));
# 1117 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
char_traits< _CharT> ::assign(__ps, __plen, __fill);
# 1118 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__io.width(0);
# 1120 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (((__flags & ios_base::adjustfield)) == ios_base::left)
# 1121 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 1122 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__s = std::__write(__s, __name, __len);
# 1123 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__s = std::__write(__s, __ps, __plen);
# 1124 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
} else
# 1126 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 1127 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__s = std::__write(__s, __ps, __plen);
# 1128 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__s = std::__write(__s, __name, __len);
# 1129 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 1130 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
return __s;
# 1131 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 1132 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__io.width(0);
# 1133 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__s = std::__write(__s, __name, __len);
# 1134 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 1135 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
return __s;
# 1136 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 1138 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
template< class _CharT, class _OutIter> _OutIter
# 1141 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
num_put< _CharT, _OutIter> ::do_put(iter_type __s, ios_base &__io, char_type __fill, double __v) const
# 1142 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{ return _M_insert_float(__s, __io, __fill, ((char)0), __v); }
# 1152 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
template< class _CharT, class _OutIter> _OutIter
# 1155 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
num_put< _CharT, _OutIter> ::do_put(iter_type __s, ios_base &__io, char_type __fill, long double
# 1156 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__v) const
# 1157 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{ return _M_insert_float(__s, __io, __fill, 'L', __v); }
# 1159 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
template< class _CharT, class _OutIter> _OutIter
# 1162 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
num_put< _CharT, _OutIter> ::do_put(iter_type __s, ios_base &__io, char_type __fill, const void *
# 1163 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__v) const
# 1164 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 1165 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const ios_base::fmtflags __flags = __io.flags();
# 1166 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const ios_base::fmtflags __fmt = (~((ios_base::basefield | ios_base::uppercase)));
# 1168 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__io.flags((((__flags & __fmt)) | ((ios_base::hex | ios_base::showbase))));
# 1172 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
typedef __gnu_cxx::__conditional_type< true, unsigned long, unsigned long long> ::__type _UIntPtrType;
# 1174 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__s = _M_insert_int(__s, __io, __fill, reinterpret_cast< _UIntPtrType>(__v));
# 1176 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__io.flags(__flags);
# 1177 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
return __s;
# 1178 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 1189 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
template< class _CharT, class _Traits> void
# 1191 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__pad< _CharT, _Traits> ::_S_pad(ios_base &__io, _CharT __fill, _CharT *
# 1192 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__news, const _CharT *__olds, streamsize
# 1193 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__newlen, streamsize __oldlen)
# 1194 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 1195 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const size_t __plen = static_cast< size_t>(__newlen - __oldlen);
# 1196 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const ios_base::fmtflags __adjust = ((__io.flags()) & ios_base::adjustfield);
# 1199 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__adjust == ios_base::left)
# 1200 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 1201 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
_Traits::copy(__news, __olds, __oldlen);
# 1202 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
_Traits::assign(__news + __oldlen, __plen, __fill);
# 1203 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
return;
# 1204 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 1206 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
size_t __mod = (0);
# 1207 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (__adjust == ios_base::internal)
# 1208 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 1212 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const locale &__loc = __io._M_getloc();
# 1213 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
const ctype< _CharT> &__ctype = use_facet< ctype< _CharT> > (__loc);
# 1215 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (((__ctype.widen('-')) == (__olds[0])) || ((__ctype.widen('+')) == (__olds[0])))
# 1217 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 1218 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(__news[0]) = (__olds[0]);
# 1219 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__mod = (1);
# 1220 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
++__news;
# 1221 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
} else {
# 1222 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
if (((__ctype.widen('0')) == (__olds[0])) && (__oldlen > (1)) && (((__ctype.widen('x')) == (__olds[1])) || ((__ctype.widen('X')) == (__olds[1]))))
# 1226 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 1227 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(__news[0]) = (__olds[0]);
# 1228 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(__news[1]) = (__olds[1]);
# 1229 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__mod = (2);
# 1230 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__news += 2;
# 1231 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
} }
# 1233 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 1234 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
_Traits::assign(__news, __plen, __fill);
# 1235 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
_Traits::copy(__news + __plen, __olds + __mod, __oldlen - __mod);
# 1236 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 1238 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
template< class _CharT> _CharT *
# 1240 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__add_grouping(_CharT *__s, _CharT __sep, const char *
# 1241 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__gbeg, size_t __gsize, const _CharT *
# 1242 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__first, const _CharT *__last)
# 1243 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 1244 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
size_t __idx = (0);
# 1245 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
size_t __ctr = (0);
# 1247 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
while (((__last - __first) > (__gbeg[__idx])) && ((static_cast< signed char>(__gbeg[__idx])) > 0) && ((__gbeg[__idx]) != __gnu_cxx::__numeric_traits_integer< char> ::__max))
# 1250 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 1251 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
__last -= (__gbeg[__idx]);
# 1252 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(__idx < (__gsize - (1))) ? ++__idx : (++__ctr);
# 1253 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 1255 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
while (__first != __last) {
# 1256 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(*(__s++)) = (*(__first++)); }
# 1258 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
while (__ctr--)
# 1259 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 1260 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(*(__s++)) = __sep;
# 1261 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
for (char __i = __gbeg[__idx]; __i > 0; --__i) {
# 1262 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(*(__s++)) = (*(__first++)); }
# 1263 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 1265 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
while (__idx--)
# 1266 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
{
# 1267 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(*(__s++)) = __sep;
# 1268 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
for (char __i = __gbeg[__idx]; __i > 0; --__i) {
# 1269 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
(*(__s++)) = (*(__first++)); }
# 1270 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 1272 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
return __s;
# 1273 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 1278 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
extern template class numpunct< char> ;
# 1279 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
extern template class numpunct_byname< char> ;
# 1280 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
extern template class num_get< char, istreambuf_iterator< char, char_traits< char> > > ;
# 1281 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
extern template class num_put< char, ostreambuf_iterator< char, char_traits< char> > > ;
# 1284 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
extern template const ctype< char> &use_facet< ctype< char> > (const locale &);
# 1288 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
extern template const numpunct< char> &use_facet< numpunct< char> > (const locale &);
# 1292 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
extern template const num_put< char, ostreambuf_iterator< char, char_traits< char> > > &use_facet< num_put< char, ostreambuf_iterator< char, char_traits< char> > > > (const locale &);
# 1296 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
extern template const num_get< char, istreambuf_iterator< char, char_traits< char> > > &use_facet< num_get< char, istreambuf_iterator< char, char_traits< char> > > > (const locale &);
# 1300 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
extern template bool has_facet< ctype< char> > (const locale &) throw();
# 1304 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
extern template bool has_facet< numpunct< char> > (const locale &) throw();
# 1308 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
extern template bool has_facet< num_put< char, ostreambuf_iterator< char, char_traits< char> > > > (const locale &) throw();
# 1312 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
extern template bool has_facet< num_get< char, istreambuf_iterator< char, char_traits< char> > > > (const locale &) throw();
# 1317 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
extern template class numpunct< wchar_t> ;
# 1318 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
extern template class numpunct_byname< wchar_t> ;
# 1319 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
extern template class num_get< wchar_t, istreambuf_iterator< wchar_t, char_traits< wchar_t> > > ;
# 1320 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
extern template class num_put< wchar_t, ostreambuf_iterator< wchar_t, char_traits< wchar_t> > > ;
# 1323 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
extern template const ctype< wchar_t> &use_facet< ctype< wchar_t> > (const locale &);
# 1327 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
extern template const numpunct< wchar_t> &use_facet< numpunct< wchar_t> > (const locale &);
# 1331 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
extern template const num_put< wchar_t, ostreambuf_iterator< wchar_t, char_traits< wchar_t> > > &use_facet< num_put< wchar_t, ostreambuf_iterator< wchar_t, char_traits< wchar_t> > > > (const locale &);
# 1335 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
extern template const num_get< wchar_t, istreambuf_iterator< wchar_t, char_traits< wchar_t> > > &use_facet< num_get< wchar_t, istreambuf_iterator< wchar_t, char_traits< wchar_t> > > > (const locale &);
# 1339 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
extern template bool has_facet< ctype< wchar_t> > (const locale &) throw();
# 1343 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
extern template bool has_facet< numpunct< wchar_t> > (const locale &) throw();
# 1347 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
extern template bool has_facet< num_put< wchar_t, ostreambuf_iterator< wchar_t, char_traits< wchar_t> > > > (const locale &) throw();
# 1351 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
extern template bool has_facet< num_get< wchar_t, istreambuf_iterator< wchar_t, char_traits< wchar_t> > > > (const locale &) throw();
# 1358 "/usr/include/c++/4.8.2/bits/locale_facets.tcc" 3
}
# 40 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
namespace std __attribute((__visibility__("default"))) {
# 44 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
template< class _Facet> inline const _Facet &
# 46 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
__check_facet(const _Facet *__f)
# 47 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
{
# 48 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
if (!__f) {
# 49 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
__throw_bad_cast(); }
# 50 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
return *__f;
# 51 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
}
# 65 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
template< class _CharT, class _Traits>
# 66 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
class basic_ios : public ios_base {
# 75 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
public: typedef _CharT char_type;
# 76 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
typedef typename _Traits::int_type int_type;
# 77 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
typedef typename _Traits::pos_type pos_type;
# 78 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
typedef typename _Traits::off_type off_type;
# 79 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
typedef _Traits traits_type;
# 86 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
typedef ctype< _CharT> __ctype_type;
# 88 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
typedef num_put< _CharT, ostreambuf_iterator< _CharT, _Traits> > __num_put_type;
# 90 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
typedef num_get< _CharT, istreambuf_iterator< _CharT, _Traits> > __num_get_type;
# 95 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
protected: basic_ostream< _CharT, _Traits> *_M_tie;
# 96 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
mutable char_type _M_fill;
# 97 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
mutable bool _M_fill_init;
# 98 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
basic_streambuf< _CharT, _Traits> *_M_streambuf;
# 101 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
const __ctype_type *_M_ctype;
# 103 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
const __num_put_type *_M_num_put;
# 105 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
const __num_get_type *_M_num_get;
# 115 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
public: operator void *() const
# 116 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
{ return this->fail() ? 0 : (const_cast< basic_ios *>(this)); }
# 119 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
bool operator!() const
# 120 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
{ return this->fail(); }
# 131 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
iostate rdstate() const
# 132 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
{ return _M_streambuf_state; }
# 142 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
void clear(iostate __state = goodbit);
# 151 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
void setstate(iostate __state)
# 152 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
{ this->clear(((this->rdstate()) | __state)); }
# 158 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
void _M_setstate(iostate __state)
# 159 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
{
# 162 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
((_M_streambuf_state) |= __state);
# 163 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
if (((this->exceptions()) & __state)) {
# 164 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
throw; }
# 165 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
}
# 174 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
bool good() const
# 175 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
{ return (this->rdstate()) == 0; }
# 184 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
bool eof() const
# 185 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
{ return (((this->rdstate()) & eofbit)) != 0; }
# 195 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
bool fail() const
# 196 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
{ return (((this->rdstate()) & ((badbit | failbit)))) != 0; }
# 205 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
bool bad() const
# 206 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
{ return (((this->rdstate()) & badbit)) != 0; }
# 216 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
iostate exceptions() const
# 217 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
{ return _M_exception; }
# 251 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
void exceptions(iostate __except)
# 252 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
{
# 253 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
(_M_exception) = __except;
# 254 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
this->clear(_M_streambuf_state);
# 255 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
}
# 264 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
explicit basic_ios(basic_streambuf< _CharT, _Traits> *__sb) : ios_base(), _M_tie((0)), _M_fill(), _M_fill_init(false), _M_streambuf((0)), _M_ctype((0)), _M_num_put((0)), _M_num_get((0))
# 267 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
{ this->init(__sb); }
# 276 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
virtual ~basic_ios() { }
# 289 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
basic_ostream< _CharT, _Traits> *tie() const
# 290 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
{ return _M_tie; }
# 301 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
basic_ostream< _CharT, _Traits> *tie(basic_ostream< _CharT, _Traits> *__tiestr)
# 302 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
{
# 303 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
basic_ostream< _CharT, _Traits> *__old = _M_tie;
# 304 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
(_M_tie) = __tiestr;
# 305 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
return __old;
# 306 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
}
# 315 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
basic_streambuf< _CharT, _Traits> *rdbuf() const
# 316 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
{ return _M_streambuf; }
# 341 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
basic_streambuf< _CharT, _Traits> *rdbuf(basic_streambuf< _CharT, _Traits> * __sb);
# 355 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
basic_ios &copyfmt(const basic_ios & __rhs);
# 364 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
char_type fill() const
# 365 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
{
# 366 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
if (!(_M_fill_init))
# 367 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
{
# 368 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
(_M_fill) = this->widen(' ');
# 369 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
(_M_fill_init) = true;
# 370 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
}
# 371 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
return _M_fill;
# 372 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
}
# 384 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
char_type fill(char_type __ch)
# 385 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
{
# 386 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
char_type __old = (this->fill());
# 387 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
(_M_fill) = __ch;
# 388 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
return __old;
# 389 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
}
# 404 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
locale imbue(const locale & __loc);
# 424 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
char narrow(char_type __c, char __dfault) const
# 425 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
{ return (__check_facet(_M_ctype).narrow(__c, __dfault)); }
# 443 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
char_type widen(char __c) const
# 444 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
{ return (__check_facet(_M_ctype).widen(__c)); }
# 454 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
protected: basic_ios() : ios_base(), _M_tie((0)), _M_fill(char_type()), _M_fill_init(false), _M_streambuf((0)), _M_ctype((0)), _M_num_put((0)), _M_num_get((0))
# 457 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
{ }
# 466 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
void init(basic_streambuf< _CharT, _Traits> * __sb);
# 469 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
void _M_cache_locale(const locale & __loc);
# 470 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
};
# 473 "/usr/include/c++/4.8.2/bits/basic_ios.h" 3
}
# 35 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 39 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
template< class _CharT, class _Traits> void
# 41 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
basic_ios< _CharT, _Traits> ::clear(iostate __state)
# 42 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
{
# 43 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
if ((this->rdbuf())) {
# 44 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
(_M_streambuf_state) = __state; } else {
# 46 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
(_M_streambuf_state) = ((__state | badbit)); }
# 47 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
if (((this->exceptions()) & (this->rdstate()))) {
# 48 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
__throw_ios_failure("basic_ios::clear"); }
# 49 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
}
# 51 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
template< class _CharT, class _Traits> basic_streambuf< _CharT, _Traits> *
# 53 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
basic_ios< _CharT, _Traits> ::rdbuf(basic_streambuf< _CharT, _Traits> *__sb)
# 54 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
{
# 55 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
basic_streambuf< _CharT, _Traits> *__old = _M_streambuf;
# 56 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
(_M_streambuf) = __sb;
# 57 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
this->clear();
# 58 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
return __old;
# 59 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
}
# 61 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
template< class _CharT, class _Traits> basic_ios< _CharT, _Traits> &
# 63 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
basic_ios< _CharT, _Traits> ::copyfmt(const basic_ios &__rhs)
# 64 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
{
# 67 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
if (this != (&__rhs))
# 68 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
{
# 73 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
_Words *__words = ((__rhs._M_word_size) <= _S_local_word_size) ? _M_local_word : (new _Words [__rhs._M_word_size]);
# 77 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
_Callback_list *__cb = ((__rhs._M_callbacks));
# 78 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
if (__cb) {
# 79 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
__cb->_M_add_reference(); }
# 80 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
this->ios_base::_M_call_callbacks(erase_event);
# 81 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
if ((_M_word) != (_M_local_word))
# 82 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
{
# 83 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
delete [] (_M_word);
# 84 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
(_M_word) = (0);
# 85 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
}
# 86 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
this->ios_base::_M_dispose_callbacks();
# 89 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
(_M_callbacks) = __cb;
# 90 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
for (int __i = 0; __i < (__rhs._M_word_size); ++__i) {
# 91 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
(__words[__i]) = ((__rhs._M_word)[__i]); }
# 92 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
(_M_word) = __words;
# 93 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
(_M_word_size) = (__rhs._M_word_size);
# 95 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
(this->flags((__rhs.flags())));
# 96 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
(this->width((__rhs.width())));
# 97 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
(this->precision((__rhs.precision())));
# 98 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
(this->tie((__rhs.tie())));
# 99 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
(this->fill((__rhs.fill())));
# 100 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
(_M_ios_locale) = (__rhs.getloc());
# 101 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
_M_cache_locale(_M_ios_locale);
# 103 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
this->ios_base::_M_call_callbacks(copyfmt_event);
# 106 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
(this->exceptions((__rhs.exceptions())));
# 107 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
}
# 108 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
return *this;
# 109 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
}
# 112 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
template< class _CharT, class _Traits> locale
# 114 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
basic_ios< _CharT, _Traits> ::imbue(const locale &__loc)
# 115 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
{
# 116 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
locale __old(this->getloc());
# 117 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
this->ios_base::imbue(__loc);
# 118 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
_M_cache_locale(__loc);
# 119 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
if ((this->rdbuf()) != 0) {
# 120 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
((this->rdbuf())->pubimbue(__loc)); }
# 121 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
return __old;
# 122 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
}
# 124 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
template< class _CharT, class _Traits> void
# 126 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
basic_ios< _CharT, _Traits> ::init(basic_streambuf< _CharT, _Traits> *__sb)
# 127 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
{
# 129 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
this->ios_base::_M_init();
# 132 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
_M_cache_locale(_M_ios_locale);
# 146 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
(_M_fill) = _CharT();
# 147 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
(_M_fill_init) = false;
# 149 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
(_M_tie) = 0;
# 150 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
(_M_exception) = goodbit;
# 151 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
(_M_streambuf) = __sb;
# 152 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
(_M_streambuf_state) = ((__sb) ? goodbit : badbit);
# 153 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
}
# 155 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
template< class _CharT, class _Traits> void
# 157 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
basic_ios< _CharT, _Traits> ::_M_cache_locale(const locale &__loc)
# 158 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
{
# 159 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
if (__builtin_expect(has_facet< __ctype_type> (__loc), true)) {
# 160 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
(_M_ctype) = (&use_facet< __ctype_type> (__loc)); } else {
# 162 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
(_M_ctype) = 0; }
# 164 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
if (__builtin_expect(has_facet< __num_put_type> (__loc), true)) {
# 165 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
(_M_num_put) = (&use_facet< __num_put_type> (__loc)); } else {
# 167 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
(_M_num_put) = 0; }
# 169 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
if (__builtin_expect(has_facet< __num_get_type> (__loc), true)) {
# 170 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
(_M_num_get) = (&use_facet< __num_get_type> (__loc)); } else {
# 172 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
(_M_num_get) = 0; }
# 173 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
}
# 178 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
extern template class basic_ios< char, char_traits< char> > ;
# 181 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
extern template class basic_ios< wchar_t, char_traits< wchar_t> > ;
# 186 "/usr/include/c++/4.8.2/bits/basic_ios.tcc" 3
}
# 41 "/usr/include/c++/4.8.2/ostream" 3
namespace std __attribute((__visibility__("default"))) {
# 57 "/usr/include/c++/4.8.2/ostream" 3
template< class _CharT, class _Traits>
# 58 "/usr/include/c++/4.8.2/ostream" 3
class basic_ostream : virtual public basic_ios< _CharT, _Traits> {
# 62 "/usr/include/c++/4.8.2/ostream" 3
public: typedef _CharT char_type;
# 63 "/usr/include/c++/4.8.2/ostream" 3
typedef typename _Traits::int_type int_type;
# 64 "/usr/include/c++/4.8.2/ostream" 3
typedef typename _Traits::pos_type pos_type;
# 65 "/usr/include/c++/4.8.2/ostream" 3
typedef typename _Traits::off_type off_type;
# 66 "/usr/include/c++/4.8.2/ostream" 3
typedef _Traits traits_type;
# 69 "/usr/include/c++/4.8.2/ostream" 3
typedef basic_streambuf< _CharT, _Traits> __streambuf_type;
# 70 "/usr/include/c++/4.8.2/ostream" 3
typedef std::basic_ios< _CharT, _Traits> __ios_type;
# 71 "/usr/include/c++/4.8.2/ostream" 3
typedef basic_ostream __ostream_type;
# 73 "/usr/include/c++/4.8.2/ostream" 3
typedef num_put< _CharT, ostreambuf_iterator< _CharT, _Traits> > __num_put_type;
# 74 "/usr/include/c++/4.8.2/ostream" 3
typedef ctype< _CharT> __ctype_type;
# 84 "/usr/include/c++/4.8.2/ostream" 3
explicit basic_ostream(__streambuf_type *__sb)
# 85 "/usr/include/c++/4.8.2/ostream" 3
{ (this->init(__sb)); }
# 93 "/usr/include/c++/4.8.2/ostream" 3
virtual ~basic_ostream() { }
# 96 "/usr/include/c++/4.8.2/ostream" 3
class sentry;
# 97 "/usr/include/c++/4.8.2/ostream" 3
friend class sentry;
# 108 "/usr/include/c++/4.8.2/ostream" 3
__ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &))
# 109 "/usr/include/c++/4.8.2/ostream" 3
{
# 113 "/usr/include/c++/4.8.2/ostream" 3
return __pf(*this);
# 114 "/usr/include/c++/4.8.2/ostream" 3
}
# 117 "/usr/include/c++/4.8.2/ostream" 3
__ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &))
# 118 "/usr/include/c++/4.8.2/ostream" 3
{
# 122 "/usr/include/c++/4.8.2/ostream" 3
__pf(*this);
# 123 "/usr/include/c++/4.8.2/ostream" 3
return *this;
# 124 "/usr/include/c++/4.8.2/ostream" 3
}
# 127 "/usr/include/c++/4.8.2/ostream" 3
__ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &))
# 128 "/usr/include/c++/4.8.2/ostream" 3
{
# 132 "/usr/include/c++/4.8.2/ostream" 3
__pf(*this);
# 133 "/usr/include/c++/4.8.2/ostream" 3
return *this;
# 134 "/usr/include/c++/4.8.2/ostream" 3
}
# 166 "/usr/include/c++/4.8.2/ostream" 3
__ostream_type &operator<<(long __n)
# 167 "/usr/include/c++/4.8.2/ostream" 3
{ return _M_insert(__n); }
# 170 "/usr/include/c++/4.8.2/ostream" 3
__ostream_type &operator<<(unsigned long __n)
# 171 "/usr/include/c++/4.8.2/ostream" 3
{ return _M_insert(__n); }
# 174 "/usr/include/c++/4.8.2/ostream" 3
__ostream_type &operator<<(bool __n)
# 175 "/usr/include/c++/4.8.2/ostream" 3
{ return _M_insert(__n); }
# 178 "/usr/include/c++/4.8.2/ostream" 3
__ostream_type &operator<<(short __n);
# 181 "/usr/include/c++/4.8.2/ostream" 3
__ostream_type &operator<<(unsigned short __n)
# 182 "/usr/include/c++/4.8.2/ostream" 3
{
# 185 "/usr/include/c++/4.8.2/ostream" 3
return _M_insert(static_cast< unsigned long>(__n));
# 186 "/usr/include/c++/4.8.2/ostream" 3
}
# 189 "/usr/include/c++/4.8.2/ostream" 3
__ostream_type &operator<<(int __n);
# 192 "/usr/include/c++/4.8.2/ostream" 3
__ostream_type &operator<<(unsigned __n)
# 193 "/usr/include/c++/4.8.2/ostream" 3
{
# 196 "/usr/include/c++/4.8.2/ostream" 3
return _M_insert(static_cast< unsigned long>(__n));
# 197 "/usr/include/c++/4.8.2/ostream" 3
}
# 201 "/usr/include/c++/4.8.2/ostream" 3
__ostream_type &operator<<(long long __n)
# 202 "/usr/include/c++/4.8.2/ostream" 3
{ return _M_insert(__n); }
# 205 "/usr/include/c++/4.8.2/ostream" 3
__ostream_type &operator<<(unsigned long long __n)
# 206 "/usr/include/c++/4.8.2/ostream" 3
{ return _M_insert(__n); }
# 220 "/usr/include/c++/4.8.2/ostream" 3
__ostream_type &operator<<(double __f)
# 221 "/usr/include/c++/4.8.2/ostream" 3
{ return _M_insert(__f); }
# 224 "/usr/include/c++/4.8.2/ostream" 3
__ostream_type &operator<<(float __f)
# 225 "/usr/include/c++/4.8.2/ostream" 3
{
# 228 "/usr/include/c++/4.8.2/ostream" 3
return _M_insert(static_cast< double>(__f));
# 229 "/usr/include/c++/4.8.2/ostream" 3
}
# 232 "/usr/include/c++/4.8.2/ostream" 3
__ostream_type &operator<<(long double __f)
# 233 "/usr/include/c++/4.8.2/ostream" 3
{ return _M_insert(__f); }
# 245 "/usr/include/c++/4.8.2/ostream" 3
__ostream_type &operator<<(const void *__p)
# 246 "/usr/include/c++/4.8.2/ostream" 3
{ return _M_insert(__p); }
# 270 "/usr/include/c++/4.8.2/ostream" 3
__ostream_type &operator<<(__streambuf_type * __sb);
# 303 "/usr/include/c++/4.8.2/ostream" 3
__ostream_type &put(char_type __c);
# 311 "/usr/include/c++/4.8.2/ostream" 3
void _M_write(const char_type *__s, std::streamsize __n)
# 312 "/usr/include/c++/4.8.2/ostream" 3
{
# 313 "/usr/include/c++/4.8.2/ostream" 3
const std::streamsize __put = ((this->rdbuf())->sputn(__s, __n));
# 314 "/usr/include/c++/4.8.2/ostream" 3
if (__put != __n) {
# 315 "/usr/include/c++/4.8.2/ostream" 3
(this->setstate(ios_base::badbit)); }
# 316 "/usr/include/c++/4.8.2/ostream" 3
}
# 335 "/usr/include/c++/4.8.2/ostream" 3
__ostream_type &write(const char_type * __s, std::streamsize __n);
# 348 "/usr/include/c++/4.8.2/ostream" 3
__ostream_type &flush();
# 358 "/usr/include/c++/4.8.2/ostream" 3
pos_type tellp();
# 369 "/usr/include/c++/4.8.2/ostream" 3
__ostream_type &seekp(pos_type);
# 381 "/usr/include/c++/4.8.2/ostream" 3
__ostream_type &seekp(off_type, std::ios_base::seekdir);
# 384 "/usr/include/c++/4.8.2/ostream" 3
protected: basic_ostream()
# 385 "/usr/include/c++/4.8.2/ostream" 3
{ (this->init(0)); }
# 387 "/usr/include/c++/4.8.2/ostream" 3
template< class _ValueT> __ostream_type &_M_insert(_ValueT __v);
# 390 "/usr/include/c++/4.8.2/ostream" 3
};
# 399 "/usr/include/c++/4.8.2/ostream" 3
template< class _CharT, class _Traits>
# 400 "/usr/include/c++/4.8.2/ostream" 3
class basic_ostream< _CharT, _Traits> ::sentry {
# 403 "/usr/include/c++/4.8.2/ostream" 3
bool _M_ok;
# 404 "/usr/include/c++/4.8.2/ostream" 3
basic_ostream &_M_os;
# 419 "/usr/include/c++/4.8.2/ostream" 3
public: explicit sentry(basic_ostream & __os);
# 428 "/usr/include/c++/4.8.2/ostream" 3
~sentry()
# 429 "/usr/include/c++/4.8.2/ostream" 3
{
# 431 "/usr/include/c++/4.8.2/ostream" 3
if (((bool)(((_M_os).flags()) & ios_base::unitbuf)) && (!uncaught_exception()))
# 432 "/usr/include/c++/4.8.2/ostream" 3
{
# 434 "/usr/include/c++/4.8.2/ostream" 3
if (((_M_os).rdbuf()) && ((((_M_os).rdbuf())->pubsync()) == (-1))) {
# 435 "/usr/include/c++/4.8.2/ostream" 3
((_M_os).setstate(ios_base::badbit)); }
# 436 "/usr/include/c++/4.8.2/ostream" 3
}
# 437 "/usr/include/c++/4.8.2/ostream" 3
}
# 449 "/usr/include/c++/4.8.2/ostream" 3
operator bool() const
# 450 "/usr/include/c++/4.8.2/ostream" 3
{ return _M_ok; }
# 451 "/usr/include/c++/4.8.2/ostream" 3
};
# 469 "/usr/include/c++/4.8.2/ostream" 3
template< class _CharT, class _Traits> inline basic_ostream< _CharT, _Traits> &
# 471 "/usr/include/c++/4.8.2/ostream" 3
operator<<(basic_ostream< _CharT, _Traits> &__out, _CharT __c)
# 472 "/usr/include/c++/4.8.2/ostream" 3
{ return __ostream_insert(__out, &__c, 1); }
# 474 "/usr/include/c++/4.8.2/ostream" 3
template< class _CharT, class _Traits> inline basic_ostream< _CharT, _Traits> &
# 476 "/usr/include/c++/4.8.2/ostream" 3
operator<<(basic_ostream< _CharT, _Traits> &__out, char __c)
# 477 "/usr/include/c++/4.8.2/ostream" 3
{ return __out << (__out.widen(__c)); }
# 480 "/usr/include/c++/4.8.2/ostream" 3
template< class _Traits> inline basic_ostream< char, _Traits> &
# 482 "/usr/include/c++/4.8.2/ostream" 3
operator<<(basic_ostream< char, _Traits> &__out, char __c)
# 483 "/usr/include/c++/4.8.2/ostream" 3
{ return __ostream_insert(__out, &__c, 1); }
# 486 "/usr/include/c++/4.8.2/ostream" 3
template< class _Traits> inline basic_ostream< char, _Traits> &
# 488 "/usr/include/c++/4.8.2/ostream" 3
operator<<(basic_ostream< char, _Traits> &__out, signed char __c)
# 489 "/usr/include/c++/4.8.2/ostream" 3
{ return __out << (static_cast< char>(__c)); }
# 491 "/usr/include/c++/4.8.2/ostream" 3
template< class _Traits> inline basic_ostream< char, _Traits> &
# 493 "/usr/include/c++/4.8.2/ostream" 3
operator<<(basic_ostream< char, _Traits> &__out, unsigned char __c)
# 494 "/usr/include/c++/4.8.2/ostream" 3
{ return __out << (static_cast< char>(__c)); }
# 511 "/usr/include/c++/4.8.2/ostream" 3
template< class _CharT, class _Traits> inline basic_ostream< _CharT, _Traits> &
# 513 "/usr/include/c++/4.8.2/ostream" 3
operator<<(basic_ostream< _CharT, _Traits> &__out, const _CharT *__s)
# 514 "/usr/include/c++/4.8.2/ostream" 3
{
# 515 "/usr/include/c++/4.8.2/ostream" 3
if (!__s) {
# 516 "/usr/include/c++/4.8.2/ostream" 3
(__out.setstate(ios_base::badbit)); } else {
# 518 "/usr/include/c++/4.8.2/ostream" 3
__ostream_insert(__out, __s, static_cast< streamsize>(_Traits::length(__s))); }
# 520 "/usr/include/c++/4.8.2/ostream" 3
return __out;
# 521 "/usr/include/c++/4.8.2/ostream" 3
}
# 523 "/usr/include/c++/4.8.2/ostream" 3
template< class _CharT, class _Traits> basic_ostream< _CharT, _Traits> &operator<<(basic_ostream< _CharT, _Traits> & __out, const char * __s);
# 528 "/usr/include/c++/4.8.2/ostream" 3
template< class _Traits> inline basic_ostream< char, _Traits> &
# 530 "/usr/include/c++/4.8.2/ostream" 3
operator<<(basic_ostream< char, _Traits> &__out, const char *__s)
# 531 "/usr/include/c++/4.8.2/ostream" 3
{
# 532 "/usr/include/c++/4.8.2/ostream" 3
if (!__s) {
# 533 "/usr/include/c++/4.8.2/ostream" 3
(__out.setstate(ios_base::badbit)); } else {
# 535 "/usr/include/c++/4.8.2/ostream" 3
__ostream_insert(__out, __s, static_cast< streamsize>(_Traits::length(__s))); }
# 537 "/usr/include/c++/4.8.2/ostream" 3
return __out;
# 538 "/usr/include/c++/4.8.2/ostream" 3
}
# 541 "/usr/include/c++/4.8.2/ostream" 3
template< class _Traits> inline basic_ostream< char, _Traits> &
# 543 "/usr/include/c++/4.8.2/ostream" 3
operator<<(basic_ostream< char, _Traits> &__out, const signed char *__s)
# 544 "/usr/include/c++/4.8.2/ostream" 3
{ return __out << (reinterpret_cast< const char *>(__s)); }
# 546 "/usr/include/c++/4.8.2/ostream" 3
template< class _Traits> inline basic_ostream< char, _Traits> &
# 548 "/usr/include/c++/4.8.2/ostream" 3
operator<<(basic_ostream< char, _Traits> &__out, const unsigned char *__s)
# 549 "/usr/include/c++/4.8.2/ostream" 3
{ return __out << (reinterpret_cast< const char *>(__s)); }
# 562 "/usr/include/c++/4.8.2/ostream" 3
template< class _CharT, class _Traits> inline basic_ostream< _CharT, _Traits> &
# 564 "/usr/include/c++/4.8.2/ostream" 3
endl(basic_ostream< _CharT, _Traits> &__os)
# 565 "/usr/include/c++/4.8.2/ostream" 3
{ return flush((__os.put((__os.widen('\n'))))); }
# 574 "/usr/include/c++/4.8.2/ostream" 3
template< class _CharT, class _Traits> inline basic_ostream< _CharT, _Traits> &
# 576 "/usr/include/c++/4.8.2/ostream" 3
ends(basic_ostream< _CharT, _Traits> &__os)
# 577 "/usr/include/c++/4.8.2/ostream" 3
{ return (__os.put(_CharT())); }
# 584 "/usr/include/c++/4.8.2/ostream" 3
template< class _CharT, class _Traits> inline basic_ostream< _CharT, _Traits> &
# 586 "/usr/include/c++/4.8.2/ostream" 3
flush(basic_ostream< _CharT, _Traits> &__os)
# 587 "/usr/include/c++/4.8.2/ostream" 3
{ return (__os.flush()); }
# 610 "/usr/include/c++/4.8.2/ostream" 3
}
# 41 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 45 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
template< class _CharT, class _Traits>
# 47 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
basic_ostream< _CharT, _Traits> ::sentry::sentry(basic_ostream &__os) : _M_ok(false), _M_os(__os)
# 49 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{
# 51 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
if ((__os.tie()) && (__os.good())) {
# 52 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
((__os.tie())->flush()); }
# 54 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
if ((__os.good())) {
# 55 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
(_M_ok) = true; } else {
# 57 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
(__os.setstate(ios_base::failbit)); }
# 58 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
}
# 60 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
template< class _CharT, class _Traits>
# 61 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
template< class _ValueT> basic_ostream< _CharT, _Traits> &
# 64 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
basic_ostream< _CharT, _Traits> ::_M_insert(_ValueT __v)
# 65 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{
# 66 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
sentry __cerb(*this);
# 67 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
if (__cerb)
# 68 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{
# 69 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
std::ios_base::iostate __err = std::ios_base::goodbit;
# 70 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
try
# 71 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{
# 72 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
const __num_put_type &__np = __check_facet((this->_M_num_put));
# 73 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
if (((__np.put(*this, *this, (this->fill()), __v)).failed())) {
# 74 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
(__err |= std::ios_base::badbit); }
# 75 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
}
# 76 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 77 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{
# 78 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 79 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
throw;
# 80 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
}
# 81 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
catch (...)
# 82 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 83 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
if (__err) {
# 84 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
(this->setstate(__err)); }
# 85 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
}
# 86 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
return *this;
# 87 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
}
# 89 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
template< class _CharT, class _Traits> basic_ostream< _CharT, _Traits> &
# 92 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
basic_ostream< _CharT, _Traits> ::operator<<(short __n)
# 93 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{
# 96 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
const std::ios_base::fmtflags __fmt = (this->flags()) & ios_base::basefield;
# 97 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
if ((__fmt == std::ios_base::oct) || (__fmt == std::ios_base::hex)) {
# 98 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
return _M_insert(static_cast< long>(static_cast< unsigned short>(__n))); } else {
# 100 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
return _M_insert(static_cast< long>(__n)); }
# 101 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
}
# 103 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
template< class _CharT, class _Traits> basic_ostream< _CharT, _Traits> &
# 106 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
basic_ostream< _CharT, _Traits> ::operator<<(int __n)
# 107 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{
# 110 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
const std::ios_base::fmtflags __fmt = (this->flags()) & ios_base::basefield;
# 111 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
if ((__fmt == std::ios_base::oct) || (__fmt == std::ios_base::hex)) {
# 112 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
return _M_insert(static_cast< long>(static_cast< unsigned>(__n))); } else {
# 114 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
return _M_insert(static_cast< long>(__n)); }
# 115 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
}
# 117 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
template< class _CharT, class _Traits> basic_ostream< _CharT, _Traits> &
# 120 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
basic_ostream< _CharT, _Traits> ::operator<<(__streambuf_type *__sbin)
# 121 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{
# 122 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
std::ios_base::iostate __err = std::ios_base::goodbit;
# 123 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
sentry __cerb(*this);
# 124 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
if (__cerb && __sbin)
# 125 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{
# 126 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
try
# 127 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{
# 128 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
if (!__copy_streambufs(__sbin, (this->rdbuf()))) {
# 129 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
(__err |= std::ios_base::failbit); }
# 130 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
}
# 131 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 132 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{
# 133 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 134 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
throw;
# 135 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
}
# 136 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
catch (...)
# 137 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{ (this->_M_setstate(ios_base::failbit)); }
# 138 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
} else {
# 139 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
if (!__sbin) {
# 140 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
(__err |= std::ios_base::badbit); } }
# 141 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
if (__err) {
# 142 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
(this->setstate(__err)); }
# 143 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
return *this;
# 144 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
}
# 146 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
template< class _CharT, class _Traits> basic_ostream< _CharT, _Traits> &
# 149 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
basic_ostream< _CharT, _Traits> ::put(char_type __c)
# 150 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{
# 157 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
sentry __cerb(*this);
# 158 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
if (__cerb)
# 159 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{
# 160 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
std::ios_base::iostate __err = std::ios_base::goodbit;
# 161 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
try
# 162 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{
# 163 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
const int_type __put = ((this->rdbuf())->sputc(__c));
# 164 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
if (traits_type::eq_int_type(__put, traits_type::eof())) {
# 165 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
(__err |= std::ios_base::badbit); }
# 166 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
}
# 167 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 168 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{
# 169 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 170 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
throw;
# 171 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
}
# 172 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
catch (...)
# 173 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 174 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
if (__err) {
# 175 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
(this->setstate(__err)); }
# 176 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
}
# 177 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
return *this;
# 178 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
}
# 180 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
template< class _CharT, class _Traits> basic_ostream< _CharT, _Traits> &
# 183 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
basic_ostream< _CharT, _Traits> ::write(const _CharT *__s, std::streamsize __n)
# 184 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{
# 192 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
sentry __cerb(*this);
# 193 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
if (__cerb)
# 194 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{
# 195 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
try
# 196 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{ _M_write(__s, __n); }
# 197 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 198 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{
# 199 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 200 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
throw;
# 201 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
}
# 202 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
catch (...)
# 203 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 204 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
}
# 205 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
return *this;
# 206 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
}
# 208 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
template< class _CharT, class _Traits> typename basic_ostream< _CharT, _Traits> ::__ostream_type &
# 211 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
basic_ostream< _CharT, _Traits> ::flush()
# 212 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{
# 216 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
std::ios_base::iostate __err = std::ios_base::goodbit;
# 217 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
try
# 218 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{
# 219 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
if ((this->rdbuf()) && (((this->rdbuf())->pubsync()) == (-1))) {
# 220 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
(__err |= std::ios_base::badbit); }
# 221 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
}
# 222 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 223 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{
# 224 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 225 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
throw;
# 226 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
}
# 227 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
catch (...)
# 228 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 229 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
if (__err) {
# 230 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
(this->setstate(__err)); }
# 231 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
return *this;
# 232 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
}
# 234 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
template< class _CharT, class _Traits> typename basic_ostream< _CharT, _Traits> ::pos_type
# 237 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
basic_ostream< _CharT, _Traits> ::tellp()
# 238 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{
# 239 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
pos_type __ret = ((pos_type)(-1));
# 240 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
try
# 241 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{
# 242 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
if (!(this->fail())) {
# 243 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
__ret = ((this->rdbuf())->pubseekoff(0, ios_base::cur, ios_base::out)); }
# 244 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
}
# 245 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 246 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{
# 247 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 248 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
throw;
# 249 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
}
# 250 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
catch (...)
# 251 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 252 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
return __ret;
# 253 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
}
# 255 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
template< class _CharT, class _Traits> basic_ostream< _CharT, _Traits> &
# 258 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
basic_ostream< _CharT, _Traits> ::seekp(pos_type __pos)
# 259 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{
# 260 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
std::ios_base::iostate __err = std::ios_base::goodbit;
# 261 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
try
# 262 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{
# 263 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
if (!(this->fail()))
# 264 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{
# 267 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
const pos_type __p = ((this->rdbuf())->pubseekpos(__pos, ios_base::out));
# 271 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
if (__p == ((pos_type)((off_type)(-1)))) {
# 272 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
(__err |= std::ios_base::failbit); }
# 273 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
}
# 274 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
}
# 275 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 276 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{
# 277 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 278 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
throw;
# 279 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
}
# 280 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
catch (...)
# 281 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 282 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
if (__err) {
# 283 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
(this->setstate(__err)); }
# 284 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
return *this;
# 285 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
}
# 287 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
template< class _CharT, class _Traits> basic_ostream< _CharT, _Traits> &
# 290 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
basic_ostream< _CharT, _Traits> ::seekp(off_type __off, std::ios_base::seekdir __dir)
# 291 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{
# 292 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
std::ios_base::iostate __err = std::ios_base::goodbit;
# 293 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
try
# 294 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{
# 295 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
if (!(this->fail()))
# 296 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{
# 299 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
const pos_type __p = ((this->rdbuf())->pubseekoff(__off, __dir, ios_base::out));
# 303 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
if (__p == ((pos_type)((off_type)(-1)))) {
# 304 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
(__err |= std::ios_base::failbit); }
# 305 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
}
# 306 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
}
# 307 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 308 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{
# 309 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 310 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
throw;
# 311 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
}
# 312 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
catch (...)
# 313 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 314 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
if (__err) {
# 315 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
(this->setstate(__err)); }
# 316 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
return *this;
# 317 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
}
# 319 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
template< class _CharT, class _Traits> basic_ostream< _CharT, _Traits> &
# 321 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
operator<<(basic_ostream< _CharT, _Traits> &__out, const char *__s)
# 322 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{
# 323 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
if (!__s) {
# 324 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
(__out.setstate(ios_base::badbit)); } else
# 326 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{
# 329 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
const size_t __clen = char_traits< char> ::length(__s);
# 330 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
try
# 331 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{
# 332 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
struct __ptr_guard {
# 334 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
_CharT *__p;
# 335 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
__ptr_guard(_CharT *__ip) : __p(__ip) { }
# 336 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
~__ptr_guard() { delete [] (__p); }
# 337 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
_CharT *__get() { return __p; }
# 338 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
} __pg(new _CharT [__clen]);
# 340 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
_CharT *__ws = __pg.__get();
# 341 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
for (size_t __i = (0); __i < __clen; ++__i) {
# 342 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
(__ws[__i]) = (__out.widen(__s[__i])); }
# 343 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
__ostream_insert(__out, __ws, __clen);
# 344 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
}
# 345 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 346 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{
# 347 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
(__out._M_setstate(ios_base::badbit));
# 348 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
throw;
# 349 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
}
# 350 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
catch (...)
# 351 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
{ (__out._M_setstate(ios_base::badbit)); }
# 352 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
}
# 353 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
return __out;
# 354 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
}
# 359 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
extern template class basic_ostream< char, char_traits< char> > ;
# 360 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &endl(basic_ostream< char, char_traits< char> > & __os);
# 361 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &ends(basic_ostream< char, char_traits< char> > & __os);
# 362 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &flush(basic_ostream< char, char_traits< char> > & __os);
# 363 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & __out, char __c);
# 364 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & __out, unsigned char __c);
# 365 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & __out, signed char __c);
# 366 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & __out, const char * __s);
# 367 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & __out, const unsigned char * __s);
# 368 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & __out, const signed char * __s);
# 370 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(long __v);
# 371 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(unsigned long __v);
# 372 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(bool __v);
# 374 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(long long __v);
# 375 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(unsigned long long __v);
# 377 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(double __v);
# 378 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(long double __v);
# 379 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(const void * __v);
# 382 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
extern template class basic_ostream< wchar_t, char_traits< wchar_t> > ;
# 383 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &endl(basic_ostream< wchar_t, char_traits< wchar_t> > & __os);
# 384 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &ends(basic_ostream< wchar_t, char_traits< wchar_t> > & __os);
# 385 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &flush(basic_ostream< wchar_t, char_traits< wchar_t> > & __os);
# 386 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &operator<<(basic_ostream< wchar_t, char_traits< wchar_t> > & __out, wchar_t __c);
# 387 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &operator<<(basic_ostream< wchar_t, char_traits< wchar_t> > & __out, char __c);
# 388 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &operator<<(basic_ostream< wchar_t, char_traits< wchar_t> > & __out, const wchar_t * __s);
# 389 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &operator<<(basic_ostream< wchar_t, char_traits< wchar_t> > & __out, const char * __s);
# 391 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(long __v);
# 392 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(unsigned long __v);
# 393 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(bool __v);
# 395 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(long long __v);
# 396 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(unsigned long long __v);
# 398 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(double __v);
# 399 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(long double __v);
# 400 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(const void * __v);
# 405 "/usr/include/c++/4.8.2/bits/ostream.tcc" 3
}
# 41 "/usr/include/c++/4.8.2/istream" 3
namespace std __attribute((__visibility__("default"))) {
# 57 "/usr/include/c++/4.8.2/istream" 3
template< class _CharT, class _Traits>
# 58 "/usr/include/c++/4.8.2/istream" 3
class basic_istream : virtual public basic_ios< _CharT, _Traits> {
# 62 "/usr/include/c++/4.8.2/istream" 3
public: typedef _CharT char_type;
# 63 "/usr/include/c++/4.8.2/istream" 3
typedef typename _Traits::int_type int_type;
# 64 "/usr/include/c++/4.8.2/istream" 3
typedef typename _Traits::pos_type pos_type;
# 65 "/usr/include/c++/4.8.2/istream" 3
typedef typename _Traits::off_type off_type;
# 66 "/usr/include/c++/4.8.2/istream" 3
typedef _Traits traits_type;
# 69 "/usr/include/c++/4.8.2/istream" 3
typedef basic_streambuf< _CharT, _Traits> __streambuf_type;
# 70 "/usr/include/c++/4.8.2/istream" 3
typedef std::basic_ios< _CharT, _Traits> __ios_type;
# 71 "/usr/include/c++/4.8.2/istream" 3
typedef basic_istream __istream_type;
# 73 "/usr/include/c++/4.8.2/istream" 3
typedef num_get< _CharT, istreambuf_iterator< _CharT, _Traits> > __num_get_type;
# 74 "/usr/include/c++/4.8.2/istream" 3
typedef ctype< _CharT> __ctype_type;
# 82 "/usr/include/c++/4.8.2/istream" 3
protected: std::streamsize _M_gcount;
# 93 "/usr/include/c++/4.8.2/istream" 3
public: explicit basic_istream(__streambuf_type *__sb) : _M_gcount(((std::streamsize)0))
# 95 "/usr/include/c++/4.8.2/istream" 3
{ (this->init(__sb)); }
# 103 "/usr/include/c++/4.8.2/istream" 3
virtual ~basic_istream()
# 104 "/usr/include/c++/4.8.2/istream" 3
{ (_M_gcount) = ((std::streamsize)0); }
# 107 "/usr/include/c++/4.8.2/istream" 3
class sentry;
# 108 "/usr/include/c++/4.8.2/istream" 3
friend class sentry;
# 120 "/usr/include/c++/4.8.2/istream" 3
__istream_type &operator>>(__istream_type &(*__pf)(__istream_type &))
# 121 "/usr/include/c++/4.8.2/istream" 3
{ return __pf(*this); }
# 124 "/usr/include/c++/4.8.2/istream" 3
__istream_type &operator>>(__ios_type &(*__pf)(__ios_type &))
# 125 "/usr/include/c++/4.8.2/istream" 3
{
# 126 "/usr/include/c++/4.8.2/istream" 3
__pf(*this);
# 127 "/usr/include/c++/4.8.2/istream" 3
return *this;
# 128 "/usr/include/c++/4.8.2/istream" 3
}
# 131 "/usr/include/c++/4.8.2/istream" 3
__istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &))
# 132 "/usr/include/c++/4.8.2/istream" 3
{
# 133 "/usr/include/c++/4.8.2/istream" 3
__pf(*this);
# 134 "/usr/include/c++/4.8.2/istream" 3
return *this;
# 135 "/usr/include/c++/4.8.2/istream" 3
}
# 168 "/usr/include/c++/4.8.2/istream" 3
__istream_type &operator>>(bool &__n)
# 169 "/usr/include/c++/4.8.2/istream" 3
{ return _M_extract(__n); }
# 172 "/usr/include/c++/4.8.2/istream" 3
__istream_type &operator>>(short & __n);
# 175 "/usr/include/c++/4.8.2/istream" 3
__istream_type &operator>>(unsigned short &__n)
# 176 "/usr/include/c++/4.8.2/istream" 3
{ return _M_extract(__n); }
# 179 "/usr/include/c++/4.8.2/istream" 3
__istream_type &operator>>(int & __n);
# 182 "/usr/include/c++/4.8.2/istream" 3
__istream_type &operator>>(unsigned &__n)
# 183 "/usr/include/c++/4.8.2/istream" 3
{ return _M_extract(__n); }
# 186 "/usr/include/c++/4.8.2/istream" 3
__istream_type &operator>>(long &__n)
# 187 "/usr/include/c++/4.8.2/istream" 3
{ return _M_extract(__n); }
# 190 "/usr/include/c++/4.8.2/istream" 3
__istream_type &operator>>(unsigned long &__n)
# 191 "/usr/include/c++/4.8.2/istream" 3
{ return _M_extract(__n); }
# 195 "/usr/include/c++/4.8.2/istream" 3
__istream_type &operator>>(long long &__n)
# 196 "/usr/include/c++/4.8.2/istream" 3
{ return _M_extract(__n); }
# 199 "/usr/include/c++/4.8.2/istream" 3
__istream_type &operator>>(unsigned long long &__n)
# 200 "/usr/include/c++/4.8.2/istream" 3
{ return _M_extract(__n); }
# 214 "/usr/include/c++/4.8.2/istream" 3
__istream_type &operator>>(float &__f)
# 215 "/usr/include/c++/4.8.2/istream" 3
{ return _M_extract(__f); }
# 218 "/usr/include/c++/4.8.2/istream" 3
__istream_type &operator>>(double &__f)
# 219 "/usr/include/c++/4.8.2/istream" 3
{ return _M_extract(__f); }
# 222 "/usr/include/c++/4.8.2/istream" 3
__istream_type &operator>>(long double &__f)
# 223 "/usr/include/c++/4.8.2/istream" 3
{ return _M_extract(__f); }
# 235 "/usr/include/c++/4.8.2/istream" 3
__istream_type &operator>>(void *&__p)
# 236 "/usr/include/c++/4.8.2/istream" 3
{ return _M_extract(__p); }
# 259 "/usr/include/c++/4.8.2/istream" 3
__istream_type &operator>>(__streambuf_type * __sb);
# 269 "/usr/include/c++/4.8.2/istream" 3
std::streamsize gcount() const
# 270 "/usr/include/c++/4.8.2/istream" 3
{ return _M_gcount; }
# 302 "/usr/include/c++/4.8.2/istream" 3
int_type get();
# 316 "/usr/include/c++/4.8.2/istream" 3
__istream_type &get(char_type & __c);
# 343 "/usr/include/c++/4.8.2/istream" 3
__istream_type &get(char_type * __s, std::streamsize __n, char_type __delim);
# 354 "/usr/include/c++/4.8.2/istream" 3
__istream_type &get(char_type *__s, std::streamsize __n)
# 355 "/usr/include/c++/4.8.2/istream" 3
{ return (this->get(__s, __n, (this->widen('\n')))); }
# 377 "/usr/include/c++/4.8.2/istream" 3
__istream_type &get(__streambuf_type & __sb, char_type __delim);
# 387 "/usr/include/c++/4.8.2/istream" 3
__istream_type &get(__streambuf_type &__sb)
# 388 "/usr/include/c++/4.8.2/istream" 3
{ return (this->get(__sb, (this->widen('\n')))); }
# 416 "/usr/include/c++/4.8.2/istream" 3
__istream_type &getline(char_type * __s, std::streamsize __n, char_type __delim);
# 427 "/usr/include/c++/4.8.2/istream" 3
__istream_type &getline(char_type *__s, std::streamsize __n)
# 428 "/usr/include/c++/4.8.2/istream" 3
{ return (this->getline(__s, __n, (this->widen('\n')))); }
# 451 "/usr/include/c++/4.8.2/istream" 3
__istream_type &ignore(std::streamsize __n, int_type __delim);
# 454 "/usr/include/c++/4.8.2/istream" 3
__istream_type &ignore(std::streamsize __n);
# 457 "/usr/include/c++/4.8.2/istream" 3
__istream_type &ignore();
# 468 "/usr/include/c++/4.8.2/istream" 3
int_type peek();
# 486 "/usr/include/c++/4.8.2/istream" 3
__istream_type &read(char_type * __s, std::streamsize __n);
# 505 "/usr/include/c++/4.8.2/istream" 3
std::streamsize readsome(char_type * __s, std::streamsize __n);
# 522 "/usr/include/c++/4.8.2/istream" 3
__istream_type &putback(char_type __c);
# 538 "/usr/include/c++/4.8.2/istream" 3
__istream_type &unget();
# 556 "/usr/include/c++/4.8.2/istream" 3
int sync();
# 571 "/usr/include/c++/4.8.2/istream" 3
pos_type tellg();
# 586 "/usr/include/c++/4.8.2/istream" 3
__istream_type &seekg(pos_type);
# 602 "/usr/include/c++/4.8.2/istream" 3
__istream_type &seekg(off_type, std::ios_base::seekdir);
# 606 "/usr/include/c++/4.8.2/istream" 3
protected: basic_istream() : _M_gcount(((std::streamsize)0))
# 608 "/usr/include/c++/4.8.2/istream" 3
{ (this->init(0)); }
# 610 "/usr/include/c++/4.8.2/istream" 3
template< class _ValueT> __istream_type &_M_extract(_ValueT & __v);
# 613 "/usr/include/c++/4.8.2/istream" 3
};
# 619 "/usr/include/c++/4.8.2/istream" 3
template<> basic_istream< char, char_traits< char> > &basic_istream< char, char_traits< char> > ::getline(char_type * __s, streamsize __n, char_type __delim);
# 624 "/usr/include/c++/4.8.2/istream" 3
template<> basic_istream< char, char_traits< char> > &basic_istream< char, char_traits< char> > ::ignore(streamsize __n);
# 629 "/usr/include/c++/4.8.2/istream" 3
template<> basic_istream< char, char_traits< char> > &basic_istream< char, char_traits< char> > ::ignore(streamsize __n, int_type __delim);
# 635 "/usr/include/c++/4.8.2/istream" 3
template<> basic_istream< wchar_t, char_traits< wchar_t> > &basic_istream< wchar_t, char_traits< wchar_t> > ::getline(char_type * __s, streamsize __n, char_type __delim);
# 640 "/usr/include/c++/4.8.2/istream" 3
template<> basic_istream< wchar_t, char_traits< wchar_t> > &basic_istream< wchar_t, char_traits< wchar_t> > ::ignore(streamsize __n);
# 645 "/usr/include/c++/4.8.2/istream" 3
template<> basic_istream< wchar_t, char_traits< wchar_t> > &basic_istream< wchar_t, char_traits< wchar_t> > ::ignore(streamsize __n, int_type __delim);
# 656 "/usr/include/c++/4.8.2/istream" 3
template< class _CharT, class _Traits>
# 657 "/usr/include/c++/4.8.2/istream" 3
class basic_istream< _CharT, _Traits> ::sentry {
# 660 "/usr/include/c++/4.8.2/istream" 3
bool _M_ok;
# 664 "/usr/include/c++/4.8.2/istream" 3
public: typedef _Traits traits_type;
# 665 "/usr/include/c++/4.8.2/istream" 3
typedef basic_streambuf< _CharT, _Traits> __streambuf_type;
# 666 "/usr/include/c++/4.8.2/istream" 3
typedef basic_istream __istream_type;
# 667 "/usr/include/c++/4.8.2/istream" 3
typedef typename std::basic_istream< _CharT, _Traits> ::__ctype_type __ctype_type;
# 668 "/usr/include/c++/4.8.2/istream" 3
typedef typename _Traits::int_type __int_type;
# 693 "/usr/include/c++/4.8.2/istream" 3
explicit sentry(basic_istream & __is, bool __noskipws = false);
# 705 "/usr/include/c++/4.8.2/istream" 3
operator bool() const
# 706 "/usr/include/c++/4.8.2/istream" 3
{ return _M_ok; }
# 707 "/usr/include/c++/4.8.2/istream" 3
};
# 721 "/usr/include/c++/4.8.2/istream" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &operator>>(basic_istream< _CharT, _Traits> & __in, _CharT & __c);
# 725 "/usr/include/c++/4.8.2/istream" 3
template< class _Traits> inline basic_istream< char, _Traits> &
# 727 "/usr/include/c++/4.8.2/istream" 3
operator>>(basic_istream< char, _Traits> &__in, unsigned char &__c)
# 728 "/usr/include/c++/4.8.2/istream" 3
{ return __in >> (reinterpret_cast< char &>(__c)); }
# 730 "/usr/include/c++/4.8.2/istream" 3
template< class _Traits> inline basic_istream< char, _Traits> &
# 732 "/usr/include/c++/4.8.2/istream" 3
operator>>(basic_istream< char, _Traits> &__in, signed char &__c)
# 733 "/usr/include/c++/4.8.2/istream" 3
{ return __in >> (reinterpret_cast< char &>(__c)); }
# 763 "/usr/include/c++/4.8.2/istream" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &operator>>(basic_istream< _CharT, _Traits> & __in, _CharT * __s);
# 770 "/usr/include/c++/4.8.2/istream" 3
template<> basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & __in, char * __s);
# 772 "/usr/include/c++/4.8.2/istream" 3
template< class _Traits> inline basic_istream< char, _Traits> &
# 774 "/usr/include/c++/4.8.2/istream" 3
operator>>(basic_istream< char, _Traits> &__in, unsigned char *__s)
# 775 "/usr/include/c++/4.8.2/istream" 3
{ return __in >> (reinterpret_cast< char *>(__s)); }
# 777 "/usr/include/c++/4.8.2/istream" 3
template< class _Traits> inline basic_istream< char, _Traits> &
# 779 "/usr/include/c++/4.8.2/istream" 3
operator>>(basic_istream< char, _Traits> &__in, signed char *__s)
# 780 "/usr/include/c++/4.8.2/istream" 3
{ return __in >> (reinterpret_cast< char *>(__s)); }
# 794 "/usr/include/c++/4.8.2/istream" 3
template< class _CharT, class _Traits>
# 795 "/usr/include/c++/4.8.2/istream" 3
class basic_iostream : public basic_istream< _CharT, _Traits> , public basic_ostream< _CharT, _Traits> {
# 803 "/usr/include/c++/4.8.2/istream" 3
public: typedef _CharT char_type;
# 804 "/usr/include/c++/4.8.2/istream" 3
typedef typename _Traits::int_type int_type;
# 805 "/usr/include/c++/4.8.2/istream" 3
typedef typename _Traits::pos_type pos_type;
# 806 "/usr/include/c++/4.8.2/istream" 3
typedef typename _Traits::off_type off_type;
# 807 "/usr/include/c++/4.8.2/istream" 3
typedef _Traits traits_type;
# 810 "/usr/include/c++/4.8.2/istream" 3
typedef std::basic_istream< _CharT, _Traits> __istream_type;
# 811 "/usr/include/c++/4.8.2/istream" 3
typedef std::basic_ostream< _CharT, _Traits> __ostream_type;
# 820 "/usr/include/c++/4.8.2/istream" 3
explicit basic_iostream(basic_streambuf< _CharT, _Traits> *__sb) : __istream_type(__sb), __ostream_type(__sb)
# 821 "/usr/include/c++/4.8.2/istream" 3
{ }
# 827 "/usr/include/c++/4.8.2/istream" 3
virtual ~basic_iostream() { }
# 830 "/usr/include/c++/4.8.2/istream" 3
protected: basic_iostream() : __istream_type(), __ostream_type()
# 831 "/usr/include/c++/4.8.2/istream" 3
{ }
# 832 "/usr/include/c++/4.8.2/istream" 3
};
# 854 "/usr/include/c++/4.8.2/istream" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &ws(basic_istream< _CharT, _Traits> & __is);
# 880 "/usr/include/c++/4.8.2/istream" 3
}
# 41 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 45 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
template< class _CharT, class _Traits>
# 47 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::sentry::sentry(basic_istream &__in, bool __noskip) : _M_ok(false)
# 48 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 49 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
std::ios_base::iostate __err = std::ios_base::goodbit;
# 50 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if ((__in.good())) {
# 51 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
try
# 52 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 53 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if ((__in.tie())) {
# 54 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
((__in.tie())->flush()); }
# 55 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if ((!__noskip) && ((bool)((__in.flags()) & ios_base::skipws)))
# 56 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 57 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
const __int_type __eof = traits_type::eof();
# 58 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
__streambuf_type *__sb = (__in.rdbuf());
# 59 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
__int_type __c = (__sb->sgetc());
# 61 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
const __ctype_type &__ct = __check_facet((__in._M_ctype));
# 62 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
while ((!traits_type::eq_int_type(__c, __eof)) && (__ct.is(ctype_base::space, traits_type::to_char_type(__c)))) {
# 65 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
__c = (__sb->snextc()); }
# 70 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (traits_type::eq_int_type(__c, __eof)) {
# 71 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__err |= std::ios_base::eofbit); }
# 72 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 73 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 74 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 75 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 76 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__in._M_setstate(ios_base::badbit));
# 77 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
throw;
# 78 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 79 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (...)
# 80 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{ (__in._M_setstate(ios_base::badbit)); } }
# 82 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if ((__in.good()) && (__err == std::ios_base::goodbit)) {
# 83 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(_M_ok) = true; } else
# 85 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 86 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__err |= std::ios_base::failbit);
# 87 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__in.setstate(__err));
# 88 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 89 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 91 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
template< class _CharT, class _Traits>
# 92 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
template< class _ValueT> basic_istream< _CharT, _Traits> &
# 95 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::_M_extract(_ValueT &__v)
# 96 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 97 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
sentry __cerb(*this, false);
# 98 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__cerb)
# 99 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 100 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
std::ios_base::iostate __err = std::ios_base::goodbit;
# 101 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
try
# 102 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 103 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
const __num_get_type &__ng = __check_facet((this->_M_num_get));
# 104 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__ng.get(*this, 0, *this, __err, __v));
# 105 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 106 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 107 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 108 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 109 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
throw;
# 110 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 111 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (...)
# 112 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 113 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__err) {
# 114 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->setstate(__err)); }
# 115 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 116 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
return *this;
# 117 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 119 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 122 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::operator>>(short &__n)
# 123 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 126 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
sentry __cerb(*this, false);
# 127 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__cerb)
# 128 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 129 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
std::ios_base::iostate __err = std::ios_base::goodbit;
# 130 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
try
# 131 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 132 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
long __l;
# 133 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
const __num_get_type &__ng = __check_facet((this->_M_num_get));
# 134 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__ng.get(*this, 0, *this, __err, __l));
# 138 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__l < __gnu_cxx::__numeric_traits_integer< short> ::__min)
# 139 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 140 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__err |= std::ios_base::failbit);
# 141 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
__n = __gnu_cxx::__numeric_traits_integer< short> ::__min;
# 142 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
} else {
# 143 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__l > __gnu_cxx::__numeric_traits_integer< short> ::__max)
# 144 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 145 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__err |= std::ios_base::failbit);
# 146 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
__n = __gnu_cxx::__numeric_traits_integer< short> ::__max;
# 147 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
} else {
# 149 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
__n = ((short)__l); } }
# 150 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 151 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 152 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 153 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 154 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
throw;
# 155 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 156 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (...)
# 157 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 158 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__err) {
# 159 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->setstate(__err)); }
# 160 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 161 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
return *this;
# 162 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 164 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 167 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::operator>>(int &__n)
# 168 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 171 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
sentry __cerb(*this, false);
# 172 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__cerb)
# 173 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 174 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
std::ios_base::iostate __err = std::ios_base::goodbit;
# 175 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
try
# 176 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 177 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
long __l;
# 178 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
const __num_get_type &__ng = __check_facet((this->_M_num_get));
# 179 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__ng.get(*this, 0, *this, __err, __l));
# 183 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__l < __gnu_cxx::__numeric_traits_integer< int> ::__min)
# 184 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 185 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__err |= std::ios_base::failbit);
# 186 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
__n = __gnu_cxx::__numeric_traits_integer< int> ::__min;
# 187 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
} else {
# 188 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__l > __gnu_cxx::__numeric_traits_integer< int> ::__max)
# 189 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 190 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__err |= std::ios_base::failbit);
# 191 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
__n = __gnu_cxx::__numeric_traits_integer< int> ::__max;
# 192 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
} else {
# 194 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
__n = ((int)__l); } }
# 195 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 196 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 197 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 198 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 199 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
throw;
# 200 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 201 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (...)
# 202 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 203 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__err) {
# 204 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->setstate(__err)); }
# 205 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 206 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
return *this;
# 207 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 209 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 212 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::operator>>(__streambuf_type *__sbout)
# 213 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 214 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
std::ios_base::iostate __err = std::ios_base::goodbit;
# 215 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
sentry __cerb(*this, false);
# 216 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__cerb && __sbout)
# 217 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 218 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
try
# 219 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 220 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
bool __ineof;
# 221 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (!__copy_streambufs_eof((this->rdbuf()), __sbout, __ineof)) {
# 222 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__err |= std::ios_base::failbit); }
# 223 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__ineof) {
# 224 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__err |= std::ios_base::eofbit); }
# 225 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 226 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 227 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 228 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->_M_setstate(ios_base::failbit));
# 229 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
throw;
# 230 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 231 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (...)
# 232 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::failbit)); }
# 233 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
} else {
# 234 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (!__sbout) {
# 235 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__err |= std::ios_base::failbit); } }
# 236 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__err) {
# 237 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->setstate(__err)); }
# 238 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
return *this;
# 239 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 241 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
template< class _CharT, class _Traits> typename basic_istream< _CharT, _Traits> ::int_type
# 244 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::get()
# 245 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 246 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
const int_type __eof = traits_type::eof();
# 247 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
int_type __c = __eof;
# 248 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(_M_gcount) = (0);
# 249 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
std::ios_base::iostate __err = std::ios_base::goodbit;
# 250 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 251 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__cerb)
# 252 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 253 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
try
# 254 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 255 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
__c = ((this->rdbuf())->sbumpc());
# 257 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (!traits_type::eq_int_type(__c, __eof)) {
# 258 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(_M_gcount) = (1); } else {
# 260 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__err |= std::ios_base::eofbit); }
# 261 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 262 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 263 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 264 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 265 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
throw;
# 266 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 267 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (...)
# 268 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 269 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 270 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (!(_M_gcount)) {
# 271 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__err |= std::ios_base::failbit); }
# 272 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__err) {
# 273 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->setstate(__err)); }
# 274 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
return __c;
# 275 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 277 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 280 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::get(char_type &__c)
# 281 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 282 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(_M_gcount) = (0);
# 283 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
std::ios_base::iostate __err = std::ios_base::goodbit;
# 284 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 285 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__cerb)
# 286 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 287 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
try
# 288 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 289 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
const int_type __cb = ((this->rdbuf())->sbumpc());
# 291 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (!traits_type::eq_int_type(__cb, traits_type::eof()))
# 292 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 293 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(_M_gcount) = (1);
# 294 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
__c = traits_type::to_char_type(__cb);
# 295 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
} else {
# 297 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__err |= std::ios_base::eofbit); }
# 298 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 299 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 300 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 301 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 302 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
throw;
# 303 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 304 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (...)
# 305 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 306 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 307 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (!(_M_gcount)) {
# 308 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__err |= std::ios_base::failbit); }
# 309 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__err) {
# 310 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->setstate(__err)); }
# 311 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
return *this;
# 312 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 314 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 317 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::get(char_type *__s, std::streamsize __n, char_type __delim)
# 318 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 319 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(_M_gcount) = (0);
# 320 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
std::ios_base::iostate __err = std::ios_base::goodbit;
# 321 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 322 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__cerb)
# 323 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 324 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
try
# 325 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 326 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
const int_type __idelim = traits_type::to_int_type(__delim);
# 327 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
const int_type __eof = traits_type::eof();
# 328 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
__streambuf_type *__sb = (this->rdbuf());
# 329 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
int_type __c = (__sb->sgetc());
# 331 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
while ((((_M_gcount) + (1)) < __n) && (!traits_type::eq_int_type(__c, __eof)) && (!traits_type::eq_int_type(__c, __idelim)))
# 334 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 335 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(*(__s++)) = traits_type::to_char_type(__c);
# 336 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
++(_M_gcount);
# 337 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
__c = (__sb->snextc());
# 338 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 339 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (traits_type::eq_int_type(__c, __eof)) {
# 340 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__err |= std::ios_base::eofbit); }
# 341 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 342 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 343 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 344 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 345 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
throw;
# 346 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 347 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (...)
# 348 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 349 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 352 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__n > (0)) {
# 353 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(*__s) = char_type(); }
# 354 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (!(_M_gcount)) {
# 355 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__err |= std::ios_base::failbit); }
# 356 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__err) {
# 357 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->setstate(__err)); }
# 358 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
return *this;
# 359 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 361 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 364 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::get(__streambuf_type &__sb, char_type __delim)
# 365 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 366 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(_M_gcount) = (0);
# 367 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
std::ios_base::iostate __err = std::ios_base::goodbit;
# 368 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 369 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__cerb)
# 370 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 371 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
try
# 372 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 373 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
const int_type __idelim = traits_type::to_int_type(__delim);
# 374 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
const int_type __eof = traits_type::eof();
# 375 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
__streambuf_type *__this_sb = (this->rdbuf());
# 376 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
int_type __c = (__this_sb->sgetc());
# 377 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
char_type __c2 = traits_type::to_char_type(__c);
# 379 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
while ((!traits_type::eq_int_type(__c, __eof)) && (!traits_type::eq_int_type(__c, __idelim)) && (!traits_type::eq_int_type((__sb.sputc(__c2)), __eof)))
# 382 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 383 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
++(_M_gcount);
# 384 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
__c = (__this_sb->snextc());
# 385 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
__c2 = traits_type::to_char_type(__c);
# 386 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 387 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (traits_type::eq_int_type(__c, __eof)) {
# 388 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__err |= std::ios_base::eofbit); }
# 389 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 390 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 391 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 392 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 393 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
throw;
# 394 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 395 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (...)
# 396 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 397 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 398 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (!(_M_gcount)) {
# 399 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__err |= std::ios_base::failbit); }
# 400 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__err) {
# 401 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->setstate(__err)); }
# 402 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
return *this;
# 403 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 405 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 408 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::getline(char_type *__s, std::streamsize __n, char_type __delim)
# 409 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 410 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(_M_gcount) = (0);
# 411 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
std::ios_base::iostate __err = std::ios_base::goodbit;
# 412 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 413 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__cerb)
# 414 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 415 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
try
# 416 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 417 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
const int_type __idelim = traits_type::to_int_type(__delim);
# 418 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
const int_type __eof = traits_type::eof();
# 419 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
__streambuf_type *__sb = (this->rdbuf());
# 420 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
int_type __c = (__sb->sgetc());
# 422 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
while ((((_M_gcount) + (1)) < __n) && (!traits_type::eq_int_type(__c, __eof)) && (!traits_type::eq_int_type(__c, __idelim)))
# 425 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 426 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(*(__s++)) = traits_type::to_char_type(__c);
# 427 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
__c = (__sb->snextc());
# 428 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
++(_M_gcount);
# 429 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 430 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (traits_type::eq_int_type(__c, __eof)) {
# 431 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__err |= std::ios_base::eofbit); } else
# 433 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 434 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (traits_type::eq_int_type(__c, __idelim))
# 435 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 436 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__sb->sbumpc());
# 437 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
++(_M_gcount);
# 438 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
} else {
# 440 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__err |= std::ios_base::failbit); }
# 441 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 442 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 443 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 444 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 445 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 446 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
throw;
# 447 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 448 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (...)
# 449 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 450 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 453 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__n > (0)) {
# 454 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(*__s) = char_type(); }
# 455 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (!(_M_gcount)) {
# 456 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__err |= std::ios_base::failbit); }
# 457 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__err) {
# 458 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->setstate(__err)); }
# 459 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
return *this;
# 460 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 465 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
template< class _CharT, class _Traits> typename basic_istream< _CharT, _Traits> ::__istream_type &
# 468 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::ignore()
# 469 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 470 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(_M_gcount) = (0);
# 471 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 472 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__cerb)
# 473 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 474 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
std::ios_base::iostate __err = std::ios_base::goodbit;
# 475 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
try
# 476 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 477 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
const int_type __eof = traits_type::eof();
# 478 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
__streambuf_type *__sb = (this->rdbuf());
# 480 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (traits_type::eq_int_type((__sb->sbumpc()), __eof)) {
# 481 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__err |= std::ios_base::eofbit); } else {
# 483 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(_M_gcount) = (1); }
# 484 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 485 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 486 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 487 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 488 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
throw;
# 489 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 490 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (...)
# 491 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 492 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__err) {
# 493 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->setstate(__err)); }
# 494 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 495 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
return *this;
# 496 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 498 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 501 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::ignore(std::streamsize __n)
# 502 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 503 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(_M_gcount) = (0);
# 504 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 505 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__cerb && (__n > (0)))
# 506 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 507 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
std::ios_base::iostate __err = std::ios_base::goodbit;
# 508 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
try
# 509 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 510 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
const int_type __eof = traits_type::eof();
# 511 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
__streambuf_type *__sb = (this->rdbuf());
# 512 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
int_type __c = (__sb->sgetc());
# 521 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
bool __large_ignore = false;
# 522 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
while (true)
# 523 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 524 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
while (((_M_gcount) < __n) && (!traits_type::eq_int_type(__c, __eof)))
# 526 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 527 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
++(_M_gcount);
# 528 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
__c = (__sb->snextc());
# 529 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 530 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if ((__n == __gnu_cxx::__numeric_traits_integer< long> ::__max) && (!traits_type::eq_int_type(__c, __eof)))
# 532 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 533 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(_M_gcount) = __gnu_cxx::__numeric_traits_integer< long> ::__min;
# 535 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
__large_ignore = true;
# 536 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
} else {
# 538 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
break; }
# 539 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 541 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__large_ignore) {
# 542 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(_M_gcount) = __gnu_cxx::__numeric_traits_integer< long> ::__max; }
# 544 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (traits_type::eq_int_type(__c, __eof)) {
# 545 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__err |= std::ios_base::eofbit); }
# 546 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 547 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 548 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 549 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 550 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
throw;
# 551 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 552 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (...)
# 553 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 554 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__err) {
# 555 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->setstate(__err)); }
# 556 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 557 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
return *this;
# 558 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 560 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 563 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::ignore(std::streamsize __n, int_type __delim)
# 564 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 565 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(_M_gcount) = (0);
# 566 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 567 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__cerb && (__n > (0)))
# 568 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 569 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
std::ios_base::iostate __err = std::ios_base::goodbit;
# 570 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
try
# 571 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 572 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
const int_type __eof = traits_type::eof();
# 573 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
__streambuf_type *__sb = (this->rdbuf());
# 574 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
int_type __c = (__sb->sgetc());
# 577 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
bool __large_ignore = false;
# 578 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
while (true)
# 579 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 580 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
while (((_M_gcount) < __n) && (!traits_type::eq_int_type(__c, __eof)) && (!traits_type::eq_int_type(__c, __delim)))
# 583 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 584 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
++(_M_gcount);
# 585 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
__c = (__sb->snextc());
# 586 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 587 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if ((__n == __gnu_cxx::__numeric_traits_integer< long> ::__max) && (!traits_type::eq_int_type(__c, __eof)) && (!traits_type::eq_int_type(__c, __delim)))
# 590 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 591 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(_M_gcount) = __gnu_cxx::__numeric_traits_integer< long> ::__min;
# 593 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
__large_ignore = true;
# 594 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
} else {
# 596 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
break; }
# 597 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 599 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__large_ignore) {
# 600 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(_M_gcount) = __gnu_cxx::__numeric_traits_integer< long> ::__max; }
# 602 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (traits_type::eq_int_type(__c, __eof)) {
# 603 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__err |= std::ios_base::eofbit); } else {
# 604 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (traits_type::eq_int_type(__c, __delim))
# 605 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 606 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if ((_M_gcount) < __gnu_cxx::__numeric_traits_integer< long> ::__max) {
# 608 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
++(_M_gcount); }
# 609 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__sb->sbumpc());
# 610 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
} }
# 611 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 612 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 613 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 614 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 615 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
throw;
# 616 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 617 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (...)
# 618 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 619 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__err) {
# 620 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->setstate(__err)); }
# 621 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 622 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
return *this;
# 623 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 625 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
template< class _CharT, class _Traits> typename basic_istream< _CharT, _Traits> ::int_type
# 628 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::peek()
# 629 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 630 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
int_type __c = traits_type::eof();
# 631 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(_M_gcount) = (0);
# 632 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 633 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__cerb)
# 634 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 635 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
std::ios_base::iostate __err = std::ios_base::goodbit;
# 636 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
try
# 637 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 638 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
__c = ((this->rdbuf())->sgetc());
# 639 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (traits_type::eq_int_type(__c, traits_type::eof())) {
# 640 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__err |= std::ios_base::eofbit); }
# 641 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 642 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 643 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 644 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 645 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
throw;
# 646 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 647 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (...)
# 648 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 649 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__err) {
# 650 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->setstate(__err)); }
# 651 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 652 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
return __c;
# 653 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 655 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 658 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::read(char_type *__s, std::streamsize __n)
# 659 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 660 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(_M_gcount) = (0);
# 661 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 662 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__cerb)
# 663 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 664 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
std::ios_base::iostate __err = std::ios_base::goodbit;
# 665 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
try
# 666 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 667 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(_M_gcount) = ((this->rdbuf())->sgetn(__s, __n));
# 668 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if ((_M_gcount) != __n) {
# 669 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__err |= ((std::ios_base::eofbit | std::ios_base::failbit))); }
# 670 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 671 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 672 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 673 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 674 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
throw;
# 675 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 676 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (...)
# 677 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 678 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__err) {
# 679 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->setstate(__err)); }
# 680 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 681 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
return *this;
# 682 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 684 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
template< class _CharT, class _Traits> streamsize
# 687 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::readsome(char_type *__s, std::streamsize __n)
# 688 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 689 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(_M_gcount) = (0);
# 690 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 691 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__cerb)
# 692 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 693 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
std::ios_base::iostate __err = std::ios_base::goodbit;
# 694 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
try
# 695 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 697 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
const std::streamsize __num = ((this->rdbuf())->in_avail());
# 698 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__num > (0)) {
# 699 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(_M_gcount) = ((this->rdbuf())->sgetn(__s, std::min(__num, __n))); } else {
# 700 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__num == (-1)) {
# 701 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__err |= std::ios_base::eofbit); } }
# 702 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 703 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 704 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 705 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 706 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
throw;
# 707 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 708 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (...)
# 709 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 710 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__err) {
# 711 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->setstate(__err)); }
# 712 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 713 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
return _M_gcount;
# 714 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 716 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 719 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::putback(char_type __c)
# 720 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 723 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(_M_gcount) = (0);
# 725 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->clear((this->rdstate()) & ((~std::ios_base::eofbit))));
# 726 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 727 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__cerb)
# 728 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 729 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
std::ios_base::iostate __err = std::ios_base::goodbit;
# 730 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
try
# 731 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 732 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
const int_type __eof = traits_type::eof();
# 733 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
__streambuf_type *__sb = (this->rdbuf());
# 734 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if ((!__sb) || traits_type::eq_int_type((__sb->sputbackc(__c)), __eof)) {
# 736 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__err |= std::ios_base::badbit); }
# 737 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 738 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 739 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 740 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 741 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
throw;
# 742 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 743 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (...)
# 744 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 745 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__err) {
# 746 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->setstate(__err)); }
# 747 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 748 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
return *this;
# 749 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 751 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
template< class _CharT, class _Traits> typename basic_istream< _CharT, _Traits> ::__istream_type &
# 754 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::unget()
# 755 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 758 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(_M_gcount) = (0);
# 760 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->clear((this->rdstate()) & ((~std::ios_base::eofbit))));
# 761 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 762 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__cerb)
# 763 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 764 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
std::ios_base::iostate __err = std::ios_base::goodbit;
# 765 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
try
# 766 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 767 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
const int_type __eof = traits_type::eof();
# 768 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
__streambuf_type *__sb = (this->rdbuf());
# 769 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if ((!__sb) || traits_type::eq_int_type((__sb->sungetc()), __eof)) {
# 771 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__err |= std::ios_base::badbit); }
# 772 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 773 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 774 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 775 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 776 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
throw;
# 777 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 778 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (...)
# 779 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 780 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__err) {
# 781 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->setstate(__err)); }
# 782 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 783 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
return *this;
# 784 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 786 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
template< class _CharT, class _Traits> int
# 789 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::sync()
# 790 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 793 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
int __ret = (-1);
# 794 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 795 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__cerb)
# 796 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 797 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
std::ios_base::iostate __err = std::ios_base::goodbit;
# 798 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
try
# 799 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 800 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
__streambuf_type *__sb = (this->rdbuf());
# 801 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__sb)
# 802 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 803 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if ((__sb->pubsync()) == (-1)) {
# 804 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__err |= std::ios_base::badbit); } else {
# 806 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
__ret = 0; }
# 807 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 808 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 809 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 810 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 811 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 812 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
throw;
# 813 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 814 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (...)
# 815 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 816 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__err) {
# 817 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->setstate(__err)); }
# 818 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 819 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
return __ret;
# 820 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 822 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
template< class _CharT, class _Traits> typename basic_istream< _CharT, _Traits> ::pos_type
# 825 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::tellg()
# 826 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 829 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
pos_type __ret = ((pos_type)(-1));
# 830 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 831 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__cerb)
# 832 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 833 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
try
# 834 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 835 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (!(this->fail())) {
# 836 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
__ret = ((this->rdbuf())->pubseekoff(0, ios_base::cur, ios_base::in)); }
# 838 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 839 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 840 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 841 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 842 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
throw;
# 843 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 844 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (...)
# 845 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 846 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 847 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
return __ret;
# 848 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 850 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 853 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::seekg(pos_type __pos)
# 854 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 858 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->clear((this->rdstate()) & ((~std::ios_base::eofbit))));
# 859 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 860 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__cerb)
# 861 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 862 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
std::ios_base::iostate __err = std::ios_base::goodbit;
# 863 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
try
# 864 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 865 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (!(this->fail()))
# 866 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 868 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
const pos_type __p = ((this->rdbuf())->pubseekpos(__pos, ios_base::in));
# 872 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__p == ((pos_type)((off_type)(-1)))) {
# 873 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__err |= std::ios_base::failbit); }
# 874 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 875 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 876 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 877 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 878 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 879 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
throw;
# 880 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 881 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (...)
# 882 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 883 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__err) {
# 884 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->setstate(__err)); }
# 885 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 886 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
return *this;
# 887 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 889 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 892 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::seekg(off_type __off, std::ios_base::seekdir __dir)
# 893 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 897 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->clear((this->rdstate()) & ((~std::ios_base::eofbit))));
# 898 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 899 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__cerb)
# 900 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 901 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
std::ios_base::iostate __err = std::ios_base::goodbit;
# 902 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
try
# 903 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 904 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (!(this->fail()))
# 905 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 907 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
const pos_type __p = ((this->rdbuf())->pubseekoff(__off, __dir, ios_base::in));
# 911 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__p == ((pos_type)((off_type)(-1)))) {
# 912 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__err |= std::ios_base::failbit); }
# 913 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 914 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 915 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 916 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 917 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 918 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
throw;
# 919 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 920 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (...)
# 921 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 922 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__err) {
# 923 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(this->setstate(__err)); }
# 924 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 925 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
return *this;
# 926 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 929 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 931 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
operator>>(basic_istream< _CharT, _Traits> &__in, _CharT &__c)
# 932 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 933 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
typedef basic_istream< _CharT, _Traits> __istream_type;
# 934 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
typedef typename basic_istream< _CharT, _Traits> ::int_type __int_type;
# 936 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
typename basic_istream< _CharT, _Traits> ::sentry __cerb(__in, false);
# 937 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__cerb)
# 938 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 939 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
ios_base::iostate __err = ios_base::goodbit;
# 940 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
try
# 941 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 942 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
const __int_type __cb = ((__in.rdbuf())->sbumpc());
# 943 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (!_Traits::eq_int_type(__cb, _Traits::eof())) {
# 944 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
__c = _Traits::to_char_type(__cb); } else {
# 946 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__err |= ((ios_base::eofbit | ios_base::failbit))); }
# 947 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 948 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 949 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 950 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__in._M_setstate(ios_base::badbit));
# 951 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
throw;
# 952 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 953 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (...)
# 954 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{ (__in._M_setstate(ios_base::badbit)); }
# 955 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__err) {
# 956 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__in.setstate(__err)); }
# 957 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 958 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
return __in;
# 959 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 961 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 963 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
operator>>(basic_istream< _CharT, _Traits> &__in, _CharT *__s)
# 964 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 965 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
typedef basic_istream< _CharT, _Traits> __istream_type;
# 966 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
typedef basic_streambuf< _CharT, _Traits> __streambuf_type;
# 967 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
typedef typename _Traits::int_type int_type;
# 968 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
typedef _CharT char_type;
# 969 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
typedef ctype< _CharT> __ctype_type;
# 971 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
streamsize __extracted = (0);
# 972 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
ios_base::iostate __err = ios_base::goodbit;
# 973 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
typename basic_istream< _CharT, _Traits> ::sentry __cerb(__in, false);
# 974 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__cerb)
# 975 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 976 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
try
# 977 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 979 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
streamsize __num = (__in.width());
# 980 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__num <= (0)) {
# 981 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
__num = __gnu_cxx::__numeric_traits_integer< long> ::__max; }
# 983 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
const __ctype_type &__ct = use_facet< ctype< _CharT> > ((__in.getloc()));
# 985 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
const int_type __eof = _Traits::eof();
# 986 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
__streambuf_type *__sb = (__in.rdbuf());
# 987 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
int_type __c = (__sb->sgetc());
# 989 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
while ((__extracted < (__num - (1))) && (!_Traits::eq_int_type(__c, __eof)) && (!(__ct.is(ctype_base::space, _Traits::to_char_type(__c)))))
# 993 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 994 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(*(__s++)) = _Traits::to_char_type(__c);
# 995 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
++__extracted;
# 996 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
__c = (__sb->snextc());
# 997 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 998 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (_Traits::eq_int_type(__c, __eof)) {
# 999 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__err |= ios_base::eofbit); }
# 1003 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(*__s) = char_type();
# 1004 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__in.width(0));
# 1005 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 1006 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 1007 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 1008 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__in._M_setstate(ios_base::badbit));
# 1009 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
throw;
# 1010 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 1011 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
catch (...)
# 1012 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{ (__in._M_setstate(ios_base::badbit)); }
# 1013 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 1014 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (!__extracted) {
# 1015 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__err |= ios_base::failbit); }
# 1016 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (__err) {
# 1017 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__in.setstate(__err)); }
# 1018 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
return __in;
# 1019 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 1022 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 1024 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
ws(basic_istream< _CharT, _Traits> &__in)
# 1025 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
{
# 1026 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
typedef basic_istream< _CharT, _Traits> __istream_type;
# 1027 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
typedef basic_streambuf< _CharT, _Traits> __streambuf_type;
# 1028 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
typedef typename basic_istream< _CharT, _Traits> ::int_type __int_type;
# 1029 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
typedef ctype< _CharT> __ctype_type;
# 1031 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
const __ctype_type &__ct = use_facet< ctype< _CharT> > ((__in.getloc()));
# 1032 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
const __int_type __eof = _Traits::eof();
# 1033 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
__streambuf_type *__sb = (__in.rdbuf());
# 1034 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
__int_type __c = (__sb->sgetc());
# 1036 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
while ((!_Traits::eq_int_type(__c, __eof)) && (__ct.is(ctype_base::space, _Traits::to_char_type(__c)))) {
# 1038 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
__c = (__sb->snextc()); }
# 1040 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
if (_Traits::eq_int_type(__c, __eof)) {
# 1041 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
(__in.setstate(ios_base::eofbit)); }
# 1042 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
return __in;
# 1043 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 1048 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
extern template class basic_istream< char, char_traits< char> > ;
# 1049 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &ws(basic_istream< char, char_traits< char> > & __is);
# 1050 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & __in, char & __c);
# 1051 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > &, char *);
# 1052 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & __in, unsigned char & __c);
# 1053 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & __in, signed char & __c);
# 1054 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & __in, unsigned char * __s);
# 1055 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & __in, signed char * __s);
# 1057 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(unsigned short & __v);
# 1058 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(unsigned & __v);
# 1059 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(long & __v);
# 1060 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(unsigned long & __v);
# 1061 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(bool & __v);
# 1063 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(long long & __v);
# 1064 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(unsigned long long & __v);
# 1066 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(float & __v);
# 1067 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(double & __v);
# 1068 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(long double & __v);
# 1069 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(void *& __v);
# 1071 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
extern template class basic_iostream< char, char_traits< char> > ;
# 1074 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
extern template class basic_istream< wchar_t, char_traits< wchar_t> > ;
# 1075 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > &ws(basic_istream< wchar_t, char_traits< wchar_t> > & __is);
# 1076 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > &operator>>(basic_istream< wchar_t, char_traits< wchar_t> > & __in, wchar_t & __c);
# 1077 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > &operator>>(basic_istream< wchar_t, char_traits< wchar_t> > &, wchar_t *);
# 1079 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(unsigned short & __v);
# 1080 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(unsigned & __v);
# 1081 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(long & __v);
# 1082 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(unsigned long & __v);
# 1083 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(bool & __v);
# 1085 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(long long & __v);
# 1086 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(unsigned long long & __v);
# 1088 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(float & __v);
# 1089 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(double & __v);
# 1090 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(long double & __v);
# 1091 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(void *& __v);
# 1093 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
extern template class basic_iostream< wchar_t, char_traits< wchar_t> > ;
# 1098 "/usr/include/c++/4.8.2/bits/istream.tcc" 3
}
# 42 "/usr/include/c++/4.8.2/iostream" 3
namespace std __attribute((__visibility__("default"))) {
# 60 "/usr/include/c++/4.8.2/iostream" 3
extern istream cin;
# 61 "/usr/include/c++/4.8.2/iostream" 3
extern ostream cout;
# 62 "/usr/include/c++/4.8.2/iostream" 3
extern ostream cerr;
# 63 "/usr/include/c++/4.8.2/iostream" 3
extern ostream clog;
# 66 "/usr/include/c++/4.8.2/iostream" 3
extern wistream wcin;
# 67 "/usr/include/c++/4.8.2/iostream" 3
extern wostream wcout;
# 68 "/usr/include/c++/4.8.2/iostream" 3
extern wostream wcerr;
# 69 "/usr/include/c++/4.8.2/iostream" 3
extern wostream wclog;
# 74 "/usr/include/c++/4.8.2/iostream" 3
static ios_base::Init __ioinit;
# 77 "/usr/include/c++/4.8.2/iostream" 3
}
# 147 "/usr/include/c++/4.8.2/limits" 3
namespace std __attribute((__visibility__("default"))) {
# 156 "/usr/include/c++/4.8.2/limits" 3
enum float_round_style {
# 158 "/usr/include/c++/4.8.2/limits" 3
round_indeterminate = (-1),
# 159 "/usr/include/c++/4.8.2/limits" 3
round_toward_zero = 0,
# 160 "/usr/include/c++/4.8.2/limits" 3
round_to_nearest,
# 161 "/usr/include/c++/4.8.2/limits" 3
round_toward_infinity,
# 162 "/usr/include/c++/4.8.2/limits" 3
round_toward_neg_infinity
# 163 "/usr/include/c++/4.8.2/limits" 3
};
# 171 "/usr/include/c++/4.8.2/limits" 3
enum float_denorm_style {
# 174 "/usr/include/c++/4.8.2/limits" 3
denorm_indeterminate = (-1),
# 176 "/usr/include/c++/4.8.2/limits" 3
denorm_absent = 0,
# 178 "/usr/include/c++/4.8.2/limits" 3
denorm_present
# 179 "/usr/include/c++/4.8.2/limits" 3
};
# 191 "/usr/include/c++/4.8.2/limits" 3
struct __numeric_limits_base {
# 195 "/usr/include/c++/4.8.2/limits" 3
static const bool is_specialized = false;
# 200 "/usr/include/c++/4.8.2/limits" 3
static const int digits = 0;
# 203 "/usr/include/c++/4.8.2/limits" 3
static const int digits10 = 0;
# 212 "/usr/include/c++/4.8.2/limits" 3
static const bool is_signed = false;
# 215 "/usr/include/c++/4.8.2/limits" 3
static const bool is_integer = false;
# 220 "/usr/include/c++/4.8.2/limits" 3
static const bool is_exact = false;
# 224 "/usr/include/c++/4.8.2/limits" 3
static const int radix = 0;
# 228 "/usr/include/c++/4.8.2/limits" 3
static const int min_exponent = 0;
# 232 "/usr/include/c++/4.8.2/limits" 3
static const int min_exponent10 = 0;
# 237 "/usr/include/c++/4.8.2/limits" 3
static const int max_exponent = 0;
# 241 "/usr/include/c++/4.8.2/limits" 3
static const int max_exponent10 = 0;
# 244 "/usr/include/c++/4.8.2/limits" 3
static const bool has_infinity = false;
# 248 "/usr/include/c++/4.8.2/limits" 3
static const bool has_quiet_NaN = false;
# 252 "/usr/include/c++/4.8.2/limits" 3
static const bool has_signaling_NaN = false;
# 255 "/usr/include/c++/4.8.2/limits" 3
static const float_denorm_style has_denorm = denorm_absent;
# 259 "/usr/include/c++/4.8.2/limits" 3
static const bool has_denorm_loss = false;
# 263 "/usr/include/c++/4.8.2/limits" 3
static const bool is_iec559 = false;
# 268 "/usr/include/c++/4.8.2/limits" 3
static const bool is_bounded = false;
# 277 "/usr/include/c++/4.8.2/limits" 3
static const bool is_modulo = false;
# 280 "/usr/include/c++/4.8.2/limits" 3
static const bool traps = false;
# 283 "/usr/include/c++/4.8.2/limits" 3
static const bool tinyness_before = false;
# 288 "/usr/include/c++/4.8.2/limits" 3
static const float_round_style round_style = round_toward_zero;
# 290 "/usr/include/c++/4.8.2/limits" 3
};
# 303 "/usr/include/c++/4.8.2/limits" 3
template< class _Tp>
# 304 "/usr/include/c++/4.8.2/limits" 3
struct numeric_limits : public __numeric_limits_base {
# 309 "/usr/include/c++/4.8.2/limits" 3
static _Tp min() throw() { return _Tp(); }
# 313 "/usr/include/c++/4.8.2/limits" 3
static _Tp max() throw() { return _Tp(); }
# 325 "/usr/include/c++/4.8.2/limits" 3
static _Tp epsilon() throw() { return _Tp(); }
# 329 "/usr/include/c++/4.8.2/limits" 3
static _Tp round_error() throw() { return _Tp(); }
# 333 "/usr/include/c++/4.8.2/limits" 3
static _Tp infinity() throw() { return _Tp(); }
# 338 "/usr/include/c++/4.8.2/limits" 3
static _Tp quiet_NaN() throw() { return _Tp(); }
# 343 "/usr/include/c++/4.8.2/limits" 3
static _Tp signaling_NaN() throw() { return _Tp(); }
# 349 "/usr/include/c++/4.8.2/limits" 3
static _Tp denorm_min() throw() { return _Tp(); }
# 350 "/usr/include/c++/4.8.2/limits" 3
};
# 371 "/usr/include/c++/4.8.2/limits" 3
template<> struct numeric_limits< bool> {
# 373 "/usr/include/c++/4.8.2/limits" 3
static const bool is_specialized = true;
# 376 "/usr/include/c++/4.8.2/limits" 3
static bool min() throw() { return false; }
# 379 "/usr/include/c++/4.8.2/limits" 3
static bool max() throw() { return true; }
# 385 "/usr/include/c++/4.8.2/limits" 3
static const int digits = 1;
# 386 "/usr/include/c++/4.8.2/limits" 3
static const int digits10 = 0;
# 390 "/usr/include/c++/4.8.2/limits" 3
static const bool is_signed = false;
# 391 "/usr/include/c++/4.8.2/limits" 3
static const bool is_integer = true;
# 392 "/usr/include/c++/4.8.2/limits" 3
static const bool is_exact = true;
# 393 "/usr/include/c++/4.8.2/limits" 3
static const int radix = 2;
# 396 "/usr/include/c++/4.8.2/limits" 3
static bool epsilon() throw() { return false; }
# 399 "/usr/include/c++/4.8.2/limits" 3
static bool round_error() throw() { return false; }
# 401 "/usr/include/c++/4.8.2/limits" 3
static const int min_exponent = 0;
# 402 "/usr/include/c++/4.8.2/limits" 3
static const int min_exponent10 = 0;
# 403 "/usr/include/c++/4.8.2/limits" 3
static const int max_exponent = 0;
# 404 "/usr/include/c++/4.8.2/limits" 3
static const int max_exponent10 = 0;
# 406 "/usr/include/c++/4.8.2/limits" 3
static const bool has_infinity = false;
# 407 "/usr/include/c++/4.8.2/limits" 3
static const bool has_quiet_NaN = false;
# 408 "/usr/include/c++/4.8.2/limits" 3
static const bool has_signaling_NaN = false;
# 409 "/usr/include/c++/4.8.2/limits" 3
static const float_denorm_style has_denorm = denorm_absent;
# 411 "/usr/include/c++/4.8.2/limits" 3
static const bool has_denorm_loss = false;
# 414 "/usr/include/c++/4.8.2/limits" 3
static bool infinity() throw() { return false; }
# 417 "/usr/include/c++/4.8.2/limits" 3
static bool quiet_NaN() throw() { return false; }
# 420 "/usr/include/c++/4.8.2/limits" 3
static bool signaling_NaN() throw() { return false; }
# 423 "/usr/include/c++/4.8.2/limits" 3
static bool denorm_min() throw() { return false; }
# 425 "/usr/include/c++/4.8.2/limits" 3
static const bool is_iec559 = false;
# 426 "/usr/include/c++/4.8.2/limits" 3
static const bool is_bounded = true;
# 427 "/usr/include/c++/4.8.2/limits" 3
static const bool is_modulo = false;
# 432 "/usr/include/c++/4.8.2/limits" 3
static const bool traps = true;
# 433 "/usr/include/c++/4.8.2/limits" 3
static const bool tinyness_before = false;
# 434 "/usr/include/c++/4.8.2/limits" 3
static const float_round_style round_style = round_toward_zero;
# 436 "/usr/include/c++/4.8.2/limits" 3
};
# 440 "/usr/include/c++/4.8.2/limits" 3
template<> struct numeric_limits< char> {
# 442 "/usr/include/c++/4.8.2/limits" 3
static const bool is_specialized = true;
# 445 "/usr/include/c++/4.8.2/limits" 3
static char min() throw() { return (((char)(-1)) < 0) ? (-((((char)(-1)) < 0) ? (((((char)1) << (((sizeof(char) * (8)) - (((char)(-1)) < 0)) - (1))) - 1) << 1) + 1 : (~((char)0)))) - 1 : ((char)0); }
# 448 "/usr/include/c++/4.8.2/limits" 3
static char max() throw() { return (((char)(-1)) < 0) ? (((((char)1) << (((sizeof(char) * (8)) - (((char)(-1)) < 0)) - (1))) - 1) << 1) + 1 : (~((char)0)); }
# 455 "/usr/include/c++/4.8.2/limits" 3
static const int digits = ((sizeof(char) * (8)) - (((char)(-1)) < 0));
# 456 "/usr/include/c++/4.8.2/limits" 3
static const int digits10 = ((((sizeof(char) * (8)) - (((char)(-1)) < 0)) * (643L)) / (2136));
# 460 "/usr/include/c++/4.8.2/limits" 3
static const bool is_signed = (((char)(-1)) < 0);
# 461 "/usr/include/c++/4.8.2/limits" 3
static const bool is_integer = true;
# 462 "/usr/include/c++/4.8.2/limits" 3
static const bool is_exact = true;
# 463 "/usr/include/c++/4.8.2/limits" 3
static const int radix = 2;
# 466 "/usr/include/c++/4.8.2/limits" 3
static char epsilon() throw() { return 0; }
# 469 "/usr/include/c++/4.8.2/limits" 3
static char round_error() throw() { return 0; }
# 471 "/usr/include/c++/4.8.2/limits" 3
static const int min_exponent = 0;
# 472 "/usr/include/c++/4.8.2/limits" 3
static const int min_exponent10 = 0;
# 473 "/usr/include/c++/4.8.2/limits" 3
static const int max_exponent = 0;
# 474 "/usr/include/c++/4.8.2/limits" 3
static const int max_exponent10 = 0;
# 476 "/usr/include/c++/4.8.2/limits" 3
static const bool has_infinity = false;
# 477 "/usr/include/c++/4.8.2/limits" 3
static const bool has_quiet_NaN = false;
# 478 "/usr/include/c++/4.8.2/limits" 3
static const bool has_signaling_NaN = false;
# 479 "/usr/include/c++/4.8.2/limits" 3
static const float_denorm_style has_denorm = denorm_absent;
# 481 "/usr/include/c++/4.8.2/limits" 3
static const bool has_denorm_loss = false;
# 484 "/usr/include/c++/4.8.2/limits" 3
static char infinity() throw() { return ((char)0); }
# 487 "/usr/include/c++/4.8.2/limits" 3
static char quiet_NaN() throw() { return ((char)0); }
# 490 "/usr/include/c++/4.8.2/limits" 3
static char signaling_NaN() throw() { return ((char)0); }
# 493 "/usr/include/c++/4.8.2/limits" 3
static char denorm_min() throw() { return static_cast< char>(0); }
# 495 "/usr/include/c++/4.8.2/limits" 3
static const bool is_iec559 = false;
# 496 "/usr/include/c++/4.8.2/limits" 3
static const bool is_bounded = true;
# 497 "/usr/include/c++/4.8.2/limits" 3
static const bool is_modulo = (!is_signed);
# 499 "/usr/include/c++/4.8.2/limits" 3
static const bool traps = true;
# 500 "/usr/include/c++/4.8.2/limits" 3
static const bool tinyness_before = false;
# 501 "/usr/include/c++/4.8.2/limits" 3
static const float_round_style round_style = round_toward_zero;
# 503 "/usr/include/c++/4.8.2/limits" 3
};
# 507 "/usr/include/c++/4.8.2/limits" 3
template<> struct numeric_limits< signed char> {
# 509 "/usr/include/c++/4.8.2/limits" 3
static const bool is_specialized = true;
# 512 "/usr/include/c++/4.8.2/limits" 3
static signed char min() throw() { return (-127) - 1; }
# 515 "/usr/include/c++/4.8.2/limits" 3
static signed char max() throw() { return 127; }
# 522 "/usr/include/c++/4.8.2/limits" 3
static const int digits = ((sizeof(signed char) * (8)) - (((signed char)(-1)) < 0));
# 523 "/usr/include/c++/4.8.2/limits" 3
static const int digits10 = ((((sizeof(signed char) * (8)) - (((signed char)(-1)) < 0)) * (643L)) / (2136));
# 528 "/usr/include/c++/4.8.2/limits" 3
static const bool is_signed = true;
# 529 "/usr/include/c++/4.8.2/limits" 3
static const bool is_integer = true;
# 530 "/usr/include/c++/4.8.2/limits" 3
static const bool is_exact = true;
# 531 "/usr/include/c++/4.8.2/limits" 3
static const int radix = 2;
# 534 "/usr/include/c++/4.8.2/limits" 3
static signed char epsilon() throw() { return 0; }
# 537 "/usr/include/c++/4.8.2/limits" 3
static signed char round_error() throw() { return 0; }
# 539 "/usr/include/c++/4.8.2/limits" 3
static const int min_exponent = 0;
# 540 "/usr/include/c++/4.8.2/limits" 3
static const int min_exponent10 = 0;
# 541 "/usr/include/c++/4.8.2/limits" 3
static const int max_exponent = 0;
# 542 "/usr/include/c++/4.8.2/limits" 3
static const int max_exponent10 = 0;
# 544 "/usr/include/c++/4.8.2/limits" 3
static const bool has_infinity = false;
# 545 "/usr/include/c++/4.8.2/limits" 3
static const bool has_quiet_NaN = false;
# 546 "/usr/include/c++/4.8.2/limits" 3
static const bool has_signaling_NaN = false;
# 547 "/usr/include/c++/4.8.2/limits" 3
static const float_denorm_style has_denorm = denorm_absent;
# 549 "/usr/include/c++/4.8.2/limits" 3
static const bool has_denorm_loss = false;
# 552 "/usr/include/c++/4.8.2/limits" 3
static signed char infinity() throw() { return static_cast< signed char>(0); }
# 555 "/usr/include/c++/4.8.2/limits" 3
static signed char quiet_NaN() throw() { return static_cast< signed char>(0); }
# 558 "/usr/include/c++/4.8.2/limits" 3
static signed char signaling_NaN() throw()
# 559 "/usr/include/c++/4.8.2/limits" 3
{ return static_cast< signed char>(0); }
# 562 "/usr/include/c++/4.8.2/limits" 3
static signed char denorm_min() throw()
# 563 "/usr/include/c++/4.8.2/limits" 3
{ return static_cast< signed char>(0); }
# 565 "/usr/include/c++/4.8.2/limits" 3
static const bool is_iec559 = false;
# 566 "/usr/include/c++/4.8.2/limits" 3
static const bool is_bounded = true;
# 567 "/usr/include/c++/4.8.2/limits" 3
static const bool is_modulo = false;
# 569 "/usr/include/c++/4.8.2/limits" 3
static const bool traps = true;
# 570 "/usr/include/c++/4.8.2/limits" 3
static const bool tinyness_before = false;
# 571 "/usr/include/c++/4.8.2/limits" 3
static const float_round_style round_style = round_toward_zero;
# 573 "/usr/include/c++/4.8.2/limits" 3
};
# 577 "/usr/include/c++/4.8.2/limits" 3
template<> struct numeric_limits< unsigned char> {
# 579 "/usr/include/c++/4.8.2/limits" 3
static const bool is_specialized = true;
# 582 "/usr/include/c++/4.8.2/limits" 3
static unsigned char min() throw() { return 0; }
# 585 "/usr/include/c++/4.8.2/limits" 3
static unsigned char max() throw() { return ((127) * 2U) + (1); }
# 592 "/usr/include/c++/4.8.2/limits" 3
static const int digits = ((sizeof(unsigned char) * (8)) - (((unsigned char)(-1)) < 0));
# 594 "/usr/include/c++/4.8.2/limits" 3
static const int digits10 = ((((sizeof(unsigned char) * (8)) - (((unsigned char)(-1)) < 0)) * (643L)) / (2136));
# 599 "/usr/include/c++/4.8.2/limits" 3
static const bool is_signed = false;
# 600 "/usr/include/c++/4.8.2/limits" 3
static const bool is_integer = true;
# 601 "/usr/include/c++/4.8.2/limits" 3
static const bool is_exact = true;
# 602 "/usr/include/c++/4.8.2/limits" 3
static const int radix = 2;
# 605 "/usr/include/c++/4.8.2/limits" 3
static unsigned char epsilon() throw() { return 0; }
# 608 "/usr/include/c++/4.8.2/limits" 3
static unsigned char round_error() throw() { return 0; }
# 610 "/usr/include/c++/4.8.2/limits" 3
static const int min_exponent = 0;
# 611 "/usr/include/c++/4.8.2/limits" 3
static const int min_exponent10 = 0;
# 612 "/usr/include/c++/4.8.2/limits" 3
static const int max_exponent = 0;
# 613 "/usr/include/c++/4.8.2/limits" 3
static const int max_exponent10 = 0;
# 615 "/usr/include/c++/4.8.2/limits" 3
static const bool has_infinity = false;
# 616 "/usr/include/c++/4.8.2/limits" 3
static const bool has_quiet_NaN = false;
# 617 "/usr/include/c++/4.8.2/limits" 3
static const bool has_signaling_NaN = false;
# 618 "/usr/include/c++/4.8.2/limits" 3
static const float_denorm_style has_denorm = denorm_absent;
# 620 "/usr/include/c++/4.8.2/limits" 3
static const bool has_denorm_loss = false;
# 623 "/usr/include/c++/4.8.2/limits" 3
static unsigned char infinity() throw()
# 624 "/usr/include/c++/4.8.2/limits" 3
{ return static_cast< unsigned char>(0); }
# 627 "/usr/include/c++/4.8.2/limits" 3
static unsigned char quiet_NaN() throw()
# 628 "/usr/include/c++/4.8.2/limits" 3
{ return static_cast< unsigned char>(0); }
# 631 "/usr/include/c++/4.8.2/limits" 3
static unsigned char signaling_NaN() throw()
# 632 "/usr/include/c++/4.8.2/limits" 3
{ return static_cast< unsigned char>(0); }
# 635 "/usr/include/c++/4.8.2/limits" 3
static unsigned char denorm_min() throw()
# 636 "/usr/include/c++/4.8.2/limits" 3
{ return static_cast< unsigned char>(0); }
# 638 "/usr/include/c++/4.8.2/limits" 3
static const bool is_iec559 = false;
# 639 "/usr/include/c++/4.8.2/limits" 3
static const bool is_bounded = true;
# 640 "/usr/include/c++/4.8.2/limits" 3
static const bool is_modulo = true;
# 642 "/usr/include/c++/4.8.2/limits" 3
static const bool traps = true;
# 643 "/usr/include/c++/4.8.2/limits" 3
static const bool tinyness_before = false;
# 644 "/usr/include/c++/4.8.2/limits" 3
static const float_round_style round_style = round_toward_zero;
# 646 "/usr/include/c++/4.8.2/limits" 3
};
# 650 "/usr/include/c++/4.8.2/limits" 3
template<> struct numeric_limits< wchar_t> {
# 652 "/usr/include/c++/4.8.2/limits" 3
static const bool is_specialized = true;
# 655 "/usr/include/c++/4.8.2/limits" 3
static wchar_t min() throw() { return (((wchar_t)(-1)) < 0) ? (-((((wchar_t)(-1)) < 0) ? (((((wchar_t)1) << (((sizeof(wchar_t) * (8)) - (((wchar_t)(-1)) < 0)) - (1))) - 1) << 1) + 1 : (~((wchar_t)0)))) - 1 : ((wchar_t)0); }
# 658 "/usr/include/c++/4.8.2/limits" 3
static wchar_t max() throw() { return (((wchar_t)(-1)) < 0) ? (((((wchar_t)1) << (((sizeof(wchar_t) * (8)) - (((wchar_t)(-1)) < 0)) - (1))) - 1) << 1) + 1 : (~((wchar_t)0)); }
# 665 "/usr/include/c++/4.8.2/limits" 3
static const int digits = ((sizeof(wchar_t) * (8)) - (((wchar_t)(-1)) < 0));
# 666 "/usr/include/c++/4.8.2/limits" 3
static const int digits10 = ((((sizeof(wchar_t) * (8)) - (((wchar_t)(-1)) < 0)) * (643L)) / (2136));
# 671 "/usr/include/c++/4.8.2/limits" 3
static const bool is_signed = (((wchar_t)(-1)) < 0);
# 672 "/usr/include/c++/4.8.2/limits" 3
static const bool is_integer = true;
# 673 "/usr/include/c++/4.8.2/limits" 3
static const bool is_exact = true;
# 674 "/usr/include/c++/4.8.2/limits" 3
static const int radix = 2;
# 677 "/usr/include/c++/4.8.2/limits" 3
static wchar_t epsilon() throw() { return 0; }
# 680 "/usr/include/c++/4.8.2/limits" 3
static wchar_t round_error() throw() { return 0; }
# 682 "/usr/include/c++/4.8.2/limits" 3
static const int min_exponent = 0;
# 683 "/usr/include/c++/4.8.2/limits" 3
static const int min_exponent10 = 0;
# 684 "/usr/include/c++/4.8.2/limits" 3
static const int max_exponent = 0;
# 685 "/usr/include/c++/4.8.2/limits" 3
static const int max_exponent10 = 0;
# 687 "/usr/include/c++/4.8.2/limits" 3
static const bool has_infinity = false;
# 688 "/usr/include/c++/4.8.2/limits" 3
static const bool has_quiet_NaN = false;
# 689 "/usr/include/c++/4.8.2/limits" 3
static const bool has_signaling_NaN = false;
# 690 "/usr/include/c++/4.8.2/limits" 3
static const float_denorm_style has_denorm = denorm_absent;
# 692 "/usr/include/c++/4.8.2/limits" 3
static const bool has_denorm_loss = false;
# 695 "/usr/include/c++/4.8.2/limits" 3
static wchar_t infinity() throw() { return ((wchar_t)0); }
# 698 "/usr/include/c++/4.8.2/limits" 3
static wchar_t quiet_NaN() throw() { return ((wchar_t)0); }
# 701 "/usr/include/c++/4.8.2/limits" 3
static wchar_t signaling_NaN() throw() { return ((wchar_t)0); }
# 704 "/usr/include/c++/4.8.2/limits" 3
static wchar_t denorm_min() throw() { return ((wchar_t)0); }
# 706 "/usr/include/c++/4.8.2/limits" 3
static const bool is_iec559 = false;
# 707 "/usr/include/c++/4.8.2/limits" 3
static const bool is_bounded = true;
# 708 "/usr/include/c++/4.8.2/limits" 3
static const bool is_modulo = (!is_signed);
# 710 "/usr/include/c++/4.8.2/limits" 3
static const bool traps = true;
# 711 "/usr/include/c++/4.8.2/limits" 3
static const bool tinyness_before = false;
# 712 "/usr/include/c++/4.8.2/limits" 3
static const float_round_style round_style = round_toward_zero;
# 714 "/usr/include/c++/4.8.2/limits" 3
};
# 842 "/usr/include/c++/4.8.2/limits" 3
template<> struct numeric_limits< short> {
# 844 "/usr/include/c++/4.8.2/limits" 3
static const bool is_specialized = true;
# 847 "/usr/include/c++/4.8.2/limits" 3
static short min() throw() { return (-32767) - 1; }
# 850 "/usr/include/c++/4.8.2/limits" 3
static short max() throw() { return 32767; }
# 857 "/usr/include/c++/4.8.2/limits" 3
static const int digits = ((sizeof(short) * (8)) - (((short)(-1)) < 0));
# 858 "/usr/include/c++/4.8.2/limits" 3
static const int digits10 = ((((sizeof(short) * (8)) - (((short)(-1)) < 0)) * (643L)) / (2136));
# 862 "/usr/include/c++/4.8.2/limits" 3
static const bool is_signed = true;
# 863 "/usr/include/c++/4.8.2/limits" 3
static const bool is_integer = true;
# 864 "/usr/include/c++/4.8.2/limits" 3
static const bool is_exact = true;
# 865 "/usr/include/c++/4.8.2/limits" 3
static const int radix = 2;
# 868 "/usr/include/c++/4.8.2/limits" 3
static short epsilon() throw() { return 0; }
# 871 "/usr/include/c++/4.8.2/limits" 3
static short round_error() throw() { return 0; }
# 873 "/usr/include/c++/4.8.2/limits" 3
static const int min_exponent = 0;
# 874 "/usr/include/c++/4.8.2/limits" 3
static const int min_exponent10 = 0;
# 875 "/usr/include/c++/4.8.2/limits" 3
static const int max_exponent = 0;
# 876 "/usr/include/c++/4.8.2/limits" 3
static const int max_exponent10 = 0;
# 878 "/usr/include/c++/4.8.2/limits" 3
static const bool has_infinity = false;
# 879 "/usr/include/c++/4.8.2/limits" 3
static const bool has_quiet_NaN = false;
# 880 "/usr/include/c++/4.8.2/limits" 3
static const bool has_signaling_NaN = false;
# 881 "/usr/include/c++/4.8.2/limits" 3
static const float_denorm_style has_denorm = denorm_absent;
# 883 "/usr/include/c++/4.8.2/limits" 3
static const bool has_denorm_loss = false;
# 886 "/usr/include/c++/4.8.2/limits" 3
static short infinity() throw() { return ((short)0); }
# 889 "/usr/include/c++/4.8.2/limits" 3
static short quiet_NaN() throw() { return ((short)0); }
# 892 "/usr/include/c++/4.8.2/limits" 3
static short signaling_NaN() throw() { return ((short)0); }
# 895 "/usr/include/c++/4.8.2/limits" 3
static short denorm_min() throw() { return ((short)0); }
# 897 "/usr/include/c++/4.8.2/limits" 3
static const bool is_iec559 = false;
# 898 "/usr/include/c++/4.8.2/limits" 3
static const bool is_bounded = true;
# 899 "/usr/include/c++/4.8.2/limits" 3
static const bool is_modulo = false;
# 901 "/usr/include/c++/4.8.2/limits" 3
static const bool traps = true;
# 902 "/usr/include/c++/4.8.2/limits" 3
static const bool tinyness_before = false;
# 903 "/usr/include/c++/4.8.2/limits" 3
static const float_round_style round_style = round_toward_zero;
# 905 "/usr/include/c++/4.8.2/limits" 3
};
# 909 "/usr/include/c++/4.8.2/limits" 3
template<> struct numeric_limits< unsigned short> {
# 911 "/usr/include/c++/4.8.2/limits" 3
static const bool is_specialized = true;
# 914 "/usr/include/c++/4.8.2/limits" 3
static unsigned short min() throw() { return 0; }
# 917 "/usr/include/c++/4.8.2/limits" 3
static unsigned short max() throw() { return ((32767) * 2U) + (1); }
# 924 "/usr/include/c++/4.8.2/limits" 3
static const int digits = ((sizeof(unsigned short) * (8)) - (((unsigned short)(-1)) < 0));
# 926 "/usr/include/c++/4.8.2/limits" 3
static const int digits10 = ((((sizeof(unsigned short) * (8)) - (((unsigned short)(-1)) < 0)) * (643L)) / (2136));
# 931 "/usr/include/c++/4.8.2/limits" 3
static const bool is_signed = false;
# 932 "/usr/include/c++/4.8.2/limits" 3
static const bool is_integer = true;
# 933 "/usr/include/c++/4.8.2/limits" 3
static const bool is_exact = true;
# 934 "/usr/include/c++/4.8.2/limits" 3
static const int radix = 2;
# 937 "/usr/include/c++/4.8.2/limits" 3
static unsigned short epsilon() throw() { return 0; }
# 940 "/usr/include/c++/4.8.2/limits" 3
static unsigned short round_error() throw() { return 0; }
# 942 "/usr/include/c++/4.8.2/limits" 3
static const int min_exponent = 0;
# 943 "/usr/include/c++/4.8.2/limits" 3
static const int min_exponent10 = 0;
# 944 "/usr/include/c++/4.8.2/limits" 3
static const int max_exponent = 0;
# 945 "/usr/include/c++/4.8.2/limits" 3
static const int max_exponent10 = 0;
# 947 "/usr/include/c++/4.8.2/limits" 3
static const bool has_infinity = false;
# 948 "/usr/include/c++/4.8.2/limits" 3
static const bool has_quiet_NaN = false;
# 949 "/usr/include/c++/4.8.2/limits" 3
static const bool has_signaling_NaN = false;
# 950 "/usr/include/c++/4.8.2/limits" 3
static const float_denorm_style has_denorm = denorm_absent;
# 952 "/usr/include/c++/4.8.2/limits" 3
static const bool has_denorm_loss = false;
# 955 "/usr/include/c++/4.8.2/limits" 3
static unsigned short infinity() throw()
# 956 "/usr/include/c++/4.8.2/limits" 3
{ return static_cast< unsigned short>(0); }
# 959 "/usr/include/c++/4.8.2/limits" 3
static unsigned short quiet_NaN() throw()
# 960 "/usr/include/c++/4.8.2/limits" 3
{ return static_cast< unsigned short>(0); }
# 963 "/usr/include/c++/4.8.2/limits" 3
static unsigned short signaling_NaN() throw()
# 964 "/usr/include/c++/4.8.2/limits" 3
{ return static_cast< unsigned short>(0); }
# 967 "/usr/include/c++/4.8.2/limits" 3
static unsigned short denorm_min() throw()
# 968 "/usr/include/c++/4.8.2/limits" 3
{ return static_cast< unsigned short>(0); }
# 970 "/usr/include/c++/4.8.2/limits" 3
static const bool is_iec559 = false;
# 971 "/usr/include/c++/4.8.2/limits" 3
static const bool is_bounded = true;
# 972 "/usr/include/c++/4.8.2/limits" 3
static const bool is_modulo = true;
# 974 "/usr/include/c++/4.8.2/limits" 3
static const bool traps = true;
# 975 "/usr/include/c++/4.8.2/limits" 3
static const bool tinyness_before = false;
# 976 "/usr/include/c++/4.8.2/limits" 3
static const float_round_style round_style = round_toward_zero;
# 978 "/usr/include/c++/4.8.2/limits" 3
};
# 982 "/usr/include/c++/4.8.2/limits" 3
template<> struct numeric_limits< int> {
# 984 "/usr/include/c++/4.8.2/limits" 3
static const bool is_specialized = true;
# 987 "/usr/include/c++/4.8.2/limits" 3
static int min() throw() { return (-2147483647) - 1; }
# 990 "/usr/include/c++/4.8.2/limits" 3
static int max() throw() { return 2147483647; }
# 997 "/usr/include/c++/4.8.2/limits" 3
static const int digits = ((sizeof(int) * (8)) - (((int)(-1)) < 0));
# 998 "/usr/include/c++/4.8.2/limits" 3
static const int digits10 = ((((sizeof(int) * (8)) - (((int)(-1)) < 0)) * (643L)) / (2136));
# 1002 "/usr/include/c++/4.8.2/limits" 3
static const bool is_signed = true;
# 1003 "/usr/include/c++/4.8.2/limits" 3
static const bool is_integer = true;
# 1004 "/usr/include/c++/4.8.2/limits" 3
static const bool is_exact = true;
# 1005 "/usr/include/c++/4.8.2/limits" 3
static const int radix = 2;
# 1008 "/usr/include/c++/4.8.2/limits" 3
static int epsilon() throw() { return 0; }
# 1011 "/usr/include/c++/4.8.2/limits" 3
static int round_error() throw() { return 0; }
# 1013 "/usr/include/c++/4.8.2/limits" 3
static const int min_exponent = 0;
# 1014 "/usr/include/c++/4.8.2/limits" 3
static const int min_exponent10 = 0;
# 1015 "/usr/include/c++/4.8.2/limits" 3
static const int max_exponent = 0;
# 1016 "/usr/include/c++/4.8.2/limits" 3
static const int max_exponent10 = 0;
# 1018 "/usr/include/c++/4.8.2/limits" 3
static const bool has_infinity = false;
# 1019 "/usr/include/c++/4.8.2/limits" 3
static const bool has_quiet_NaN = false;
# 1020 "/usr/include/c++/4.8.2/limits" 3
static const bool has_signaling_NaN = false;
# 1021 "/usr/include/c++/4.8.2/limits" 3
static const float_denorm_style has_denorm = denorm_absent;
# 1023 "/usr/include/c++/4.8.2/limits" 3
static const bool has_denorm_loss = false;
# 1026 "/usr/include/c++/4.8.2/limits" 3
static int infinity() throw() { return static_cast< int>(0); }
# 1029 "/usr/include/c++/4.8.2/limits" 3
static int quiet_NaN() throw() { return static_cast< int>(0); }
# 1032 "/usr/include/c++/4.8.2/limits" 3
static int signaling_NaN() throw() { return static_cast< int>(0); }
# 1035 "/usr/include/c++/4.8.2/limits" 3
static int denorm_min() throw() { return static_cast< int>(0); }
# 1037 "/usr/include/c++/4.8.2/limits" 3
static const bool is_iec559 = false;
# 1038 "/usr/include/c++/4.8.2/limits" 3
static const bool is_bounded = true;
# 1039 "/usr/include/c++/4.8.2/limits" 3
static const bool is_modulo = false;
# 1041 "/usr/include/c++/4.8.2/limits" 3
static const bool traps = true;
# 1042 "/usr/include/c++/4.8.2/limits" 3
static const bool tinyness_before = false;
# 1043 "/usr/include/c++/4.8.2/limits" 3
static const float_round_style round_style = round_toward_zero;
# 1045 "/usr/include/c++/4.8.2/limits" 3
};
# 1049 "/usr/include/c++/4.8.2/limits" 3
template<> struct numeric_limits< unsigned> {
# 1051 "/usr/include/c++/4.8.2/limits" 3
static const bool is_specialized = true;
# 1054 "/usr/include/c++/4.8.2/limits" 3
static unsigned min() throw() { return 0; }
# 1057 "/usr/include/c++/4.8.2/limits" 3
static unsigned max() throw() { return ((2147483647) * 2U) + (1); }
# 1064 "/usr/include/c++/4.8.2/limits" 3
static const int digits = ((sizeof(unsigned) * (8)) - (((unsigned)(-1)) < (0)));
# 1066 "/usr/include/c++/4.8.2/limits" 3
static const int digits10 = ((((sizeof(unsigned) * (8)) - (((unsigned)(-1)) < (0))) * (643L)) / (2136));
# 1071 "/usr/include/c++/4.8.2/limits" 3
static const bool is_signed = false;
# 1072 "/usr/include/c++/4.8.2/limits" 3
static const bool is_integer = true;
# 1073 "/usr/include/c++/4.8.2/limits" 3
static const bool is_exact = true;
# 1074 "/usr/include/c++/4.8.2/limits" 3
static const int radix = 2;
# 1077 "/usr/include/c++/4.8.2/limits" 3
static unsigned epsilon() throw() { return 0; }
# 1080 "/usr/include/c++/4.8.2/limits" 3
static unsigned round_error() throw() { return 0; }
# 1082 "/usr/include/c++/4.8.2/limits" 3
static const int min_exponent = 0;
# 1083 "/usr/include/c++/4.8.2/limits" 3
static const int min_exponent10 = 0;
# 1084 "/usr/include/c++/4.8.2/limits" 3
static const int max_exponent = 0;
# 1085 "/usr/include/c++/4.8.2/limits" 3
static const int max_exponent10 = 0;
# 1087 "/usr/include/c++/4.8.2/limits" 3
static const bool has_infinity = false;
# 1088 "/usr/include/c++/4.8.2/limits" 3
static const bool has_quiet_NaN = false;
# 1089 "/usr/include/c++/4.8.2/limits" 3
static const bool has_signaling_NaN = false;
# 1090 "/usr/include/c++/4.8.2/limits" 3
static const float_denorm_style has_denorm = denorm_absent;
# 1092 "/usr/include/c++/4.8.2/limits" 3
static const bool has_denorm_loss = false;
# 1095 "/usr/include/c++/4.8.2/limits" 3
static unsigned infinity() throw() { return static_cast< unsigned>(0); }
# 1098 "/usr/include/c++/4.8.2/limits" 3
static unsigned quiet_NaN() throw()
# 1099 "/usr/include/c++/4.8.2/limits" 3
{ return static_cast< unsigned>(0); }
# 1102 "/usr/include/c++/4.8.2/limits" 3
static unsigned signaling_NaN() throw()
# 1103 "/usr/include/c++/4.8.2/limits" 3
{ return static_cast< unsigned>(0); }
# 1106 "/usr/include/c++/4.8.2/limits" 3
static unsigned denorm_min() throw()
# 1107 "/usr/include/c++/4.8.2/limits" 3
{ return static_cast< unsigned>(0); }
# 1109 "/usr/include/c++/4.8.2/limits" 3
static const bool is_iec559 = false;
# 1110 "/usr/include/c++/4.8.2/limits" 3
static const bool is_bounded = true;
# 1111 "/usr/include/c++/4.8.2/limits" 3
static const bool is_modulo = true;
# 1113 "/usr/include/c++/4.8.2/limits" 3
static const bool traps = true;
# 1114 "/usr/include/c++/4.8.2/limits" 3
static const bool tinyness_before = false;
# 1115 "/usr/include/c++/4.8.2/limits" 3
static const float_round_style round_style = round_toward_zero;
# 1117 "/usr/include/c++/4.8.2/limits" 3
};
# 1121 "/usr/include/c++/4.8.2/limits" 3
template<> struct numeric_limits< long> {
# 1123 "/usr/include/c++/4.8.2/limits" 3
static const bool is_specialized = true;
# 1126 "/usr/include/c++/4.8.2/limits" 3
static long min() throw() { return (-9223372036854775807L) - (1); }
# 1129 "/usr/include/c++/4.8.2/limits" 3
static long max() throw() { return 9223372036854775807L; }
# 1136 "/usr/include/c++/4.8.2/limits" 3
static const int digits = ((sizeof(long) * (8)) - (((long)(-1)) < (0)));
# 1137 "/usr/include/c++/4.8.2/limits" 3
static const int digits10 = ((((sizeof(long) * (8)) - (((long)(-1)) < (0))) * (643L)) / (2136));
# 1141 "/usr/include/c++/4.8.2/limits" 3
static const bool is_signed = true;
# 1142 "/usr/include/c++/4.8.2/limits" 3
static const bool is_integer = true;
# 1143 "/usr/include/c++/4.8.2/limits" 3
static const bool is_exact = true;
# 1144 "/usr/include/c++/4.8.2/limits" 3
static const int radix = 2;
# 1147 "/usr/include/c++/4.8.2/limits" 3
static long epsilon() throw() { return 0; }
# 1150 "/usr/include/c++/4.8.2/limits" 3
static long round_error() throw() { return 0; }
# 1152 "/usr/include/c++/4.8.2/limits" 3
static const int min_exponent = 0;
# 1153 "/usr/include/c++/4.8.2/limits" 3
static const int min_exponent10 = 0;
# 1154 "/usr/include/c++/4.8.2/limits" 3
static const int max_exponent = 0;
# 1155 "/usr/include/c++/4.8.2/limits" 3
static const int max_exponent10 = 0;
# 1157 "/usr/include/c++/4.8.2/limits" 3
static const bool has_infinity = false;
# 1158 "/usr/include/c++/4.8.2/limits" 3
static const bool has_quiet_NaN = false;
# 1159 "/usr/include/c++/4.8.2/limits" 3
static const bool has_signaling_NaN = false;
# 1160 "/usr/include/c++/4.8.2/limits" 3
static const float_denorm_style has_denorm = denorm_absent;
# 1162 "/usr/include/c++/4.8.2/limits" 3
static const bool has_denorm_loss = false;
# 1165 "/usr/include/c++/4.8.2/limits" 3
static long infinity() throw() { return static_cast< long>(0); }
# 1168 "/usr/include/c++/4.8.2/limits" 3
static long quiet_NaN() throw() { return static_cast< long>(0); }
# 1171 "/usr/include/c++/4.8.2/limits" 3
static long signaling_NaN() throw() { return static_cast< long>(0); }
# 1174 "/usr/include/c++/4.8.2/limits" 3
static long denorm_min() throw() { return static_cast< long>(0); }
# 1176 "/usr/include/c++/4.8.2/limits" 3
static const bool is_iec559 = false;
# 1177 "/usr/include/c++/4.8.2/limits" 3
static const bool is_bounded = true;
# 1178 "/usr/include/c++/4.8.2/limits" 3
static const bool is_modulo = false;
# 1180 "/usr/include/c++/4.8.2/limits" 3
static const bool traps = true;
# 1181 "/usr/include/c++/4.8.2/limits" 3
static const bool tinyness_before = false;
# 1182 "/usr/include/c++/4.8.2/limits" 3
static const float_round_style round_style = round_toward_zero;
# 1184 "/usr/include/c++/4.8.2/limits" 3
};
# 1188 "/usr/include/c++/4.8.2/limits" 3
template<> struct numeric_limits< unsigned long> {
# 1190 "/usr/include/c++/4.8.2/limits" 3
static const bool is_specialized = true;
# 1193 "/usr/include/c++/4.8.2/limits" 3
static unsigned long min() throw() { return 0; }
# 1196 "/usr/include/c++/4.8.2/limits" 3
static unsigned long max() throw() { return ((9223372036854775807L) * 2UL) + (1); }
# 1203 "/usr/include/c++/4.8.2/limits" 3
static const int digits = ((sizeof(unsigned long) * (8)) - (((unsigned long)(-1)) < (0)));
# 1205 "/usr/include/c++/4.8.2/limits" 3
static const int digits10 = ((((sizeof(unsigned long) * (8)) - (((unsigned long)(-1)) < (0))) * (643L)) / (2136));
# 1210 "/usr/include/c++/4.8.2/limits" 3
static const bool is_signed = false;
# 1211 "/usr/include/c++/4.8.2/limits" 3
static const bool is_integer = true;
# 1212 "/usr/include/c++/4.8.2/limits" 3
static const bool is_exact = true;
# 1213 "/usr/include/c++/4.8.2/limits" 3
static const int radix = 2;
# 1216 "/usr/include/c++/4.8.2/limits" 3
static unsigned long epsilon() throw() { return 0; }
# 1219 "/usr/include/c++/4.8.2/limits" 3
static unsigned long round_error() throw() { return 0; }
# 1221 "/usr/include/c++/4.8.2/limits" 3
static const int min_exponent = 0;
# 1222 "/usr/include/c++/4.8.2/limits" 3
static const int min_exponent10 = 0;
# 1223 "/usr/include/c++/4.8.2/limits" 3
static const int max_exponent = 0;
# 1224 "/usr/include/c++/4.8.2/limits" 3
static const int max_exponent10 = 0;
# 1226 "/usr/include/c++/4.8.2/limits" 3
static const bool has_infinity = false;
# 1227 "/usr/include/c++/4.8.2/limits" 3
static const bool has_quiet_NaN = false;
# 1228 "/usr/include/c++/4.8.2/limits" 3
static const bool has_signaling_NaN = false;
# 1229 "/usr/include/c++/4.8.2/limits" 3
static const float_denorm_style has_denorm = denorm_absent;
# 1231 "/usr/include/c++/4.8.2/limits" 3
static const bool has_denorm_loss = false;
# 1234 "/usr/include/c++/4.8.2/limits" 3
static unsigned long infinity() throw()
# 1235 "/usr/include/c++/4.8.2/limits" 3
{ return static_cast< unsigned long>(0); }
# 1238 "/usr/include/c++/4.8.2/limits" 3
static unsigned long quiet_NaN() throw()
# 1239 "/usr/include/c++/4.8.2/limits" 3
{ return static_cast< unsigned long>(0); }
# 1242 "/usr/include/c++/4.8.2/limits" 3
static unsigned long signaling_NaN() throw()
# 1243 "/usr/include/c++/4.8.2/limits" 3
{ return static_cast< unsigned long>(0); }
# 1246 "/usr/include/c++/4.8.2/limits" 3
static unsigned long denorm_min() throw()
# 1247 "/usr/include/c++/4.8.2/limits" 3
{ return static_cast< unsigned long>(0); }
# 1249 "/usr/include/c++/4.8.2/limits" 3
static const bool is_iec559 = false;
# 1250 "/usr/include/c++/4.8.2/limits" 3
static const bool is_bounded = true;
# 1251 "/usr/include/c++/4.8.2/limits" 3
static const bool is_modulo = true;
# 1253 "/usr/include/c++/4.8.2/limits" 3
static const bool traps = true;
# 1254 "/usr/include/c++/4.8.2/limits" 3
static const bool tinyness_before = false;
# 1255 "/usr/include/c++/4.8.2/limits" 3
static const float_round_style round_style = round_toward_zero;
# 1257 "/usr/include/c++/4.8.2/limits" 3
};
# 1261 "/usr/include/c++/4.8.2/limits" 3
template<> struct numeric_limits< long long> {
# 1263 "/usr/include/c++/4.8.2/limits" 3
static const bool is_specialized = true;
# 1266 "/usr/include/c++/4.8.2/limits" 3
static long long min() throw() { return (-9223372036854775807LL) - (1); }
# 1269 "/usr/include/c++/4.8.2/limits" 3
static long long max() throw() { return 9223372036854775807LL; }
# 1276 "/usr/include/c++/4.8.2/limits" 3
static const int digits = ((sizeof(long long) * (8)) - (((long long)(-1)) < (0)));
# 1278 "/usr/include/c++/4.8.2/limits" 3
static const int digits10 = ((((sizeof(long long) * (8)) - (((long long)(-1)) < (0))) * (643L)) / (2136));
# 1283 "/usr/include/c++/4.8.2/limits" 3
static const bool is_signed = true;
# 1284 "/usr/include/c++/4.8.2/limits" 3
static const bool is_integer = true;
# 1285 "/usr/include/c++/4.8.2/limits" 3
static const bool is_exact = true;
# 1286 "/usr/include/c++/4.8.2/limits" 3
static const int radix = 2;
# 1289 "/usr/include/c++/4.8.2/limits" 3
static long long epsilon() throw() { return 0; }
# 1292 "/usr/include/c++/4.8.2/limits" 3
static long long round_error() throw() { return 0; }
# 1294 "/usr/include/c++/4.8.2/limits" 3
static const int min_exponent = 0;
# 1295 "/usr/include/c++/4.8.2/limits" 3
static const int min_exponent10 = 0;
# 1296 "/usr/include/c++/4.8.2/limits" 3
static const int max_exponent = 0;
# 1297 "/usr/include/c++/4.8.2/limits" 3
static const int max_exponent10 = 0;
# 1299 "/usr/include/c++/4.8.2/limits" 3
static const bool has_infinity = false;
# 1300 "/usr/include/c++/4.8.2/limits" 3
static const bool has_quiet_NaN = false;
# 1301 "/usr/include/c++/4.8.2/limits" 3
static const bool has_signaling_NaN = false;
# 1302 "/usr/include/c++/4.8.2/limits" 3
static const float_denorm_style has_denorm = denorm_absent;
# 1304 "/usr/include/c++/4.8.2/limits" 3
static const bool has_denorm_loss = false;
# 1307 "/usr/include/c++/4.8.2/limits" 3
static long long infinity() throw() { return static_cast< long long>(0); }
# 1310 "/usr/include/c++/4.8.2/limits" 3
static long long quiet_NaN() throw() { return static_cast< long long>(0); }
# 1313 "/usr/include/c++/4.8.2/limits" 3
static long long signaling_NaN() throw()
# 1314 "/usr/include/c++/4.8.2/limits" 3
{ return static_cast< long long>(0); }
# 1317 "/usr/include/c++/4.8.2/limits" 3
static long long denorm_min() throw() { return static_cast< long long>(0); }
# 1319 "/usr/include/c++/4.8.2/limits" 3
static const bool is_iec559 = false;
# 1320 "/usr/include/c++/4.8.2/limits" 3
static const bool is_bounded = true;
# 1321 "/usr/include/c++/4.8.2/limits" 3
static const bool is_modulo = false;
# 1323 "/usr/include/c++/4.8.2/limits" 3
static const bool traps = true;
# 1324 "/usr/include/c++/4.8.2/limits" 3
static const bool tinyness_before = false;
# 1325 "/usr/include/c++/4.8.2/limits" 3
static const float_round_style round_style = round_toward_zero;
# 1327 "/usr/include/c++/4.8.2/limits" 3
};
# 1331 "/usr/include/c++/4.8.2/limits" 3
template<> struct numeric_limits< unsigned long long> {
# 1333 "/usr/include/c++/4.8.2/limits" 3
static const bool is_specialized = true;
# 1336 "/usr/include/c++/4.8.2/limits" 3
static unsigned long long min() throw() { return 0; }
# 1339 "/usr/include/c++/4.8.2/limits" 3
static unsigned long long max() throw() { return ((9223372036854775807LL) * 2ULL) + (1); }
# 1346 "/usr/include/c++/4.8.2/limits" 3
static const int digits = ((sizeof(unsigned long long) * (8)) - (((unsigned long long)(-1)) < (0)));
# 1348 "/usr/include/c++/4.8.2/limits" 3
static const int digits10 = ((((sizeof(unsigned long long) * (8)) - (((unsigned long long)(-1)) < (0))) * (643L)) / (2136));
# 1353 "/usr/include/c++/4.8.2/limits" 3
static const bool is_signed = false;
# 1354 "/usr/include/c++/4.8.2/limits" 3
static const bool is_integer = true;
# 1355 "/usr/include/c++/4.8.2/limits" 3
static const bool is_exact = true;
# 1356 "/usr/include/c++/4.8.2/limits" 3
static const int radix = 2;
# 1359 "/usr/include/c++/4.8.2/limits" 3
static unsigned long long epsilon() throw() { return 0; }
# 1362 "/usr/include/c++/4.8.2/limits" 3
static unsigned long long round_error() throw() { return 0; }
# 1364 "/usr/include/c++/4.8.2/limits" 3
static const int min_exponent = 0;
# 1365 "/usr/include/c++/4.8.2/limits" 3
static const int min_exponent10 = 0;
# 1366 "/usr/include/c++/4.8.2/limits" 3
static const int max_exponent = 0;
# 1367 "/usr/include/c++/4.8.2/limits" 3
static const int max_exponent10 = 0;
# 1369 "/usr/include/c++/4.8.2/limits" 3
static const bool has_infinity = false;
# 1370 "/usr/include/c++/4.8.2/limits" 3
static const bool has_quiet_NaN = false;
# 1371 "/usr/include/c++/4.8.2/limits" 3
static const bool has_signaling_NaN = false;
# 1372 "/usr/include/c++/4.8.2/limits" 3
static const float_denorm_style has_denorm = denorm_absent;
# 1374 "/usr/include/c++/4.8.2/limits" 3
static const bool has_denorm_loss = false;
# 1377 "/usr/include/c++/4.8.2/limits" 3
static unsigned long long infinity() throw()
# 1378 "/usr/include/c++/4.8.2/limits" 3
{ return static_cast< unsigned long long>(0); }
# 1381 "/usr/include/c++/4.8.2/limits" 3
static unsigned long long quiet_NaN() throw()
# 1382 "/usr/include/c++/4.8.2/limits" 3
{ return static_cast< unsigned long long>(0); }
# 1385 "/usr/include/c++/4.8.2/limits" 3
static unsigned long long signaling_NaN() throw()
# 1386 "/usr/include/c++/4.8.2/limits" 3
{ return static_cast< unsigned long long>(0); }
# 1389 "/usr/include/c++/4.8.2/limits" 3
static unsigned long long denorm_min() throw()
# 1390 "/usr/include/c++/4.8.2/limits" 3
{ return static_cast< unsigned long long>(0); }
# 1392 "/usr/include/c++/4.8.2/limits" 3
static const bool is_iec559 = false;
# 1393 "/usr/include/c++/4.8.2/limits" 3
static const bool is_bounded = true;
# 1394 "/usr/include/c++/4.8.2/limits" 3
static const bool is_modulo = true;
# 1396 "/usr/include/c++/4.8.2/limits" 3
static const bool traps = true;
# 1397 "/usr/include/c++/4.8.2/limits" 3
static const bool tinyness_before = false;
# 1398 "/usr/include/c++/4.8.2/limits" 3
static const float_round_style round_style = round_toward_zero;
# 1400 "/usr/include/c++/4.8.2/limits" 3
};
# 1405 "/usr/include/c++/4.8.2/limits" 3
template<> struct numeric_limits< __int128_t> {
# 1407 "/usr/include/c++/4.8.2/limits" 3
static const bool is_specialized = true;
# 1410 "/usr/include/c++/4.8.2/limits" 3
static __int128_t min() throw() { return (((__int128_t)(-1)) < (0)) ? (-((((__int128_t)(-1)) < (0)) ? (((((__int128_t)1) << (((sizeof(__int128_t) * (8)) - (((__int128_t)(-1)) < (0))) - (1))) - (1)) << 1) + (1) : (~((__int128_t)0)))) - (1) : ((__int128_t)0); }
# 1413 "/usr/include/c++/4.8.2/limits" 3
static __int128_t max() throw() { return (((__int128_t)(-1)) < (0)) ? (((((__int128_t)1) << (((sizeof(__int128_t) * (8)) - (((__int128_t)(-1)) < (0))) - (1))) - (1)) << 1) + (1) : (~((__int128_t)0)); }
# 1420 "/usr/include/c++/4.8.2/limits" 3
static const int digits = ((sizeof(__int128_t) * (8)) - (((__int128_t)(-1)) < (0)));
# 1422 "/usr/include/c++/4.8.2/limits" 3
static const int digits10 = ((((sizeof(__int128_t) * (8)) - (((__int128_t)(-1)) < (0))) * (643L)) / (2136));
# 1427 "/usr/include/c++/4.8.2/limits" 3
static const bool is_signed = true;
# 1428 "/usr/include/c++/4.8.2/limits" 3
static const bool is_integer = true;
# 1429 "/usr/include/c++/4.8.2/limits" 3
static const bool is_exact = true;
# 1430 "/usr/include/c++/4.8.2/limits" 3
static const int radix = 2;
# 1433 "/usr/include/c++/4.8.2/limits" 3
static __int128_t epsilon() throw() { return 0; }
# 1436 "/usr/include/c++/4.8.2/limits" 3
static __int128_t round_error() throw() { return 0; }
# 1438 "/usr/include/c++/4.8.2/limits" 3
static const int min_exponent = 0;
# 1439 "/usr/include/c++/4.8.2/limits" 3
static const int min_exponent10 = 0;
# 1440 "/usr/include/c++/4.8.2/limits" 3
static const int max_exponent = 0;
# 1441 "/usr/include/c++/4.8.2/limits" 3
static const int max_exponent10 = 0;
# 1443 "/usr/include/c++/4.8.2/limits" 3
static const bool has_infinity = false;
# 1444 "/usr/include/c++/4.8.2/limits" 3
static const bool has_quiet_NaN = false;
# 1445 "/usr/include/c++/4.8.2/limits" 3
static const bool has_signaling_NaN = false;
# 1446 "/usr/include/c++/4.8.2/limits" 3
static const float_denorm_style has_denorm = denorm_absent;
# 1448 "/usr/include/c++/4.8.2/limits" 3
static const bool has_denorm_loss = false;
# 1451 "/usr/include/c++/4.8.2/limits" 3
static __int128_t infinity() throw()
# 1452 "/usr/include/c++/4.8.2/limits" 3
{ return static_cast< __int128_t>(0); }
# 1455 "/usr/include/c++/4.8.2/limits" 3
static __int128_t quiet_NaN() throw()
# 1456 "/usr/include/c++/4.8.2/limits" 3
{ return static_cast< __int128_t>(0); }
# 1459 "/usr/include/c++/4.8.2/limits" 3
static __int128_t signaling_NaN() throw()
# 1460 "/usr/include/c++/4.8.2/limits" 3
{ return static_cast< __int128_t>(0); }
# 1463 "/usr/include/c++/4.8.2/limits" 3
static __int128_t denorm_min() throw()
# 1464 "/usr/include/c++/4.8.2/limits" 3
{ return static_cast< __int128_t>(0); }
# 1466 "/usr/include/c++/4.8.2/limits" 3
static const bool is_iec559 = false;
# 1467 "/usr/include/c++/4.8.2/limits" 3
static const bool is_bounded = true;
# 1468 "/usr/include/c++/4.8.2/limits" 3
static const bool is_modulo = false;
# 1470 "/usr/include/c++/4.8.2/limits" 3
static const bool traps = true;
# 1472 "/usr/include/c++/4.8.2/limits" 3
static const bool tinyness_before = false;
# 1473 "/usr/include/c++/4.8.2/limits" 3
static const float_round_style round_style = round_toward_zero;
# 1475 "/usr/include/c++/4.8.2/limits" 3
};
# 1479 "/usr/include/c++/4.8.2/limits" 3
template<> struct numeric_limits< __uint128_t> {
# 1481 "/usr/include/c++/4.8.2/limits" 3
static const bool is_specialized = true;
# 1484 "/usr/include/c++/4.8.2/limits" 3
static __uint128_t min() throw() { return 0; }
# 1487 "/usr/include/c++/4.8.2/limits" 3
static __uint128_t max() throw() { return (((__uint128_t)(-1)) < (0)) ? (((((__uint128_t)1) << (((sizeof(__uint128_t) * (8)) - (((__uint128_t)(-1)) < (0))) - (1))) - (1)) << 1) + (1) : (~((__uint128_t)0)); }
# 1494 "/usr/include/c++/4.8.2/limits" 3
static const int digits = ((sizeof(__uint128_t) * (8)) - (((__uint128_t)(-1)) < (0)));
# 1496 "/usr/include/c++/4.8.2/limits" 3
static const int digits10 = ((((sizeof(__uint128_t) * (8)) - (((__uint128_t)(-1)) < (0))) * (643L)) / (2136));
# 1501 "/usr/include/c++/4.8.2/limits" 3
static const bool is_signed = false;
# 1502 "/usr/include/c++/4.8.2/limits" 3
static const bool is_integer = true;
# 1503 "/usr/include/c++/4.8.2/limits" 3
static const bool is_exact = true;
# 1504 "/usr/include/c++/4.8.2/limits" 3
static const int radix = 2;
# 1507 "/usr/include/c++/4.8.2/limits" 3
static __uint128_t epsilon() throw() { return 0; }
# 1510 "/usr/include/c++/4.8.2/limits" 3
static __uint128_t round_error() throw() { return 0; }
# 1512 "/usr/include/c++/4.8.2/limits" 3
static const int min_exponent = 0;
# 1513 "/usr/include/c++/4.8.2/limits" 3
static const int min_exponent10 = 0;
# 1514 "/usr/include/c++/4.8.2/limits" 3
static const int max_exponent = 0;
# 1515 "/usr/include/c++/4.8.2/limits" 3
static const int max_exponent10 = 0;
# 1517 "/usr/include/c++/4.8.2/limits" 3
static const bool has_infinity = false;
# 1518 "/usr/include/c++/4.8.2/limits" 3
static const bool has_quiet_NaN = false;
# 1519 "/usr/include/c++/4.8.2/limits" 3
static const bool has_signaling_NaN = false;
# 1520 "/usr/include/c++/4.8.2/limits" 3
static const float_denorm_style has_denorm = denorm_absent;
# 1522 "/usr/include/c++/4.8.2/limits" 3
static const bool has_denorm_loss = false;
# 1525 "/usr/include/c++/4.8.2/limits" 3
static __uint128_t infinity() throw()
# 1526 "/usr/include/c++/4.8.2/limits" 3
{ return static_cast< __uint128_t>(0); }
# 1529 "/usr/include/c++/4.8.2/limits" 3
static __uint128_t quiet_NaN() throw()
# 1530 "/usr/include/c++/4.8.2/limits" 3
{ return static_cast< __uint128_t>(0); }
# 1533 "/usr/include/c++/4.8.2/limits" 3
static __uint128_t signaling_NaN() throw()
# 1534 "/usr/include/c++/4.8.2/limits" 3
{ return static_cast< __uint128_t>(0); }
# 1537 "/usr/include/c++/4.8.2/limits" 3
static __uint128_t denorm_min() throw()
# 1538 "/usr/include/c++/4.8.2/limits" 3
{ return static_cast< __uint128_t>(0); }
# 1540 "/usr/include/c++/4.8.2/limits" 3
static const bool is_iec559 = false;
# 1541 "/usr/include/c++/4.8.2/limits" 3
static const bool is_bounded = true;
# 1542 "/usr/include/c++/4.8.2/limits" 3
static const bool is_modulo = true;
# 1544 "/usr/include/c++/4.8.2/limits" 3
static const bool traps = true;
# 1545 "/usr/include/c++/4.8.2/limits" 3
static const bool tinyness_before = false;
# 1546 "/usr/include/c++/4.8.2/limits" 3
static const float_round_style round_style = round_toward_zero;
# 1548 "/usr/include/c++/4.8.2/limits" 3
};
# 1553 "/usr/include/c++/4.8.2/limits" 3
template<> struct numeric_limits< float> {
# 1555 "/usr/include/c++/4.8.2/limits" 3
static const bool is_specialized = true;
# 1558 "/usr/include/c++/4.8.2/limits" 3
static float min() throw() { return (1.175494351e-38F); }
# 1561 "/usr/include/c++/4.8.2/limits" 3
static float max() throw() { return (3.402823466e+38F); }
# 1568 "/usr/include/c++/4.8.2/limits" 3
static const int digits = 24;
# 1569 "/usr/include/c++/4.8.2/limits" 3
static const int digits10 = 6;
# 1574 "/usr/include/c++/4.8.2/limits" 3
static const bool is_signed = true;
# 1575 "/usr/include/c++/4.8.2/limits" 3
static const bool is_integer = false;
# 1576 "/usr/include/c++/4.8.2/limits" 3
static const bool is_exact = false;
# 1577 "/usr/include/c++/4.8.2/limits" 3
static const int radix = 2;
# 1580 "/usr/include/c++/4.8.2/limits" 3
static float epsilon() throw() { return (1.192092896e-07F); }
# 1583 "/usr/include/c++/4.8.2/limits" 3
static float round_error() throw() { return (0.5F); }
# 1585 "/usr/include/c++/4.8.2/limits" 3
static const int min_exponent = (-125);
# 1586 "/usr/include/c++/4.8.2/limits" 3
static const int min_exponent10 = (-37);
# 1587 "/usr/include/c++/4.8.2/limits" 3
static const int max_exponent = 128;
# 1588 "/usr/include/c++/4.8.2/limits" 3
static const int max_exponent10 = 38;
# 1590 "/usr/include/c++/4.8.2/limits" 3
static const bool has_infinity = (1);
# 1591 "/usr/include/c++/4.8.2/limits" 3
static const bool has_quiet_NaN = (1);
# 1592 "/usr/include/c++/4.8.2/limits" 3
static const bool has_signaling_NaN = has_quiet_NaN;
# 1593 "/usr/include/c++/4.8.2/limits" 3
static const float_denorm_style has_denorm = (((bool)1) ? denorm_present : denorm_absent);
# 1595 "/usr/include/c++/4.8.2/limits" 3
static const bool has_denorm_loss = false;
# 1599 "/usr/include/c++/4.8.2/limits" 3
static float infinity() throw() { return __builtin_huge_valf(); }
# 1602 "/usr/include/c++/4.8.2/limits" 3
static float quiet_NaN() throw() { return __builtin_nanf(""); }
# 1605 "/usr/include/c++/4.8.2/limits" 3
static float signaling_NaN() throw() { return __builtin_nansf(""); }
# 1608 "/usr/include/c++/4.8.2/limits" 3
static float denorm_min() throw() { return (1.401298464e-45F); }
# 1610 "/usr/include/c++/4.8.2/limits" 3
static const bool is_iec559 = (has_infinity && has_quiet_NaN && (has_denorm == (denorm_present)));
# 1612 "/usr/include/c++/4.8.2/limits" 3
static const bool is_bounded = true;
# 1613 "/usr/include/c++/4.8.2/limits" 3
static const bool is_modulo = false;
# 1615 "/usr/include/c++/4.8.2/limits" 3
static const bool traps = false;
# 1616 "/usr/include/c++/4.8.2/limits" 3
static const bool tinyness_before = false;
# 1618 "/usr/include/c++/4.8.2/limits" 3
static const float_round_style round_style = round_to_nearest;
# 1620 "/usr/include/c++/4.8.2/limits" 3
};
# 1628 "/usr/include/c++/4.8.2/limits" 3
template<> struct numeric_limits< double> {
# 1630 "/usr/include/c++/4.8.2/limits" 3
static const bool is_specialized = true;
# 1633 "/usr/include/c++/4.8.2/limits" 3
static double min() throw() { return (double)(2.2250738585072013831e-308L); }
# 1636 "/usr/include/c++/4.8.2/limits" 3
static double max() throw() { return (double)(1.7976931348623157081e+308L); }
# 1643 "/usr/include/c++/4.8.2/limits" 3
static const int digits = 53;
# 1644 "/usr/include/c++/4.8.2/limits" 3
static const int digits10 = 15;
# 1649 "/usr/include/c++/4.8.2/limits" 3
static const bool is_signed = true;
# 1650 "/usr/include/c++/4.8.2/limits" 3
static const bool is_integer = false;
# 1651 "/usr/include/c++/4.8.2/limits" 3
static const bool is_exact = false;
# 1652 "/usr/include/c++/4.8.2/limits" 3
static const int radix = 2;
# 1655 "/usr/include/c++/4.8.2/limits" 3
static double epsilon() throw() { return (double)(2.2204460492503130808e-16L); }
# 1658 "/usr/include/c++/4.8.2/limits" 3
static double round_error() throw() { return (0.5); }
# 1660 "/usr/include/c++/4.8.2/limits" 3
static const int min_exponent = (-1021);
# 1661 "/usr/include/c++/4.8.2/limits" 3
static const int min_exponent10 = (-307);
# 1662 "/usr/include/c++/4.8.2/limits" 3
static const int max_exponent = 1024;
# 1663 "/usr/include/c++/4.8.2/limits" 3
static const int max_exponent10 = 308;
# 1665 "/usr/include/c++/4.8.2/limits" 3
static const bool has_infinity = (1);
# 1666 "/usr/include/c++/4.8.2/limits" 3
static const bool has_quiet_NaN = (1);
# 1667 "/usr/include/c++/4.8.2/limits" 3
static const bool has_signaling_NaN = has_quiet_NaN;
# 1668 "/usr/include/c++/4.8.2/limits" 3
static const float_denorm_style has_denorm = (((bool)1) ? denorm_present : denorm_absent);
# 1670 "/usr/include/c++/4.8.2/limits" 3
static const bool has_denorm_loss = false;
# 1674 "/usr/include/c++/4.8.2/limits" 3
static double infinity() throw() { return __builtin_huge_val(); }
# 1677 "/usr/include/c++/4.8.2/limits" 3
static double quiet_NaN() throw() { return __builtin_nan(""); }
# 1680 "/usr/include/c++/4.8.2/limits" 3
static double signaling_NaN() throw() { return __builtin_nans(""); }
# 1683 "/usr/include/c++/4.8.2/limits" 3
static double denorm_min() throw() { return (double)(4.9406564584124654418e-324L); }
# 1685 "/usr/include/c++/4.8.2/limits" 3
static const bool is_iec559 = (has_infinity && has_quiet_NaN && (has_denorm == (denorm_present)));
# 1687 "/usr/include/c++/4.8.2/limits" 3
static const bool is_bounded = true;
# 1688 "/usr/include/c++/4.8.2/limits" 3
static const bool is_modulo = false;
# 1690 "/usr/include/c++/4.8.2/limits" 3
static const bool traps = false;
# 1691 "/usr/include/c++/4.8.2/limits" 3
static const bool tinyness_before = false;
# 1693 "/usr/include/c++/4.8.2/limits" 3
static const float_round_style round_style = round_to_nearest;
# 1695 "/usr/include/c++/4.8.2/limits" 3
};
# 1703 "/usr/include/c++/4.8.2/limits" 3
template<> struct numeric_limits< long double> {
# 1705 "/usr/include/c++/4.8.2/limits" 3
static const bool is_specialized = true;
# 1708 "/usr/include/c++/4.8.2/limits" 3
static long double min() throw() { return (3.3621031431120935063e-4932L); }
# 1711 "/usr/include/c++/4.8.2/limits" 3
static long double max() throw() { return (1.189731495357231765e+4932L); }
# 1718 "/usr/include/c++/4.8.2/limits" 3
static const int digits = 64;
# 1719 "/usr/include/c++/4.8.2/limits" 3
static const int digits10 = 18;
# 1724 "/usr/include/c++/4.8.2/limits" 3
static const bool is_signed = true;
# 1725 "/usr/include/c++/4.8.2/limits" 3
static const bool is_integer = false;
# 1726 "/usr/include/c++/4.8.2/limits" 3
static const bool is_exact = false;
# 1727 "/usr/include/c++/4.8.2/limits" 3
static const int radix = 2;
# 1730 "/usr/include/c++/4.8.2/limits" 3
static long double epsilon() throw() { return (1.084202172485504434e-19L); }
# 1733 "/usr/include/c++/4.8.2/limits" 3
static long double round_error() throw() { return (0.5L); }
# 1735 "/usr/include/c++/4.8.2/limits" 3
static const int min_exponent = (-16381);
# 1736 "/usr/include/c++/4.8.2/limits" 3
static const int min_exponent10 = (-4931);
# 1737 "/usr/include/c++/4.8.2/limits" 3
static const int max_exponent = 16384;
# 1738 "/usr/include/c++/4.8.2/limits" 3
static const int max_exponent10 = 4932;
# 1740 "/usr/include/c++/4.8.2/limits" 3
static const bool has_infinity = (1);
# 1741 "/usr/include/c++/4.8.2/limits" 3
static const bool has_quiet_NaN = (1);
# 1742 "/usr/include/c++/4.8.2/limits" 3
static const bool has_signaling_NaN = has_quiet_NaN;
# 1743 "/usr/include/c++/4.8.2/limits" 3
static const float_denorm_style has_denorm = (((bool)1) ? denorm_present : denorm_absent);
# 1745 "/usr/include/c++/4.8.2/limits" 3
static const bool has_denorm_loss = false;
# 1749 "/usr/include/c++/4.8.2/limits" 3
static long double infinity() throw() { return __builtin_huge_vall(); }
# 1752 "/usr/include/c++/4.8.2/limits" 3
static long double quiet_NaN() throw() { return __builtin_nanl(""); }
# 1755 "/usr/include/c++/4.8.2/limits" 3
static long double signaling_NaN() throw() { return __builtin_nansl(""); }
# 1758 "/usr/include/c++/4.8.2/limits" 3
static long double denorm_min() throw() { return (3.6451995318824746025e-4951L); }
# 1760 "/usr/include/c++/4.8.2/limits" 3
static const bool is_iec559 = (has_infinity && has_quiet_NaN && (has_denorm == (denorm_present)));
# 1762 "/usr/include/c++/4.8.2/limits" 3
static const bool is_bounded = true;
# 1763 "/usr/include/c++/4.8.2/limits" 3
static const bool is_modulo = false;
# 1765 "/usr/include/c++/4.8.2/limits" 3
static const bool traps = false;
# 1766 "/usr/include/c++/4.8.2/limits" 3
static const bool tinyness_before = false;
# 1768 "/usr/include/c++/4.8.2/limits" 3
static const float_round_style round_style = round_to_nearest;
# 1770 "/usr/include/c++/4.8.2/limits" 3
};
# 1777 "/usr/include/c++/4.8.2/limits" 3
}
# 71 "/usr/include/c++/4.8.2/cstring" 3
namespace std __attribute((__visibility__("default"))) {
# 75 "/usr/include/c++/4.8.2/cstring" 3
using ::memchr;
# 76 "/usr/include/c++/4.8.2/cstring" 3
using ::memcmp;
# 77 "/usr/include/c++/4.8.2/cstring" 3
using ::memcpy;
# 78 "/usr/include/c++/4.8.2/cstring" 3
using ::memmove;
# 79 "/usr/include/c++/4.8.2/cstring" 3
using ::memset;
# 80 "/usr/include/c++/4.8.2/cstring" 3
using ::strcat;
# 81 "/usr/include/c++/4.8.2/cstring" 3
using ::strcmp;
# 82 "/usr/include/c++/4.8.2/cstring" 3
using ::strcoll;
# 83 "/usr/include/c++/4.8.2/cstring" 3
using ::strcpy;
# 84 "/usr/include/c++/4.8.2/cstring" 3
using ::strcspn;
# 85 "/usr/include/c++/4.8.2/cstring" 3
using ::strerror;
# 86 "/usr/include/c++/4.8.2/cstring" 3
using ::strlen;
# 87 "/usr/include/c++/4.8.2/cstring" 3
using ::strncat;
# 88 "/usr/include/c++/4.8.2/cstring" 3
using ::strncmp;
# 89 "/usr/include/c++/4.8.2/cstring" 3
using ::strncpy;
# 90 "/usr/include/c++/4.8.2/cstring" 3
using ::strspn;
# 91 "/usr/include/c++/4.8.2/cstring" 3
using ::strtok;
# 92 "/usr/include/c++/4.8.2/cstring" 3
using ::strxfrm;
# 93 "/usr/include/c++/4.8.2/cstring" 3
using ::strchr;
# 94 "/usr/include/c++/4.8.2/cstring" 3
using ::strpbrk;
# 95 "/usr/include/c++/4.8.2/cstring" 3
using ::strrchr;
# 96 "/usr/include/c++/4.8.2/cstring" 3
using ::strstr;
# 121 "/usr/include/c++/4.8.2/cstring" 3
}
# 60 "/usr/include/c++/4.8.2/bitset" 3
namespace std __attribute((__visibility__("default"))) {
# 70 "/usr/include/c++/4.8.2/bitset" 3
template< size_t _Nw>
# 71 "/usr/include/c++/4.8.2/bitset" 3
struct _Base_bitset {
# 73 "/usr/include/c++/4.8.2/bitset" 3
typedef unsigned long _WordT;
# 76 "/usr/include/c++/4.8.2/bitset" 3
_WordT _M_w[_Nw];
# 78 "/usr/include/c++/4.8.2/bitset" 3
_Base_bitset() : _M_w()
# 79 "/usr/include/c++/4.8.2/bitset" 3
{ }
# 89 "/usr/include/c++/4.8.2/bitset" 3
_Base_bitset(unsigned long __val) : _M_w()
# 91 "/usr/include/c++/4.8.2/bitset" 3
{ ((_M_w)[0]) = __val; }
# 95 "/usr/include/c++/4.8.2/bitset" 3
static size_t _S_whichword(size_t __pos)
# 96 "/usr/include/c++/4.8.2/bitset" 3
{ return __pos / (8 * 8); }
# 99 "/usr/include/c++/4.8.2/bitset" 3
static size_t _S_whichbyte(size_t __pos)
# 100 "/usr/include/c++/4.8.2/bitset" 3
{ return (__pos % (8 * 8)) / (8); }
# 103 "/usr/include/c++/4.8.2/bitset" 3
static size_t _S_whichbit(size_t __pos)
# 104 "/usr/include/c++/4.8.2/bitset" 3
{ return __pos % (8 * 8); }
# 107 "/usr/include/c++/4.8.2/bitset" 3
static _WordT _S_maskbit(size_t __pos)
# 108 "/usr/include/c++/4.8.2/bitset" 3
{ return (static_cast< _WordT>(1)) << (_S_whichbit)(__pos); }
# 111 "/usr/include/c++/4.8.2/bitset" 3
_WordT &_M_getword(size_t __pos)
# 112 "/usr/include/c++/4.8.2/bitset" 3
{ return (_M_w)[(_S_whichword)(__pos)]; }
# 115 "/usr/include/c++/4.8.2/bitset" 3
_WordT _M_getword(size_t __pos) const
# 116 "/usr/include/c++/4.8.2/bitset" 3
{ return (_M_w)[(_S_whichword)(__pos)]; }
# 125 "/usr/include/c++/4.8.2/bitset" 3
_WordT &_M_hiword()
# 126 "/usr/include/c++/4.8.2/bitset" 3
{ return (_M_w)[_Nw - (1)]; }
# 129 "/usr/include/c++/4.8.2/bitset" 3
_WordT _M_hiword() const
# 130 "/usr/include/c++/4.8.2/bitset" 3
{ return (_M_w)[_Nw - (1)]; }
# 133 "/usr/include/c++/4.8.2/bitset" 3
void _M_do_and(const _Base_bitset &__x)
# 134 "/usr/include/c++/4.8.2/bitset" 3
{
# 135 "/usr/include/c++/4.8.2/bitset" 3
for (size_t __i = (0); __i < _Nw; __i++) {
# 136 "/usr/include/c++/4.8.2/bitset" 3
((_M_w)[__i]) &= ((__x._M_w)[__i]); }
# 137 "/usr/include/c++/4.8.2/bitset" 3
}
# 140 "/usr/include/c++/4.8.2/bitset" 3
void _M_do_or(const _Base_bitset &__x)
# 141 "/usr/include/c++/4.8.2/bitset" 3
{
# 142 "/usr/include/c++/4.8.2/bitset" 3
for (size_t __i = (0); __i < _Nw; __i++) {
# 143 "/usr/include/c++/4.8.2/bitset" 3
((_M_w)[__i]) |= ((__x._M_w)[__i]); }
# 144 "/usr/include/c++/4.8.2/bitset" 3
}
# 147 "/usr/include/c++/4.8.2/bitset" 3
void _M_do_xor(const _Base_bitset &__x)
# 148 "/usr/include/c++/4.8.2/bitset" 3
{
# 149 "/usr/include/c++/4.8.2/bitset" 3
for (size_t __i = (0); __i < _Nw; __i++) {
# 150 "/usr/include/c++/4.8.2/bitset" 3
((_M_w)[__i]) ^= ((__x._M_w)[__i]); }
# 151 "/usr/include/c++/4.8.2/bitset" 3
}
# 154 "/usr/include/c++/4.8.2/bitset" 3
void _M_do_left_shift(size_t __shift);
# 157 "/usr/include/c++/4.8.2/bitset" 3
void _M_do_right_shift(size_t __shift);
# 160 "/usr/include/c++/4.8.2/bitset" 3
void _M_do_flip()
# 161 "/usr/include/c++/4.8.2/bitset" 3
{
# 162 "/usr/include/c++/4.8.2/bitset" 3
for (size_t __i = (0); __i < _Nw; __i++) {
# 163 "/usr/include/c++/4.8.2/bitset" 3
((_M_w)[__i]) = (~((_M_w)[__i])); }
# 164 "/usr/include/c++/4.8.2/bitset" 3
}
# 167 "/usr/include/c++/4.8.2/bitset" 3
void _M_do_set()
# 168 "/usr/include/c++/4.8.2/bitset" 3
{
# 169 "/usr/include/c++/4.8.2/bitset" 3
for (size_t __i = (0); __i < _Nw; __i++) {
# 170 "/usr/include/c++/4.8.2/bitset" 3
((_M_w)[__i]) = (~(static_cast< _WordT>(0))); }
# 171 "/usr/include/c++/4.8.2/bitset" 3
}
# 174 "/usr/include/c++/4.8.2/bitset" 3
void _M_do_reset()
# 175 "/usr/include/c++/4.8.2/bitset" 3
{ __builtin_memset(_M_w, 0, _Nw * sizeof(_WordT)); }
# 178 "/usr/include/c++/4.8.2/bitset" 3
bool _M_is_equal(const _Base_bitset &__x) const
# 179 "/usr/include/c++/4.8.2/bitset" 3
{
# 180 "/usr/include/c++/4.8.2/bitset" 3
for (size_t __i = (0); __i < _Nw; ++__i) {
# 181 "/usr/include/c++/4.8.2/bitset" 3
if (((_M_w)[__i]) != ((__x._M_w)[__i])) {
# 182 "/usr/include/c++/4.8.2/bitset" 3
return false; } }
# 183 "/usr/include/c++/4.8.2/bitset" 3
return true;
# 184 "/usr/include/c++/4.8.2/bitset" 3
}
# 186 "/usr/include/c++/4.8.2/bitset" 3
template< size_t _Nb> bool
# 188 "/usr/include/c++/4.8.2/bitset" 3
_M_are_all() const
# 189 "/usr/include/c++/4.8.2/bitset" 3
{
# 190 "/usr/include/c++/4.8.2/bitset" 3
for (size_t __i = (0); __i < (_Nw - (1)); __i++) {
# 191 "/usr/include/c++/4.8.2/bitset" 3
if (((_M_w)[__i]) != (~(static_cast< _WordT>(0)))) {
# 192 "/usr/include/c++/4.8.2/bitset" 3
return false; } }
# 193 "/usr/include/c++/4.8.2/bitset" 3
return this->_M_hiword() == ((~(static_cast< _WordT>(0))) >> ((_Nw * (8 * 8)) - _Nb));
# 196 "/usr/include/c++/4.8.2/bitset" 3
}
# 199 "/usr/include/c++/4.8.2/bitset" 3
bool _M_is_any() const
# 200 "/usr/include/c++/4.8.2/bitset" 3
{
# 201 "/usr/include/c++/4.8.2/bitset" 3
for (size_t __i = (0); __i < _Nw; __i++) {
# 202 "/usr/include/c++/4.8.2/bitset" 3
if (((_M_w)[__i]) != (static_cast< _WordT>(0))) {
# 203 "/usr/include/c++/4.8.2/bitset" 3
return true; } }
# 204 "/usr/include/c++/4.8.2/bitset" 3
return false;
# 205 "/usr/include/c++/4.8.2/bitset" 3
}
# 208 "/usr/include/c++/4.8.2/bitset" 3
size_t _M_do_count() const
# 209 "/usr/include/c++/4.8.2/bitset" 3
{
# 210 "/usr/include/c++/4.8.2/bitset" 3
size_t __result = (0);
# 211 "/usr/include/c++/4.8.2/bitset" 3
for (size_t __i = (0); __i < _Nw; __i++) {
# 212 "/usr/include/c++/4.8.2/bitset" 3
__result += (__builtin_popcountl((_M_w)[__i])); }
# 213 "/usr/include/c++/4.8.2/bitset" 3
return __result;
# 214 "/usr/include/c++/4.8.2/bitset" 3
}
# 217 "/usr/include/c++/4.8.2/bitset" 3
unsigned long _M_do_to_ulong() const;
# 226 "/usr/include/c++/4.8.2/bitset" 3
size_t _M_do_find_first(size_t) const;
# 230 "/usr/include/c++/4.8.2/bitset" 3
size_t _M_do_find_next(size_t, size_t) const;
# 231 "/usr/include/c++/4.8.2/bitset" 3
};
# 234 "/usr/include/c++/4.8.2/bitset" 3
template< size_t _Nw> void
# 236 "/usr/include/c++/4.8.2/bitset" 3
_Base_bitset< _Nw> ::_M_do_left_shift(size_t __shift)
# 237 "/usr/include/c++/4.8.2/bitset" 3
{
# 238 "/usr/include/c++/4.8.2/bitset" 3
if (__builtin_expect(__shift != (0), 1))
# 239 "/usr/include/c++/4.8.2/bitset" 3
{
# 240 "/usr/include/c++/4.8.2/bitset" 3
const size_t __wshift = __shift / (8 * 8);
# 241 "/usr/include/c++/4.8.2/bitset" 3
const size_t __offset = __shift % (8 * 8);
# 243 "/usr/include/c++/4.8.2/bitset" 3
if (__offset == (0)) {
# 244 "/usr/include/c++/4.8.2/bitset" 3
for (size_t __n = (_Nw - (1)); __n >= __wshift; --__n) {
# 245 "/usr/include/c++/4.8.2/bitset" 3
((_M_w)[__n]) = ((_M_w)[__n - __wshift]); } } else
# 247 "/usr/include/c++/4.8.2/bitset" 3
{
# 248 "/usr/include/c++/4.8.2/bitset" 3
const size_t __sub_offset = (8 * 8) - __offset;
# 250 "/usr/include/c++/4.8.2/bitset" 3
for (size_t __n = (_Nw - (1)); __n > __wshift; --__n) {
# 251 "/usr/include/c++/4.8.2/bitset" 3
((_M_w)[__n]) = ((((_M_w)[__n - __wshift]) << __offset) | (((_M_w)[(__n - __wshift) - (1)]) >> __sub_offset)); }
# 253 "/usr/include/c++/4.8.2/bitset" 3
((_M_w)[__wshift]) = (((_M_w)[0]) << __offset);
# 254 "/usr/include/c++/4.8.2/bitset" 3
}
# 256 "/usr/include/c++/4.8.2/bitset" 3
std::fill((_M_w) + 0, (_M_w) + __wshift, static_cast< _WordT>(0));
# 257 "/usr/include/c++/4.8.2/bitset" 3
}
# 258 "/usr/include/c++/4.8.2/bitset" 3
}
# 260 "/usr/include/c++/4.8.2/bitset" 3
template< size_t _Nw> void
# 262 "/usr/include/c++/4.8.2/bitset" 3
_Base_bitset< _Nw> ::_M_do_right_shift(size_t __shift)
# 263 "/usr/include/c++/4.8.2/bitset" 3
{
# 264 "/usr/include/c++/4.8.2/bitset" 3
if (__builtin_expect(__shift != (0), 1))
# 265 "/usr/include/c++/4.8.2/bitset" 3
{
# 266 "/usr/include/c++/4.8.2/bitset" 3
const size_t __wshift = __shift / (8 * 8);
# 267 "/usr/include/c++/4.8.2/bitset" 3
const size_t __offset = __shift % (8 * 8);
# 268 "/usr/include/c++/4.8.2/bitset" 3
const size_t __limit = (_Nw - __wshift) - (1);
# 270 "/usr/include/c++/4.8.2/bitset" 3
if (__offset == (0)) {
# 271 "/usr/include/c++/4.8.2/bitset" 3
for (size_t __n = (0); __n <= __limit; ++__n) {
# 272 "/usr/include/c++/4.8.2/bitset" 3
((_M_w)[__n]) = ((_M_w)[__n + __wshift]); } } else
# 274 "/usr/include/c++/4.8.2/bitset" 3
{
# 275 "/usr/include/c++/4.8.2/bitset" 3
const size_t __sub_offset = (8 * 8) - __offset;
# 277 "/usr/include/c++/4.8.2/bitset" 3
for (size_t __n = (0); __n < __limit; ++__n) {
# 278 "/usr/include/c++/4.8.2/bitset" 3
((_M_w)[__n]) = ((((_M_w)[__n + __wshift]) >> __offset) | (((_M_w)[(__n + __wshift) + (1)]) << __sub_offset)); }
# 280 "/usr/include/c++/4.8.2/bitset" 3
((_M_w)[__limit]) = (((_M_w)[_Nw - (1)]) >> __offset);
# 281 "/usr/include/c++/4.8.2/bitset" 3
}
# 283 "/usr/include/c++/4.8.2/bitset" 3
std::fill(((_M_w) + __limit) + 1, (_M_w) + _Nw, static_cast< _WordT>(0));
# 284 "/usr/include/c++/4.8.2/bitset" 3
}
# 285 "/usr/include/c++/4.8.2/bitset" 3
}
# 287 "/usr/include/c++/4.8.2/bitset" 3
template< size_t _Nw> unsigned long
# 289 "/usr/include/c++/4.8.2/bitset" 3
_Base_bitset< _Nw> ::_M_do_to_ulong() const
# 290 "/usr/include/c++/4.8.2/bitset" 3
{
# 291 "/usr/include/c++/4.8.2/bitset" 3
for (size_t __i = (1); __i < _Nw; ++__i) {
# 292 "/usr/include/c++/4.8.2/bitset" 3
if ((_M_w)[__i]) {
# 293 "/usr/include/c++/4.8.2/bitset" 3
__throw_overflow_error("_Base_bitset::_M_do_to_ulong"); } }
# 294 "/usr/include/c++/4.8.2/bitset" 3
return (_M_w)[0];
# 295 "/usr/include/c++/4.8.2/bitset" 3
}
# 314 "/usr/include/c++/4.8.2/bitset" 3
template< size_t _Nw> size_t
# 317 "/usr/include/c++/4.8.2/bitset" 3
_Base_bitset< _Nw> ::_M_do_find_first(size_t __not_found) const
# 318 "/usr/include/c++/4.8.2/bitset" 3
{
# 319 "/usr/include/c++/4.8.2/bitset" 3
for (size_t __i = (0); __i < _Nw; __i++)
# 320 "/usr/include/c++/4.8.2/bitset" 3
{
# 321 "/usr/include/c++/4.8.2/bitset" 3
_WordT __thisword = (_M_w)[__i];
# 322 "/usr/include/c++/4.8.2/bitset" 3
if (__thisword != (static_cast< _WordT>(0))) {
# 323 "/usr/include/c++/4.8.2/bitset" 3
return (__i * (8 * 8)) + (__builtin_ctzl(__thisword)); }
# 325 "/usr/include/c++/4.8.2/bitset" 3
}
# 327 "/usr/include/c++/4.8.2/bitset" 3
return __not_found;
# 328 "/usr/include/c++/4.8.2/bitset" 3
}
# 330 "/usr/include/c++/4.8.2/bitset" 3
template< size_t _Nw> size_t
# 333 "/usr/include/c++/4.8.2/bitset" 3
_Base_bitset< _Nw> ::_M_do_find_next(size_t __prev, size_t __not_found) const
# 334 "/usr/include/c++/4.8.2/bitset" 3
{
# 336 "/usr/include/c++/4.8.2/bitset" 3
++__prev;
# 339 "/usr/include/c++/4.8.2/bitset" 3
if (__prev >= (_Nw * (8 * 8))) {
# 340 "/usr/include/c++/4.8.2/bitset" 3
return __not_found; }
# 343 "/usr/include/c++/4.8.2/bitset" 3
size_t __i = (_S_whichword)(__prev);
# 344 "/usr/include/c++/4.8.2/bitset" 3
_WordT __thisword = (_M_w)[__i];
# 347 "/usr/include/c++/4.8.2/bitset" 3
__thisword &= ((~(static_cast< _WordT>(0))) << (_S_whichbit)(__prev));
# 349 "/usr/include/c++/4.8.2/bitset" 3
if (__thisword != (static_cast< _WordT>(0))) {
# 350 "/usr/include/c++/4.8.2/bitset" 3
return (__i * (8 * 8)) + (__builtin_ctzl(__thisword)); }
# 354 "/usr/include/c++/4.8.2/bitset" 3
__i++;
# 355 "/usr/include/c++/4.8.2/bitset" 3
for (; __i < _Nw; __i++)
# 356 "/usr/include/c++/4.8.2/bitset" 3
{
# 357 "/usr/include/c++/4.8.2/bitset" 3
__thisword = ((_M_w)[__i]);
# 358 "/usr/include/c++/4.8.2/bitset" 3
if (__thisword != (static_cast< _WordT>(0))) {
# 359 "/usr/include/c++/4.8.2/bitset" 3
return (__i * (8 * 8)) + (__builtin_ctzl(__thisword)); }
# 361 "/usr/include/c++/4.8.2/bitset" 3
}
# 363 "/usr/include/c++/4.8.2/bitset" 3
return __not_found;
# 364 "/usr/include/c++/4.8.2/bitset" 3
}
# 372 "/usr/include/c++/4.8.2/bitset" 3
template<> struct _Base_bitset< 1UL> {
# 374 "/usr/include/c++/4.8.2/bitset" 3
typedef unsigned long _WordT;
# 375 "/usr/include/c++/4.8.2/bitset" 3
_WordT _M_w;
# 377 "/usr/include/c++/4.8.2/bitset" 3
_Base_bitset() : _M_w((0))
# 379 "/usr/include/c++/4.8.2/bitset" 3
{ }
# 384 "/usr/include/c++/4.8.2/bitset" 3
_Base_bitset(unsigned long __val) : _M_w(__val)
# 387 "/usr/include/c++/4.8.2/bitset" 3
{ }
# 390 "/usr/include/c++/4.8.2/bitset" 3
static size_t _S_whichword(size_t __pos)
# 391 "/usr/include/c++/4.8.2/bitset" 3
{ return __pos / (8 * 8); }
# 394 "/usr/include/c++/4.8.2/bitset" 3
static size_t _S_whichbyte(size_t __pos)
# 395 "/usr/include/c++/4.8.2/bitset" 3
{ return (__pos % (8 * 8)) / (8); }
# 398 "/usr/include/c++/4.8.2/bitset" 3
static size_t _S_whichbit(size_t __pos)
# 399 "/usr/include/c++/4.8.2/bitset" 3
{ return __pos % (8 * 8); }
# 402 "/usr/include/c++/4.8.2/bitset" 3
static _WordT _S_maskbit(size_t __pos)
# 403 "/usr/include/c++/4.8.2/bitset" 3
{ return (static_cast< _WordT>(1)) << _S_whichbit(__pos); }
# 406 "/usr/include/c++/4.8.2/bitset" 3
_WordT &_M_getword(size_t)
# 407 "/usr/include/c++/4.8.2/bitset" 3
{ return _M_w; }
# 410 "/usr/include/c++/4.8.2/bitset" 3
_WordT _M_getword(size_t) const
# 411 "/usr/include/c++/4.8.2/bitset" 3
{ return _M_w; }
# 420 "/usr/include/c++/4.8.2/bitset" 3
_WordT &_M_hiword()
# 421 "/usr/include/c++/4.8.2/bitset" 3
{ return _M_w; }
# 424 "/usr/include/c++/4.8.2/bitset" 3
_WordT _M_hiword() const
# 425 "/usr/include/c++/4.8.2/bitset" 3
{ return _M_w; }
# 428 "/usr/include/c++/4.8.2/bitset" 3
void _M_do_and(const std::_Base_bitset< 1UL> &__x)
# 429 "/usr/include/c++/4.8.2/bitset" 3
{ (_M_w) &= (__x._M_w); }
# 432 "/usr/include/c++/4.8.2/bitset" 3
void _M_do_or(const std::_Base_bitset< 1UL> &__x)
# 433 "/usr/include/c++/4.8.2/bitset" 3
{ (_M_w) |= (__x._M_w); }
# 436 "/usr/include/c++/4.8.2/bitset" 3
void _M_do_xor(const std::_Base_bitset< 1UL> &__x)
# 437 "/usr/include/c++/4.8.2/bitset" 3
{ (_M_w) ^= (__x._M_w); }
# 440 "/usr/include/c++/4.8.2/bitset" 3
void _M_do_left_shift(size_t __shift)
# 441 "/usr/include/c++/4.8.2/bitset" 3
{ (_M_w) <<= __shift; }
# 444 "/usr/include/c++/4.8.2/bitset" 3
void _M_do_right_shift(size_t __shift)
# 445 "/usr/include/c++/4.8.2/bitset" 3
{ (_M_w) >>= __shift; }
# 448 "/usr/include/c++/4.8.2/bitset" 3
void _M_do_flip()
# 449 "/usr/include/c++/4.8.2/bitset" 3
{ (_M_w) = (~(_M_w)); }
# 452 "/usr/include/c++/4.8.2/bitset" 3
void _M_do_set()
# 453 "/usr/include/c++/4.8.2/bitset" 3
{ (_M_w) = (~(static_cast< _WordT>(0))); }
# 456 "/usr/include/c++/4.8.2/bitset" 3
void _M_do_reset()
# 457 "/usr/include/c++/4.8.2/bitset" 3
{ (_M_w) = (0); }
# 460 "/usr/include/c++/4.8.2/bitset" 3
bool _M_is_equal(const std::_Base_bitset< 1UL> &__x) const
# 461 "/usr/include/c++/4.8.2/bitset" 3
{ return (_M_w) == (__x._M_w); }
# 463 "/usr/include/c++/4.8.2/bitset" 3
template< size_t _Nb> bool
# 465 "/usr/include/c++/4.8.2/bitset" 3
_M_are_all() const
# 466 "/usr/include/c++/4.8.2/bitset" 3
{ return (_M_w) == ((~(static_cast< _WordT>(0))) >> ((8 * 8) - _Nb));
# 467 "/usr/include/c++/4.8.2/bitset" 3
}
# 470 "/usr/include/c++/4.8.2/bitset" 3
bool _M_is_any() const
# 471 "/usr/include/c++/4.8.2/bitset" 3
{ return (_M_w) != (0); }
# 474 "/usr/include/c++/4.8.2/bitset" 3
size_t _M_do_count() const
# 475 "/usr/include/c++/4.8.2/bitset" 3
{ return __builtin_popcountl(_M_w); }
# 478 "/usr/include/c++/4.8.2/bitset" 3
unsigned long _M_do_to_ulong() const
# 479 "/usr/include/c++/4.8.2/bitset" 3
{ return _M_w; }
# 488 "/usr/include/c++/4.8.2/bitset" 3
size_t _M_do_find_first(size_t __not_found) const
# 489 "/usr/include/c++/4.8.2/bitset" 3
{
# 490 "/usr/include/c++/4.8.2/bitset" 3
if ((_M_w) != (0)) {
# 491 "/usr/include/c++/4.8.2/bitset" 3
return __builtin_ctzl(_M_w); } else {
# 493 "/usr/include/c++/4.8.2/bitset" 3
return __not_found; }
# 494 "/usr/include/c++/4.8.2/bitset" 3
}
# 498 "/usr/include/c++/4.8.2/bitset" 3
size_t _M_do_find_next(size_t __prev, size_t __not_found) const
# 500 "/usr/include/c++/4.8.2/bitset" 3
{
# 501 "/usr/include/c++/4.8.2/bitset" 3
++__prev;
# 502 "/usr/include/c++/4.8.2/bitset" 3
if (__prev >= ((size_t)(8 * 8))) {
# 503 "/usr/include/c++/4.8.2/bitset" 3
return __not_found; }
# 505 "/usr/include/c++/4.8.2/bitset" 3
_WordT __x = (_M_w) >> __prev;
# 506 "/usr/include/c++/4.8.2/bitset" 3
if (__x != (0)) {
# 507 "/usr/include/c++/4.8.2/bitset" 3
return (__builtin_ctzl(__x)) + __prev; } else {
# 509 "/usr/include/c++/4.8.2/bitset" 3
return __not_found; }
# 510 "/usr/include/c++/4.8.2/bitset" 3
}
# 511 "/usr/include/c++/4.8.2/bitset" 3
};
# 519 "/usr/include/c++/4.8.2/bitset" 3
template<> struct _Base_bitset< 0UL> {
# 521 "/usr/include/c++/4.8.2/bitset" 3
typedef unsigned long _WordT;
# 523 "/usr/include/c++/4.8.2/bitset" 3
_Base_bitset()
# 524 "/usr/include/c++/4.8.2/bitset" 3
{ }
# 529 "/usr/include/c++/4.8.2/bitset" 3
_Base_bitset(unsigned long)
# 531 "/usr/include/c++/4.8.2/bitset" 3
{ }
# 534 "/usr/include/c++/4.8.2/bitset" 3
static size_t _S_whichword(size_t __pos)
# 535 "/usr/include/c++/4.8.2/bitset" 3
{ return __pos / (8 * 8); }
# 538 "/usr/include/c++/4.8.2/bitset" 3
static size_t _S_whichbyte(size_t __pos)
# 539 "/usr/include/c++/4.8.2/bitset" 3
{ return (__pos % (8 * 8)) / (8); }
# 542 "/usr/include/c++/4.8.2/bitset" 3
static size_t _S_whichbit(size_t __pos)
# 543 "/usr/include/c++/4.8.2/bitset" 3
{ return __pos % (8 * 8); }
# 546 "/usr/include/c++/4.8.2/bitset" 3
static _WordT _S_maskbit(size_t __pos)
# 547 "/usr/include/c++/4.8.2/bitset" 3
{ return (static_cast< _WordT>(1)) << _S_whichbit(__pos); }
# 557 "/usr/include/c++/4.8.2/bitset" 3
_WordT &_M_getword(size_t)
# 558 "/usr/include/c++/4.8.2/bitset" 3
{
# 559 "/usr/include/c++/4.8.2/bitset" 3
__throw_out_of_range("_Base_bitset::_M_getword");
# 560 "/usr/include/c++/4.8.2/bitset" 3
return *(new _WordT);
# 561 "/usr/include/c++/4.8.2/bitset" 3
}
# 564 "/usr/include/c++/4.8.2/bitset" 3
_WordT _M_getword(size_t __pos) const
# 565 "/usr/include/c++/4.8.2/bitset" 3
{ return 0; }
# 568 "/usr/include/c++/4.8.2/bitset" 3
_WordT _M_hiword() const
# 569 "/usr/include/c++/4.8.2/bitset" 3
{ return 0; }
# 572 "/usr/include/c++/4.8.2/bitset" 3
void _M_do_and(const std::_Base_bitset< 0UL> &)
# 573 "/usr/include/c++/4.8.2/bitset" 3
{ }
# 576 "/usr/include/c++/4.8.2/bitset" 3
void _M_do_or(const std::_Base_bitset< 0UL> &)
# 577 "/usr/include/c++/4.8.2/bitset" 3
{ }
# 580 "/usr/include/c++/4.8.2/bitset" 3
void _M_do_xor(const std::_Base_bitset< 0UL> &)
# 581 "/usr/include/c++/4.8.2/bitset" 3
{ }
# 584 "/usr/include/c++/4.8.2/bitset" 3
void _M_do_left_shift(size_t)
# 585 "/usr/include/c++/4.8.2/bitset" 3
{ }
# 588 "/usr/include/c++/4.8.2/bitset" 3
void _M_do_right_shift(size_t)
# 589 "/usr/include/c++/4.8.2/bitset" 3
{ }
# 592 "/usr/include/c++/4.8.2/bitset" 3
void _M_do_flip()
# 593 "/usr/include/c++/4.8.2/bitset" 3
{ }
# 596 "/usr/include/c++/4.8.2/bitset" 3
void _M_do_set()
# 597 "/usr/include/c++/4.8.2/bitset" 3
{ }
# 600 "/usr/include/c++/4.8.2/bitset" 3
void _M_do_reset()
# 601 "/usr/include/c++/4.8.2/bitset" 3
{ }
# 607 "/usr/include/c++/4.8.2/bitset" 3
bool _M_is_equal(const std::_Base_bitset< 0UL> &) const
# 608 "/usr/include/c++/4.8.2/bitset" 3
{ return true; }
# 610 "/usr/include/c++/4.8.2/bitset" 3
template< size_t _Nb> bool
# 612 "/usr/include/c++/4.8.2/bitset" 3
_M_are_all() const
# 613 "/usr/include/c++/4.8.2/bitset" 3
{ return true; }
# 616 "/usr/include/c++/4.8.2/bitset" 3
bool _M_is_any() const
# 617 "/usr/include/c++/4.8.2/bitset" 3
{ return false; }
# 620 "/usr/include/c++/4.8.2/bitset" 3
size_t _M_do_count() const
# 621 "/usr/include/c++/4.8.2/bitset" 3
{ return 0; }
# 624 "/usr/include/c++/4.8.2/bitset" 3
unsigned long _M_do_to_ulong() const
# 625 "/usr/include/c++/4.8.2/bitset" 3
{ return 0; }
# 636 "/usr/include/c++/4.8.2/bitset" 3
size_t _M_do_find_first(size_t) const
# 637 "/usr/include/c++/4.8.2/bitset" 3
{ return 0; }
# 640 "/usr/include/c++/4.8.2/bitset" 3
size_t _M_do_find_next(size_t, size_t) const
# 641 "/usr/include/c++/4.8.2/bitset" 3
{ return 0; }
# 642 "/usr/include/c++/4.8.2/bitset" 3
};
# 646 "/usr/include/c++/4.8.2/bitset" 3
template< size_t _Extrabits>
# 647 "/usr/include/c++/4.8.2/bitset" 3
struct _Sanitize {
# 649 "/usr/include/c++/4.8.2/bitset" 3
typedef unsigned long _WordT;
# 652 "/usr/include/c++/4.8.2/bitset" 3
static void _S_do_sanitize(_WordT &__val)
# 653 "/usr/include/c++/4.8.2/bitset" 3
{ __val &= (~((~(static_cast< _WordT>(0))) << _Extrabits)); }
# 654 "/usr/include/c++/4.8.2/bitset" 3
};
# 657 "/usr/include/c++/4.8.2/bitset" 3
template<> struct _Sanitize< 0UL> {
# 659 "/usr/include/c++/4.8.2/bitset" 3
typedef unsigned long _WordT;
# 662 "/usr/include/c++/4.8.2/bitset" 3
static void _S_do_sanitize(_WordT) { }
# 663 "/usr/include/c++/4.8.2/bitset" 3
};
# 747 "/usr/include/c++/4.8.2/bitset" 3
template< size_t _Nb>
# 748 "/usr/include/c++/4.8.2/bitset" 3
class bitset : private _Base_bitset< (_Nb / (8 * 8)) + (((_Nb % (8 * 8)) == (0)) ? 0 : 1)> {
# 752 "/usr/include/c++/4.8.2/bitset" 3
typedef std::_Base_bitset< (_Nb / (8 * 8)) + (((_Nb % (8 * 8)) == (0)) ? 0 : 1)> _Base;
# 753 "/usr/include/c++/4.8.2/bitset" 3
typedef unsigned long _WordT;
# 756 "/usr/include/c++/4.8.2/bitset" 3
void _M_do_sanitize()
# 757 "/usr/include/c++/4.8.2/bitset" 3
{
# 758 "/usr/include/c++/4.8.2/bitset" 3
typedef _Sanitize< _Nb % (8 * 8)> __sanitize_type;
# 759 "/usr/include/c++/4.8.2/bitset" 3
__sanitize_type::_S_do_sanitize((this->_M_hiword()));
# 760 "/usr/include/c++/4.8.2/bitset" 3
}
# 779 "/usr/include/c++/4.8.2/bitset" 3
public: class reference {
# 781 "/usr/include/c++/4.8.2/bitset" 3
friend class bitset;
# 783 "/usr/include/c++/4.8.2/bitset" 3
_WordT *_M_wp;
# 784 "/usr/include/c++/4.8.2/bitset" 3
std::size_t _M_bpos;
# 787 "/usr/include/c++/4.8.2/bitset" 3
reference();
# 790 "/usr/include/c++/4.8.2/bitset" 3
public: reference(bitset &__b, std::size_t __pos)
# 791 "/usr/include/c++/4.8.2/bitset" 3
{
# 792 "/usr/include/c++/4.8.2/bitset" 3
(_M_wp) = (&(__b._M_getword(__pos)));
# 793 "/usr/include/c++/4.8.2/bitset" 3
(_M_bpos) = _Base::_S_whichbit(__pos);
# 794 "/usr/include/c++/4.8.2/bitset" 3
}
# 796 "/usr/include/c++/4.8.2/bitset" 3
~reference()
# 797 "/usr/include/c++/4.8.2/bitset" 3
{ }
# 801 "/usr/include/c++/4.8.2/bitset" 3
reference &operator=(bool __x)
# 802 "/usr/include/c++/4.8.2/bitset" 3
{
# 803 "/usr/include/c++/4.8.2/bitset" 3
if (__x) {
# 804 "/usr/include/c++/4.8.2/bitset" 3
(*(_M_wp)) |= _Base::_S_maskbit(_M_bpos); } else {
# 806 "/usr/include/c++/4.8.2/bitset" 3
(*(_M_wp)) &= (~_Base::_S_maskbit(_M_bpos)); }
# 807 "/usr/include/c++/4.8.2/bitset" 3
return *this;
# 808 "/usr/include/c++/4.8.2/bitset" 3
}
# 812 "/usr/include/c++/4.8.2/bitset" 3
reference &operator=(const reference &__j)
# 813 "/usr/include/c++/4.8.2/bitset" 3
{
# 814 "/usr/include/c++/4.8.2/bitset" 3
if ((*(__j._M_wp)) & _Base::_S_maskbit((__j._M_bpos))) {
# 815 "/usr/include/c++/4.8.2/bitset" 3
(*(_M_wp)) |= _Base::_S_maskbit(_M_bpos); } else {
# 817 "/usr/include/c++/4.8.2/bitset" 3
(*(_M_wp)) &= (~_Base::_S_maskbit(_M_bpos)); }
# 818 "/usr/include/c++/4.8.2/bitset" 3
return *this;
# 819 "/usr/include/c++/4.8.2/bitset" 3
}
# 823 "/usr/include/c++/4.8.2/bitset" 3
bool operator~() const
# 824 "/usr/include/c++/4.8.2/bitset" 3
{ return ((*(_M_wp)) & _Base::_S_maskbit(_M_bpos)) == 0; }
# 827 "/usr/include/c++/4.8.2/bitset" 3
operator bool() const
# 828 "/usr/include/c++/4.8.2/bitset" 3
{ return ((*(_M_wp)) & _Base::_S_maskbit(_M_bpos)) != 0; }
# 832 "/usr/include/c++/4.8.2/bitset" 3
reference &flip()
# 833 "/usr/include/c++/4.8.2/bitset" 3
{
# 834 "/usr/include/c++/4.8.2/bitset" 3
(*(_M_wp)) ^= _Base::_S_maskbit(_M_bpos);
# 835 "/usr/include/c++/4.8.2/bitset" 3
return *this;
# 836 "/usr/include/c++/4.8.2/bitset" 3
}
# 837 "/usr/include/c++/4.8.2/bitset" 3
};
# 838 "/usr/include/c++/4.8.2/bitset" 3
friend class reference;
# 842 "/usr/include/c++/4.8.2/bitset" 3
bitset()
# 843 "/usr/include/c++/4.8.2/bitset" 3
{ }
# 850 "/usr/include/c++/4.8.2/bitset" 3
bitset(unsigned long __val) : _Base(__val)
# 852 "/usr/include/c++/4.8.2/bitset" 3
{ _M_do_sanitize(); }
# 864 "/usr/include/c++/4.8.2/bitset" 3
template< class _CharT, class _Traits, class _Alloc> explicit
# 866 "/usr/include/c++/4.8.2/bitset" 3
bitset(const basic_string< _CharT, _Traits, _Alloc> &__s, std::size_t
# 867 "/usr/include/c++/4.8.2/bitset" 3
__position = 0) : _Base()
# 869 "/usr/include/c++/4.8.2/bitset" 3
{
# 870 "/usr/include/c++/4.8.2/bitset" 3
if (__position > (__s.size())) {
# 871 "/usr/include/c++/4.8.2/bitset" 3
__throw_out_of_range("bitset::bitset initial position not valid"); }
# 873 "/usr/include/c++/4.8.2/bitset" 3
_M_copy_from_string(__s, __position, std::basic_string< _CharT, _Traits, _Alloc> ::npos, (_CharT)'0', (_CharT)'1');
# 876 "/usr/include/c++/4.8.2/bitset" 3
}
# 888 "/usr/include/c++/4.8.2/bitset" 3
template< class _CharT, class _Traits, class _Alloc>
# 889 "/usr/include/c++/4.8.2/bitset" 3
bitset(const basic_string< _CharT, _Traits, _Alloc> &__s, std::size_t
# 890 "/usr/include/c++/4.8.2/bitset" 3
__position, std::size_t __n) : _Base()
# 892 "/usr/include/c++/4.8.2/bitset" 3
{
# 893 "/usr/include/c++/4.8.2/bitset" 3
if (__position > (__s.size())) {
# 894 "/usr/include/c++/4.8.2/bitset" 3
__throw_out_of_range("bitset::bitset initial position not valid"); }
# 896 "/usr/include/c++/4.8.2/bitset" 3
_M_copy_from_string(__s, __position, __n, (_CharT)'0', (_CharT)'1');
# 897 "/usr/include/c++/4.8.2/bitset" 3
}
# 901 "/usr/include/c++/4.8.2/bitset" 3
template< class _CharT, class _Traits, class _Alloc>
# 902 "/usr/include/c++/4.8.2/bitset" 3
bitset(const basic_string< _CharT, _Traits, _Alloc> &__s, std::size_t
# 903 "/usr/include/c++/4.8.2/bitset" 3
__position, std::size_t __n, _CharT
# 904 "/usr/include/c++/4.8.2/bitset" 3
__zero, _CharT __one = (_CharT)'1') : _Base()
# 906 "/usr/include/c++/4.8.2/bitset" 3
{
# 907 "/usr/include/c++/4.8.2/bitset" 3
if (__position > (__s.size())) {
# 908 "/usr/include/c++/4.8.2/bitset" 3
__throw_out_of_range("bitset::bitset initial position not valid"); }
# 910 "/usr/include/c++/4.8.2/bitset" 3
_M_copy_from_string(__s, __position, __n, __zero, __one);
# 911 "/usr/include/c++/4.8.2/bitset" 3
}
# 951 "/usr/include/c++/4.8.2/bitset" 3
bitset &operator&=(const bitset &__rhs)
# 952 "/usr/include/c++/4.8.2/bitset" 3
{
# 953 "/usr/include/c++/4.8.2/bitset" 3
(this->_M_do_and(__rhs));
# 954 "/usr/include/c++/4.8.2/bitset" 3
return *this;
# 955 "/usr/include/c++/4.8.2/bitset" 3
}
# 958 "/usr/include/c++/4.8.2/bitset" 3
bitset &operator|=(const bitset &__rhs)
# 959 "/usr/include/c++/4.8.2/bitset" 3
{
# 960 "/usr/include/c++/4.8.2/bitset" 3
(this->_M_do_or(__rhs));
# 961 "/usr/include/c++/4.8.2/bitset" 3
return *this;
# 962 "/usr/include/c++/4.8.2/bitset" 3
}
# 965 "/usr/include/c++/4.8.2/bitset" 3
bitset &operator^=(const bitset &__rhs)
# 966 "/usr/include/c++/4.8.2/bitset" 3
{
# 967 "/usr/include/c++/4.8.2/bitset" 3
(this->_M_do_xor(__rhs));
# 968 "/usr/include/c++/4.8.2/bitset" 3
return *this;
# 969 "/usr/include/c++/4.8.2/bitset" 3
}
# 980 "/usr/include/c++/4.8.2/bitset" 3
bitset &operator<<=(std::size_t __position)
# 981 "/usr/include/c++/4.8.2/bitset" 3
{
# 982 "/usr/include/c++/4.8.2/bitset" 3
if (__builtin_expect(__position < _Nb, 1))
# 983 "/usr/include/c++/4.8.2/bitset" 3
{
# 984 "/usr/include/c++/4.8.2/bitset" 3
(this->_M_do_left_shift(__position));
# 985 "/usr/include/c++/4.8.2/bitset" 3
this->_M_do_sanitize();
# 986 "/usr/include/c++/4.8.2/bitset" 3
} else {
# 988 "/usr/include/c++/4.8.2/bitset" 3
(this->_M_do_reset()); }
# 989 "/usr/include/c++/4.8.2/bitset" 3
return *this;
# 990 "/usr/include/c++/4.8.2/bitset" 3
}
# 993 "/usr/include/c++/4.8.2/bitset" 3
bitset &operator>>=(std::size_t __position)
# 994 "/usr/include/c++/4.8.2/bitset" 3
{
# 995 "/usr/include/c++/4.8.2/bitset" 3
if (__builtin_expect(__position < _Nb, 1))
# 996 "/usr/include/c++/4.8.2/bitset" 3
{
# 997 "/usr/include/c++/4.8.2/bitset" 3
(this->_M_do_right_shift(__position));
# 998 "/usr/include/c++/4.8.2/bitset" 3
this->_M_do_sanitize();
# 999 "/usr/include/c++/4.8.2/bitset" 3
} else {
# 1001 "/usr/include/c++/4.8.2/bitset" 3
(this->_M_do_reset()); }
# 1002 "/usr/include/c++/4.8.2/bitset" 3
return *this;
# 1003 "/usr/include/c++/4.8.2/bitset" 3
}
# 1013 "/usr/include/c++/4.8.2/bitset" 3
bitset &_Unchecked_set(std::size_t __pos)
# 1014 "/usr/include/c++/4.8.2/bitset" 3
{
# 1015 "/usr/include/c++/4.8.2/bitset" 3
(this->_M_getword(__pos)) |= _Base::_S_maskbit(__pos);
# 1016 "/usr/include/c++/4.8.2/bitset" 3
return *this;
# 1017 "/usr/include/c++/4.8.2/bitset" 3
}
# 1020 "/usr/include/c++/4.8.2/bitset" 3
bitset &_Unchecked_set(std::size_t __pos, int __val)
# 1021 "/usr/include/c++/4.8.2/bitset" 3
{
# 1022 "/usr/include/c++/4.8.2/bitset" 3
if (__val) {
# 1023 "/usr/include/c++/4.8.2/bitset" 3
(this->_M_getword(__pos)) |= _Base::_S_maskbit(__pos); } else {
# 1025 "/usr/include/c++/4.8.2/bitset" 3
(this->_M_getword(__pos)) &= (~_Base::_S_maskbit(__pos)); }
# 1026 "/usr/include/c++/4.8.2/bitset" 3
return *this;
# 1027 "/usr/include/c++/4.8.2/bitset" 3
}
# 1030 "/usr/include/c++/4.8.2/bitset" 3
bitset &_Unchecked_reset(std::size_t __pos)
# 1031 "/usr/include/c++/4.8.2/bitset" 3
{
# 1032 "/usr/include/c++/4.8.2/bitset" 3
(this->_M_getword(__pos)) &= (~_Base::_S_maskbit(__pos));
# 1033 "/usr/include/c++/4.8.2/bitset" 3
return *this;
# 1034 "/usr/include/c++/4.8.2/bitset" 3
}
# 1037 "/usr/include/c++/4.8.2/bitset" 3
bitset &_Unchecked_flip(std::size_t __pos)
# 1038 "/usr/include/c++/4.8.2/bitset" 3
{
# 1039 "/usr/include/c++/4.8.2/bitset" 3
(this->_M_getword(__pos)) ^= _Base::_S_maskbit(__pos);
# 1040 "/usr/include/c++/4.8.2/bitset" 3
return *this;
# 1041 "/usr/include/c++/4.8.2/bitset" 3
}
# 1044 "/usr/include/c++/4.8.2/bitset" 3
bool _Unchecked_test(std::size_t __pos) const
# 1045 "/usr/include/c++/4.8.2/bitset" 3
{ return ((this->_M_getword(__pos)) & _Base::_S_maskbit(__pos)) != (static_cast< _WordT>(0));
# 1046 "/usr/include/c++/4.8.2/bitset" 3
}
# 1054 "/usr/include/c++/4.8.2/bitset" 3
bitset &set()
# 1055 "/usr/include/c++/4.8.2/bitset" 3
{
# 1056 "/usr/include/c++/4.8.2/bitset" 3
(this->_M_do_set());
# 1057 "/usr/include/c++/4.8.2/bitset" 3
this->_M_do_sanitize();
# 1058 "/usr/include/c++/4.8.2/bitset" 3
return *this;
# 1059 "/usr/include/c++/4.8.2/bitset" 3
}
# 1068 "/usr/include/c++/4.8.2/bitset" 3
bitset &set(std::size_t __position, bool __val = true)
# 1069 "/usr/include/c++/4.8.2/bitset" 3
{
# 1070 "/usr/include/c++/4.8.2/bitset" 3
if (__position >= _Nb) {
# 1071 "/usr/include/c++/4.8.2/bitset" 3
__throw_out_of_range("bitset::set"); }
# 1072 "/usr/include/c++/4.8.2/bitset" 3
return this->_Unchecked_set(__position, __val);
# 1073 "/usr/include/c++/4.8.2/bitset" 3
}
# 1079 "/usr/include/c++/4.8.2/bitset" 3
bitset &reset()
# 1080 "/usr/include/c++/4.8.2/bitset" 3
{
# 1081 "/usr/include/c++/4.8.2/bitset" 3
(this->_M_do_reset());
# 1082 "/usr/include/c++/4.8.2/bitset" 3
return *this;
# 1083 "/usr/include/c++/4.8.2/bitset" 3
}
# 1093 "/usr/include/c++/4.8.2/bitset" 3
bitset &reset(std::size_t __position)
# 1094 "/usr/include/c++/4.8.2/bitset" 3
{
# 1095 "/usr/include/c++/4.8.2/bitset" 3
if (__position >= _Nb) {
# 1096 "/usr/include/c++/4.8.2/bitset" 3
__throw_out_of_range("bitset::reset"); }
# 1097 "/usr/include/c++/4.8.2/bitset" 3
return _Unchecked_reset(__position);
# 1098 "/usr/include/c++/4.8.2/bitset" 3
}
# 1104 "/usr/include/c++/4.8.2/bitset" 3
bitset &flip()
# 1105 "/usr/include/c++/4.8.2/bitset" 3
{
# 1106 "/usr/include/c++/4.8.2/bitset" 3
(this->_M_do_flip());
# 1107 "/usr/include/c++/4.8.2/bitset" 3
this->_M_do_sanitize();
# 1108 "/usr/include/c++/4.8.2/bitset" 3
return *this;
# 1109 "/usr/include/c++/4.8.2/bitset" 3
}
# 1117 "/usr/include/c++/4.8.2/bitset" 3
bitset &flip(std::size_t __position)
# 1118 "/usr/include/c++/4.8.2/bitset" 3
{
# 1119 "/usr/include/c++/4.8.2/bitset" 3
if (__position >= _Nb) {
# 1120 "/usr/include/c++/4.8.2/bitset" 3
__throw_out_of_range("bitset::flip"); }
# 1121 "/usr/include/c++/4.8.2/bitset" 3
return _Unchecked_flip(__position);
# 1122 "/usr/include/c++/4.8.2/bitset" 3
}
# 1126 "/usr/include/c++/4.8.2/bitset" 3
bitset operator~() const
# 1127 "/usr/include/c++/4.8.2/bitset" 3
{ return (((bitset)(*this)).flip()); }
# 1145 "/usr/include/c++/4.8.2/bitset" 3
reference operator[](std::size_t __position)
# 1146 "/usr/include/c++/4.8.2/bitset" 3
{ return reference(*this, __position); }
# 1149 "/usr/include/c++/4.8.2/bitset" 3
bool operator[](std::size_t __position) const
# 1150 "/usr/include/c++/4.8.2/bitset" 3
{ return _Unchecked_test(__position); }
# 1160 "/usr/include/c++/4.8.2/bitset" 3
unsigned long to_ulong() const
# 1161 "/usr/include/c++/4.8.2/bitset" 3
{ return (this->_M_do_to_ulong()); }
# 1177 "/usr/include/c++/4.8.2/bitset" 3
template< class _CharT, class _Traits, class _Alloc> basic_string< _CharT, _Traits, _Alloc>
# 1179 "/usr/include/c++/4.8.2/bitset" 3
to_string() const
# 1180 "/usr/include/c++/4.8.2/bitset" 3
{
# 1181 "/usr/include/c++/4.8.2/bitset" 3
basic_string< _CharT, _Traits, _Alloc> __result;
# 1182 "/usr/include/c++/4.8.2/bitset" 3
_M_copy_to_string(__result, (_CharT)'0', (_CharT)'1');
# 1183 "/usr/include/c++/4.8.2/bitset" 3
return __result;
# 1184 "/usr/include/c++/4.8.2/bitset" 3
}
# 1188 "/usr/include/c++/4.8.2/bitset" 3
template< class _CharT, class _Traits, class _Alloc> basic_string< _CharT, _Traits, _Alloc>
# 1190 "/usr/include/c++/4.8.2/bitset" 3
to_string(_CharT __zero, _CharT __one = (_CharT)'1') const
# 1191 "/usr/include/c++/4.8.2/bitset" 3
{
# 1192 "/usr/include/c++/4.8.2/bitset" 3
basic_string< _CharT, _Traits, _Alloc> __result;
# 1193 "/usr/include/c++/4.8.2/bitset" 3
_M_copy_to_string(__result, __zero, __one);
# 1194 "/usr/include/c++/4.8.2/bitset" 3
return __result;
# 1195 "/usr/include/c++/4.8.2/bitset" 3
}
# 1199 "/usr/include/c++/4.8.2/bitset" 3
template< class _CharT, class _Traits> basic_string< _CharT, _Traits, allocator< _CharT> >
# 1201 "/usr/include/c++/4.8.2/bitset" 3
to_string() const
# 1202 "/usr/include/c++/4.8.2/bitset" 3
{ return to_string< _CharT, _Traits, allocator< _CharT> > (); }
# 1206 "/usr/include/c++/4.8.2/bitset" 3
template< class _CharT, class _Traits> basic_string< _CharT, _Traits, allocator< _CharT> >
# 1208 "/usr/include/c++/4.8.2/bitset" 3
to_string(_CharT __zero, _CharT __one = (_CharT)'1') const
# 1209 "/usr/include/c++/4.8.2/bitset" 3
{ return to_string< _CharT, _Traits, allocator< _CharT> > (__zero, __one);
# 1210 "/usr/include/c++/4.8.2/bitset" 3
}
# 1212 "/usr/include/c++/4.8.2/bitset" 3
template< class _CharT> basic_string< _CharT, char_traits< _CharT> , allocator< _CharT> >
# 1215 "/usr/include/c++/4.8.2/bitset" 3
to_string() const
# 1216 "/usr/include/c++/4.8.2/bitset" 3
{
# 1217 "/usr/include/c++/4.8.2/bitset" 3
return to_string< _CharT, char_traits< _CharT> , allocator< _CharT> > ();
# 1219 "/usr/include/c++/4.8.2/bitset" 3
}
# 1221 "/usr/include/c++/4.8.2/bitset" 3
template< class _CharT> basic_string< _CharT, char_traits< _CharT> , allocator< _CharT> >
# 1224 "/usr/include/c++/4.8.2/bitset" 3
to_string(_CharT __zero, _CharT __one = (_CharT)'1') const
# 1225 "/usr/include/c++/4.8.2/bitset" 3
{
# 1226 "/usr/include/c++/4.8.2/bitset" 3
return to_string< _CharT, char_traits< _CharT> , allocator< _CharT> > (__zero, __one);
# 1228 "/usr/include/c++/4.8.2/bitset" 3
}
# 1231 "/usr/include/c++/4.8.2/bitset" 3
std::basic_string< char, std::char_traits< char> , std::allocator< char> > to_string() const
# 1232 "/usr/include/c++/4.8.2/bitset" 3
{
# 1233 "/usr/include/c++/4.8.2/bitset" 3
return to_string< char, std::char_traits< char> , std::allocator< char> > ();
# 1235 "/usr/include/c++/4.8.2/bitset" 3
}
# 1238 "/usr/include/c++/4.8.2/bitset" 3
std::basic_string< char, std::char_traits< char> , std::allocator< char> > to_string(char __zero, char __one = '1') const
# 1239 "/usr/include/c++/4.8.2/bitset" 3
{
# 1240 "/usr/include/c++/4.8.2/bitset" 3
return to_string< char, std::char_traits< char> , std::allocator< char> > (__zero, __one);
# 1242 "/usr/include/c++/4.8.2/bitset" 3
}
# 1245 "/usr/include/c++/4.8.2/bitset" 3
template< class _CharT, class _Traits> void _M_copy_from_ptr(const _CharT *, std::size_t, std::size_t, std::size_t, _CharT, _CharT);
# 1250 "/usr/include/c++/4.8.2/bitset" 3
template< class _CharT, class _Traits, class _Alloc> void
# 1252 "/usr/include/c++/4.8.2/bitset" 3
_M_copy_from_string(const basic_string< _CharT, _Traits, _Alloc> &
# 1253 "/usr/include/c++/4.8.2/bitset" 3
__s, std::size_t __pos, std::size_t __n, _CharT
# 1254 "/usr/include/c++/4.8.2/bitset" 3
__zero, _CharT __one)
# 1255 "/usr/include/c++/4.8.2/bitset" 3
{ _M_copy_from_ptr< _CharT, _Traits> ((__s.data()), (__s.size()), __pos, __n, __zero, __one);
# 1256 "/usr/include/c++/4.8.2/bitset" 3
}
# 1258 "/usr/include/c++/4.8.2/bitset" 3
template< class _CharT, class _Traits, class _Alloc> void _M_copy_to_string(basic_string< _CharT, _Traits, _Alloc> &, _CharT, _CharT) const;
# 1264 "/usr/include/c++/4.8.2/bitset" 3
template< class _CharT, class _Traits, class _Alloc> void
# 1266 "/usr/include/c++/4.8.2/bitset" 3
_M_copy_from_string(const basic_string< _CharT, _Traits, _Alloc> &
# 1267 "/usr/include/c++/4.8.2/bitset" 3
__s, std::size_t __pos, std::size_t __n)
# 1268 "/usr/include/c++/4.8.2/bitset" 3
{ _M_copy_from_string(__s, __pos, __n, (_CharT)'0', (_CharT)'1'); }
# 1270 "/usr/include/c++/4.8.2/bitset" 3
template< class _CharT, class _Traits, class _Alloc> void
# 1272 "/usr/include/c++/4.8.2/bitset" 3
_M_copy_to_string(basic_string< _CharT, _Traits, _Alloc> &__s) const
# 1273 "/usr/include/c++/4.8.2/bitset" 3
{ _M_copy_to_string(__s, (_CharT)'0', (_CharT)'1'); }
# 1277 "/usr/include/c++/4.8.2/bitset" 3
std::size_t count() const
# 1278 "/usr/include/c++/4.8.2/bitset" 3
{ return (this->_M_do_count()); }
# 1282 "/usr/include/c++/4.8.2/bitset" 3
std::size_t size() const
# 1283 "/usr/include/c++/4.8.2/bitset" 3
{ return _Nb; }
# 1288 "/usr/include/c++/4.8.2/bitset" 3
bool operator==(const bitset &__rhs) const
# 1289 "/usr/include/c++/4.8.2/bitset" 3
{ return (this->_M_is_equal(__rhs)); }
# 1292 "/usr/include/c++/4.8.2/bitset" 3
bool operator!=(const bitset &__rhs) const
# 1293 "/usr/include/c++/4.8.2/bitset" 3
{ return !(this->_M_is_equal(__rhs)); }
# 1303 "/usr/include/c++/4.8.2/bitset" 3
bool test(std::size_t __position) const
# 1304 "/usr/include/c++/4.8.2/bitset" 3
{
# 1305 "/usr/include/c++/4.8.2/bitset" 3
if (__position >= _Nb) {
# 1306 "/usr/include/c++/4.8.2/bitset" 3
__throw_out_of_range("bitset::test"); }
# 1307 "/usr/include/c++/4.8.2/bitset" 3
return _Unchecked_test(__position);
# 1308 "/usr/include/c++/4.8.2/bitset" 3
}
# 1317 "/usr/include/c++/4.8.2/bitset" 3
bool all() const
# 1318 "/usr/include/c++/4.8.2/bitset" 3
{ return (this->template _M_are_all< _Nb> ()); }
# 1325 "/usr/include/c++/4.8.2/bitset" 3
bool any() const
# 1326 "/usr/include/c++/4.8.2/bitset" 3
{ return (this->_M_is_any()); }
# 1333 "/usr/include/c++/4.8.2/bitset" 3
bool none() const
# 1334 "/usr/include/c++/4.8.2/bitset" 3
{ return !(this->_M_is_any()); }
# 1339 "/usr/include/c++/4.8.2/bitset" 3
bitset operator<<(std::size_t __position) const
# 1340 "/usr/include/c++/4.8.2/bitset" 3
{ return ((bitset)(*this)) <<= __position; }
# 1343 "/usr/include/c++/4.8.2/bitset" 3
bitset operator>>(std::size_t __position) const
# 1344 "/usr/include/c++/4.8.2/bitset" 3
{ return ((bitset)(*this)) >>= __position; }
# 1354 "/usr/include/c++/4.8.2/bitset" 3
std::size_t _Find_first() const
# 1355 "/usr/include/c++/4.8.2/bitset" 3
{ return (this->_M_do_find_first(_Nb)); }
# 1365 "/usr/include/c++/4.8.2/bitset" 3
std::size_t _Find_next(std::size_t __prev) const
# 1366 "/usr/include/c++/4.8.2/bitset" 3
{ return (this->_M_do_find_next(__prev, _Nb)); }
# 1367 "/usr/include/c++/4.8.2/bitset" 3
};
# 1370 "/usr/include/c++/4.8.2/bitset" 3
template< size_t _Nb>
# 1371 "/usr/include/c++/4.8.2/bitset" 3
template< class _CharT, class _Traits> void
# 1374 "/usr/include/c++/4.8.2/bitset" 3
bitset< _Nb> ::_M_copy_from_ptr(const _CharT *__s, std::size_t __len, std::size_t
# 1375 "/usr/include/c++/4.8.2/bitset" 3
__pos, std::size_t __n, _CharT __zero, _CharT __one)
# 1376 "/usr/include/c++/4.8.2/bitset" 3
{
# 1377 "/usr/include/c++/4.8.2/bitset" 3
this->reset();
# 1378 "/usr/include/c++/4.8.2/bitset" 3
const std::size_t __nbits = std::min(_Nb, std::min(__n, (std::size_t)(__len - __pos)));
# 1379 "/usr/include/c++/4.8.2/bitset" 3
for (std::size_t __i = __nbits; __i > (0); --__i)
# 1380 "/usr/include/c++/4.8.2/bitset" 3
{
# 1381 "/usr/include/c++/4.8.2/bitset" 3
const _CharT __c = __s[(__pos + __nbits) - __i];
# 1382 "/usr/include/c++/4.8.2/bitset" 3
if (_Traits::eq(__c, __zero)) {
# 1383 "/usr/include/c++/4.8.2/bitset" 3
; } else {
# 1384 "/usr/include/c++/4.8.2/bitset" 3
if (_Traits::eq(__c, __one)) {
# 1385 "/usr/include/c++/4.8.2/bitset" 3
this->_Unchecked_set(__i - (1)); } else {
# 1387 "/usr/include/c++/4.8.2/bitset" 3
__throw_invalid_argument("bitset::_M_copy_from_ptr"); } }
# 1388 "/usr/include/c++/4.8.2/bitset" 3
}
# 1389 "/usr/include/c++/4.8.2/bitset" 3
}
# 1391 "/usr/include/c++/4.8.2/bitset" 3
template< size_t _Nb>
# 1392 "/usr/include/c++/4.8.2/bitset" 3
template< class _CharT, class _Traits, class _Alloc> void
# 1395 "/usr/include/c++/4.8.2/bitset" 3
bitset< _Nb> ::_M_copy_to_string(basic_string< _CharT, _Traits, _Alloc> &__s, _CharT
# 1396 "/usr/include/c++/4.8.2/bitset" 3
__zero, _CharT __one) const
# 1397 "/usr/include/c++/4.8.2/bitset" 3
{
# 1398 "/usr/include/c++/4.8.2/bitset" 3
(__s.assign(_Nb, __zero));
# 1399 "/usr/include/c++/4.8.2/bitset" 3
for (std::size_t __i = _Nb; __i > (0); --__i) {
# 1400 "/usr/include/c++/4.8.2/bitset" 3
if (_Unchecked_test(__i - (1))) {
# 1401 "/usr/include/c++/4.8.2/bitset" 3
_Traits::assign(__s[_Nb - __i], __one); } }
# 1402 "/usr/include/c++/4.8.2/bitset" 3
}
# 1414 "/usr/include/c++/4.8.2/bitset" 3
template< size_t _Nb> inline bitset< _Nb>
# 1416 "/usr/include/c++/4.8.2/bitset" 3
operator&(const bitset< _Nb> &__x, const bitset< _Nb> &__y)
# 1417 "/usr/include/c++/4.8.2/bitset" 3
{
# 1418 "/usr/include/c++/4.8.2/bitset" 3
bitset< _Nb> __result(__x);
# 1419 "/usr/include/c++/4.8.2/bitset" 3
__result &= __y;
# 1420 "/usr/include/c++/4.8.2/bitset" 3
return __result;
# 1421 "/usr/include/c++/4.8.2/bitset" 3
}
# 1423 "/usr/include/c++/4.8.2/bitset" 3
template< size_t _Nb> inline bitset< _Nb>
# 1425 "/usr/include/c++/4.8.2/bitset" 3
operator|(const bitset< _Nb> &__x, const bitset< _Nb> &__y)
# 1426 "/usr/include/c++/4.8.2/bitset" 3
{
# 1427 "/usr/include/c++/4.8.2/bitset" 3
bitset< _Nb> __result(__x);
# 1428 "/usr/include/c++/4.8.2/bitset" 3
__result |= __y;
# 1429 "/usr/include/c++/4.8.2/bitset" 3
return __result;
# 1430 "/usr/include/c++/4.8.2/bitset" 3
}
# 1432 "/usr/include/c++/4.8.2/bitset" 3
template< size_t _Nb> inline bitset< _Nb>
# 1434 "/usr/include/c++/4.8.2/bitset" 3
operator^(const bitset< _Nb> &__x, const bitset< _Nb> &__y)
# 1435 "/usr/include/c++/4.8.2/bitset" 3
{
# 1436 "/usr/include/c++/4.8.2/bitset" 3
bitset< _Nb> __result(__x);
# 1437 "/usr/include/c++/4.8.2/bitset" 3
__result ^= __y;
# 1438 "/usr/include/c++/4.8.2/bitset" 3
return __result;
# 1439 "/usr/include/c++/4.8.2/bitset" 3
}
# 1451 "/usr/include/c++/4.8.2/bitset" 3
template< class _CharT, class _Traits, size_t _Nb> basic_istream< _CharT, _Traits> &
# 1453 "/usr/include/c++/4.8.2/bitset" 3
operator>>(basic_istream< _CharT, _Traits> &__is, bitset< _Nb> &__x)
# 1454 "/usr/include/c++/4.8.2/bitset" 3
{
# 1455 "/usr/include/c++/4.8.2/bitset" 3
typedef typename _Traits::char_type char_type;
# 1456 "/usr/include/c++/4.8.2/bitset" 3
typedef basic_istream< _CharT, _Traits> __istream_type;
# 1457 "/usr/include/c++/4.8.2/bitset" 3
typedef typename basic_istream< _CharT, _Traits> ::ios_base __ios_base;
# 1459 "/usr/include/c++/4.8.2/bitset" 3
basic_string< _CharT, _Traits, allocator< _CharT> > __tmp;
# 1460 "/usr/include/c++/4.8.2/bitset" 3
(__tmp.reserve(_Nb));
# 1464 "/usr/include/c++/4.8.2/bitset" 3
const char_type __zero = (__is.widen('0'));
# 1465 "/usr/include/c++/4.8.2/bitset" 3
const char_type __one = (__is.widen('1'));
# 1467 "/usr/include/c++/4.8.2/bitset" 3
typename basic_istream< _CharT, _Traits> ::ios_base::iostate __state = (__ios_base::goodbit);
# 1468 "/usr/include/c++/4.8.2/bitset" 3
typename basic_istream< _CharT, _Traits> ::sentry __sentry(__is);
# 1469 "/usr/include/c++/4.8.2/bitset" 3
if (__sentry)
# 1470 "/usr/include/c++/4.8.2/bitset" 3
{
# 1471 "/usr/include/c++/4.8.2/bitset" 3
try
# 1472 "/usr/include/c++/4.8.2/bitset" 3
{
# 1473 "/usr/include/c++/4.8.2/bitset" 3
for (size_t __i = _Nb; __i > (0); --__i)
# 1474 "/usr/include/c++/4.8.2/bitset" 3
{
# 1475 "/usr/include/c++/4.8.2/bitset" 3
static typename _Traits::int_type __eof = _Traits::eof();
# 1477 "/usr/include/c++/4.8.2/bitset" 3
typename _Traits::int_type __c1 = ((__is.rdbuf())->sbumpc());
# 1478 "/usr/include/c++/4.8.2/bitset" 3
if (_Traits::eq_int_type(__c1, __eof))
# 1479 "/usr/include/c++/4.8.2/bitset" 3
{
# 1480 "/usr/include/c++/4.8.2/bitset" 3
__state |= __ios_base::eofbit;
# 1481 "/usr/include/c++/4.8.2/bitset" 3
break;
# 1482 "/usr/include/c++/4.8.2/bitset" 3
} else
# 1484 "/usr/include/c++/4.8.2/bitset" 3
{
# 1485 "/usr/include/c++/4.8.2/bitset" 3
const char_type __c2 = _Traits::to_char_type(__c1);
# 1486 "/usr/include/c++/4.8.2/bitset" 3
if (_Traits::eq(__c2, __zero)) {
# 1487 "/usr/include/c++/4.8.2/bitset" 3
(__tmp.push_back(__zero)); } else {
# 1488 "/usr/include/c++/4.8.2/bitset" 3
if (_Traits::eq(__c2, __one)) {
# 1489 "/usr/include/c++/4.8.2/bitset" 3
(__tmp.push_back(__one)); } else {
# 1490 "/usr/include/c++/4.8.2/bitset" 3
if (_Traits::eq_int_type(((__is.rdbuf())->sputbackc(__c2)), __eof))
# 1493 "/usr/include/c++/4.8.2/bitset" 3
{
# 1494 "/usr/include/c++/4.8.2/bitset" 3
__state |= __ios_base::failbit;
# 1495 "/usr/include/c++/4.8.2/bitset" 3
break;
# 1496 "/usr/include/c++/4.8.2/bitset" 3
} } }
# 1497 "/usr/include/c++/4.8.2/bitset" 3
}
# 1498 "/usr/include/c++/4.8.2/bitset" 3
}
# 1499 "/usr/include/c++/4.8.2/bitset" 3
}
# 1500 "/usr/include/c++/4.8.2/bitset" 3
catch (__cxxabiv1::__forced_unwind &)
# 1501 "/usr/include/c++/4.8.2/bitset" 3
{
# 1502 "/usr/include/c++/4.8.2/bitset" 3
(__is._M_setstate(__ios_base::badbit));
# 1503 "/usr/include/c++/4.8.2/bitset" 3
throw;
# 1504 "/usr/include/c++/4.8.2/bitset" 3
}
# 1505 "/usr/include/c++/4.8.2/bitset" 3
catch (...)
# 1506 "/usr/include/c++/4.8.2/bitset" 3
{ (__is._M_setstate(__ios_base::badbit)); }
# 1507 "/usr/include/c++/4.8.2/bitset" 3
}
# 1509 "/usr/include/c++/4.8.2/bitset" 3
if ((__tmp.empty()) && _Nb) {
# 1510 "/usr/include/c++/4.8.2/bitset" 3
__state |= __ios_base::failbit; } else {
# 1512 "/usr/include/c++/4.8.2/bitset" 3
(__x._M_copy_from_string(__tmp, static_cast< size_t>(0), _Nb, __zero, __one)); }
# 1514 "/usr/include/c++/4.8.2/bitset" 3
if (__state) {
# 1515 "/usr/include/c++/4.8.2/bitset" 3
(__is.setstate(__state)); }
# 1516 "/usr/include/c++/4.8.2/bitset" 3
return __is;
# 1517 "/usr/include/c++/4.8.2/bitset" 3
}
# 1519 "/usr/include/c++/4.8.2/bitset" 3
template< class _CharT, class _Traits, size_t _Nb> basic_ostream< _CharT, _Traits> &
# 1521 "/usr/include/c++/4.8.2/bitset" 3
operator<<(basic_ostream< _CharT, _Traits> &__os, const bitset< _Nb> &
# 1522 "/usr/include/c++/4.8.2/bitset" 3
__x)
# 1523 "/usr/include/c++/4.8.2/bitset" 3
{
# 1524 "/usr/include/c++/4.8.2/bitset" 3
basic_string< _CharT, _Traits, allocator< _CharT> > __tmp;
# 1528 "/usr/include/c++/4.8.2/bitset" 3
const ctype< _CharT> &__ct = use_facet< ctype< _CharT> > ((__os.getloc()));
# 1529 "/usr/include/c++/4.8.2/bitset" 3
(__x._M_copy_to_string(__tmp, (__ct.widen('0')), (__ct.widen('1'))));
# 1530 "/usr/include/c++/4.8.2/bitset" 3
return __os << __tmp;
# 1531 "/usr/include/c++/4.8.2/bitset" 3
}
# 1535 "/usr/include/c++/4.8.2/bitset" 3
}
# 254 "newhalf.hpp"
namespace half_float {
# 256 "newhalf.hpp"
class half;
# 260 "newhalf.hpp"
namespace detail {
# 275 "newhalf.hpp"
template< bool , class T, class > struct conditional { typedef T type; };
# 276 "newhalf.hpp"
template< class T, class F> struct conditional< false, T, F> { typedef F type; };
# 279 "newhalf.hpp"
template< bool > struct bool_type { };
# 280 "newhalf.hpp"
typedef bool_type< true> true_type;
# 281 "newhalf.hpp"
typedef bool_type< false> false_type;
# 284 "newhalf.hpp"
template< class > struct is_float : public false_type { };
# 285 "newhalf.hpp"
template< class T> struct is_float< const T> : public detail::is_float< T> { };
# 286 "newhalf.hpp"
template< class T> struct is_float< volatile T> : public detail::is_float< T> { };
# 287 "newhalf.hpp"
template< class T> struct is_float< const volatile T> : public detail::is_float< T> { };
# 288 "newhalf.hpp"
template<> struct is_float< float> : public true_type { };
# 289 "newhalf.hpp"
template<> struct is_float< double> : public true_type { };
# 290 "newhalf.hpp"
template<> struct is_float< long double> : public true_type { };
# 304 "newhalf.hpp"
typedef unsigned short uint16;
# 307 "newhalf.hpp"
typedef conditional< true, unsigned, unsigned long> ::type uint32;
# 310 "newhalf.hpp"
typedef conditional< true, int, long> ::type int17;
# 314 "newhalf.hpp"
struct binary_t { };
# 317 "newhalf.hpp"
const binary_t binary = binary_t();
# 321 "newhalf.hpp"
struct expr {
# 325 "newhalf.hpp"
explicit expr(float f) : value_(f) { }
# 329 "newhalf.hpp"
operator float() const { return value_; }
# 333 "newhalf.hpp"
private: float value_;
# 334 "newhalf.hpp"
};
# 340 "newhalf.hpp"
template< class T, class , class = void, class = void> struct enable { };
# 341 "newhalf.hpp"
template< class T> struct enable< T, half, void, void> { typedef T type; };
# 342 "newhalf.hpp"
template< class T> struct enable< T, expr, void, void> { typedef T type; };
# 343 "newhalf.hpp"
template< class T> struct enable< T, half, half, void> { typedef T type; };
# 344 "newhalf.hpp"
template< class T> struct enable< T, half, expr, void> { typedef T type; };
# 345 "newhalf.hpp"
template< class T> struct enable< T, expr, half, void> { typedef T type; };
# 346 "newhalf.hpp"
template< class T> struct enable< T, expr, expr, void> { typedef T type; };
# 347 "newhalf.hpp"
template< class T> struct enable< T, half, half, half> { typedef T type; };
# 348 "newhalf.hpp"
template< class T> struct enable< T, half, half, expr> { typedef T type; };
# 349 "newhalf.hpp"
template< class T> struct enable< T, half, expr, half> { typedef T type; };
# 350 "newhalf.hpp"
template< class T> struct enable< T, half, expr, expr> { typedef T type; };
# 351 "newhalf.hpp"
template< class T> struct enable< T, expr, half, half> { typedef T type; };
# 352 "newhalf.hpp"
template< class T> struct enable< T, expr, half, expr> { typedef T type; };
# 353 "newhalf.hpp"
template< class T> struct enable< T, expr, expr, half> { typedef T type; };
# 354 "newhalf.hpp"
template< class T> struct enable< T, expr, expr, expr> { typedef T type; };
# 361 "newhalf.hpp"
template< class T, class U> struct result : public enable< expr, T, U> { };
# 362 "newhalf.hpp"
template<> struct result< half, half> { typedef half type; };
# 372 "newhalf.hpp"
template< class T> bool builtin_isinf(T arg)
# 373 "newhalf.hpp"
{
# 379 "newhalf.hpp"
return (arg == std::numeric_limits< T> ::infinity()) || (arg == (-std::numeric_limits< T> ::infinity()));
# 381 "newhalf.hpp"
}
# 388 "newhalf.hpp"
template< class T> bool builtin_isnan(T arg)
# 389 "newhalf.hpp"
{
# 395 "newhalf.hpp"
return arg != arg;
# 397 "newhalf.hpp"
}
# 404 "newhalf.hpp"
template< class T> bool builtin_signbit(T arg)
# 405 "newhalf.hpp"
{
# 409 "newhalf.hpp"
return (arg < T()) || ((arg == T()) && ((((T)1) / arg) < T()));
# 411 "newhalf.hpp"
}
# 422 "newhalf.hpp"
template< std::float_round_style R> uint16 float2half_impl(float value, true_type)
# 423 "newhalf.hpp"
{
# 428 "newhalf.hpp"
static const uint16 base_table[512] = {(0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (0), (1), (2), (4), (8), (16), (32), (64), (128), (256), (512), (1024), (2048), (3072), (4096), (5120), (6144), (7168), (8192), (9216), (10240), (11264), (12288), (13312), (14336), (15360), (16384), (17408), (18432), (19456), (20480), (21504), (22528), (23552), (24576), (25600), (26624), (27648), (28672), (29696), (30720), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (31744), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32768), (32769), (32770), (32772), (32776), (32784), (32800), (32832), (32896), (33024), (33280), (33792), (34816), (35840), (36864), (37888), (38912), (39936), (40960), (41984), (43008), (44032), (45056), (46080), (47104), (48128), (49152), (50176), (51200), (52224), (53248), (54272), (55296), (56320), (57344), (58368), (59392), (60416), (61440), (62464), (63488), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512), (64512)};
# 461 "newhalf.hpp"
static const unsigned char shift_table[512] = {};
# 478 "newhalf.hpp"
uint32 bits;
# 479 "newhalf.hpp"
std::memcpy(&bits, &value, sizeof(float));
# 480 "newhalf.hpp"
uint16 hbits = (base_table[bits >> 23]) + (static_cast< uint16>((bits & (8388607)) >> (shift_table[bits >> 23])));
# 481 "newhalf.hpp"
if ((R) == (std::round_to_nearest)) {
# 482 "newhalf.hpp"
hbits += ((((bits & (8388607)) >> ((shift_table[bits >> 23]) - 1)) | (((bits >> 23) & (255)) == (102))) & ((hbits & 31744) != 31744)); } else {
# 487 "newhalf.hpp"
if ((R) == (std::round_toward_zero)) {
# 488 "newhalf.hpp"
hbits -= (((hbits & 32767) == 31744) & (~(shift_table[bits >> 23]))); } else {
# 489 "newhalf.hpp"
if ((R) == (std::round_toward_infinity)) {
# 490 "newhalf.hpp"
hbits += ((((((bits & (8388607)) & (((static_cast< uint32>(1)) << (shift_table[bits >> 23])) - (1))) != (0)) | (((bits >> 23) <= (102)) & ((bits >> 23) != (0)))) & (hbits < 31744)) - ((hbits == 64512) & ((bits >> 23) != (511)))); } else {
# 492 "newhalf.hpp"
if ((R) == (std::round_toward_neg_infinity)) {
# 493 "newhalf.hpp"
hbits += (((((((bits & (8388607)) & (((static_cast< uint32>(1)) << (shift_table[bits >> 23])) - (1))) != (0)) | (((bits >> 23) <= (358)) & ((bits >> 23) != (256)))) & (hbits < 64512)) & (hbits >> 15)) - ((hbits == 31744) & ((bits >> 23) != (255)))); } } } }
# 495 "newhalf.hpp"
return hbits;
# 496 "newhalf.hpp"
}
# 501 "newhalf.hpp"
template< std::float_round_style R> uint16 float2half_impl(float value, false_type)
# 502 "newhalf.hpp"
{
# 503 "newhalf.hpp"
uint16 hbits = (builtin_signbit(value)) << 15;
# 504 "newhalf.hpp"
if (value == (0.0F)) {
# 505 "newhalf.hpp"
return hbits; }
# 506 "newhalf.hpp"
if (builtin_isnan(value)) {
# 507 "newhalf.hpp"
return hbits | 32767; }
# 508 "newhalf.hpp"
if (builtin_isinf(value)) {
# 509 "newhalf.hpp"
return hbits | 31744; }
# 510 "newhalf.hpp"
int exp;
# 511 "newhalf.hpp"
std::frexp(value, &exp);
# 512 "newhalf.hpp"
if (exp > 16)
# 513 "newhalf.hpp"
{
# 514 "newhalf.hpp"
if ((R) == (std::round_toward_zero)) {
# 515 "newhalf.hpp"
return hbits | 31743; } else {
# 516 "newhalf.hpp"
if ((R) == (std::round_toward_infinity)) {
# 517 "newhalf.hpp"
return hbits | (31744 - (hbits >> 15)); } else {
# 518 "newhalf.hpp"
if ((R) == (std::round_toward_neg_infinity)) {
# 519 "newhalf.hpp"
return hbits | (31743 + (hbits >> 15)); } } }
# 520 "newhalf.hpp"
return hbits | 31744;
# 521 "newhalf.hpp"
}
# 522 "newhalf.hpp"
if (exp < (-13)) {
# 523 "newhalf.hpp"
value = std::ldexp(value, 24); } else
# 525 "newhalf.hpp"
{
# 526 "newhalf.hpp"
value = std::ldexp(value, 11 - exp);
# 527 "newhalf.hpp"
hbits |= ((exp + 14) << 10);
# 528 "newhalf.hpp"
}
# 529 "newhalf.hpp"
int ival = static_cast< int>(value);
# 530 "newhalf.hpp"
hbits |= (static_cast< uint16>(std::abs(ival) & 1023));
# 531 "newhalf.hpp"
if ((R) == (std::round_to_nearest))
# 532 "newhalf.hpp"
{
# 533 "newhalf.hpp"
float diff = std::abs(value - (static_cast< float>(ival)));
# 537 "newhalf.hpp"
hbits += (diff >= (0.5F));
# 539 "newhalf.hpp"
} else {
# 540 "newhalf.hpp"
if ((R) == (std::round_toward_infinity)) {
# 541 "newhalf.hpp"
hbits += (value > (static_cast< float>(ival))); } else {
# 542 "newhalf.hpp"
if ((R) == (std::round_toward_neg_infinity)) {
# 543 "newhalf.hpp"
hbits += (value < (static_cast< float>(ival))); } } }
# 544 "newhalf.hpp"
return hbits;
# 545 "newhalf.hpp"
}
# 550 "newhalf.hpp"
template< std::float_round_style R> uint16 float2half(float value)
# 551 "newhalf.hpp"
{
# 552 "newhalf.hpp"
return float2half_impl< R> (value, bool_type< true> ());
# 553 "newhalf.hpp"
}
# 561 "newhalf.hpp"
template< std::float_round_style R, bool S, class T> uint16 int2half_impl(T value)
# 562 "newhalf.hpp"
{
# 563 "newhalf.hpp"
if (S) {
# 564 "newhalf.hpp"
value = (-value); }
# 565 "newhalf.hpp"
uint16 bits = ((S) << 15);
# 566 "newhalf.hpp"
if (value > 65504)
# 567 "newhalf.hpp"
{
# 568 "newhalf.hpp"
if ((R) == (std::round_toward_infinity)) {
# 569 "newhalf.hpp"
bits |= (31744 - (S)); } else {
# 570 "newhalf.hpp"
if ((R) == (std::round_toward_neg_infinity)) {
# 571 "newhalf.hpp"
bits |= (31743 + (S)); } else {
# 573 "newhalf.hpp"
bits |= (31743 + ((R) != (std::round_toward_zero))); } }
# 574 "newhalf.hpp"
} else {
# 575 "newhalf.hpp"
if (value)
# 576 "newhalf.hpp"
{
# 577 "newhalf.hpp"
unsigned m = value, exp = (25);
# 578 "newhalf.hpp"
for (; m < (1024); (m <<= 1), (--exp)) { ; }
# 579 "newhalf.hpp"
for (; m > (2047); (m >>= 1), (++exp)) { ; }
# 580 "newhalf.hpp"
bits |= ((exp << 10) | (m & (1023)));
# 581 "newhalf.hpp"
if (exp > (25))
# 582 "newhalf.hpp"
{
# 583 "newhalf.hpp"
if ((R) == (std::round_to_nearest)) {
# 584 "newhalf.hpp"
bits += ((value >> (exp - (26))) & 1); } else {
# 589 "newhalf.hpp"
if ((R) == (std::round_toward_infinity)) {
# 590 "newhalf.hpp"
bits += (((value & ((1 << (exp - (25))) - 1)) != 0) & (!S)); } else {
# 591 "newhalf.hpp"
if ((R) == (std::round_toward_neg_infinity)) {
# 592 "newhalf.hpp"
bits += (((value & ((1 << (exp - (25))) - 1)) != 0) & S); } } }
# 593 "newhalf.hpp"
}
# 594 "newhalf.hpp"
} }
# 595 "newhalf.hpp"
return bits;
# 596 "newhalf.hpp"
}
# 603 "newhalf.hpp"
template< std::float_round_style R, class T> uint16 int2half(T value)
# 604 "newhalf.hpp"
{
# 605 "newhalf.hpp"
return (value < 0) ? int2half_impl< R, true> (value) : int2half_impl< R, false> (value);
# 606 "newhalf.hpp"
}
# 612 "newhalf.hpp"
inline float half2float_impl(uint16 value, true_type)
# 613 "newhalf.hpp"
{
# 618 "newhalf.hpp"
static const uint32 mantissa_table[2048] = {0U, 864026624U, 872415232U, 876609536U, 880803840U, 882900992U, 884998144U, 887095296U, 889192448U, 890241024U, 891289600U, 892338176U, 893386752U, 894435328U, 895483904U, 896532480U, 897581056U, 898105344U, 898629632U, 899153920U, 899678208U, 900202496U, 900726784U, 901251072U, 901775360U, 902299648U, 902823936U, 903348224U, 903872512U, 904396800U, 904921088U, 905445376U, 905969664U, 906231808U, 906493952U, 906756096U, 907018240U, 907280384U, 907542528U, 907804672U, 908066816U, 908328960U, 908591104U, 908853248U, 909115392U, 909377536U, 909639680U, 909901824U, 910163968U, 910426112U, 910688256U, 910950400U, 911212544U, 911474688U, 911736832U, 911998976U, 912261120U, 912523264U, 912785408U, 913047552U, 913309696U, 913571840U, 913833984U, 914096128U, 914358272U, 914489344U, 914620416U, 914751488U, 914882560U, 915013632U, 915144704U, 915275776U, 915406848U, 915537920U, 915668992U, 915800064U, 915931136U, 916062208U, 916193280U, 916324352U, 916455424U, 916586496U, 916717568U, 916848640U, 916979712U, 917110784U, 917241856U, 917372928U, 917504000U, 917635072U, 917766144U, 917897216U, 918028288U, 918159360U, 918290432U, 918421504U, 918552576U, 918683648U, 918814720U, 918945792U, 919076864U, 919207936U, 919339008U, 919470080U, 919601152U, 919732224U, 919863296U, 919994368U, 920125440U, 920256512U, 920387584U, 920518656U, 920649728U, 920780800U, 920911872U, 921042944U, 921174016U, 921305088U, 921436160U, 921567232U, 921698304U, 921829376U, 921960448U, 922091520U, 922222592U, 922353664U, 922484736U, 922615808U, 922746880U, 922812416U, 922877952U, 922943488U, 923009024U, 923074560U, 923140096U, 923205632U, 923271168U, 923336704U, 923402240U, 923467776U, 923533312U, 923598848U, 923664384U, 923729920U, 923795456U, 923860992U, 923926528U, 923992064U, 924057600U, 924123136U, 924188672U, 924254208U, 924319744U, 924385280U, 924450816U, 924516352U, 924581888U, 924647424U, 924712960U, 924778496U, 924844032U, 924909568U, 924975104U, 925040640U, 925106176U, 925171712U, 925237248U, 925302784U, 925368320U, 925433856U, 925499392U, 925564928U, 925630464U, 925696000U, 925761536U, 925827072U, 925892608U, 925958144U, 926023680U, 926089216U, 926154752U, 926220288U, 926285824U, 926351360U, 926416896U, 926482432U, 926547968U, 926613504U, 926679040U, 926744576U, 926810112U, 926875648U, 926941184U, 927006720U, 927072256U, 927137792U, 927203328U, 927268864U, 927334400U, 927399936U, 927465472U, 927531008U, 927596544U, 927662080U, 927727616U, 927793152U, 927858688U, 927924224U, 927989760U, 928055296U, 928120832U, 928186368U, 928251904U, 928317440U, 928382976U, 928448512U, 928514048U, 928579584U, 928645120U, 928710656U, 928776192U, 928841728U, 928907264U, 928972800U, 929038336U, 929103872U, 929169408U, 929234944U, 929300480U, 929366016U, 929431552U, 929497088U, 929562624U, 929628160U, 929693696U, 929759232U, 929824768U, 929890304U, 929955840U, 930021376U, 930086912U, 930152448U, 930217984U, 930283520U, 930349056U, 930414592U, 930480128U, 930545664U, 930611200U, 930676736U, 930742272U, 930807808U, 930873344U, 930938880U, 931004416U, 931069952U, 931135488U, 931168256U, 931201024U, 931233792U, 931266560U, 931299328U, 931332096U, 931364864U, 931397632U, 931430400U, 931463168U, 931495936U, 931528704U, 931561472U, 931594240U, 931627008U, 931659776U, 931692544U, 931725312U, 931758080U, 931790848U, 931823616U, 931856384U, 931889152U, 931921920U, 931954688U, 931987456U, 932020224U, 932052992U, 932085760U, 932118528U, 932151296U, 932184064U, 932216832U, 932249600U, 932282368U, 932315136U, 932347904U, 932380672U, 932413440U, 932446208U, 932478976U, 932511744U, 932544512U, 932577280U, 932610048U, 932642816U, 932675584U, 932708352U, 932741120U, 932773888U, 932806656U, 932839424U, 932872192U, 932904960U, 932937728U, 932970496U, 933003264U, 933036032U, 933068800U, 933101568U, 933134336U, 933167104U, 933199872U, 933232640U, 933265408U, 933298176U, 933330944U, 933363712U, 933396480U, 933429248U, 933462016U, 933494784U, 933527552U, 933560320U, 933593088U, 933625856U, 933658624U, 933691392U, 933724160U, 933756928U, 933789696U, 933822464U, 933855232U, 933888000U, 933920768U, 933953536U, 933986304U, 934019072U, 934051840U, 934084608U, 934117376U, 934150144U, 934182912U, 934215680U, 934248448U, 934281216U, 934313984U, 934346752U, 934379520U, 934412288U, 934445056U, 934477824U, 934510592U, 934543360U, 934576128U, 934608896U, 934641664U, 934674432U, 934707200U, 934739968U, 934772736U, 934805504U, 934838272U, 934871040U, 934903808U, 934936576U, 934969344U, 935002112U, 935034880U, 935067648U, 935100416U, 935133184U, 935165952U, 935198720U, 935231488U, 935264256U, 935297024U, 935329792U, 935362560U, 935395328U, 935428096U, 935460864U, 935493632U, 935526400U, 935559168U, 935591936U, 935624704U, 935657472U, 935690240U, 935723008U, 935755776U, 935788544U, 935821312U, 935854080U, 935886848U, 935919616U, 935952384U, 935985152U, 936017920U, 936050688U, 936083456U, 936116224U, 936148992U, 936181760U, 936214528U, 936247296U, 936280064U, 936312832U, 936345600U, 936378368U, 936411136U, 936443904U, 936476672U, 936509440U, 936542208U, 936574976U, 936607744U, 936640512U, 936673280U, 936706048U, 936738816U, 936771584U, 936804352U, 936837120U, 936869888U, 936902656U, 936935424U, 936968192U, 937000960U, 937033728U, 937066496U, 937099264U, 937132032U, 937164800U, 937197568U, 937230336U, 937263104U, 937295872U, 937328640U, 937361408U, 937394176U, 937426944U, 937459712U, 937492480U, 937525248U, 937558016U, 937590784U, 937623552U, 937656320U, 937689088U, 937721856U, 937754624U, 937787392U, 937820160U, 937852928U, 937885696U, 937918464U, 937951232U, 937984000U, 938016768U, 938049536U, 938082304U, 938115072U, 938147840U, 938180608U, 938213376U, 938246144U, 938278912U, 938311680U, 938344448U, 938377216U, 938409984U, 938442752U, 938475520U, 938508288U, 938541056U, 938573824U, 938606592U, 938639360U, 938672128U, 938704896U, 938737664U, 938770432U, 938803200U, 938835968U, 938868736U, 938901504U, 938934272U, 938967040U, 938999808U, 939032576U, 939065344U, 939098112U, 939130880U, 939163648U, 939196416U, 939229184U, 939261952U, 939294720U, 939327488U, 939360256U, 939393024U, 939425792U, 939458560U, 939491328U, 939524096U, 939540480U, 939556864U, 939573248U, 939589632U, 939606016U, 939622400U, 939638784U, 939655168U, 939671552U, 939687936U, 939704320U, 939720704U, 939737088U, 939753472U, 939769856U, 939786240U, 939802624U, 939819008U, 939835392U, 939851776U, 939868160U, 939884544U, 939900928U, 939917312U, 939933696U, 939950080U, 939966464U, 939982848U, 939999232U, 940015616U, 940032000U, 940048384U, 940064768U, 940081152U, 940097536U, 940113920U, 940130304U, 940146688U, 940163072U, 940179456U, 940195840U, 940212224U, 940228608U, 940244992U, 940261376U, 940277760U, 940294144U, 940310528U, 940326912U, 940343296U, 940359680U, 940376064U, 940392448U, 940408832U, 940425216U, 940441600U, 940457984U, 940474368U, 940490752U, 940507136U, 940523520U, 940539904U, 940556288U, 940572672U, 940589056U, 940605440U, 940621824U, 940638208U, 940654592U, 940670976U, 940687360U, 940703744U, 940720128U, 940736512U, 940752896U, 940769280U, 940785664U, 940802048U, 940818432U, 940834816U, 940851200U, 940867584U, 940883968U, 940900352U, 940916736U, 940933120U, 940949504U, 940965888U, 940982272U, 940998656U, 941015040U, 941031424U, 941047808U, 941064192U, 941080576U, 941096960U, 941113344U, 941129728U, 941146112U, 941162496U, 941178880U, 941195264U, 941211648U, 941228032U, 941244416U, 941260800U, 941277184U, 941293568U, 941309952U, 941326336U, 941342720U, 941359104U, 941375488U, 941391872U, 941408256U, 941424640U, 941441024U, 941457408U, 941473792U, 941490176U, 941506560U, 941522944U, 941539328U, 941555712U, 941572096U, 941588480U, 941604864U, 941621248U, 941637632U, 941654016U, 941670400U, 941686784U, 941703168U, 941719552U, 941735936U, 941752320U, 941768704U, 941785088U, 941801472U, 941817856U, 941834240U, 941850624U, 941867008U, 941883392U, 941899776U, 941916160U, 941932544U, 941948928U, 941965312U, 941981696U, 941998080U, 942014464U, 942030848U, 942047232U, 942063616U, 942080000U, 942096384U, 942112768U, 942129152U, 942145536U, 942161920U, 942178304U, 942194688U, 942211072U, 942227456U, 942243840U, 942260224U, 942276608U, 942292992U, 942309376U, 942325760U, 942342144U, 942358528U, 942374912U, 942391296U, 942407680U, 942424064U, 942440448U, 942456832U, 942473216U, 942489600U, 942505984U, 942522368U, 942538752U, 942555136U, 942571520U, 942587904U, 942604288U, 942620672U, 942637056U, 942653440U, 942669824U, 942686208U, 942702592U, 942718976U, 942735360U, 942751744U, 942768128U, 942784512U, 942800896U, 942817280U, 942833664U, 942850048U, 942866432U, 942882816U, 942899200U, 942915584U, 942931968U, 942948352U, 942964736U, 942981120U, 942997504U, 943013888U, 943030272U, 943046656U, 943063040U, 943079424U, 943095808U, 943112192U, 943128576U, 943144960U, 943161344U, 943177728U, 943194112U, 943210496U, 943226880U, 943243264U, 943259648U, 943276032U, 943292416U, 943308800U, 943325184U, 943341568U, 943357952U, 943374336U, 943390720U, 943407104U, 943423488U, 943439872U, 943456256U, 943472640U, 943489024U, 943505408U, 943521792U, 943538176U, 943554560U, 943570944U, 943587328U, 943603712U, 943620096U, 943636480U, 943652864U, 943669248U, 943685632U, 943702016U, 943718400U, 943734784U, 943751168U, 943767552U, 943783936U, 943800320U, 943816704U, 943833088U, 943849472U, 943865856U, 943882240U, 943898624U, 943915008U, 943931392U, 943947776U, 943964160U, 943980544U, 943996928U, 944013312U, 944029696U, 944046080U, 944062464U, 944078848U, 944095232U, 944111616U, 944128000U, 944144384U, 944160768U, 944177152U, 944193536U, 944209920U, 944226304U, 944242688U, 944259072U, 944275456U, 944291840U, 944308224U, 944324608U, 944340992U, 944357376U, 944373760U, 944390144U, 944406528U, 944422912U, 944439296U, 944455680U, 944472064U, 944488448U, 944504832U, 944521216U, 944537600U, 944553984U, 944570368U, 944586752U, 944603136U, 944619520U, 944635904U, 944652288U, 944668672U, 944685056U, 944701440U, 944717824U, 944734208U, 944750592U, 944766976U, 944783360U, 944799744U, 944816128U, 944832512U, 944848896U, 944865280U, 944881664U, 944898048U, 944914432U, 944930816U, 944947200U, 944963584U, 944979968U, 944996352U, 945012736U, 945029120U, 945045504U, 945061888U, 945078272U, 945094656U, 945111040U, 945127424U, 945143808U, 945160192U, 945176576U, 945192960U, 945209344U, 945225728U, 945242112U, 945258496U, 945274880U, 945291264U, 945307648U, 945324032U, 945340416U, 945356800U, 945373184U, 945389568U, 945405952U, 945422336U, 945438720U, 945455104U, 945471488U, 945487872U, 945504256U, 945520640U, 945537024U, 945553408U, 945569792U, 945586176U, 945602560U, 945618944U, 945635328U, 945651712U, 945668096U, 945684480U, 945700864U, 945717248U, 945733632U, 945750016U, 945766400U, 945782784U, 945799168U, 945815552U, 945831936U, 945848320U, 945864704U, 945881088U, 945897472U, 945913856U, 945930240U, 945946624U, 945963008U, 945979392U, 945995776U, 946012160U, 946028544U, 946044928U, 946061312U, 946077696U, 946094080U, 946110464U, 946126848U, 946143232U, 946159616U, 946176000U, 946192384U, 946208768U, 946225152U, 946241536U, 946257920U, 946274304U, 946290688U, 946307072U, 946323456U, 946339840U, 946356224U, 946372608U, 946388992U, 946405376U, 946421760U, 946438144U, 946454528U, 946470912U, 946487296U, 946503680U, 946520064U, 946536448U, 946552832U, 946569216U, 946585600U, 946601984U, 946618368U, 946634752U, 946651136U, 946667520U, 946683904U, 946700288U, 946716672U, 946733056U, 946749440U, 946765824U, 946782208U, 946798592U, 946814976U, 946831360U, 946847744U, 946864128U, 946880512U, 946896896U, 946913280U, 946929664U, 946946048U, 946962432U, 946978816U, 946995200U, 947011584U, 947027968U, 947044352U, 947060736U, 947077120U, 947093504U, 947109888U, 947126272U, 947142656U, 947159040U, 947175424U, 947191808U, 947208192U, 947224576U, 947240960U, 947257344U, 947273728U, 947290112U, 947306496U, 947322880U, 947339264U, 947355648U, 947372032U, 947388416U, 947404800U, 947421184U, 947437568U, 947453952U, 947470336U, 947486720U, 947503104U, 947519488U, 947535872U, 947552256U, 947568640U, 947585024U, 947601408U, 947617792U, 947634176U, 947650560U, 947666944U, 947683328U, 947699712U, 947716096U, 947732480U, 947748864U, 947765248U, 947781632U, 947798016U, 947814400U, 947830784U, 947847168U, 947863552U, 947879936U, 947896320U, 939524096U, 939532288U, 939540480U, 939548672U, 939556864U, 939565056U, 939573248U, 939581440U, 939589632U, 939597824U, 939606016U, 939614208U, 939622400U, 939630592U, 939638784U, 939646976U, 939655168U, 939663360U, 939671552U, 939679744U, 939687936U, 939696128U, 939704320U, 939712512U, 939720704U, 939728896U, 939737088U, 939745280U, 939753472U, 939761664U, 939769856U, 939778048U, 939786240U, 939794432U, 939802624U, 939810816U, 939819008U, 939827200U, 939835392U, 939843584U, 939851776U, 939859968U, 939868160U, 939876352U, 939884544U, 939892736U, 939900928U, 939909120U, 939917312U, 939925504U, 939933696U, 939941888U, 939950080U, 939958272U, 939966464U, 939974656U, 939982848U, 939991040U, 939999232U, 940007424U, 940015616U, 940023808U, 940032000U, 940040192U, 940048384U, 940056576U, 940064768U, 940072960U, 940081152U, 940089344U, 940097536U, 940105728U, 940113920U, 940122112U, 940130304U, 940138496U, 940146688U, 940154880U, 940163072U, 940171264U, 940179456U, 940187648U, 940195840U, 940204032U, 940212224U, 940220416U, 940228608U, 940236800U, 940244992U, 940253184U, 940261376U, 940269568U, 940277760U, 940285952U, 940294144U, 940302336U, 940310528U, 940318720U, 940326912U, 940335104U, 940343296U, 940351488U, 940359680U, 940367872U, 940376064U, 940384256U, 940392448U, 940400640U, 940408832U, 940417024U, 940425216U, 940433408U, 940441600U, 940449792U, 940457984U, 940466176U, 940474368U, 940482560U, 940490752U, 940498944U, 940507136U, 940515328U, 940523520U, 940531712U, 940539904U, 940548096U, 940556288U, 940564480U, 940572672U, 940580864U, 940589056U, 940597248U, 940605440U, 940613632U, 940621824U, 940630016U, 940638208U, 940646400U, 940654592U, 940662784U, 940670976U, 940679168U, 940687360U, 940695552U, 940703744U, 940711936U, 940720128U, 940728320U, 940736512U, 940744704U, 940752896U, 940761088U, 940769280U, 940777472U, 940785664U, 940793856U, 940802048U, 940810240U, 940818432U, 940826624U, 940834816U, 940843008U, 940851200U, 940859392U, 940867584U, 940875776U, 940883968U, 940892160U, 940900352U, 940908544U, 940916736U, 940924928U, 940933120U, 940941312U, 940949504U, 940957696U, 940965888U, 940974080U, 940982272U, 940990464U, 940998656U, 941006848U, 941015040U, 941023232U, 941031424U, 941039616U, 941047808U, 941056000U, 941064192U, 941072384U, 941080576U, 941088768U, 941096960U, 941105152U, 941113344U, 941121536U, 941129728U, 941137920U, 941146112U, 941154304U, 941162496U, 941170688U, 941178880U, 941187072U, 941195264U, 941203456U, 941211648U, 941219840U, 941228032U, 941236224U, 941244416U, 941252608U, 941260800U, 941268992U, 941277184U, 941285376U, 941293568U, 941301760U, 941309952U, 941318144U, 941326336U, 941334528U, 941342720U, 941350912U, 941359104U, 941367296U, 941375488U, 941383680U, 941391872U, 941400064U, 941408256U, 941416448U, 941424640U, 941432832U, 941441024U, 941449216U, 941457408U, 941465600U, 941473792U, 941481984U, 941490176U, 941498368U, 941506560U, 941514752U, 941522944U, 941531136U, 941539328U, 941547520U, 941555712U, 941563904U, 941572096U, 941580288U, 941588480U, 941596672U, 941604864U, 941613056U, 941621248U, 941629440U, 941637632U, 941645824U, 941654016U, 941662208U, 941670400U, 941678592U, 941686784U, 941694976U, 941703168U, 941711360U, 941719552U, 941727744U, 941735936U, 941744128U, 941752320U, 941760512U, 941768704U, 941776896U, 941785088U, 941793280U, 941801472U, 941809664U, 941817856U, 941826048U, 941834240U, 941842432U, 941850624U, 941858816U, 941867008U, 941875200U, 941883392U, 941891584U, 941899776U, 941907968U, 941916160U, 941924352U, 941932544U, 941940736U, 941948928U, 941957120U, 941965312U, 941973504U, 941981696U, 941989888U, 941998080U, 942006272U, 942014464U, 942022656U, 942030848U, 942039040U, 942047232U, 942055424U, 942063616U, 942071808U, 942080000U, 942088192U, 942096384U, 942104576U, 942112768U, 942120960U, 942129152U, 942137344U, 942145536U, 942153728U, 942161920U, 942170112U, 942178304U, 942186496U, 942194688U, 942202880U, 942211072U, 942219264U, 942227456U, 942235648U, 942243840U, 942252032U, 942260224U, 942268416U, 942276608U, 942284800U, 942292992U, 942301184U, 942309376U, 942317568U, 942325760U, 942333952U, 942342144U, 942350336U, 942358528U, 942366720U, 942374912U, 942383104U, 942391296U, 942399488U, 942407680U, 942415872U, 942424064U, 942432256U, 942440448U, 942448640U, 942456832U, 942465024U, 942473216U, 942481408U, 942489600U, 942497792U, 942505984U, 942514176U, 942522368U, 942530560U, 942538752U, 942546944U, 942555136U, 942563328U, 942571520U, 942579712U, 942587904U, 942596096U, 942604288U, 942612480U, 942620672U, 942628864U, 942637056U, 942645248U, 942653440U, 942661632U, 942669824U, 942678016U, 942686208U, 942694400U, 942702592U, 942710784U, 942718976U, 942727168U, 942735360U, 942743552U, 942751744U, 942759936U, 942768128U, 942776320U, 942784512U, 942792704U, 942800896U, 942809088U, 942817280U, 942825472U, 942833664U, 942841856U, 942850048U, 942858240U, 942866432U, 942874624U, 942882816U, 942891008U, 942899200U, 942907392U, 942915584U, 942923776U, 942931968U, 942940160U, 942948352U, 942956544U, 942964736U, 942972928U, 942981120U, 942989312U, 942997504U, 943005696U, 943013888U, 943022080U, 943030272U, 943038464U, 943046656U, 943054848U, 943063040U, 943071232U, 943079424U, 943087616U, 943095808U, 943104000U, 943112192U, 943120384U, 943128576U, 943136768U, 943144960U, 943153152U, 943161344U, 943169536U, 943177728U, 943185920U, 943194112U, 943202304U, 943210496U, 943218688U, 943226880U, 943235072U, 943243264U, 943251456U, 943259648U, 943267840U, 943276032U, 943284224U, 943292416U, 943300608U, 943308800U, 943316992U, 943325184U, 943333376U, 943341568U, 943349760U, 943357952U, 943366144U, 943374336U, 943382528U, 943390720U, 943398912U, 943407104U, 943415296U, 943423488U, 943431680U, 943439872U, 943448064U, 943456256U, 943464448U, 943472640U, 943480832U, 943489024U, 943497216U, 943505408U, 943513600U, 943521792U, 943529984U, 943538176U, 943546368U, 943554560U, 943562752U, 943570944U, 943579136U, 943587328U, 943595520U, 943603712U, 943611904U, 943620096U, 943628288U, 943636480U, 943644672U, 943652864U, 943661056U, 943669248U, 943677440U, 943685632U, 943693824U, 943702016U, 943710208U, 943718400U, 943726592U, 943734784U, 943742976U, 943751168U, 943759360U, 943767552U, 943775744U, 943783936U, 943792128U, 943800320U, 943808512U, 943816704U, 943824896U, 943833088U, 943841280U, 943849472U, 943857664U, 943865856U, 943874048U, 943882240U, 943890432U, 943898624U, 943906816U, 943915008U, 943923200U, 943931392U, 943939584U, 943947776U, 943955968U, 943964160U, 943972352U, 943980544U, 943988736U, 943996928U, 944005120U, 944013312U, 944021504U, 944029696U, 944037888U, 944046080U, 944054272U, 944062464U, 944070656U, 944078848U, 944087040U, 944095232U, 944103424U, 944111616U, 944119808U, 944128000U, 944136192U, 944144384U, 944152576U, 944160768U, 944168960U, 944177152U, 944185344U, 944193536U, 944201728U, 944209920U, 944218112U, 944226304U, 944234496U, 944242688U, 944250880U, 944259072U, 944267264U, 944275456U, 944283648U, 944291840U, 944300032U, 944308224U, 944316416U, 944324608U, 944332800U, 944340992U, 944349184U, 944357376U, 944365568U, 944373760U, 944381952U, 944390144U, 944398336U, 944406528U, 944414720U, 944422912U, 944431104U, 944439296U, 944447488U, 944455680U, 944463872U, 944472064U, 944480256U, 944488448U, 944496640U, 944504832U, 944513024U, 944521216U, 944529408U, 944537600U, 944545792U, 944553984U, 944562176U, 944570368U, 944578560U, 944586752U, 944594944U, 944603136U, 944611328U, 944619520U, 944627712U, 944635904U, 944644096U, 944652288U, 944660480U, 944668672U, 944676864U, 944685056U, 944693248U, 944701440U, 944709632U, 944717824U, 944726016U, 944734208U, 944742400U, 944750592U, 944758784U, 944766976U, 944775168U, 944783360U, 944791552U, 944799744U, 944807936U, 944816128U, 944824320U, 944832512U, 944840704U, 944848896U, 944857088U, 944865280U, 944873472U, 944881664U, 944889856U, 944898048U, 944906240U, 944914432U, 944922624U, 944930816U, 944939008U, 944947200U, 944955392U, 944963584U, 944971776U, 944979968U, 944988160U, 944996352U, 945004544U, 945012736U, 945020928U, 945029120U, 945037312U, 945045504U, 945053696U, 945061888U, 945070080U, 945078272U, 945086464U, 945094656U, 945102848U, 945111040U, 945119232U, 945127424U, 945135616U, 945143808U, 945152000U, 945160192U, 945168384U, 945176576U, 945184768U, 945192960U, 945201152U, 945209344U, 945217536U, 945225728U, 945233920U, 945242112U, 945250304U, 945258496U, 945266688U, 945274880U, 945283072U, 945291264U, 945299456U, 945307648U, 945315840U, 945324032U, 945332224U, 945340416U, 945348608U, 945356800U, 945364992U, 945373184U, 945381376U, 945389568U, 945397760U, 945405952U, 945414144U, 945422336U, 945430528U, 945438720U, 945446912U, 945455104U, 945463296U, 945471488U, 945479680U, 945487872U, 945496064U, 945504256U, 945512448U, 945520640U, 945528832U, 945537024U, 945545216U, 945553408U, 945561600U, 945569792U, 945577984U, 945586176U, 945594368U, 945602560U, 945610752U, 945618944U, 945627136U, 945635328U, 945643520U, 945651712U, 945659904U, 945668096U, 945676288U, 945684480U, 945692672U, 945700864U, 945709056U, 945717248U, 945725440U, 945733632U, 945741824U, 945750016U, 945758208U, 945766400U, 945774592U, 945782784U, 945790976U, 945799168U, 945807360U, 945815552U, 945823744U, 945831936U, 945840128U, 945848320U, 945856512U, 945864704U, 945872896U, 945881088U, 945889280U, 945897472U, 945905664U, 945913856U, 945922048U, 945930240U, 945938432U, 945946624U, 945954816U, 945963008U, 945971200U, 945979392U, 945987584U, 945995776U, 946003968U, 946012160U, 946020352U, 946028544U, 946036736U, 946044928U, 946053120U, 946061312U, 946069504U, 946077696U, 946085888U, 946094080U, 946102272U, 946110464U, 946118656U, 946126848U, 946135040U, 946143232U, 946151424U, 946159616U, 946167808U, 946176000U, 946184192U, 946192384U, 946200576U, 946208768U, 946216960U, 946225152U, 946233344U, 946241536U, 946249728U, 946257920U, 946266112U, 946274304U, 946282496U, 946290688U, 946298880U, 946307072U, 946315264U, 946323456U, 946331648U, 946339840U, 946348032U, 946356224U, 946364416U, 946372608U, 946380800U, 946388992U, 946397184U, 946405376U, 946413568U, 946421760U, 946429952U, 946438144U, 946446336U, 946454528U, 946462720U, 946470912U, 946479104U, 946487296U, 946495488U, 946503680U, 946511872U, 946520064U, 946528256U, 946536448U, 946544640U, 946552832U, 946561024U, 946569216U, 946577408U, 946585600U, 946593792U, 946601984U, 946610176U, 946618368U, 946626560U, 946634752U, 946642944U, 946651136U, 946659328U, 946667520U, 946675712U, 946683904U, 946692096U, 946700288U, 946708480U, 946716672U, 946724864U, 946733056U, 946741248U, 946749440U, 946757632U, 946765824U, 946774016U, 946782208U, 946790400U, 946798592U, 946806784U, 946814976U, 946823168U, 946831360U, 946839552U, 946847744U, 946855936U, 946864128U, 946872320U, 946880512U, 946888704U, 946896896U, 946905088U, 946913280U, 946921472U, 946929664U, 946937856U, 946946048U, 946954240U, 946962432U, 946970624U, 946978816U, 946987008U, 946995200U, 947003392U, 947011584U, 947019776U, 947027968U, 947036160U, 947044352U, 947052544U, 947060736U, 947068928U, 947077120U, 947085312U, 947093504U, 947101696U, 947109888U, 947118080U, 947126272U, 947134464U, 947142656U, 947150848U, 947159040U, 947167232U, 947175424U, 947183616U, 947191808U, 947200000U, 947208192U, 947216384U, 947224576U, 947232768U, 947240960U, 947249152U, 947257344U, 947265536U, 947273728U, 947281920U, 947290112U, 947298304U, 947306496U, 947314688U, 947322880U, 947331072U, 947339264U, 947347456U, 947355648U, 947363840U, 947372032U, 947380224U, 947388416U, 947396608U, 947404800U, 947412992U, 947421184U, 947429376U, 947437568U, 947445760U, 947453952U, 947462144U, 947470336U, 947478528U, 947486720U, 947494912U, 947503104U, 947511296U, 947519488U, 947527680U, 947535872U, 947544064U, 947552256U, 947560448U, 947568640U, 947576832U, 947585024U, 947593216U, 947601408U, 947609600U, 947617792U, 947625984U, 947634176U, 947642368U, 947650560U, 947658752U, 947666944U, 947675136U, 947683328U, 947691520U, 947699712U, 947707904U, 947716096U, 947724288U, 947732480U, 947740672U, 947748864U, 947757056U, 947765248U, 947773440U, 947781632U, 947789824U, 947798016U, 947806208U, 947814400U, 947822592U, 947830784U, 947838976U, 947847168U, 947855360U, 947863552U, 947871744U, 947879936U, 947888128U, 947896320U, 947904512U};
# 747 "newhalf.hpp"
static const uint32 exponent_table[64] = {(0), (8388608), (16777216), (25165824), (33554432), (41943040), (50331648), (58720256), (67108864), (75497472), (83886080), (92274688), (100663296), (109051904), (117440512), (125829120), (134217728), (142606336), (150994944), (159383552), (167772160), (176160768), (184549376), (192937984), (201326592), (209715200), (218103808), (226492416), (234881024), (243269632), (251658240), (1199570944), 2147483648U, 2155872256U, 2164260864U, 2172649472U, 2181038080U, 2189426688U, 2197815296U, 2206203904U, 2214592512U, 2222981120U, 2231369728U, 2239758336U, 2248146944U, 2256535552U, 2264924160U, 2273312768U, 2281701376U, 2290089984U, 2298478592U, 2306867200U, 2315255808U, 2323644416U, 2332033024U, 2340421632U, 2348810240U, 2357198848U, 2365587456U, 2373976064U, 2382364672U, 2390753280U, 2399141888U, 3347054592U};
# 752 "newhalf.hpp"
static const unsigned short offset_table[64] = {};
# 755 "newhalf.hpp"
uint32 bits = (mantissa_table[(offset_table[value >> 10]) + (value & 1023)]) + (exponent_table[value >> 10]);
# 758 "newhalf.hpp"
float out;
# 759 "newhalf.hpp"
std::memcpy(&out, &bits, sizeof(float));
# 760 "newhalf.hpp"
return out;
# 761 "newhalf.hpp"
}
# 766 "newhalf.hpp"
inline float half2float_impl(uint16 value, false_type)
# 767 "newhalf.hpp"
{
# 768 "newhalf.hpp"
float out;
# 769 "newhalf.hpp"
int abs = value & 32767;
# 770 "newhalf.hpp"
if (abs > 31744) {
# 771 "newhalf.hpp"
out = (std::numeric_limits< float> ::has_quiet_NaN ? std::numeric_limits< float> ::quiet_NaN() : (0.0F)); } else {
# 772 "newhalf.hpp"
if (abs == 31744) {
# 773 "newhalf.hpp"
out = (std::numeric_limits< float> ::has_infinity ? std::numeric_limits< float> ::infinity() : std::numeric_limits< float> ::max()); } else {
# 774 "newhalf.hpp"
if (abs > 1023) {
# 775 "newhalf.hpp"
out = std::ldexp(static_cast< float>((value & 1023) | 1024), (abs >> 10) - 25); } else {
# 777 "newhalf.hpp"
out = std::ldexp(static_cast< float>(abs), -24); } } }
# 778 "newhalf.hpp"
return (value & 32768) ? -out : out;
# 779 "newhalf.hpp"
}
# 784 "newhalf.hpp"
inline float half2float(uint16 value)
# 785 "newhalf.hpp"
{
# 786 "newhalf.hpp"
return half2float_impl(value, bool_type< true> ());
# 787 "newhalf.hpp"
}
# 795 "newhalf.hpp"
template< std::float_round_style R, bool E, class T> T half2int_impl(uint16 value)
# 796 "newhalf.hpp"
{
# 797 "newhalf.hpp"
unsigned e = value & 32767;
# 798 "newhalf.hpp"
if (e >= (31744)) {
# 799 "newhalf.hpp"
return (value & 32768) ? std::numeric_limits< T> ::min() : std::numeric_limits< T> ::max(); }
# 800 "newhalf.hpp"
if (e < (14336))
# 801 "newhalf.hpp"
{
# 802 "newhalf.hpp"
if ((R) == (std::round_toward_infinity)) {
# 803 "newhalf.hpp"
return (T)((~(value >> 15)) & (e != (0))); } else {
# 804 "newhalf.hpp"
if ((R) == (std::round_toward_neg_infinity)) {
# 805 "newhalf.hpp"
return -((T)(value > 32768)); } }
# 806 "newhalf.hpp"
return T();
# 807 "newhalf.hpp"
}
# 808 "newhalf.hpp"
int17 m = (value & 1023) | 1024;
# 809 "newhalf.hpp"
e >>= 10;
# 810 "newhalf.hpp"
if (e < (25))
# 811 "newhalf.hpp"
{
# 812 "newhalf.hpp"
if (((R) == (std::round_indeterminate)) || ((R) == (std::round_toward_zero))) {
# 813 "newhalf.hpp"
m >>= ((25) - e); } else
# 815 "newhalf.hpp"
{
# 816 "newhalf.hpp"
if ((R) == (std::round_to_nearest)) {
# 817 "newhalf.hpp"
m += ((1 << ((24) - e)) - ((~(m >> ((25) - e))) & (E))); } else {
# 818 "newhalf.hpp"
if ((R) == (std::round_toward_infinity)) {
# 819 "newhalf.hpp"
m += (((value >> 15) - 1) & ((1 << ((25) - e)) - 1U)); } else {
# 820 "newhalf.hpp"
if ((R) == (std::round_toward_neg_infinity)) {
# 821 "newhalf.hpp"
m += ((-(value >> 15)) & ((1 << ((25) - e)) - 1U)); } } }
# 822 "newhalf.hpp"
m >>= ((25) - e);
# 823 "newhalf.hpp"
}
# 824 "newhalf.hpp"
} else {
# 826 "newhalf.hpp"
m <<= (e - (25)); }
# 829 "newhalf.hpp"
return static_cast< T>((value & 32768) ? -m : m);
# 830 "newhalf.hpp"
}
# 837 "newhalf.hpp"
template< std::float_round_style R, class T> T half2int(uint16 value) { return half2int_impl< R, 0, T> (value); }
# 843 "newhalf.hpp"
template< class T> T half2int_up(uint16 value) { return half2int_impl< std::round_to_nearest, 0, T> (value); }
# 850 "newhalf.hpp"
template< std::float_round_style R, bool E> uint16 round_half_impl(uint16 value)
# 851 "newhalf.hpp"
{
# 852 "newhalf.hpp"
unsigned e = value & 32767;
# 853 "newhalf.hpp"
uint16 result = value;
# 854 "newhalf.hpp"
if (e < (15360))
# 855 "newhalf.hpp"
{
# 856 "newhalf.hpp"
result &= 32768;
# 857 "newhalf.hpp"
if ((R) == (std::round_to_nearest)) {
# 858 "newhalf.hpp"
result |= (15360U & (-(e >= (14336 + (E))))); } else {
# 859 "newhalf.hpp"
if ((R) == (std::round_toward_infinity)) {
# 860 "newhalf.hpp"
result |= (15360U & (-((~(value >> 15)) & (e != (0))))); } else {
# 861 "newhalf.hpp"
if ((R) == (std::round_toward_neg_infinity)) {
# 862 "newhalf.hpp"
result |= (15360U & (-(value > 32768))); } } }
# 863 "newhalf.hpp"
} else {
# 864 "newhalf.hpp"
if (e < (25600))
# 865 "newhalf.hpp"
{
# 866 "newhalf.hpp"
e = ((25) - (e >> 10));
# 867 "newhalf.hpp"
unsigned mask = (1 << e) - 1;
# 868 "newhalf.hpp"
if ((R) == (std::round_to_nearest)) {
# 869 "newhalf.hpp"
result += ((1 << (e - (1))) - ((~(result >> e)) & (E))); } else {
# 870 "newhalf.hpp"
if ((R) == (std::round_toward_infinity)) {
# 871 "newhalf.hpp"
result += (mask & ((value >> 15) - 1)); } else {
# 872 "newhalf.hpp"
if ((R) == (std::round_toward_neg_infinity)) {
# 873 "newhalf.hpp"
result += (mask & (-(value >> 15))); } } }
# 874 "newhalf.hpp"
result &= (~mask);
# 875 "newhalf.hpp"
} }
# 876 "newhalf.hpp"
return result;
# 877 "newhalf.hpp"
}
# 883 "newhalf.hpp"
template< std::float_round_style R> uint16 round_half(uint16 value) { return round_half_impl< R, 0> (value); }
# 888 "newhalf.hpp"
inline uint16 round_half_up(uint16 value) { return round_half_impl< std::round_to_nearest, false> (value); }
# 891 "newhalf.hpp"
struct functions;
# 892 "newhalf.hpp"
template< class > struct unary_specialized;
# 893 "newhalf.hpp"
template< class , class > struct binary_specialized;
# 894 "newhalf.hpp"
template< class , class , std::float_round_style > struct half_caster;
# 895 "newhalf.hpp"
}
# 917 "newhalf.hpp"
class half {
# 919 "newhalf.hpp"
friend struct detail::functions;
# 920 "newhalf.hpp"
friend struct detail::unary_specialized< half> ;
# 921 "newhalf.hpp"
friend struct detail::binary_specialized< half, half> ;
# 922 "newhalf.hpp"
template< class , class , std::float_round_style > friend struct detail::half_caster;
# 923 "newhalf.hpp"
friend class std::numeric_limits< half> ;
# 932 "newhalf.hpp"
public: half() : data_() { }
# 937 "newhalf.hpp"
half(detail::expr rhs) : data_(detail::float2half< std::round_to_nearest> (rhs)) { }
# 941 "newhalf.hpp"
explicit half(float rhs) : data_(detail::float2half< std::round_to_nearest> (rhs)) { }
# 945 "newhalf.hpp"
operator float() const { return detail::half2float(data_); }
# 951 "newhalf.hpp"
half &operator=(detail::expr rhs) { return ((*this) = (static_cast< float>(rhs))); }
# 957 "newhalf.hpp"
template< class T> typename detail::enable< half &, T> ::type operator+=(T rhs) { return ((*this) += (static_cast< float>(rhs))); }
# 963 "newhalf.hpp"
template< class T> typename detail::enable< half &, T> ::type operator-=(T rhs) { return ((*this) -= (static_cast< float>(rhs))); }
# 969 "newhalf.hpp"
template< class T> typename detail::enable< half &, T> ::type operator*=(T rhs) { return ((*this) *= (static_cast< float>(rhs))); }
# 975 "newhalf.hpp"
template< class T> typename detail::enable< half &, T> ::type operator/=(T rhs) { return ((*this) /= (static_cast< float>(rhs))); }
# 980 "newhalf.hpp"
half &operator=(float rhs) { (data_) = detail::float2half< std::round_to_nearest> (rhs); return *this; }
# 985 "newhalf.hpp"
half &operator+=(float rhs) { (data_) = detail::float2half< std::round_to_nearest> (detail::half2float(data_) + rhs); return *this; }
# 990 "newhalf.hpp"
half &operator-=(float rhs) { (data_) = detail::float2half< std::round_to_nearest> (detail::half2float(data_) - rhs); return *this; }
# 995 "newhalf.hpp"
half &operator*=(float rhs) { (data_) = detail::float2half< std::round_to_nearest> (detail::half2float(data_) * rhs); return *this; }
# 1000 "newhalf.hpp"
half &operator/=(float rhs) { (data_) = detail::float2half< std::round_to_nearest> (detail::half2float(data_) / rhs); return *this; }
# 1004 "newhalf.hpp"
half &operator++() { return ((*this) += ((1.0F))); }
# 1008 "newhalf.hpp"
half &operator--() { return ((*this) -= ((1.0F))); }
# 1012 "newhalf.hpp"
half operator++(int) { half out(*this); (++(*this)); return out; }
# 1016 "newhalf.hpp"
half operator--(int) { half out(*this); (--(*this)); return out; }
# 1020 "newhalf.hpp"
private: static const std::float_round_style round_style = ((std::float_round_style)1);
# 1024 "newhalf.hpp"
half(detail::binary_t, detail::uint16 bits) : data_(bits) { }
# 1027 "newhalf.hpp"
detail::uint16 data_;
# 1028 "newhalf.hpp"
};
# 1048 "newhalf.hpp"
namespace detail {
# 1051 "newhalf.hpp"
struct functions {
# 1057 "newhalf.hpp"
static expr plus(float x, float y) { return ((expr)(x + y)); }
# 1063 "newhalf.hpp"
static expr minus(float x, float y) { return ((expr)(x - y)); }
# 1069 "newhalf.hpp"
static expr multiplies(float x, float y) { return ((expr)(x * y)); }
# 1075 "newhalf.hpp"
static expr divides(float x, float y) { return ((expr)(x / y)); }
# 1081 "newhalf.hpp"
template< class charT, class traits> static std::basic_ostream< charT, traits> &write(std::basic_ostream< charT, traits> &out, float arg) { return out << arg; }
# 1087 "newhalf.hpp"
template< class charT, class traits> static std::basic_istream< charT, traits> &read(std::basic_istream< charT, traits> &in, half &arg)
# 1088 "newhalf.hpp"
{
# 1089 "newhalf.hpp"
float f;
# 1090 "newhalf.hpp"
if (in >> f) {
# 1091 "newhalf.hpp"
(arg = f); }
# 1092 "newhalf.hpp"
return in;
# 1093 "newhalf.hpp"
}
# 1099 "newhalf.hpp"
static expr fmod(float x, float y) { return ((expr)(std::fmod(x, y))); }
# 1105 "newhalf.hpp"
static expr remainder(float x, float y)
# 1106 "newhalf.hpp"
{
# 1110 "newhalf.hpp"
if (builtin_isnan(x) || builtin_isnan(y)) {
# 1111 "newhalf.hpp"
return ((expr)(std::numeric_limits< float> ::quiet_NaN())); }
# 1112 "newhalf.hpp"
float ax = std::fabs(x), ay = std::fabs(y);
# 1113 "newhalf.hpp"
if ((ax >= (65536.0F)) || (ay < std::ldexp((1.0F), -24))) {
# 1114 "newhalf.hpp"
return ((expr)(std::numeric_limits< float> ::quiet_NaN())); }
# 1115 "newhalf.hpp"
if (ay >= (65536.0F)) {
# 1116 "newhalf.hpp"
return ((expr)(x)); }
# 1117 "newhalf.hpp"
if (ax == ay) {
# 1118 "newhalf.hpp"
return ((expr)(builtin_signbit(x) ? -(0.0F) : (0.0F))); }
# 1119 "newhalf.hpp"
ax = std::fmod(ax, ay + ay);
# 1120 "newhalf.hpp"
float y2 = (0.5F) * ay;
# 1121 "newhalf.hpp"
if (ax > y2)
# 1122 "newhalf.hpp"
{
# 1123 "newhalf.hpp"
ax -= ay;
# 1124 "newhalf.hpp"
if (ax >= y2) {
# 1125 "newhalf.hpp"
ax -= ay; }
# 1126 "newhalf.hpp"
}
# 1127 "newhalf.hpp"
return ((expr)(builtin_signbit(x) ? -ax : ax));
# 1129 "newhalf.hpp"
}
# 1136 "newhalf.hpp"
static expr remquo(float x, float y, int *quo)
# 1137 "newhalf.hpp"
{
# 1141 "newhalf.hpp"
if (builtin_isnan(x) || builtin_isnan(y)) {
# 1142 "newhalf.hpp"
return ((expr)(std::numeric_limits< float> ::quiet_NaN())); }
# 1143 "newhalf.hpp"
bool sign = builtin_signbit(x), qsign = static_cast< bool>(sign ^ (builtin_signbit(y)));
# 1144 "newhalf.hpp"
float ax = std::fabs(x), ay = std::fabs(y);
# 1145 "newhalf.hpp"
if ((ax >= (65536.0F)) || (ay < std::ldexp((1.0F), -24))) {
# 1146 "newhalf.hpp"
return ((expr)(std::numeric_limits< float> ::quiet_NaN())); }
# 1147 "newhalf.hpp"
if (ay >= (65536.0F)) {
# 1148 "newhalf.hpp"
return ((expr)(x)); }
# 1149 "newhalf.hpp"
if (ax == ay) {
# 1150 "newhalf.hpp"
return ((*quo) = (qsign ? -1 : 1)), (((expr)(sign ? -(0.0F) : (0.0F)))); }
# 1151 "newhalf.hpp"
ax = std::fmod(ax, (8.0F) * ay);
# 1152 "newhalf.hpp"
int cquo = 0;
# 1153 "newhalf.hpp"
if (ax >= ((4.0F) * ay))
# 1154 "newhalf.hpp"
{
# 1155 "newhalf.hpp"
ax -= ((4.0F) * ay);
# 1156 "newhalf.hpp"
cquo += 4;
# 1157 "newhalf.hpp"
}
# 1158 "newhalf.hpp"
if (ax >= ((2.0F) * ay))
# 1159 "newhalf.hpp"
{
# 1160 "newhalf.hpp"
ax -= ((2.0F) * ay);
# 1161 "newhalf.hpp"
cquo += 2;
# 1162 "newhalf.hpp"
}
# 1163 "newhalf.hpp"
float y2 = (0.5F) * ay;
# 1164 "newhalf.hpp"
if (ax > y2)
# 1165 "newhalf.hpp"
{
# 1166 "newhalf.hpp"
ax -= ay;
# 1167 "newhalf.hpp"
++cquo;
# 1168 "newhalf.hpp"
if (ax >= y2)
# 1169 "newhalf.hpp"
{
# 1170 "newhalf.hpp"
ax -= ay;
# 1171 "newhalf.hpp"
++cquo;
# 1172 "newhalf.hpp"
}
# 1173 "newhalf.hpp"
}
# 1174 "newhalf.hpp"
return ((*quo) = (qsign ? -cquo : cquo)), (((expr)(sign ? -ax : ax)));
# 1176 "newhalf.hpp"
}
# 1182 "newhalf.hpp"
static expr fdim(float x, float y)
# 1183 "newhalf.hpp"
{
# 1187 "newhalf.hpp"
return ((expr)((x <= y) ? (0.0F) : (x - y)));
# 1189 "newhalf.hpp"
}
# 1196 "newhalf.hpp"
static expr fma(float x, float y, float z)
# 1197 "newhalf.hpp"
{
# 1201 "newhalf.hpp"
return ((expr)((x * y) + z));
# 1203 "newhalf.hpp"
}
# 1207 "newhalf.hpp"
static half nanh(const char *) { return half(binary, 32767); }
# 1212 "newhalf.hpp"
static expr exp(float arg) { return ((expr)(std::exp(arg))); }
# 1217 "newhalf.hpp"
static expr expm1(float arg)
# 1218 "newhalf.hpp"
{
# 1222 "newhalf.hpp"
return ((expr)(static_cast< float>(std::exp(static_cast< double>(arg)) - (1.0))));
# 1224 "newhalf.hpp"
}
# 1229 "newhalf.hpp"
static expr exp2(float arg)
# 1230 "newhalf.hpp"
{
# 1234 "newhalf.hpp"
return ((expr)(static_cast< float>(std::exp(arg * (0.6931471805599452862)))));
# 1236 "newhalf.hpp"
}
# 1241 "newhalf.hpp"
static expr log(float arg) { return ((expr)(std::log(arg))); }
# 1246 "newhalf.hpp"
static expr log10(float arg) { return ((expr)(std::log10(arg))); }
# 1251 "newhalf.hpp"
static expr log1p(float arg)
# 1252 "newhalf.hpp"
{
# 1256 "newhalf.hpp"
return ((expr)(static_cast< float>(std::log((1.0) + arg))));
# 1258 "newhalf.hpp"
}
# 1263 "newhalf.hpp"
static expr log2(float arg)
# 1264 "newhalf.hpp"
{
# 1268 "newhalf.hpp"
return ((expr)(static_cast< float>(std::log(static_cast< double>(arg)) * (1.442695040888963387))));
# 1270 "newhalf.hpp"
}
# 1275 "newhalf.hpp"
static expr sqrt(float arg) { return ((expr)(std::sqrt(arg))); }
# 1280 "newhalf.hpp"
static expr cbrt(float arg)
# 1281 "newhalf.hpp"
{
# 1285 "newhalf.hpp"
if (builtin_isnan(arg) || builtin_isinf(arg)) {
# 1286 "newhalf.hpp"
return ((expr)(arg)); }
# 1287 "newhalf.hpp"
return ((expr)(builtin_signbit(arg) ? -(static_cast< float>(std::pow(std::fabs(static_cast< double>(arg)), (1.0) / (3.0)))) : (static_cast< float>(std::pow(static_cast< double>(arg), (1.0) / (3.0))))));
# 1290 "newhalf.hpp"
}
# 1296 "newhalf.hpp"
static expr hypot(float x, float y)
# 1297 "newhalf.hpp"
{
# 1301 "newhalf.hpp"
return ((expr)((builtin_isinf(x) || builtin_isinf(y)) ? std::numeric_limits< float> ::infinity() : (static_cast< float>(std::sqrt(((static_cast< double>(x)) * x) + ((static_cast< double>(y)) * y))))));
# 1304 "newhalf.hpp"
}
# 1310 "newhalf.hpp"
static expr pow(float base, float exp) { return ((expr)(std::pow(base, exp))); }
# 1315 "newhalf.hpp"
static expr sin(float arg) { return ((expr)(std::sin(arg))); }
# 1320 "newhalf.hpp"
static expr cos(float arg) { return ((expr)(std::cos(arg))); }
# 1325 "newhalf.hpp"
static expr tan(float arg) { return ((expr)(std::tan(arg))); }
# 1330 "newhalf.hpp"
static expr asin(float arg) { return ((expr)(std::asin(arg))); }
# 1335 "newhalf.hpp"
static expr acos(float arg) { return ((expr)(std::acos(arg))); }
# 1340 "newhalf.hpp"
static expr atan(float arg) { return ((expr)(std::atan(arg))); }
# 1346 "newhalf.hpp"
static expr atan2(float x, float y) { return ((expr)(std::atan2(x, y))); }
# 1351 "newhalf.hpp"
static expr sinh(float arg) { return ((expr)(std::sinh(arg))); }
# 1356 "newhalf.hpp"
static expr cosh(float arg) { return ((expr)(std::cosh(arg))); }
# 1361 "newhalf.hpp"
static expr tanh(float arg) { return ((expr)(std::tanh(arg))); }
# 1366 "newhalf.hpp"
static expr asinh(float arg)
# 1367 "newhalf.hpp"
{
# 1371 "newhalf.hpp"
return ((expr)((arg == (-std::numeric_limits< float> ::infinity())) ? arg : (static_cast< float>(std::log(arg + std::sqrt((arg * arg) + (1.0)))))));
# 1373 "newhalf.hpp"
}
# 1378 "newhalf.hpp"
static expr acosh(float arg)
# 1379 "newhalf.hpp"
{
# 1383 "newhalf.hpp"
return ((expr)((arg < (-(1.0F))) ? std::numeric_limits< float> ::quiet_NaN() : (static_cast< float>(std::log(arg + std::sqrt((arg * arg) - (1.0)))))));
# 1385 "newhalf.hpp"
}
# 1390 "newhalf.hpp"
static expr atanh(float arg)
# 1391 "newhalf.hpp"
{
# 1395 "newhalf.hpp"
return ((expr)(static_cast< float>((0.5) * std::log(((1.0) + arg) / ((1.0) - arg)))));
# 1397 "newhalf.hpp"
}
# 1402 "newhalf.hpp"
static expr erf(float arg)
# 1403 "newhalf.hpp"
{
# 1407 "newhalf.hpp"
return ((expr)(static_cast< float>(erf(static_cast< double>(arg)))));
# 1409 "newhalf.hpp"
}
# 1414 "newhalf.hpp"
static expr erfc(float arg)
# 1415 "newhalf.hpp"
{
# 1419 "newhalf.hpp"
return ((expr)(static_cast< float>((1.0) - erf(static_cast< double>(arg)))));
# 1421 "newhalf.hpp"
}
# 1426 "newhalf.hpp"
static expr lgamma(float arg)
# 1427 "newhalf.hpp"
{
# 1431 "newhalf.hpp"
if (builtin_isinf(arg)) {
# 1432 "newhalf.hpp"
return ((expr)(std::numeric_limits< float> ::infinity())); }
# 1433 "newhalf.hpp"
double z = static_cast< double>(arg);
# 1434 "newhalf.hpp"
if (z < (0))
# 1435 "newhalf.hpp"
{
# 1436 "newhalf.hpp"
double i, f = std::modf(-z, &i);
# 1437 "newhalf.hpp"
if (f == (0.0)) {
# 1438 "newhalf.hpp"
return ((expr)(std::numeric_limits< float> ::infinity())); }
# 1439 "newhalf.hpp"
return ((expr)(static_cast< float>(((1.144729885849400164) - std::log(std::abs(std::sin((3.141592653589793116) * f)))) - lgamma((1.0) - z))));
# 1440 "newhalf.hpp"
}
# 1442 "newhalf.hpp"
return ((expr)(static_cast< float>(lgamma(static_cast< double>(arg)))));
# 1443 "newhalf.hpp"
return ((expr)(static_cast< float>(((0.5) * ((1.837877066409345561) - std::log(z))) + (z * (std::log(z + ((1.0) / ((((12.0) * z) - ((1.0) / ((10.0) * z))) - (1.0)))) - (1.0))))));
# 1445 "newhalf.hpp"
}
# 1450 "newhalf.hpp"
static expr tgamma(float arg)
# 1451 "newhalf.hpp"
{
# 1455 "newhalf.hpp"
double z = static_cast< double>(arg);
# 1456 "newhalf.hpp"
if (z == (0.0)) {
# 1457 "newhalf.hpp"
return (builtin_signbit(z) ? ((expr)(-std::numeric_limits< float> ::infinity())) : ((expr)(std::numeric_limits< float> ::infinity()))); }
# 1458 "newhalf.hpp"
if (z < (0.0))
# 1459 "newhalf.hpp"
{
# 1460 "newhalf.hpp"
double i, f = std::modf(-z, &i);
# 1461 "newhalf.hpp"
if (f == (0.0)) {
# 1462 "newhalf.hpp"
return ((expr)(std::numeric_limits< float> ::quiet_NaN())); }
# 1463 "newhalf.hpp"
double sign = (std::fmod(i, (2.0)) == (0.0)) ? -(1.0) : (1.0);
# 1464 "newhalf.hpp"
return ((expr)(static_cast< float>((sign * (3.141592653589793116)) / (std::sin((3.141592653589793116) * f) * std::exp(lgamma((1.0) - z))))));
# 1465 "newhalf.hpp"
}
# 1466 "newhalf.hpp"
if (builtin_isinf(arg)) {
# 1467 "newhalf.hpp"
return ((expr)(arg)); }
# 1469 "newhalf.hpp"
return ((expr)(static_cast< float>(std::exp(lgamma(z)))));
# 1470 "newhalf.hpp"
return ((expr)(static_cast< float>(std::sqrt((6.283185307179586232) / z) * std::pow((0.367879441171442334) * (z + ((1.0) / (((12.0) * z) - ((1.0) / ((10.0) * z))))), z))));
# 1472 "newhalf.hpp"
}
# 1477 "newhalf.hpp"
static half floor(half arg) { return half(binary, round_half< std::round_toward_neg_infinity> (arg.data_)); }
# 1482 "newhalf.hpp"
static half ceil(half arg) { return half(binary, round_half< std::round_toward_infinity> (arg.data_)); }
# 1487 "newhalf.hpp"
static half trunc(half arg) { return half(binary, round_half< std::round_toward_zero> (arg.data_)); }
# 1492 "newhalf.hpp"
static half round(half arg) { return half(binary, round_half_up(arg.data_)); }
# 1497 "newhalf.hpp"
static long lround(half arg) { return detail::half2int_up< long> (arg.data_); }
# 1500 "newhalf.hpp"
static uint16 get_data(half arg) { return arg.data_; }
# 1505 "newhalf.hpp"
static half rint(half arg) { return half(binary, round_half< std::round_to_nearest> (arg.data_)); }
# 1510 "newhalf.hpp"
static long lrint(half arg) { return detail::half2int< std::round_to_nearest, long> (arg.data_); }
# 1528 "newhalf.hpp"
static half frexp(half arg, int *exp)
# 1529 "newhalf.hpp"
{
# 1530 "newhalf.hpp"
unsigned m = (arg.data_) & 32767;
# 1531 "newhalf.hpp"
if ((m >= (31744)) || (!m)) {
# 1532 "newhalf.hpp"
return ((*exp) = 0), arg; }
# 1533 "newhalf.hpp"
int e = m >> 10;
# 1534 "newhalf.hpp"
if (!e) {
# 1535 "newhalf.hpp"
for (m <<= 1; m < (1024); (m <<= 1), (--e)) { ; } }
# 1536 "newhalf.hpp"
return ((*exp) = (e - 14)), (half(binary, static_cast< uint16>((((arg.data_) & 32768) | 14336) | (m & (1023)))));
# 1537 "newhalf.hpp"
}
# 1543 "newhalf.hpp"
static half modf(half arg, half *iptr)
# 1544 "newhalf.hpp"
{
# 1545 "newhalf.hpp"
unsigned e = (arg.data_) & 31744;
# 1546 "newhalf.hpp"
if (e > (24576)) {
# 1547 "newhalf.hpp"
return ((*iptr) = arg), ((((e == (31744)) && ((arg.data_) & 1023)) ? arg : half(binary, (arg.data_) & 32768))); }
# 1548 "newhalf.hpp"
if (e < (15360)) {
# 1549 "newhalf.hpp"
return ((iptr->data_) = ((arg.data_) & 32768)), arg; }
# 1550 "newhalf.hpp"
e >>= 10;
# 1551 "newhalf.hpp"
unsigned mask = (1 << ((25) - e)) - 1, m = (arg.data_) & mask;
# 1552 "newhalf.hpp"
(iptr->data_) = ((arg.data_) & (~mask));
# 1553 "newhalf.hpp"
if (!m) {
# 1554 "newhalf.hpp"
return half(binary, (arg.data_) & 32768); }
# 1555 "newhalf.hpp"
for (; m < (1024); (m <<= 1), (--e)) { ; }
# 1556 "newhalf.hpp"
return half(binary, static_cast< uint16>((((arg.data_) & 32768) | (e << 10)) | (m & (1023))));
# 1557 "newhalf.hpp"
}
# 1563 "newhalf.hpp"
static half scalbln(half arg, long exp)
# 1564 "newhalf.hpp"
{
# 1565 "newhalf.hpp"
long e = (arg.data_) & 31744;
# 1566 "newhalf.hpp"
if (e == (31744)) {
# 1567 "newhalf.hpp"
return arg; }
# 1568 "newhalf.hpp"
unsigned m = (arg.data_) & 1023;
# 1569 "newhalf.hpp"
if (e >>= 10) {
# 1570 "newhalf.hpp"
m |= (1024); } else
# 1572 "newhalf.hpp"
{
# 1573 "newhalf.hpp"
if (!m) {
# 1574 "newhalf.hpp"
return arg; }
# 1575 "newhalf.hpp"
for (m <<= 1; m < (1024); (m <<= 1), (--e)) { ; }
# 1576 "newhalf.hpp"
}
# 1577 "newhalf.hpp"
e += exp;
# 1578 "newhalf.hpp"
uint16 value = (arg.data_) & 32768;
# 1579 "newhalf.hpp"
if (e > (30))
# 1580 "newhalf.hpp"
{
# 1581 "newhalf.hpp"
if (half::round_style == (std::round_toward_zero)) {
# 1582 "newhalf.hpp"
value |= 31743; } else {
# 1583 "newhalf.hpp"
if (half::round_style == (std::round_toward_infinity)) {
# 1584 "newhalf.hpp"
value |= (31744 - (value >> 15)); } else {
# 1585 "newhalf.hpp"
if (half::round_style == (std::round_toward_neg_infinity)) {
# 1586 "newhalf.hpp"
value |= (31743 + (value >> 15)); } else {
# 1588 "newhalf.hpp"
value |= 31744; } } }
# 1589 "newhalf.hpp"
} else {
# 1590 "newhalf.hpp"
if (e > (0)) {
# 1591 "newhalf.hpp"
value |= ((e << 10) | (m & (1023))); } else {
# 1592 "newhalf.hpp"
if (e > (-11))
# 1593 "newhalf.hpp"
{
# 1594 "newhalf.hpp"
if (half::round_style == (std::round_to_nearest))
# 1595 "newhalf.hpp"
{
# 1596 "newhalf.hpp"
m += (1 << (-e));
# 1600 "newhalf.hpp"
} else {
# 1601 "newhalf.hpp"
if (half::round_style == (std::round_toward_infinity)) {
# 1602 "newhalf.hpp"
m += (((value >> 15) - 1) & ((1 << ((1) - e)) - 1U)); } else {
# 1603 "newhalf.hpp"
if (half::round_style == (std::round_toward_neg_infinity)) {
# 1604 "newhalf.hpp"
m += ((-(value >> 15)) & ((1 << ((1) - e)) - 1U)); } } }
# 1605 "newhalf.hpp"
value |= (m >> ((1) - e));
# 1606 "newhalf.hpp"
} else {
# 1607 "newhalf.hpp"
if (half::round_style == (std::round_toward_infinity)) {
# 1608 "newhalf.hpp"
value |= (((value >> 15) - 1) & 1); } else {
# 1609 "newhalf.hpp"
if (half::round_style == (std::round_toward_neg_infinity)) {
# 1610 "newhalf.hpp"
value |= (value >> 15); } } } } }
# 1611 "newhalf.hpp"
return half(binary, value);
# 1612 "newhalf.hpp"
}
# 1617 "newhalf.hpp"
static int ilogb(half arg)
# 1618 "newhalf.hpp"
{
# 1619 "newhalf.hpp"
int exp = (arg.data_) & 32767;
# 1620 "newhalf.hpp"
if (!exp) {
# 1621 "newhalf.hpp"
return (-2147483647) - 1; }
# 1622 "newhalf.hpp"
if (exp < 31744)
# 1623 "newhalf.hpp"
{
# 1624 "newhalf.hpp"
if (!(exp >>= 10)) {
# 1625 "newhalf.hpp"
for (unsigned m = (arg.data_) & 1023; m < (512); (m <<= 1), (--exp)) { ; } }
# 1626 "newhalf.hpp"
return exp - 15;
# 1627 "newhalf.hpp"
}
# 1628 "newhalf.hpp"
if (exp > 31744) {
# 1629 "newhalf.hpp"
return (-2147483647) - 1; }
# 1630 "newhalf.hpp"
return 2147483647;
# 1631 "newhalf.hpp"
}
# 1636 "newhalf.hpp"
static half logb(half arg)
# 1637 "newhalf.hpp"
{
# 1638 "newhalf.hpp"
int exp = (arg.data_) & 32767;
# 1639 "newhalf.hpp"
if (!exp) {
# 1640 "newhalf.hpp"
return half(binary, 64512); }
# 1641 "newhalf.hpp"
if (exp < 31744)
# 1642 "newhalf.hpp"
{
# 1643 "newhalf.hpp"
if (!(exp >>= 10)) {
# 1644 "newhalf.hpp"
for (unsigned m = (arg.data_) & 1023; m < (512); (m <<= 1), (--exp)) { ; } }
# 1645 "newhalf.hpp"
return ((half)(static_cast< float>(exp - 15)));
# 1646 "newhalf.hpp"
}
# 1647 "newhalf.hpp"
if (exp > 31744) {
# 1648 "newhalf.hpp"
return arg; }
# 1649 "newhalf.hpp"
return half(binary, 31744);
# 1650 "newhalf.hpp"
}
# 1656 "newhalf.hpp"
static half nextafter(half from, half to)
# 1657 "newhalf.hpp"
{
# 1658 "newhalf.hpp"
uint16 fabs = (from.data_) & 32767, tabs = (to.data_) & 32767;
# 1659 "newhalf.hpp"
if (fabs > 31744) {
# 1660 "newhalf.hpp"
return from; }
# 1661 "newhalf.hpp"
if (((tabs > 31744) || ((from.data_) == (to.data_))) || (!(fabs | tabs))) {
# 1662 "newhalf.hpp"
return to; }
# 1663 "newhalf.hpp"
if (!fabs) {
# 1664 "newhalf.hpp"
return half(binary, ((to.data_) & 32768) + 1); }
# 1665 "newhalf.hpp"
bool lt = (signbit(from) ? (static_cast< int17>(32768)) - (from.data_) : (static_cast< int17>(from.data_))) < (signbit(to) ? (static_cast< int17>(32768)) - (to.data_) : (static_cast< int17>(to.data_)));
# 1667 "newhalf.hpp"
return half(binary, ((from.data_) + ((((from.data_) >> 15) ^ (static_cast< uint16>(lt))) << 1)) - 1);
# 1668 "newhalf.hpp"
}
# 1674 "newhalf.hpp"
static half nexttoward(half from, long double to)
# 1675 "newhalf.hpp"
{
# 1676 "newhalf.hpp"
if (isnan(from)) {
# 1677 "newhalf.hpp"
return from; }
# 1678 "newhalf.hpp"
long double lfrom = static_cast< long double>(from);
# 1679 "newhalf.hpp"
if (builtin_isnan(to) || (lfrom == to)) {
# 1680 "newhalf.hpp"
return ((half)(static_cast< float>(to))); }
# 1681 "newhalf.hpp"
if (!((from.data_) & 32767)) {
# 1682 "newhalf.hpp"
return half(binary, ((static_cast< uint16>(builtin_signbit(to))) << 15) + 1); }
# 1683 "newhalf.hpp"
return half(binary, ((from.data_) + ((((from.data_) >> 15) ^ (static_cast< uint16>(lfrom < to))) << 1)) - 1);
# 1684 "newhalf.hpp"
}
# 1690 "newhalf.hpp"
static half copysign(half x, half y) { return half(binary, (x.data_) ^ (((x.data_) ^ (y.data_)) & 32768)); }
# 1696 "newhalf.hpp"
static int fpclassify(half arg)
# 1697 "newhalf.hpp"
{
# 1698 "newhalf.hpp"
unsigned abs = (arg.data_) & 32767;
# 1699 "newhalf.hpp"
if (abs > (31744)) {
# 1700 "newhalf.hpp"
return 0; }
# 1701 "newhalf.hpp"
if (abs == (31744)) {
# 1702 "newhalf.hpp"
return 1; }
# 1703 "newhalf.hpp"
if (abs > (1023)) {
# 1704 "newhalf.hpp"
return 4; }
# 1705 "newhalf.hpp"
return (abs) ? 3 : 2;
# 1706 "newhalf.hpp"
}
# 1712 "newhalf.hpp"
static bool isfinite(half arg) { return ((arg.data_) & 31744) != 31744; }
# 1718 "newhalf.hpp"
static bool isinf(half arg) { return ((arg.data_) & 32767) == 31744; }
# 1724 "newhalf.hpp"
static bool isnan(half arg) { return ((arg.data_) & 32767) > 31744; }
# 1730 "newhalf.hpp"
static bool isnormal(half arg) { return (((arg.data_) & 31744) != 0) & (((arg.data_) & 31744) != 31744); }
# 1736 "newhalf.hpp"
static bool signbit(half arg) { return ((arg.data_) & 32768) != 0; }
# 1743 "newhalf.hpp"
static bool isequal(half x, half y) { return (((x.data_) == (y.data_)) || (!(((x.data_) | (y.data_)) & 32767))) && (!isnan(x)); }
# 1750 "newhalf.hpp"
static bool isnotequal(half x, half y) { return (((x.data_) != (y.data_)) && (((x.data_) | (y.data_)) & 32767)) || isnan(x); }
# 1757 "newhalf.hpp"
static bool isgreater(half x, half y) { return (!isnan(x)) && (!isnan(y)) && ((signbit(x) ? (static_cast< int17>(32768)) - (x.data_) : (static_cast< int17>(x.data_))) > (signbit(y) ? (static_cast< int17>(32768)) - (y.data_) : (static_cast< int17>(y.data_))));
# 1758 "newhalf.hpp"
}
# 1765 "newhalf.hpp"
static bool isgreaterequal(half x, half y) { return (!isnan(x)) && (!isnan(y)) && ((signbit(x) ? (static_cast< int17>(32768)) - (x.data_) : (static_cast< int17>(x.data_))) >= (signbit(y) ? (static_cast< int17>(32768)) - (y.data_) : (static_cast< int17>(y.data_))));
# 1766 "newhalf.hpp"
}
# 1773 "newhalf.hpp"
static bool isless(half x, half y) { return (!isnan(x)) && (!isnan(y)) && ((signbit(x) ? (static_cast< int17>(32768)) - (x.data_) : (static_cast< int17>(x.data_))) < (signbit(y) ? (static_cast< int17>(32768)) - (y.data_) : (static_cast< int17>(y.data_))));
# 1774 "newhalf.hpp"
}
# 1781 "newhalf.hpp"
static bool islessequal(half x, half y) { return (!isnan(x)) && (!isnan(y)) && ((signbit(x) ? (static_cast< int17>(32768)) - (x.data_) : (static_cast< int17>(x.data_))) <= (signbit(y) ? (static_cast< int17>(32768)) - (y.data_) : (static_cast< int17>(y.data_))));
# 1782 "newhalf.hpp"
}
# 1789 "newhalf.hpp"
static bool islessgreater(half x, half y)
# 1790 "newhalf.hpp"
{
# 1791 "newhalf.hpp"
if (isnan(x) || isnan(y)) {
# 1792 "newhalf.hpp"
return false; }
# 1793 "newhalf.hpp"
int17 a = signbit(x) ? (static_cast< int17>(32768)) - (x.data_) : (static_cast< int17>(x.data_));
# 1794 "newhalf.hpp"
int17 b = signbit(y) ? (static_cast< int17>(32768)) - (y.data_) : (static_cast< int17>(y.data_));
# 1795 "newhalf.hpp"
return (a < b) || (a > b);
# 1796 "newhalf.hpp"
}
# 1803 "newhalf.hpp"
static bool isunordered(half x, half y) { return isnan(x) || isnan(y); }
# 1806 "newhalf.hpp"
private: static double erf(double arg)
# 1807 "newhalf.hpp"
{
# 1808 "newhalf.hpp"
if (builtin_isinf(arg)) {
# 1809 "newhalf.hpp"
return (arg < (0.0)) ? -(1.0) : (1.0); }
# 1810 "newhalf.hpp"
double x2 = (static_cast< double>(arg)) * (static_cast< double>(arg)), ax2 = (0.1469999999999999918) * x2;
# 1811 "newhalf.hpp"
double value = std::sqrt((1.0) - std::exp(((-x2) * ((1.273239544735162765) + ax2)) / ((1.0) + ax2)));
# 1812 "newhalf.hpp"
return builtin_signbit(arg) ? -value : value;
# 1813 "newhalf.hpp"
}
# 1815 "newhalf.hpp"
static double lgamma(double arg)
# 1816 "newhalf.hpp"
{
# 1817 "newhalf.hpp"
double v = (1.0);
# 1818 "newhalf.hpp"
for (; arg < (8.0); ++arg) { v *= arg; }
# 1819 "newhalf.hpp"
double w = (1.0) / (arg * arg);
# 1820 "newhalf.hpp"
return (((((((((((((((((((-(0.02955065359477124232)) * w) + (0.006410256410256410034)) * w) + (-(0.001917526917526917634))) * w) + (0.000841750841750841714)) * w) + (-(0.0005952380952380952918))) * w) + (0.0007936507936507936501)) * w) + (-(0.002777777777777777884))) * w) + (0.08333333333333332871)) / arg) + (0.9189385332046727806)) - std::log(v)) - arg) + ((arg - (0.5)) * std::log(arg));
# 1825 "newhalf.hpp"
}
# 1826 "newhalf.hpp"
};
# 1830 "newhalf.hpp"
template< class T> struct unary_specialized {
# 1835 "newhalf.hpp"
static half negate(half arg) { return half(binary, (arg.data_) ^ 32768); }
# 1840 "newhalf.hpp"
static half fabs(half arg) { return half(binary, (arg.data_) & 32767); }
# 1841 "newhalf.hpp"
};
# 1842 "newhalf.hpp"
template<> struct unary_specialized< expr> {
# 1844 "newhalf.hpp"
static expr negate(float arg) { return ((expr)(-arg)); }
# 1845 "newhalf.hpp"
static expr fabs(float arg) { return ((expr)(std::fabs(arg))); }
# 1846 "newhalf.hpp"
};
# 1851 "newhalf.hpp"
template< class T, class U> struct binary_specialized {
# 1857 "newhalf.hpp"
static expr fmin(float x, float y)
# 1858 "newhalf.hpp"
{
# 1862 "newhalf.hpp"
if (builtin_isnan(x)) {
# 1863 "newhalf.hpp"
return ((expr)(y)); }
# 1864 "newhalf.hpp"
if (builtin_isnan(y)) {
# 1865 "newhalf.hpp"
return ((expr)(x)); }
# 1866 "newhalf.hpp"
return ((expr)(std::min(x, y)));
# 1868 "newhalf.hpp"
}
# 1874 "newhalf.hpp"
static expr fmax(float x, float y)
# 1875 "newhalf.hpp"
{
# 1879 "newhalf.hpp"
if (builtin_isnan(x)) {
# 1880 "newhalf.hpp"
return ((expr)(y)); }
# 1881 "newhalf.hpp"
if (builtin_isnan(y)) {
# 1882 "newhalf.hpp"
return ((expr)(x)); }
# 1883 "newhalf.hpp"
return ((expr)(std::max(x, y)));
# 1885 "newhalf.hpp"
}
# 1886 "newhalf.hpp"
};
# 1887 "newhalf.hpp"
template<> struct binary_specialized< half, half> {
# 1889 "newhalf.hpp"
static half fmin(half x, half y)
# 1890 "newhalf.hpp"
{
# 1891 "newhalf.hpp"
if (functions::isnan(x)) {
# 1892 "newhalf.hpp"
return y; }
# 1893 "newhalf.hpp"
if (functions::isnan(y)) {
# 1894 "newhalf.hpp"
return x; }
# 1895 "newhalf.hpp"
return ((functions::signbit(x) ? (static_cast< int17>(32768)) - (x.data_) : (static_cast< int17>(x.data_))) > (functions::signbit(y) ? (static_cast< int17>(32768)) - (y.data_) : (static_cast< int17>(y.data_)))) ? y : x;
# 1897 "newhalf.hpp"
}
# 1898 "newhalf.hpp"
static half fmax(half x, half y)
# 1899 "newhalf.hpp"
{
# 1900 "newhalf.hpp"
if (functions::isnan(x)) {
# 1901 "newhalf.hpp"
return y; }
# 1902 "newhalf.hpp"
if (functions::isnan(y)) {
# 1903 "newhalf.hpp"
return x; }
# 1904 "newhalf.hpp"
return ((functions::signbit(x) ? (static_cast< int17>(32768)) - (x.data_) : (static_cast< int17>(x.data_))) < (functions::signbit(y) ? (static_cast< int17>(32768)) - (y.data_) : (static_cast< int17>(y.data_)))) ? y : x;
# 1906 "newhalf.hpp"
}
# 1907 "newhalf.hpp"
};
# 1915 "newhalf.hpp"
template< class T, class U, std::float_round_style R = std::round_to_nearest> struct half_caster { };
# 1916 "newhalf.hpp"
template< class U, std::float_round_style R> struct half_caster< half, U, R> {
# 1922 "newhalf.hpp"
typedef half type;
# 1923 "newhalf.hpp"
static half cast(U arg) { return cast_impl(arg, is_float< U> ()); }
# 1926 "newhalf.hpp"
private: static half cast_impl(U arg, true_type) { return half(binary, float2half< R> (static_cast< float>(arg))); }
# 1927 "newhalf.hpp"
static half cast_impl(U arg, false_type) { return half(binary, int2half< R> (arg)); }
# 1928 "newhalf.hpp"
};
# 1929 "newhalf.hpp"
template< class T, std::float_round_style R> struct half_caster< T, half, R> {
# 1935 "newhalf.hpp"
typedef T type;
# 1936 "newhalf.hpp"
template< class U> static T cast(U arg) { return cast_impl(arg, is_float< T> ()); }
# 1939 "newhalf.hpp"
private: static T cast_impl(float arg, true_type) { return static_cast< T>(arg); }
# 1940 "newhalf.hpp"
static T cast_impl(half arg, false_type) { return half2int< R, T> (arg.data_); }
# 1941 "newhalf.hpp"
};
# 1942 "newhalf.hpp"
template< class T, std::float_round_style R> struct half_caster< T, expr, R> : public detail::half_caster< T, half_float::half, R> { };
# 1943 "newhalf.hpp"
template< std::float_round_style R> struct half_caster< half, half, R> {
# 1945 "newhalf.hpp"
typedef half type;
# 1946 "newhalf.hpp"
static half cast(half arg) { return arg; }
# 1947 "newhalf.hpp"
};
# 1948 "newhalf.hpp"
template< std::float_round_style R> struct half_caster< half, expr, R> : public detail::half_caster< half_float::half, half_float::half, R> { };
# 1958 "newhalf.hpp"
template< class T, class U> typename enable< bool, T, U> ::type operator==(T x, U y) { return functions::isequal(x, y); }
# 1965 "newhalf.hpp"
template< class T, class U> typename enable< bool, T, U> ::type operator!=(T x, U y) { return functions::isnotequal(x, y); }
# 1972 "newhalf.hpp"
template< class T, class U> typename enable< bool, T, U> ::type operator<(T x, U y) { return functions::isless(x, y); }
# 1979 "newhalf.hpp"
template< class T, class U> typename enable< bool, T, U> ::type operator>(T x, U y) { return functions::isgreater(x, y); }
# 1986 "newhalf.hpp"
template< class T, class U> typename enable< bool, T, U> ::type operator<=(T x, U y) { return functions::islessequal(x, y); }
# 1993 "newhalf.hpp"
template< class T, class U> typename enable< bool, T, U> ::type operator>=(T x, U y) { return functions::isgreaterequal(x, y); }
# 2003 "newhalf.hpp"
template< class T, class U> typename enable< expr, T, U> ::type operator+(T x, U y) { return functions::plus(x, y); }
# 2009 "newhalf.hpp"
template< class T, class U> typename enable< expr, T, U> ::type operator-(T x, U y) { return functions::minus(x, y); }
# 2015 "newhalf.hpp"
template< class T, class U> typename enable< expr, T, U> ::type operator*(T x, U y) { return functions::multiplies(x, y); }
# 2021 "newhalf.hpp"
template< class T, class U> typename enable< expr, T, U> ::type operator/(T x, U y) { return functions::divides(x, y); }
# 2026 "newhalf.hpp"
template< class T> typename enable< T, T> ::type operator+(T arg) { return arg; }
# 2031 "newhalf.hpp"
template< class T> typename enable< T, T> ::type operator-(T arg) { return unary_specialized< T> ::negate(arg); }
# 2041 "newhalf.hpp"
template< class T, class charT, class traits> typename enable< std::basic_ostream< charT, traits> &, T> ::type
# 2042 "newhalf.hpp"
operator<<(std::basic_ostream< charT, traits> &out, T arg) { return functions::write(out, arg); }
# 2048 "newhalf.hpp"
template< class charT, class traits> std::basic_istream< charT, traits> &
# 2049 "newhalf.hpp"
operator>>(std::basic_istream< charT, traits> &in, half &arg) { return functions::read(in, arg); }
# 2059 "newhalf.hpp"
inline half abs(half arg) { return unary_specialized< half> ::fabs(arg); }
# 2060 "newhalf.hpp"
inline expr abs(expr arg) { return unary_specialized< expr> ::fabs(arg); }
# 2066 "newhalf.hpp"
inline half fabs(half arg) { return unary_specialized< half> ::fabs(arg); }
# 2067 "newhalf.hpp"
inline expr fabs(expr arg) { return unary_specialized< expr> ::fabs(arg); }
# 2074 "newhalf.hpp"
inline expr fmod(half x, half y) { return functions::fmod(x, y); }
# 2075 "newhalf.hpp"
inline expr fmod(half x, expr y) { return functions::fmod(x, y); }
# 2076 "newhalf.hpp"
inline expr fmod(expr x, half y) { return functions::fmod(x, y); }
# 2077 "newhalf.hpp"
inline expr fmod(expr x, expr y) { return functions::fmod(x, y); }
# 2084 "newhalf.hpp"
inline expr remainder(half x, half y) { return functions::remainder(x, y); }
# 2085 "newhalf.hpp"
inline expr remainder(half x, expr y) { return functions::remainder(x, y); }
# 2086 "newhalf.hpp"
inline expr remainder(expr x, half y) { return functions::remainder(x, y); }
# 2087 "newhalf.hpp"
inline expr remainder(expr x, expr y) { return functions::remainder(x, y); }
# 2095 "newhalf.hpp"
inline expr remquo(half x, half y, int *quo) { return functions::remquo(x, y, quo); }
# 2096 "newhalf.hpp"
inline expr remquo(half x, expr y, int *quo) { return functions::remquo(x, y, quo); }
# 2097 "newhalf.hpp"
inline expr remquo(expr x, half y, int *quo) { return functions::remquo(x, y, quo); }
# 2098 "newhalf.hpp"
inline expr remquo(expr x, expr y, int *quo) { return functions::remquo(x, y, quo); }
# 2106 "newhalf.hpp"
inline expr fma(half x, half y, half z) { return functions::fma(x, y, z); }
# 2107 "newhalf.hpp"
inline expr fma(half x, half y, expr z) { return functions::fma(x, y, z); }
# 2108 "newhalf.hpp"
inline expr fma(half x, expr y, half z) { return functions::fma(x, y, z); }
# 2109 "newhalf.hpp"
inline expr fma(half x, expr y, expr z) { return functions::fma(x, y, z); }
# 2110 "newhalf.hpp"
inline expr fma(expr x, half y, half z) { return functions::fma(x, y, z); }
# 2111 "newhalf.hpp"
inline expr fma(expr x, half y, expr z) { return functions::fma(x, y, z); }
# 2112 "newhalf.hpp"
inline expr fma(expr x, expr y, half z) { return functions::fma(x, y, z); }
# 2113 "newhalf.hpp"
inline expr fma(expr x, expr y, expr z) { return functions::fma(x, y, z); }
# 2120 "newhalf.hpp"
inline half fmax(half x, half y) { return binary_specialized< half, half> ::fmax(x, y); }
# 2121 "newhalf.hpp"
inline expr fmax(half x, expr y) { return binary_specialized< half, expr> ::fmax(x, y); }
# 2122 "newhalf.hpp"
inline expr fmax(expr x, half y) { return binary_specialized< expr, half> ::fmax(x, y); }
# 2123 "newhalf.hpp"
inline expr fmax(expr x, expr y) { return binary_specialized< expr, expr> ::fmax(x, y); }
# 2130 "newhalf.hpp"
inline half fmin(half x, half y) { return binary_specialized< half, half> ::fmin(x, y); }
# 2131 "newhalf.hpp"
inline expr fmin(half x, expr y) { return binary_specialized< half, expr> ::fmin(x, y); }
# 2132 "newhalf.hpp"
inline expr fmin(expr x, half y) { return binary_specialized< expr, half> ::fmin(x, y); }
# 2133 "newhalf.hpp"
inline expr fmin(expr x, expr y) { return binary_specialized< expr, expr> ::fmin(x, y); }
# 2140 "newhalf.hpp"
inline expr fdim(half x, half y) { return functions::fdim(x, y); }
# 2141 "newhalf.hpp"
inline expr fdim(half x, expr y) { return functions::fdim(x, y); }
# 2142 "newhalf.hpp"
inline expr fdim(expr x, half y) { return functions::fdim(x, y); }
# 2143 "newhalf.hpp"
inline expr fdim(expr x, expr y) { return functions::fdim(x, y); }
# 2148 "newhalf.hpp"
inline half nanh(const char *arg) { return functions::nanh(arg); }
# 2158 "newhalf.hpp"
inline expr exp(half arg) { return functions::exp(arg); }
# 2159 "newhalf.hpp"
inline expr exp(expr arg) { return functions::exp(arg); }
# 2165 "newhalf.hpp"
inline expr expm1(half arg) { return functions::expm1(arg); }
# 2166 "newhalf.hpp"
inline expr expm1(expr arg) { return functions::expm1(arg); }
# 2172 "newhalf.hpp"
inline expr exp2(half arg) { return functions::exp2(arg); }
# 2173 "newhalf.hpp"
inline expr exp2(expr arg) { return functions::exp2(arg); }
# 2179 "newhalf.hpp"
inline expr log(half arg) { return functions::log(arg); }
# 2180 "newhalf.hpp"
inline expr log(expr arg) { return functions::log(arg); }
# 2186 "newhalf.hpp"
inline expr log10(half arg) { return functions::log10(arg); }
# 2187 "newhalf.hpp"
inline expr log10(expr arg) { return functions::log10(arg); }
# 2193 "newhalf.hpp"
inline expr log1p(half arg) { return functions::log1p(arg); }
# 2194 "newhalf.hpp"
inline expr log1p(expr arg) { return functions::log1p(arg); }
# 2200 "newhalf.hpp"
inline expr log2(half arg) { return functions::log2(arg); }
# 2201 "newhalf.hpp"
inline expr log2(expr arg) { return functions::log2(arg); }
# 2211 "newhalf.hpp"
inline expr sqrt(half arg) { return functions::sqrt(arg); }
# 2212 "newhalf.hpp"
inline expr sqrt(expr arg) { return functions::sqrt(arg); }
# 2218 "newhalf.hpp"
inline expr cbrt(half arg) { return functions::cbrt(arg); }
# 2219 "newhalf.hpp"
inline expr cbrt(expr arg) { return functions::cbrt(arg); }
# 2226 "newhalf.hpp"
inline expr hypot(half x, half y) { return functions::hypot(x, y); }
# 2227 "newhalf.hpp"
inline expr hypot(half x, expr y) { return functions::hypot(x, y); }
# 2228 "newhalf.hpp"
inline expr hypot(expr x, half y) { return functions::hypot(x, y); }
# 2229 "newhalf.hpp"
inline expr hypot(expr x, expr y) { return functions::hypot(x, y); }
# 2236 "newhalf.hpp"
inline expr pow(half base, half exp) { return functions::pow(base, exp); }
# 2237 "newhalf.hpp"
inline expr pow(half base, expr exp) { return functions::pow(base, exp); }
# 2238 "newhalf.hpp"
inline expr pow(expr base, half exp) { return functions::pow(base, exp); }
# 2239 "newhalf.hpp"
inline expr pow(expr base, expr exp) { return functions::pow(base, exp); }
# 2249 "newhalf.hpp"
inline expr sin(half arg) { return functions::sin(arg); }
# 2250 "newhalf.hpp"
inline expr sin(expr arg) { return functions::sin(arg); }
# 2256 "newhalf.hpp"
inline expr cos(half arg) { return functions::cos(arg); }
# 2257 "newhalf.hpp"
inline expr cos(expr arg) { return functions::cos(arg); }
# 2263 "newhalf.hpp"
inline expr tan(half arg) { return functions::tan(arg); }
# 2264 "newhalf.hpp"
inline expr tan(expr arg) { return functions::tan(arg); }
# 2270 "newhalf.hpp"
inline expr asin(half arg) { return functions::asin(arg); }
# 2271 "newhalf.hpp"
inline expr asin(expr arg) { return functions::asin(arg); }
# 2277 "newhalf.hpp"
inline expr acos(half arg) { return functions::acos(arg); }
# 2278 "newhalf.hpp"
inline expr acos(expr arg) { return functions::acos(arg); }
# 2284 "newhalf.hpp"
inline expr atan(half arg) { return functions::atan(arg); }
# 2285 "newhalf.hpp"
inline expr atan(expr arg) { return functions::atan(arg); }
# 2292 "newhalf.hpp"
inline expr atan2(half x, half y) { return functions::atan2(x, y); }
# 2293 "newhalf.hpp"
inline expr atan2(half x, expr y) { return functions::atan2(x, y); }
# 2294 "newhalf.hpp"
inline expr atan2(expr x, half y) { return functions::atan2(x, y); }
# 2295 "newhalf.hpp"
inline expr atan2(expr x, expr y) { return functions::atan2(x, y); }
# 2305 "newhalf.hpp"
inline expr sinh(half arg) { return functions::sinh(arg); }
# 2306 "newhalf.hpp"
inline expr sinh(expr arg) { return functions::sinh(arg); }
# 2312 "newhalf.hpp"
inline expr cosh(half arg) { return functions::cosh(arg); }
# 2313 "newhalf.hpp"
inline expr cosh(expr arg) { return functions::cosh(arg); }
# 2319 "newhalf.hpp"
inline expr tanh(half arg) { return functions::tanh(arg); }
# 2320 "newhalf.hpp"
inline expr tanh(expr arg) { return functions::tanh(arg); }
# 2326 "newhalf.hpp"
inline expr asinh(half arg) { return functions::asinh(arg); }
# 2327 "newhalf.hpp"
inline expr asinh(expr arg) { return functions::asinh(arg); }
# 2333 "newhalf.hpp"
inline expr acosh(half arg) { return functions::acosh(arg); }
# 2334 "newhalf.hpp"
inline expr acosh(expr arg) { return functions::acosh(arg); }
# 2340 "newhalf.hpp"
inline expr atanh(half arg) { return functions::atanh(arg); }
# 2341 "newhalf.hpp"
inline expr atanh(expr arg) { return functions::atanh(arg); }
# 2351 "newhalf.hpp"
inline expr erf(half arg) { return functions::erf(arg); }
# 2352 "newhalf.hpp"
inline expr erf(expr arg) { return functions::erf(arg); }
# 2358 "newhalf.hpp"
inline expr erfc(half arg) { return functions::erfc(arg); }
# 2359 "newhalf.hpp"
inline expr erfc(expr arg) { return functions::erfc(arg); }
# 2365 "newhalf.hpp"
inline expr lgamma(half arg) { return functions::lgamma(arg); }
# 2366 "newhalf.hpp"
inline expr lgamma(expr arg) { return functions::lgamma(arg); }
# 2372 "newhalf.hpp"
inline expr tgamma(half arg) { return functions::tgamma(arg); }
# 2373 "newhalf.hpp"
inline expr tgamma(expr arg) { return functions::tgamma(arg); }
# 2383 "newhalf.hpp"
inline half ceil(half arg) { return functions::ceil(arg); }
# 2384 "newhalf.hpp"
inline half ceil(expr arg) { return functions::ceil(arg); }
# 2390 "newhalf.hpp"
inline half floor(half arg) { return functions::floor(arg); }
# 2391 "newhalf.hpp"
inline half floor(expr arg) { return functions::floor(arg); }
# 2397 "newhalf.hpp"
inline half trunc(half arg) { return functions::trunc(arg); }
# 2398 "newhalf.hpp"
inline half trunc(expr arg) { return functions::trunc(arg); }
# 2404 "newhalf.hpp"
inline half round(half arg) { return functions::round(arg); }
# 2405 "newhalf.hpp"
inline half round(expr arg) { return functions::round(arg); }
# 2411 "newhalf.hpp"
inline long lround(half arg) { return functions::lround(arg); }
# 2412 "newhalf.hpp"
inline long lround(expr arg) { return functions::lround(arg); }
# 2418 "newhalf.hpp"
inline half nearbyint(half arg) { return functions::rint(arg); }
# 2419 "newhalf.hpp"
inline half nearbyint(expr arg) { return functions::rint(arg); }
# 2425 "newhalf.hpp"
inline half rint(half arg) { return functions::rint(arg); }
# 2426 "newhalf.hpp"
inline half rint(expr arg) { return functions::rint(arg); }
# 2432 "newhalf.hpp"
inline long lrint(half arg) { return functions::lrint(arg); }
# 2433 "newhalf.hpp"
inline long lrint(expr arg) { return functions::lrint(arg); }
# 2459 "newhalf.hpp"
inline half frexp(half arg, int *exp) { return functions::frexp(arg, exp); }
# 2460 "newhalf.hpp"
inline half frexp(expr arg, int *exp) { return functions::frexp(arg, exp); }
# 2467 "newhalf.hpp"
inline half ldexp(half arg, int exp) { return functions::scalbln(arg, exp); }
# 2468 "newhalf.hpp"
inline half ldexp(expr arg, int exp) { return functions::scalbln(arg, exp); }
# 2475 "newhalf.hpp"
inline half modf(half arg, half *iptr) { return functions::modf(arg, iptr); }
# 2476 "newhalf.hpp"
inline half modf(expr arg, half *iptr) { return functions::modf(arg, iptr); }
# 2483 "newhalf.hpp"
inline half scalbn(half arg, int exp) { return functions::scalbln(arg, exp); }
# 2484 "newhalf.hpp"
inline half scalbn(expr arg, int exp) { return functions::scalbln(arg, exp); }
# 2491 "newhalf.hpp"
inline half scalbln(half arg, long exp) { return functions::scalbln(arg, exp); }
# 2492 "newhalf.hpp"
inline half scalbln(expr arg, long exp) { return functions::scalbln(arg, exp); }
# 2501 "newhalf.hpp"
inline int ilogb(half arg) { return functions::ilogb(arg); }
# 2502 "newhalf.hpp"
inline int ilogb(expr arg) { return functions::ilogb(arg); }
# 2508 "newhalf.hpp"
inline half logb(half arg) { return functions::logb(arg); }
# 2509 "newhalf.hpp"
inline half logb(expr arg) { return functions::logb(arg); }
# 2516 "newhalf.hpp"
inline half nextafter(half from, half to) { return functions::nextafter(from, to); }
# 2517 "newhalf.hpp"
inline half nextafter(half from, expr to) { return functions::nextafter(from, to); }
# 2518 "newhalf.hpp"
inline half nextafter(expr from, half to) { return functions::nextafter(from, to); }
# 2519 "newhalf.hpp"
inline half nextafter(expr from, expr to) { return functions::nextafter(from, to); }
# 2526 "newhalf.hpp"
inline half nexttoward(half from, long double to) { return functions::nexttoward(from, to); }
# 2527 "newhalf.hpp"
inline half nexttoward(expr from, long double to) { return functions::nexttoward(from, to); }
# 2534 "newhalf.hpp"
inline half copysign(half x, half y) { return functions::copysign(x, y); }
# 2535 "newhalf.hpp"
inline half copysign(half x, expr y) { return functions::copysign(x, y); }
# 2536 "newhalf.hpp"
inline half copysign(expr x, half y) { return functions::copysign(x, y); }
# 2537 "newhalf.hpp"
inline half copysign(expr x, expr y) { return functions::copysign(x, y); }
# 2552 "newhalf.hpp"
inline int fpclassify(half arg) { return functions::fpclassify(arg); }
# 2553 "newhalf.hpp"
inline int fpclassify(expr arg) { return functions::fpclassify(arg); }
# 2560 "newhalf.hpp"
inline bool isfinite(half arg) { return functions::isfinite(arg); }
# 2561 "newhalf.hpp"
inline bool isfinite(expr arg) { return functions::isfinite(arg); }
# 2568 "newhalf.hpp"
inline bool isinf(half arg) { return functions::isinf(arg); }
# 2569 "newhalf.hpp"
inline bool isinf(expr arg) { return functions::isinf(arg); }
# 2576 "newhalf.hpp"
inline bool isnan(half arg) { return functions::isnan(arg); }
# 2577 "newhalf.hpp"
inline bool isnan(expr arg) { return functions::isnan(arg); }
# 2584 "newhalf.hpp"
inline bool isnormal(half arg) { return functions::isnormal(arg); }
# 2585 "newhalf.hpp"
inline bool isnormal(expr arg) { return functions::isnormal(arg); }
# 2592 "newhalf.hpp"
inline bool signbit(half arg) { return functions::signbit(arg); }
# 2593 "newhalf.hpp"
inline bool signbit(expr arg) { return functions::signbit(arg); }
# 2605 "newhalf.hpp"
inline bool isgreater(half x, half y) { return functions::isgreater(x, y); }
# 2606 "newhalf.hpp"
inline bool isgreater(half x, expr y) { return functions::isgreater(x, y); }
# 2607 "newhalf.hpp"
inline bool isgreater(expr x, half y) { return functions::isgreater(x, y); }
# 2608 "newhalf.hpp"
inline bool isgreater(expr x, expr y) { return functions::isgreater(x, y); }
# 2616 "newhalf.hpp"
inline bool isgreaterequal(half x, half y) { return functions::isgreaterequal(x, y); }
# 2617 "newhalf.hpp"
inline bool isgreaterequal(half x, expr y) { return functions::isgreaterequal(x, y); }
# 2618 "newhalf.hpp"
inline bool isgreaterequal(expr x, half y) { return functions::isgreaterequal(x, y); }
# 2619 "newhalf.hpp"
inline bool isgreaterequal(expr x, expr y) { return functions::isgreaterequal(x, y); }
# 2627 "newhalf.hpp"
inline bool isless(half x, half y) { return functions::isless(x, y); }
# 2628 "newhalf.hpp"
inline bool isless(half x, expr y) { return functions::isless(x, y); }
# 2629 "newhalf.hpp"
inline bool isless(expr x, half y) { return functions::isless(x, y); }
# 2630 "newhalf.hpp"
inline bool isless(expr x, expr y) { return functions::isless(x, y); }
# 2638 "newhalf.hpp"
inline bool islessequal(half x, half y) { return functions::islessequal(x, y); }
# 2639 "newhalf.hpp"
inline bool islessequal(half x, expr y) { return functions::islessequal(x, y); }
# 2640 "newhalf.hpp"
inline bool islessequal(expr x, half y) { return functions::islessequal(x, y); }
# 2641 "newhalf.hpp"
inline bool islessequal(expr x, expr y) { return functions::islessequal(x, y); }
# 2649 "newhalf.hpp"
inline bool islessgreater(half x, half y) { return functions::islessgreater(x, y); }
# 2650 "newhalf.hpp"
inline bool islessgreater(half x, expr y) { return functions::islessgreater(x, y); }
# 2651 "newhalf.hpp"
inline bool islessgreater(expr x, half y) { return functions::islessgreater(x, y); }
# 2652 "newhalf.hpp"
inline bool islessgreater(expr x, expr y) { return functions::islessgreater(x, y); }
# 2660 "newhalf.hpp"
inline bool isunordered(half x, half y) { return functions::isunordered(x, y); }
# 2661 "newhalf.hpp"
inline bool isunordered(half x, expr y) { return functions::isunordered(x, y); }
# 2662 "newhalf.hpp"
inline bool isunordered(expr x, half y) { return functions::isunordered(x, y); }
# 2663 "newhalf.hpp"
inline bool isunordered(expr x, expr y) { return functions::isunordered(x, y); }
# 2682 "newhalf.hpp"
template< class T, class U> typename half_caster< T, U> ::type half_cast(U arg) { return half_caster< T, U> ::cast(arg); }
# 2699 "newhalf.hpp"
template< class T, std::float_round_style R, class U> typename half_caster< T, U, R> ::type half_cast(U arg)
# 2700 "newhalf.hpp"
{ return half_caster< T, U, R> ::cast(arg); }
# 2702 "newhalf.hpp"
}
# 2704 "newhalf.hpp"
using detail::operator==;
# 2705 "newhalf.hpp"
using detail::operator!=;
# 2706 "newhalf.hpp"
using detail::operator<;
# 2707 "newhalf.hpp"
using detail::operator>;
# 2708 "newhalf.hpp"
using detail::operator<=;
# 2709 "newhalf.hpp"
using detail::operator>=;
# 2710 "newhalf.hpp"
using detail::operator+;
# 2711 "newhalf.hpp"
using detail::operator-;
# 2712 "newhalf.hpp"
using detail::operator*;
# 2713 "newhalf.hpp"
using detail::operator/;
# 2714 "newhalf.hpp"
using detail::operator<<;
# 2715 "newhalf.hpp"
using detail::operator>>;
# 2717 "newhalf.hpp"
using detail::abs;
# 2718 "newhalf.hpp"
using detail::fabs;
# 2719 "newhalf.hpp"
using detail::fmod;
# 2720 "newhalf.hpp"
using detail::remainder;
# 2721 "newhalf.hpp"
using detail::remquo;
# 2722 "newhalf.hpp"
using detail::fma;
# 2723 "newhalf.hpp"
using detail::fmax;
# 2724 "newhalf.hpp"
using detail::fmin;
# 2725 "newhalf.hpp"
using detail::fdim;
# 2726 "newhalf.hpp"
using detail::nanh;
# 2727 "newhalf.hpp"
using detail::exp;
# 2728 "newhalf.hpp"
using detail::expm1;
# 2729 "newhalf.hpp"
using detail::exp2;
# 2730 "newhalf.hpp"
using detail::log;
# 2731 "newhalf.hpp"
using detail::log10;
# 2732 "newhalf.hpp"
using detail::log1p;
# 2733 "newhalf.hpp"
using detail::log2;
# 2734 "newhalf.hpp"
using detail::sqrt;
# 2735 "newhalf.hpp"
using detail::cbrt;
# 2736 "newhalf.hpp"
using detail::hypot;
# 2737 "newhalf.hpp"
using detail::pow;
# 2738 "newhalf.hpp"
using detail::sin;
# 2739 "newhalf.hpp"
using detail::cos;
# 2740 "newhalf.hpp"
using detail::tan;
# 2741 "newhalf.hpp"
using detail::asin;
# 2742 "newhalf.hpp"
using detail::acos;
# 2743 "newhalf.hpp"
using detail::atan;
# 2744 "newhalf.hpp"
using detail::atan2;
# 2745 "newhalf.hpp"
using detail::sinh;
# 2746 "newhalf.hpp"
using detail::cosh;
# 2747 "newhalf.hpp"
using detail::tanh;
# 2748 "newhalf.hpp"
using detail::asinh;
# 2749 "newhalf.hpp"
using detail::acosh;
# 2750 "newhalf.hpp"
using detail::atanh;
# 2751 "newhalf.hpp"
using detail::erf;
# 2752 "newhalf.hpp"
using detail::erfc;
# 2753 "newhalf.hpp"
using detail::lgamma;
# 2754 "newhalf.hpp"
using detail::tgamma;
# 2755 "newhalf.hpp"
using detail::ceil;
# 2756 "newhalf.hpp"
using detail::floor;
# 2757 "newhalf.hpp"
using detail::trunc;
# 2758 "newhalf.hpp"
using detail::round;
# 2759 "newhalf.hpp"
using detail::lround;
# 2760 "newhalf.hpp"
using detail::nearbyint;
# 2761 "newhalf.hpp"
using detail::rint;
# 2762 "newhalf.hpp"
using detail::lrint;
# 2767 "newhalf.hpp"
using detail::frexp;
# 2768 "newhalf.hpp"
using detail::ldexp;
# 2769 "newhalf.hpp"
using detail::modf;
# 2770 "newhalf.hpp"
using detail::scalbn;
# 2771 "newhalf.hpp"
using detail::scalbln;
# 2772 "newhalf.hpp"
using detail::ilogb;
# 2773 "newhalf.hpp"
using detail::logb;
# 2774 "newhalf.hpp"
using detail::nextafter;
# 2775 "newhalf.hpp"
using detail::nexttoward;
# 2776 "newhalf.hpp"
using detail::copysign;
# 2777 "newhalf.hpp"
using detail::fpclassify;
# 2778 "newhalf.hpp"
using detail::isfinite;
# 2779 "newhalf.hpp"
using detail::isinf;
# 2780 "newhalf.hpp"
using detail::isnan;
# 2781 "newhalf.hpp"
using detail::isnormal;
# 2782 "newhalf.hpp"
using detail::signbit;
# 2783 "newhalf.hpp"
using detail::isgreater;
# 2784 "newhalf.hpp"
using detail::isgreaterequal;
# 2785 "newhalf.hpp"
using detail::isless;
# 2786 "newhalf.hpp"
using detail::islessequal;
# 2787 "newhalf.hpp"
using detail::islessgreater;
# 2788 "newhalf.hpp"
using detail::isunordered;
# 2790 "newhalf.hpp"
using detail::half_cast;
# 2791 "newhalf.hpp"
}
# 2793 "newhalf.hpp"
inline void print_binary(int *n)
# 2794 "newhalf.hpp"
{
# 2795 "newhalf.hpp"
uint32_t temp_t = *n;
# 2796 "newhalf.hpp"
std::bitset< 32UL> x(temp_t);
# 2797 "newhalf.hpp"
(((std::cout << x)) << (std::endl));
# 2798 "newhalf.hpp"
}
# 2800 "newhalf.hpp"
inline uint32_t floats2half2(float val_high, float val_low)
# 2801 "newhalf.hpp"
{
# 2802 "newhalf.hpp"
using half_float::half;
# 2803 "newhalf.hpp"
half_float::half temp_high = ((half_float::half)(val_high));
# 2804 "newhalf.hpp"
half_float::half temp_low = ((half_float::half)(val_low));
# 2805 "newhalf.hpp"
uint32_t high16_pointer[] = {(0)};
# 2806 "newhalf.hpp"
uint32_t low16_pointer[] = {(0)};
# 2807 "newhalf.hpp"
memcpy(high16_pointer, &temp_high, 2);
# 2808 "newhalf.hpp"
memcpy(low16_pointer, &temp_low, 2);
# 2815 "newhalf.hpp"
uint32_t return_val = (0);
# 2816 "newhalf.hpp"
return_val = ((((high16_pointer[0]) & (65535)) << 16) | ((low16_pointer[0]) & (65535)));
# 2817 "newhalf.hpp"
return return_val;
# 2818 "newhalf.hpp"
}
# 2820 "newhalf.hpp"
inline float half2high2float(uint32_t half2val)
# 2821 "newhalf.hpp"
{
# 2822 "newhalf.hpp"
using half_float::half;
# 2823 "newhalf.hpp"
half_float::half temp_val[] = {((half_float::half)((0.0))), ((half_float::half)((0.0)))};
# 2826 "newhalf.hpp"
memcpy(temp_val, &half2val, 4);
# 2827 "newhalf.hpp"
return (float)(temp_val[0]);
# 2828 "newhalf.hpp"
}
# 2829 "newhalf.hpp"
inline float half2low2float(uint32_t half2val)
# 2830 "newhalf.hpp"
{
# 2831 "newhalf.hpp"
using half_float::half;
# 2832 "newhalf.hpp"
half_float::half temp_val[] = {((half_float::half)((0.0))), ((half_float::half)((0.0)))};
# 2834 "newhalf.hpp"
memcpy(temp_val, &half2val, 4);
# 2835 "newhalf.hpp"
return (float)(temp_val[1]);
# 2836 "newhalf.hpp"
}
# 2838 "newhalf.hpp"
namespace std {
# 2844 "newhalf.hpp"
template<> class numeric_limits< half_float::half> : public std::numeric_limits< float> {
# 2848 "newhalf.hpp"
public: static const bool is_signed = true;
# 2851 "newhalf.hpp"
static const bool is_exact = false;
# 2854 "newhalf.hpp"
static const bool is_modulo = false;
# 2857 "newhalf.hpp"
static const bool is_iec559 = true;
# 2860 "newhalf.hpp"
static const bool has_infinity = true;
# 2863 "newhalf.hpp"
static const bool has_quiet_NaN = true;
# 2866 "newhalf.hpp"
static const float_denorm_style has_denorm = denorm_present;
# 2872 "newhalf.hpp"
static const float_round_style round_style = ((std::numeric_limits< float> ::round_style == half_float::half::round_style) ? half_float::half::round_style : round_indeterminate);
# 2876 "newhalf.hpp"
static const int digits = 11;
# 2879 "newhalf.hpp"
static const int digits10 = 3;
# 2882 "newhalf.hpp"
static const int max_digits10 = 5;
# 2885 "newhalf.hpp"
static const int radix = 2;
# 2888 "newhalf.hpp"
static const int min_exponent = (-13);
# 2891 "newhalf.hpp"
static const int min_exponent10 = (-4);
# 2894 "newhalf.hpp"
static const int max_exponent = 16;
# 2897 "newhalf.hpp"
static const int max_exponent10 = 4;
# 2900 "newhalf.hpp"
static half_float::half min() throw() { return half_float::half(half_float::detail::binary, 1024); }
# 2903 "newhalf.hpp"
static half_float::half lowest() throw() { return half_float::half(half_float::detail::binary, 64511); }
# 2906 "newhalf.hpp"
static half_float::half max() throw() { return half_float::half(half_float::detail::binary, 31743); }
# 2909 "newhalf.hpp"
static half_float::half epsilon() throw() { return half_float::half(half_float::detail::binary, 5120); }
# 2912 "newhalf.hpp"
static half_float::half round_error() throw()
# 2913 "newhalf.hpp"
{ return half_float::half(half_float::detail::binary, (round_style == (std::round_to_nearest)) ? 14336 : 15360); }
# 2916 "newhalf.hpp"
static half_float::half infinity() throw() { return half_float::half(half_float::detail::binary, 31744); }
# 2919 "newhalf.hpp"
static half_float::half quiet_NaN() throw() { return half_float::half(half_float::detail::binary, 32767); }
# 2922 "newhalf.hpp"
static half_float::half signaling_NaN() throw() { return half_float::half(half_float::detail::binary, 32255); }
# 2925 "newhalf.hpp"
static half_float::half denorm_min() throw() { return half_float::half(half_float::detail::binary, 1); }
# 2929 "newhalf.hpp"
};
# 2949 "newhalf.hpp"
}
# 33 "nn_cuda.cu"
typedef
# 29 "nn_cuda.cu"
struct latLong {
# 31 "nn_cuda.cu"
float lat;
# 32 "nn_cuda.cu"
float lng;
# 33 "nn_cuda.cu"
} LatLong;
# 40 "nn_cuda.cu"
typedef
# 36 "nn_cuda.cu"
struct latLong_half2 {
# 38 "nn_cuda.cu"
__half2 lat;
# 39 "nn_cuda.cu"
__half2 lng;
# 40 "nn_cuda.cu"
} LatLong_half2;
# 46 "nn_cuda.cu"
typedef
# 42 "nn_cuda.cu"
struct latLong_half2_host {
# 44 "nn_cuda.cu"
uint32_t lat;
# 45 "nn_cuda.cu"
uint32_t lng;
# 46 "nn_cuda.cu"
} LatLong_half2_host;
# 54 "nn_cuda.cu"
typedef
# 50 "nn_cuda.cu"
struct record {
# 52 "nn_cuda.cu"
char recString[53];
# 53 "nn_cuda.cu"
float distance;
# 54 "nn_cuda.cu"
} Record;
# 56 "nn_cuda.cu"
int loadData(char * filename, std::vector< record> & records, std::vector< latLong> & locations);
# 57 "nn_cuda.cu"
void findLowest(std::vector< record> & records, float * distances, int numRecords, int topN);
# 58 "nn_cuda.cu"
void printUsage();
# 59 "nn_cuda.cu"
int parseCommandline(int argc, char * argv[], char * filename, int * r, float * lat, float * lng, int * q, int * t, int * p, int * d);
# 67 "nn_cuda.cu"
void euclid(LatLong_half2 *d_locations, __half2 *d_distances, int numRecords, __half2 lat, __half2 lng) ;
# 84 "nn_cuda.cu"
int main(int argc, char *argv[])
# 85 "nn_cuda.cu"
{
# 86 "nn_cuda.cu"
int i = 0;
# 87 "nn_cuda.cu"
float lat, lng;
# 88 "nn_cuda.cu"
int quiet = 0, timing = 0, platform = 0, device = 0;
# 90 "nn_cuda.cu"
std::vector< record> records;
# 91 "nn_cuda.cu"
std::vector< latLong> locations;
# 92 "nn_cuda.cu"
char filename[100];
# 93 "nn_cuda.cu"
int resultsCount = 10;
# 96 "nn_cuda.cu"
if (parseCommandline(argc, argv, filename, &resultsCount, &lat, &lng, &quiet, &timing, &platform, &device))
# 97 "nn_cuda.cu"
{
# 98 "nn_cuda.cu"
printUsage();
# 99 "nn_cuda.cu"
return 0;
# 100 "nn_cuda.cu"
}
# 102 "nn_cuda.cu"
int numRecords = loadData(filename, records, locations);
# 104 "nn_cuda.cu"
if (resultsCount > numRecords) { resultsCount = numRecords; }
# 111 "nn_cuda.cu"
float *distances;
# 113 "nn_cuda.cu"
LatLong_half2 *d_locations;
# 114 "nn_cuda.cu"
half2 *d_distances;
# 118 "nn_cuda.cu"
cudaDeviceProp deviceProp;
# 119 "nn_cuda.cu"
cudaGetDeviceProperties(&deviceProp, 0);
# 120 "nn_cuda.cu"
cudaThreadSynchronize();
# 121 "nn_cuda.cu"
unsigned long maxGridX = (deviceProp.maxGridSize)[0];
# 122 "nn_cuda.cu"
unsigned long threadsPerBlock = ((deviceProp.maxThreadsPerBlock) > 256) ? 256 : (deviceProp.maxThreadsPerBlock);
# 123 "nn_cuda.cu"
size_t totalDeviceMemory;
# 124 "nn_cuda.cu"
size_t freeDeviceMemory;
# 125 "nn_cuda.cu"
cudaMemGetInfo(&freeDeviceMemory, &totalDeviceMemory);
# 126 "nn_cuda.cu"
cudaThreadSynchronize();
# 127 "nn_cuda.cu"
unsigned long usableDeviceMemory = (freeDeviceMemory * (85)) / (100);
# 128 "nn_cuda.cu"
unsigned long maxThreads = usableDeviceMemory / (12);
# 129 "nn_cuda.cu"
if (numRecords > maxThreads)
# 130 "nn_cuda.cu"
{
# 131 "nn_cuda.cu"
fprintf(stderr, "Error: Input too large.\n");
# 132 "nn_cuda.cu"
exit(1);
# 133 "nn_cuda.cu"
}
# 134 "nn_cuda.cu"
unsigned long blocks = (((numRecords / 2) + threadsPerBlock) - (1)) / threadsPerBlock;
# 135 "nn_cuda.cu"
unsigned long gridY = ((blocks + maxGridX) - (1)) / maxGridX;
# 136 "nn_cuda.cu"
unsigned long gridX = ((blocks + gridY) - (1)) / gridY;
# 138 "nn_cuda.cu"
dim3 gridDim(gridX, gridY);
# 140 "nn_cuda.cu"
if (true)
# 141 "nn_cuda.cu"
{
# 147 "nn_cuda.cu"
printf("threadsPerBlock: %lu\n", (unsigned long)threadsPerBlock);
# 148 "nn_cuda.cu"
printf("maxThreads: %lu\n", (unsigned long)maxThreads);
# 149 "nn_cuda.cu"
printf("blocks: %lu\n", (unsigned long)blocks);
# 150 "nn_cuda.cu"
printf("gridY: %lu\n", (unsigned long)gridY);
# 151 "nn_cuda.cu"
printf("gridX: %lu\n", (unsigned long)gridX);
# 152 "nn_cuda.cu"
}
# 157 "nn_cuda.cu"
distances = ((float *)malloc(sizeof(float) * numRecords));
# 158 "nn_cuda.cu"
half_float::half *distances_half = (half_float::half *)malloc(sizeof(__half) * numRecords);
# 159 "nn_cuda.cu"
cudaMalloc((void **)(&d_locations), (sizeof(LatLong_half2) * numRecords) / (2));
# 160 "nn_cuda.cu"
cudaMalloc((void **)(&d_distances), sizeof(__half) * numRecords);
# 164 "nn_cuda.cu"
uint32_t lat_half2 = floats2half2(lat, lat);
# 165 "nn_cuda.cu"
uint32_t lng_half2 = floats2half2(lng, lng);
# 168 "nn_cuda.cu"
LatLong_half2_host *locations_half_host = (LatLong_half2_host *)malloc((sizeof(LatLong_half2_host) * numRecords) / (2));
# 169 "nn_cuda.cu"
for (int i = 0; i < (numRecords / 2); i++) {
# 170 "nn_cuda.cu"
((locations_half_host[i]).lat) = floats2half2(locations[(2 * i) + 1].lat, locations[2 * i].lat);
# 171 "nn_cuda.cu"
((locations_half_host[i]).lng) = floats2half2(locations[(2 * i) + 1].lng, locations[2 * i].lng);
# 172 "nn_cuda.cu"
}
# 173 "nn_cuda.cu"
__half2 lat_dev = *((__half2 *)(&lat_half2));
# 174 "nn_cuda.cu"
__half2 lng_dev = *((__half2 *)(&lng_half2));
# 180 "nn_cuda.cu"
cudaMemcpy(d_locations, &(locations_half_host[0]), (sizeof(LatLong_half2) * numRecords) / (2), cudaMemcpyHostToDevice);
# 182 "nn_cuda.cu"
float tmp_t;
# 183 "nn_cuda.cu"
cudaEvent_t start, stop;
# 184 "nn_cuda.cu"
cudaEventCreate(&start);
# 185 "nn_cuda.cu"
cudaEventCreate(&stop);
# 186 "nn_cuda.cu"
cudaEventRecord(start, 0);
# 191 "nn_cuda.cu"
for (int i = 0; i < 100; i++) {
# 193 "nn_cuda.cu"
(__cudaPushCallConfiguration(gridDim, threadsPerBlock)) ? (void)0 : euclid(d_locations, d_distances, numRecords, lat_dev, lng_dev); }
# 194 "nn_cuda.cu"
cudaThreadSynchronize();
# 196 "nn_cuda.cu"
cudaEventRecord(stop, 0);
# 197 "nn_cuda.cu"
cudaEventSynchronize(stop);
# 198 "nn_cuda.cu"
cudaEventElapsedTime(&tmp_t, start, stop);
# 200 "nn_cuda.cu"
cudaMemcpy(distances_half, d_distances, sizeof(half) * numRecords, cudaMemcpyDeviceToHost);
# 202 "nn_cuda.cu"
for (int i = 0; i < numRecords; i++) {
# 203 "nn_cuda.cu"
(distances[i]) = ((float)(distances_half[i]));
# 208 "nn_cuda.cu"
}
# 211 "nn_cuda.cu"
findLowest(records, distances, numRecords, resultsCount);
# 214 "nn_cuda.cu"
if (!quiet) {
# 215 "nn_cuda.cu"
for (i = 0; i < resultsCount; i++) {
# 216 "nn_cuda.cu"
printf("%s --> Distance=%f\n", records[i].recString, records[i].distance);
# 217 "nn_cuda.cu"
} }
# 219 "nn_cuda.cu"
printf("time: %f \n", tmp_t);
# 221 "nn_cuda.cu"
free(distances);
# 223 "nn_cuda.cu"
cudaFree(d_locations);
# 224 "nn_cuda.cu"
cudaFree(d_distances); return 0;
# 226 "nn_cuda.cu"
}
# 228 "nn_cuda.cu"
int loadData(char *filename, std::vector< record> &records, std::vector< latLong> &locations) {
# 229 "nn_cuda.cu"
FILE *flist, *fp;
# 230 "nn_cuda.cu"
int i = 0;
# 231 "nn_cuda.cu"
char dbname[64];
# 232 "nn_cuda.cu"
int recNum = 0;
# 236 "nn_cuda.cu"
flist = fopen(filename, "r");
# 237 "nn_cuda.cu"
while (!(feof(flist))) {
# 243 "nn_cuda.cu"
if (fscanf(flist, "%s\n", dbname) != 1) {
# 244 "nn_cuda.cu"
fprintf(stderr, "error reading filelist\n");
# 245 "nn_cuda.cu"
exit(0);
# 246 "nn_cuda.cu"
}
# 247 "nn_cuda.cu"
fp = fopen(dbname, "r");
# 248 "nn_cuda.cu"
if (!fp) {
# 249 "nn_cuda.cu"
printf("error opening a db\n");
# 250 "nn_cuda.cu"
exit(1);
# 251 "nn_cuda.cu"
}
# 253 "nn_cuda.cu"
while (!(feof(fp))) {
# 254 "nn_cuda.cu"
Record record;
# 255 "nn_cuda.cu"
LatLong latLong;
# 256 "nn_cuda.cu"
fgets(record.recString, 49, fp);
# 257 "nn_cuda.cu"
fgetc(fp);
# 258 "nn_cuda.cu"
if (feof(fp)) { break; }
# 261 "nn_cuda.cu"
char substr[6];
# 263 "nn_cuda.cu"
for (i = 0; i < 5; i++) { (substr[i]) = (*(((record.recString) + i) + 28)); }
# 264 "nn_cuda.cu"
(substr[5]) = '\000';
# 265 "nn_cuda.cu"
(latLong.lat) = (atof(substr));
# 267 "nn_cuda.cu"
for (i = 0; i < 5; i++) { (substr[i]) = (*(((record.recString) + i) + 33)); }
# 268 "nn_cuda.cu"
(substr[5]) = '\000';
# 269 "nn_cuda.cu"
(latLong.lng) = (atof(substr));
# 271 "nn_cuda.cu"
locations.push_back(latLong);
# 272 "nn_cuda.cu"
records.push_back(record);
# 273 "nn_cuda.cu"
recNum++;
# 274 "nn_cuda.cu"
}
# 275 "nn_cuda.cu"
fclose(fp);
# 276 "nn_cuda.cu"
}
# 277 "nn_cuda.cu"
fclose(flist);
# 279 "nn_cuda.cu"
return recNum;
# 280 "nn_cuda.cu"
}
# 282 "nn_cuda.cu"
void findLowest(std::vector< record> &records, float *distances, int numRecords, int topN) {
# 283 "nn_cuda.cu"
int i, j;
# 284 "nn_cuda.cu"
float val;
# 285 "nn_cuda.cu"
int minLoc;
# 286 "nn_cuda.cu"
Record *tempRec;
# 287 "nn_cuda.cu"
float tempDist;
# 289 "nn_cuda.cu"
for (i = 0; i < topN; i++) {
# 290 "nn_cuda.cu"
minLoc = i;
# 291 "nn_cuda.cu"
for (j = i; j < numRecords; j++) {
# 292 "nn_cuda.cu"
val = (distances[j]);
# 293 "nn_cuda.cu"
if (val < (distances[minLoc])) { minLoc = j; }
# 294 "nn_cuda.cu"
}
# 296 "nn_cuda.cu"
tempRec = (&records[i]);
# 297 "nn_cuda.cu"
records[i] = records[minLoc];
# 298 "nn_cuda.cu"
records[minLoc] = (*tempRec);
# 300 "nn_cuda.cu"
tempDist = (distances[i]);
# 301 "nn_cuda.cu"
(distances[i]) = (distances[minLoc]);
# 302 "nn_cuda.cu"
(distances[minLoc]) = tempDist;
# 305 "nn_cuda.cu"
(records[i].distance) = (distances[i]);
# 306 "nn_cuda.cu"
}
# 307 "nn_cuda.cu"
}
# 309 "nn_cuda.cu"
int parseCommandline(int argc, char *argv[], char *filename, int *r, float *lat, float *lng, int *
# 310 "nn_cuda.cu"
q, int *t, int *p, int *d) {
# 311 "nn_cuda.cu"
int i;
# 312 "nn_cuda.cu"
if (argc < 2) { return 1; }
# 313 "nn_cuda.cu"
strncpy(filename, argv[1], 100);
# 314 "nn_cuda.cu"
char flag;
# 316 "nn_cuda.cu"
for (i = 1; i < argc; i++) {
# 317 "nn_cuda.cu"
if (((argv[i])[0]) == ('-')) {
# 318 "nn_cuda.cu"
flag = ((argv[i])[1]);
# 319 "nn_cuda.cu"
switch (flag) {
# 320 "nn_cuda.cu"
case 'r':
# 321 "nn_cuda.cu"
i++;
# 322 "nn_cuda.cu"
(*r) = atoi(argv[i]);
# 323 "nn_cuda.cu"
break;
# 324 "nn_cuda.cu"
case 'l':
# 325 "nn_cuda.cu"
if (((argv[i])[2]) == ('a')) {
# 326 "nn_cuda.cu"
(*lat) = (atof(argv[i + 1]));
# 327 "nn_cuda.cu"
} else
# 328 "nn_cuda.cu"
{
# 329 "nn_cuda.cu"
(*lng) = (atof(argv[i + 1]));
# 330 "nn_cuda.cu"
}
# 331 "nn_cuda.cu"
i++;
# 332 "nn_cuda.cu"
break;
# 333 "nn_cuda.cu"
case 'h':
# 334 "nn_cuda.cu"
return 1;
# 335 "nn_cuda.cu"
case 'q':
# 336 "nn_cuda.cu"
(*q) = 1;
# 337 "nn_cuda.cu"
break;
# 338 "nn_cuda.cu"
case 't':
# 339 "nn_cuda.cu"
(*t) = 1;
# 340 "nn_cuda.cu"
break;
# 341 "nn_cuda.cu"
case 'p':
# 342 "nn_cuda.cu"
i++;
# 343 "nn_cuda.cu"
(*p) = atoi(argv[i]);
# 344 "nn_cuda.cu"
break;
# 345 "nn_cuda.cu"
case 'd':
# 346 "nn_cuda.cu"
i++;
# 347 "nn_cuda.cu"
(*d) = atoi(argv[i]);
# 348 "nn_cuda.cu"
break;
# 349 "nn_cuda.cu"
}
# 350 "nn_cuda.cu"
}
# 351 "nn_cuda.cu"
}
# 352 "nn_cuda.cu"
if ((((*d) >= 0) && ((*p) < 0)) || (((*p) >= 0) && ((*d) < 0))) {
# 353 "nn_cuda.cu"
return 1; }
# 354 "nn_cuda.cu"
return 0;
# 355 "nn_cuda.cu"
}
# 357 "nn_cuda.cu"
void printUsage() {
# 358 "nn_cuda.cu"
printf("Nearest Neighbor Usage\n");
# 359 "nn_cuda.cu"
printf("\n");
# 360 "nn_cuda.cu"
printf("nearestNeighbor [filename] -r [int] -lat [float] -lng [float] [-hqt] [-p [int] -d [int]]\n");
# 361 "nn_cuda.cu"
printf("\n");
# 362 "nn_cuda.cu"
printf("example:\n");
# 363 "nn_cuda.cu"
printf("$ ./nearestNeighbor filelist.txt -r 5 -lat 30 -lng 90\n");
# 364 "nn_cuda.cu"
printf("\n");
# 365 "nn_cuda.cu"
printf("filename     the filename that lists the data input files\n");
# 366 "nn_cuda.cu"
printf("-r [int]     the number of records to return (default: 10)\n");
# 367 "nn_cuda.cu"
printf("-lat [float] the latitude for nearest neighbors (default: 0)\n");
# 368 "nn_cuda.cu"
printf("-lng [float] the longitude for nearest neighbors (default: 0)\n");
# 369 "nn_cuda.cu"
printf("\n");
# 370 "nn_cuda.cu"
printf("-h, --help   Display the help file\n");
# 371 "nn_cuda.cu"
printf("-q           Quiet mode. Suppress all text output.\n");
# 372 "nn_cuda.cu"
printf("-t           Print timing information.\n");
# 373 "nn_cuda.cu"
printf("\n");
# 374 "nn_cuda.cu"
printf("-p [int]     Choose the platform (must choose both platform and device)\n");
# 375 "nn_cuda.cu"
printf("-d [int]     Choose the device (must choose both platform and device)\n");
# 376 "nn_cuda.cu"
printf("\n");
# 377 "nn_cuda.cu"
printf("\n");
# 378 "nn_cuda.cu"
printf("Notes: 1. The filename is required as the first parameter.\n");
# 379 "nn_cuda.cu"
printf("       2. If you declare either the device or the platform,\n");
# 380 "nn_cuda.cu"
printf("          you must declare both.\n\n");
# 381 "nn_cuda.cu"
}
# 1 "tmpxft_000048b8_00000000-5_nn_cuda.compute_53.cudafe1.stub.c"
# 1 "tmpxft_000048b8_00000000-5_nn_cuda.compute_53.cudafe1.stub.c"
# 1 "/tmp/tmpxft_000048b8_00000000-5_nn_cuda.compute_53.cudafe1.stub.c" 1 3
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wunused-function"
#pragma GCC diagnostic ignored "-Wcast-qual"




# 1 "/usr/local/cuda/bin/..//include/crt/host_runtime.h" 1 3
# 63 "/usr/local/cuda/bin/..//include/crt/host_runtime.h" 3
template <typename T>
static inline T *__cudaAddressOf(T &val)
{
    return (T *)((void *)(&(const_cast<char &>(reinterpret_cast<const volatile char &>(val)))));
}
# 86 "/usr/local/cuda/bin/..//include/crt/host_runtime.h" 3
extern "C" cudaError_t __cudaPopCallConfiguration(
  dim3 *gridDim,
  dim3 *blockDim,
  size_t *sharedMem,
  void *stream
);
# 133 "/usr/local/cuda/bin/..//include/crt/host_runtime.h" 3
static void ____nv_dummy_param_ref(void *param) { volatile static void **__ref __attribute__((unused)); __ref = (volatile void **)param; }




extern "C" {
void __cudaRegisterLinkedBinary__NV_MODULE_ID ( void (*)(void **), void *, void *, void (*)(void *));
}




extern "C" {







  static const unsigned char __module_id_str[] __attribute__((section ("__nv_module_id"))) = "__NV_MODULE_ID";
# 164 "/usr/local/cuda/bin/..//include/crt/host_runtime.h" 3
}

extern "C" {
extern void** __cudaRegisterFatBinary(
  void *fatCubin
);

extern void __cudaUnregisterFatBinary(
  void **fatCubinHandle
);

extern void __cudaRegisterVar(
        void **fatCubinHandle,
        char *hostVar,
        char *deviceAddress,
  const char *deviceName,
        int ext,
        size_t size,
        int constant,
        int global
);

extern void __cudaRegisterManagedVar(
        void **fatCubinHandle,
        void **hostVarPtrAddress,
        char *deviceAddress,
  const char *deviceName,
        int ext,
        size_t size,
        int constant,
        int global
);

extern char __cudaInitModule(
        void **fatCubinHandle
);

extern void __cudaRegisterTexture(
        void **fatCubinHandle,
  const struct textureReference *hostVar,
  const void **deviceAddress,
  const char *deviceName,
        int dim,
        int norm,
        int ext
);

extern void __cudaRegisterSurface(
        void **fatCubinHandle,
  const struct surfaceReference *hostVar,
  const void **deviceAddress,
  const char *deviceName,
        int dim,
        int ext
);

extern void __cudaRegisterFunction(
        void **fatCubinHandle,
  const char *hostFun,
        char *deviceFun,
  const char *deviceName,
        int thread_limit,
        uint3 *tid,
        uint3 *bid,
        dim3 *bDim,
        dim3 *gDim,
        int *wSize
);





extern int atexit(void(*)(void)) throw();
# 248 "/usr/local/cuda/bin/..//include/crt/host_runtime.h" 3
}

static void **__cudaFatCubinHandle;

static void __cudaUnregisterBinaryUtil(void)
{
  ____nv_dummy_param_ref((void *)&__cudaFatCubinHandle);
  __cudaUnregisterFatBinary(__cudaFatCubinHandle);
}

static char __nv_init_managed_rt_with_module(void **handle)
{
  return __cudaInitModule(handle);
}

# 1 "/usr/local/cuda-10.0/include/crt/common_functions.h" 1 3
# 267 "/usr/local/cuda-10.0/include/crt/common_functions.h" 3
# 1 "/usr/local/cuda-10.0/include/crt/math_functions.h" 1 3
# 9962 "/usr/local/cuda-10.0/include/crt/math_functions.h" 3
# 1 "/usr/local/cuda/bin/..//include/crt/func_macro.h" 1 3
# 9963 "/usr/local/cuda-10.0/include/crt/math_functions.h" 2 3







inline double rsqrt(double a);

inline double rcbrt(double a);

inline double sinpi(double a);

inline double cospi(double a);

inline void sincospi(double a, double *sptr, double *cptr);

inline double erfinv(double a);

inline double erfcinv(double a);

inline double normcdfinv(double a);

inline double normcdf(double a);

inline double erfcx(double a);

inline float rsqrtf(float a);

inline float rcbrtf(float a);

inline float sinpif(float a);

inline float cospif(float a);

inline void sincospif(float a, float *sptr, float *cptr);

inline float erfinvf(float a);

inline float erfcinvf(float a);

inline float normcdfinvf(float a);

inline float normcdff(float a);

inline float erfcxf(float a);

inline int min(int a, int b);

inline unsigned int umin(unsigned int a, unsigned int b);

inline long long int llmin(long long int a, long long int b);

inline unsigned long long int ullmin(unsigned long long int a, unsigned long long int b);

inline int max(int a, int b);

inline unsigned int umax(unsigned int a, unsigned int b);

inline long long int llmax(long long int a, long long int b);

inline unsigned long long int ullmax(unsigned long long int a, unsigned long long int b);
# 10232 "/usr/local/cuda-10.0/include/crt/math_functions.h" 3
# 1 "/usr/local/cuda-10.0/include/crt/math_functions.hpp" 1 3
# 1178 "/usr/local/cuda-10.0/include/crt/math_functions.hpp" 3
# 1 "/usr/local/cuda-10.0/include/crt/host_defines.h" 1 3
# 1179 "/usr/local/cuda-10.0/include/crt/math_functions.hpp" 2 3
# 1 "/usr/local/cuda/bin/..//include/math_constants.h" 1 3
# 1180 "/usr/local/cuda-10.0/include/crt/math_functions.hpp" 2 3
# 1190 "/usr/local/cuda-10.0/include/crt/math_functions.hpp" 3
# 1 "/usr/local/cuda/bin/..//include/crt/func_macro.h" 1 3
# 1191 "/usr/local/cuda-10.0/include/crt/math_functions.hpp" 2 3
# 2901 "/usr/local/cuda-10.0/include/crt/math_functions.hpp" 3
inline double rsqrt(double a)
{
  return 1.0 / sqrt(a);
}

inline double rcbrt(double a)
{
  double s, t;

  if (__isnan(a)) {
    return a + a;
  }
  if (a == 0.0 || __isinf(a)) {
    return 1.0 / a;
  }
  s = fabs(a);
  t = exp2(-3.3333333333333333e-1 * log2(s));
  t = ((t*t) * (-s*t) + 1.0) * (3.3333333333333333e-1*t) + t;



  if (__signbit(a))

  {
    t = -t;
  }
  return t;
}

inline double sinpi(double a)
{
  int n;

  if (__isnan(a)) {
    return a + a;
  }
  if (a == 0.0 || __isinf(a)) {
    return sin (a);
  }
  if (a == floor(a)) {
    return ((a / 1.0e308) / 1.0e308) / 1.0e308;
  }
  a = remquo (a, 0.5, &n);
  a = a * 3.1415926535897931e+0;
  if (n & 1) {
    a = cos (a);
  } else {
    a = sin (a);
  }
  if (n & 2) {
    a = -a;
  }
  return a;
}

inline double cospi(double a)
{
  int n;

  if (__isnan(a)) {
    return a + a;
  }
  if (__isinf(a)) {
    return cos (a);
  }
  if (fabs(a) > 9.0071992547409920e+015) {
    a = 0.0;
  }
  a = remquo (a, 0.5, &n);
  a = a * 3.1415926535897931e+0;
  n++;
  if (n & 1) {
    a = cos (a);
  } else {
    a = sin (a);
  }
  if (n & 2) {
    a = -a;
  }
  if (a == 0.0) {
    a = fabs(a);
  }
  return a;
}

inline void sincospi(double a, double *sptr, double *cptr)
{
  *sptr = sinpi(a);
  *cptr = cospi(a);
}

inline double erfinv(double a)
{
  double p, q, t, fa;
  unsigned long long int l;

  fa = fabs(a);
  if (fa >= 1.0) {
    l = 0xfff8000000000000ull;
    memcpy(&t, &l, sizeof(double));
    if (fa == 1.0) {
      t = a * exp(1000.0);
    }
  } else if (fa >= 0.9375) {




    t = log1p(-fa);
    t = 1.0 / sqrt(-t);
    p = 2.7834010353747001060e-3;
    p = p * t + 8.6030097526280260580e-1;
    p = p * t + 2.1371214997265515515e+0;
    p = p * t + 3.1598519601132090206e+0;
    p = p * t + 3.5780402569085996758e+0;
    p = p * t + 1.5335297523989890804e+0;
    p = p * t + 3.4839207139657522572e-1;
    p = p * t + 5.3644861147153648366e-2;
    p = p * t + 4.3836709877126095665e-3;
    p = p * t + 1.3858518113496718808e-4;
    p = p * t + 1.1738352509991666680e-6;
    q = t + 2.2859981272422905412e+0;
    q = q * t + 4.3859045256449554654e+0;
    q = q * t + 4.6632960348736635331e+0;
    q = q * t + 3.9846608184671757296e+0;
    q = q * t + 1.6068377709719017609e+0;
    q = q * t + 3.5609087305900265560e-1;
    q = q * t + 5.3963550303200816744e-2;
    q = q * t + 4.3873424022706935023e-3;
    q = q * t + 1.3858762165532246059e-4;
    q = q * t + 1.1738313872397777529e-6;
    t = p / (q * t);
    if (a < 0.0) t = -t;
  } else if (fa >= 0.75) {




    t = a * a - .87890625;
    p = .21489185007307062000e+0;
    p = p * t - .64200071507209448655e+1;
    p = p * t + .29631331505876308123e+2;
    p = p * t - .47644367129787181803e+2;
    p = p * t + .34810057749357500873e+2;
    p = p * t - .12954198980646771502e+2;
    p = p * t + .25349389220714893917e+1;
    p = p * t - .24758242362823355486e+0;
    p = p * t + .94897362808681080020e-2;
    q = t - .12831383833953226499e+2;
    q = q * t + .41409991778428888716e+2;
    q = q * t - .53715373448862143349e+2;
    q = q * t + .33880176779595142685e+2;
    q = q * t - .11315360624238054876e+2;
    q = q * t + .20369295047216351160e+1;
    q = q * t - .18611650627372178511e+0;
    q = q * t + .67544512778850945940e-2;
    p = p / q;
    t = a * p;
  } else {




    t = a * a - .5625;
    p = - .23886240104308755900e+2;
    p = p * t + .45560204272689128170e+3;
    p = p * t - .22977467176607144887e+4;
    p = p * t + .46631433533434331287e+4;
    p = p * t - .43799652308386926161e+4;
    p = p * t + .19007153590528134753e+4;
    p = p * t - .30786872642313695280e+3;
    q = t - .83288327901936570000e+2;
    q = q * t + .92741319160935318800e+3;
    q = q * t - .35088976383877264098e+4;
    q = q * t + .59039348134843665626e+4;
    q = q * t - .48481635430048872102e+4;
    q = q * t + .18997769186453057810e+4;
    q = q * t - .28386514725366621129e+3;
    p = p / q;
    t = a * p;
  }
  return t;
}

inline double erfcinv(double a)
{
  double t;
  unsigned long long int l;

  if (__isnan(a)) {
    return a + a;
  }
  if (a <= 0.0) {
    l = 0xfff8000000000000ull;
    memcpy(&t, &l, sizeof(double));
    if (a == 0.0) {
        t = (1.0 - a) * exp(1000.0);
    }
  }
  else if (a >= 0.0625) {
    t = erfinv (1.0 - a);
  }
  else if (a >= 1e-100) {




    double p, q;
    t = log(a);
    t = 1.0 / sqrt(-t);
    p = 2.7834010353747001060e-3;
    p = p * t + 8.6030097526280260580e-1;
    p = p * t + 2.1371214997265515515e+0;
    p = p * t + 3.1598519601132090206e+0;
    p = p * t + 3.5780402569085996758e+0;
    p = p * t + 1.5335297523989890804e+0;
    p = p * t + 3.4839207139657522572e-1;
    p = p * t + 5.3644861147153648366e-2;
    p = p * t + 4.3836709877126095665e-3;
    p = p * t + 1.3858518113496718808e-4;
    p = p * t + 1.1738352509991666680e-6;
    q = t + 2.2859981272422905412e+0;
    q = q * t + 4.3859045256449554654e+0;
    q = q * t + 4.6632960348736635331e+0;
    q = q * t + 3.9846608184671757296e+0;
    q = q * t + 1.6068377709719017609e+0;
    q = q * t + 3.5609087305900265560e-1;
    q = q * t + 5.3963550303200816744e-2;
    q = q * t + 4.3873424022706935023e-3;
    q = q * t + 1.3858762165532246059e-4;
    q = q * t + 1.1738313872397777529e-6;
    t = p / (q * t);
  }
  else {




    double p, q;
    t = log(a);
    t = 1.0 / sqrt(-t);
    p = 6.9952990607058154858e-1;
    p = p * t + 1.9507620287580568829e+0;
    p = p * t + 8.2810030904462690216e-1;
    p = p * t + 1.1279046353630280005e-1;
    p = p * t + 6.0537914739162189689e-3;
    p = p * t + 1.3714329569665128933e-4;
    p = p * t + 1.2964481560643197452e-6;
    p = p * t + 4.6156006321345332510e-9;
    p = p * t + 4.5344689563209398450e-12;
    q = t + 1.5771922386662040546e+0;
    q = q * t + 2.1238242087454993542e+0;
    q = q * t + 8.4001814918178042919e-1;
    q = q * t + 1.1311889334355782065e-1;
    q = q * t + 6.0574830550097140404e-3;
    q = q * t + 1.3715891988350205065e-4;
    q = q * t + 1.2964671850944981713e-6;
    q = q * t + 4.6156017600933592558e-9;
    q = q * t + 4.5344687377088206783e-12;
    t = p / (q * t);
  }
  return t;
}

inline double normcdfinv(double a)
{
  return -1.4142135623730951 * erfcinv(a + a);
}

inline double normcdf(double a)
{
  double ah, al, t1, t2, u1, u2, v1, v2, z;
  if (fabs (a) > 38.5) a = copysign (38.5, a);
  ah = a * 134217729.0;
  u1 = (a - ah) + ah;
  u2 = a - u1;
  v1 = -7.0710678398609161e-01;
  v2 = 2.7995440410322203e-09;
  t1 = a * -7.0710678118654757e-1;
  t2 = (((u1 * v1 - t1) + u1 * v2) + u2 * v1) + u2 * v2;
  t2 = (a * -(-4.8336466567264567e-17)) + t2;
  ah = t1 + t2;
  z = erfc (ah);
  if (a < -1.0) {
    al = (t1 - ah) + t2;
    t1 = -2.0 * ah * z;
    z = t1 * al + z;
  }
  return 0.5 * z;
}

inline double erfcx(double a)
{
  double x, t1, t2, t3;

  if (__isnan(a)) {
    return a + a;
  }
  x = fabs(a);
  if (x < 32.0) {
# 3213 "/usr/local/cuda-10.0/include/crt/math_functions.hpp" 3
    t1 = x - 4.0;
    t2 = x + 4.0;
    t2 = t1 / t2;

    t1 = - 3.5602694826817400E-010;
    t1 = t1 * t2 - 9.7239122591447274E-009;
    t1 = t1 * t2 - 8.9350224851649119E-009;
    t1 = t1 * t2 + 1.0404430921625484E-007;
    t1 = t1 * t2 + 5.8806698585341259E-008;
    t1 = t1 * t2 - 8.2147414929116908E-007;
    t1 = t1 * t2 + 3.0956409853306241E-007;
    t1 = t1 * t2 + 5.7087871844325649E-006;
    t1 = t1 * t2 - 1.1231787437600085E-005;
    t1 = t1 * t2 - 2.4399558857200190E-005;
    t1 = t1 * t2 + 1.5062557169571788E-004;
    t1 = t1 * t2 - 1.9925637684786154E-004;
    t1 = t1 * t2 - 7.5777429182785833E-004;
    t1 = t1 * t2 + 5.0319698792599572E-003;
    t1 = t1 * t2 - 1.6197733895953217E-002;
    t1 = t1 * t2 + 3.7167515553018733E-002;
    t1 = t1 * t2 - 6.6330365827532434E-002;
    t1 = t1 * t2 + 9.3732834997115544E-002;
    t1 = t1 * t2 - 1.0103906603555676E-001;
    t1 = t1 * t2 + 6.8097054254735140E-002;
    t1 = t1 * t2 + 1.5379652102605428E-002;
    t1 = t1 * t2 - 1.3962111684056291E-001;
    t1 = t1 * t2 + 1.2329951186255526E+000;

    t2 = 2.0 * x + 1.0;
    t1 = t1 / t2;
  } else {

    t2 = 1.0 / x;
    t3 = t2 * t2;
    t1 = -29.53125;
    t1 = t1 * t3 + 6.5625;
    t1 = t1 * t3 - 1.875;
    t1 = t1 * t3 + 0.75;
    t1 = t1 * t3 - 0.5;
    t1 = t1 * t3 + 1.0;
    t2 = t2 * 5.6418958354775628e-001;
    t1 = t1 * t2;
  }
  if (a < 0.0) {

    t2 = ((int)(x * 16.0)) * 0.0625;
    t3 = (x - t2) * (x + t2);
    t3 = exp(t2 * t2) * exp(t3);
    t3 = t3 + t3;
    t1 = t3 - t1;
  }
  return t1;
}

inline float rsqrtf(float a)
{
  return (float)rsqrt((double)a);
}

inline float rcbrtf(float a)
{
  return (float)rcbrt((double)a);
}

inline float sinpif(float a)
{
  return (float)sinpi((double)a);
}

inline float cospif(float a)
{
  return (float)cospi((double)a);
}

inline void sincospif(float a, float *sptr, float *cptr)
{
  double s, c;

  sincospi((double)a, &s, &c);
  *sptr = (float)s;
  *cptr = (float)c;
}

inline float erfinvf(float a)
{
  return (float)erfinv((double)a);
}

inline float erfcinvf(float a)
{
  return (float)erfcinv((double)a);
}

inline float normcdfinvf(float a)
{
  return (float)normcdfinv((double)a);
}

inline float normcdff(float a)
{
  return (float)normcdf((double)a);
}

inline float erfcxf(float a)
{
  return (float)erfcx((double)a);
}
# 10233 "/usr/local/cuda-10.0/include/crt/math_functions.h" 2 3
# 268 "/usr/local/cuda-10.0/include/crt/common_functions.h" 2 3
# 264 "/usr/local/cuda/bin/..//include/crt/host_runtime.h" 2 3







#pragma pack()
# 9 "/tmp/tmpxft_000048b8_00000000-5_nn_cuda.compute_53.cudafe1.stub.c" 2 3
# 1 "/tmp/tmpxft_000048b8_00000000-2_nn_cuda.fatbin.c" 1 3

# 1 "/usr/local/cuda/bin/..//include/fatBinaryCtl.h" 1 3
# 21 "/usr/local/cuda/bin/..//include/fatBinaryCtl.h" 3
# 1 "/usr/local/cuda-10.0/include/fatbinary.h" 1 3
# 38 "/usr/local/cuda-10.0/include/fatbinary.h" 3
typedef struct fatBinaryHeader *computeFatBinaryFormat_t;
# 67 "/usr/local/cuda-10.0/include/fatbinary.h" 3
struct __attribute__((aligned(8))) fatBinaryHeader
{
  unsigned int magic;
  unsigned short version;
  unsigned short headerSize;
  unsigned long long int fatSize;
};


typedef enum {
  FATBIN_KIND_PTX = 0x0001,
  FATBIN_KIND_ELF = 0x0002,
  FATBIN_KIND_OLDCUBIN = 0x0004,
  FATBIN_KIND_IR = 0x0008,
} fatBinaryCodeKind;
# 22 "/usr/local/cuda/bin/..//include/fatBinaryCtl.h" 2 3


extern "C" {







typedef enum {
  FBCTL_ERROR_NONE = 0,
  FBCTL_ERROR_NULL,
  FBCTL_ERROR_UNRECOGNIZED,
  FBCTL_ERROR_NO_CANDIDATE,
  FBCTL_ERROR_COMPILE_FAILED,
  FBCTL_ERROR_INTERNAL,
  FBCTL_ERROR_COMPILER_LOAD_FAILED,
} fatBinaryCtlError_t;
extern char* fatBinaryCtl_Errmsg (fatBinaryCtlError_t e);

extern fatBinaryCtlError_t fatBinaryCtl_Create (void* *data);

extern void fatBinaryCtl_Delete (void* data);


extern fatBinaryCtlError_t fatBinaryCtl (void* data, int request, ...);
# 65 "/usr/local/cuda/bin/..//include/fatBinaryCtl.h" 3
typedef enum {
  fatBinary_PreferBestCode,
  fatBinary_AvoidPTX,
  fatBinary_ForcePTX,
  fatBinary_JITIfNotMatch,
  fatBinary_PreferIr,
  fatBinary_LinkCompatible,
} fatBinary_CompilationPolicy;





extern fatBinaryCtlError_t fatBinaryCtl_PickCandidate (void* data);







extern fatBinaryCtlError_t fatBinaryCtl_Compile (void* data,
                                                 void* *elf, size_t *esize);
# 96 "/usr/local/cuda/bin/..//include/fatBinaryCtl.h" 3
typedef struct {
  int magic;
  int version;
  const unsigned long long* data;
  void *filename_or_fatbins;

} __fatBinC_Wrapper_t;
# 125 "/usr/local/cuda/bin/..//include/fatBinaryCtl.h" 3
}
# 3 "/tmp/tmpxft_000048b8_00000000-2_nn_cuda.fatbin.c" 2 3



asm(
".section .nv_fatbin, \"a\"\n"
".align 8\n"
"fatbinData:\n"
".quad 0x00100001ba55ed50,0x0000000000000b40,0x0000004801010001,0x0000000000000378\n"
".quad 0x0000004000000375,0x0000003d00060003,0x0000000000000000,0x0000000000002015\n"
".quad 0x0000000000000000,0x00000000000007c5,0x0000000000000000,0x762e1cf200010a13\n"
".quad 0x36206e6f69737265,0x677261742e0a332e,0x31365f6d73207465,0x7365726464612e0a\n"
".quad 0x3620657a69735f73,0x6973691bf2002f34,0x746e652e20656c62,0x7565365a5f207972\n"
".quad 0x6c33315064696c63,0x685f676e6f4c7461,0x095f375032666c61,0x535f31536905ff00\n"
".quad 0x7261702e0a285f31,0x373436752e206d61,0x5f3f00355f111700,0x3f31172a003f2c30\n"
".quad 0x161e003f32332f00,0x67696c61bf003f32,0x4738622e2034206e,0x4a5d345b334f1e00\n"
".quad 0x5d345b340bf33300,0x65722e0a7b0a290a,0x20646572702e2067,0x00123b3e323c7025\n"
".quad 0x7372252036316296,0x203233860012393c,0x61001235333c7225,0x0024647225203436\n"
".quad 0x220099646c0a0a42,0x202c334f0017752e,0x483b5d2d1e01a65b,0x3118200048321f00\n"
".quad 0x31752e3276d00048,0x2c357372257b2036,0x2000537d362f00d5,0x533711040053331f\n"
".quad 0x03f4210053381f00,0x617476630a3b5d34,0x626f6c672e6f742e,0x422c342100f46c61\n"
".quad 0x71766f6d0a3b5101,0x25202c327225d802,0x17792e6469617463,0x186e25202c335200\n"
".quad 0x0042000018781800,0x6c2e646171001706,0x2c3523001a732e6f,0x347228003c01004e\n"
".quad 0x741c004e36100036,0x4a741f00e300004c,0x00004f2c31240000,0x6d0a3b3772c30038\n"
".quad 0x21656469772e6c75,0x8200272c35643200,0x732e6464610a3b38,0x1800e42c312600de\n"
".quad 0x381f00350101f135,0x0a3b5d327320014a,0x2c39220042726873,0x0200773133230047\n"
".quad 0x25320017301300ae,0x23001803002e3972,0x0a3b3191001e2c31,0x00c0672e70746573\n"
".quad 0x00e62c3170250954,0x25400a3b313104f1,0x4220617262203170,0x0402f23b325f3042\n"
".quad 0x2c3440004a0201b7,0x1c3b5d2d00e05b20,0x2b1f001c33322300,0x642e0146010701f6\n"
".quad 0x1900883713014732,0x00352c3826014734,0x00b7621001b03712,0xd102ee2c36317249\n"
".quad 0x6275737b090a0a3b,0x2100a9783631662e,0x6c00b30000262c32,0x0021090a0a7d0a3b\n"
".quad 0x009600000021351f,0x00472c3824002105,0x39007f0600213512,0x007f0d031a2c3532\n"
".quad 0x160000262c313231,0x34322e02007f0f01,0x373234007f090021,0x1b0000a00600472c\n"
".quad 0x2c30333300210401,0x00002137322500a5,0x6c689204d90104b6,0x120a203b7568202c\n"
".quad 0x2c6c662032338000,0x2200c70300126620,0x03287d1100247b20,0x2e4001b3203b3030\n"
".quad 0x002e010062323366,0x55751300156c682c,0x612e74727173d400,0x5c662e786f727070\n"
".quad 0x75130100196c1f00,0x6e72200047000075,0x3168140018010046,0x00a5751b00180c00\n"
".quad 0x00ab2c3333722555,0x74732800e9203b21,0x5d3821027400027a,0xbb0a0a3b334100c6\n"
".quad 0x3b7465720a3ab002,0x0000000a0a0a7d0a,0x0000004801010001,0x0000000000000378\n"
".quad 0x0000004000000375,0x0000003c00060003,0x0000000000000000,0x0000000000002015\n"
".quad 0x0000000000000000,0x00000000000007c5,0x0000000000000000,0x762e1cf200010a13\n"
".quad 0x36206e6f69737265,0x677261742e0a332e,0x30365f6d73207465,0x7365726464612e0a\n"
".quad 0x3620657a69735f73,0x6973691bf2002f34,0x746e652e20656c62,0x7565365a5f207972\n"
".quad 0x6c33315064696c63,0x685f676e6f4c7461,0x095f375032666c61,0x535f31536905ff00\n"
".quad 0x7261702e0a285f31,0x373436752e206d61,0x5f3f00355f111700,0x3f31172a003f2c30\n"
".quad 0x161e003f32332f00,0x67696c61bf003f32,0x4738622e2034206e,0x4a5d345b334f1e00\n"
".quad 0x5d345b340bf33300,0x65722e0a7b0a290a,0x20646572702e2067,0x00123b3e323c7025\n"
".quad 0x7372252036316296,0x203233860012393c,0x61001235333c7225,0x0024647225203436\n"
".quad 0x220099646c0a0a42,0x202c334f0017752e,0x483b5d2d1e01a65b,0x3118200048321f00\n"
".quad 0x31752e3276d00048,0x2c357372257b2036,0x2000537d362f00d5,0x533711040053331f\n"
".quad 0x03f4210053381f00,0x617476630a3b5d34,0x626f6c672e6f742e,0x422c342100f46c61\n"
".quad 0x71766f6d0a3b5101,0x25202c327225d802,0x17792e6469617463,0x186e25202c335200\n"
".quad 0x0042000018781800,0x6c2e646171001706,0x2c3523001a732e6f,0x347228003c01004e\n"
".quad 0x741c004e36100036,0x4a741f00e300004c,0x00004f2c31240000,0x6d0a3b3772c30038\n"
".quad 0x21656469772e6c75,0x8200272c35643200,0x732e6464610a3b38,0x1800e42c312600de\n"
".quad 0x381f00350101f135,0x0a3b5d327320014a,0x2c39220042726873,0x0200773133230047\n"
".quad 0x25320017301300ae,0x23001803002e3972,0x0a3b3191001e2c31,0x00c0672e70746573\n"
".quad 0x00e62c3170250954,0x25400a3b313104f1,0x4220617262203170,0x0402f23b325f3042\n"
".quad 0x2c3440004a0201b7,0x1c3b5d2d00e05b20,0x2b1f001c33322300,0x642e0146010701f6\n"
".quad 0x1900883713014732,0x00352c3826014734,0x00b7621001b03712,0xd102ee2c36317249\n"
".quad 0x6275737b090a0a3b,0x2100a9783631662e,0x6c00b30000262c32,0x0021090a0a7d0a3b\n"
".quad 0x009600000021351f,0x00472c3824002105,0x39007f0600213512,0x007f0d031a2c3532\n"
".quad 0x160000262c313231,0x34322e02007f0f01,0x373234007f090021,0x1b0000a00600472c\n"
".quad 0x2c30333300210401,0x00002137322500a5,0x6c689204d90104b6,0x120a203b7568202c\n"
".quad 0x2c6c662032338000,0x2200c70300126620,0x03287d1100247b20,0x2e4001b3203b3030\n"
".quad 0x002e010062323366,0x55751300156c682c,0x612e74727173d400,0x5c662e786f727070\n"
".quad 0x75130100196c1f00,0x6e72200047000075,0x3168140018010046,0x00a5751b00180c00\n"
".quad 0x00ab2c3333722555,0x74732800e9203b21,0x5d3821027400027a,0xbb0a0a3b334100c6\n"
".quad 0x3b7465720a3ab002,0x0000000a0a0a7d0a,0x0000004801010001,0x0000000000000378\n"
".quad 0x0000004000000375,0x0000003500060003,0x0000000000000000,0x0000000000002015\n"
".quad 0x0000000000000000,0x00000000000007c5,0x0000000000000000,0x762e1cf200010a13\n"
".quad 0x36206e6f69737265,0x677261742e0a332e,0x33355f6d73207465,0x7365726464612e0a\n"
".quad 0x3620657a69735f73,0x6973691bf2002f34,0x746e652e20656c62,0x7565365a5f207972\n"
".quad 0x6c33315064696c63,0x685f676e6f4c7461,0x095f375032666c61,0x535f31536905ff00\n"
".quad 0x7261702e0a285f31,0x373436752e206d61,0x5f3f00355f111700,0x3f31172a003f2c30\n"
".quad 0x161e003f32332f00,0x67696c61bf003f32,0x4738622e2034206e,0x4a5d345b334f1e00\n"
".quad 0x5d345b340bf33300,0x65722e0a7b0a290a,0x20646572702e2067,0x00123b3e323c7025\n"
".quad 0x7372252036316296,0x203233860012393c,0x61001235333c7225,0x0024647225203436\n"
".quad 0x220099646c0a0a42,0x202c334f0017752e,0x483b5d2d1e01a65b,0x3118200048321f00\n"
".quad 0x31752e3276d00048,0x2c357372257b2036,0x2000537d362f00d5,0x533711040053331f\n"
".quad 0x03f4210053381f00,0x617476630a3b5d34,0x626f6c672e6f742e,0x422c342100f46c61\n"
".quad 0x71766f6d0a3b5101,0x25202c327225d802,0x17792e6469617463,0x186e25202c335200\n"
".quad 0x0042000018781800,0x6c2e646171001706,0x2c3523001a732e6f,0x347228003c01004e\n"
".quad 0x741c004e36100036,0x4a741f00e300004c,0x00004f2c31240000,0x6d0a3b3772c30038\n"
".quad 0x21656469772e6c75,0x8200272c35643200,0x732e6464610a3b38,0x1800e42c312600de\n"
".quad 0x381f00350101f135,0x0a3b5d327320014a,0x2c39220042726873,0x0200773133230047\n"
".quad 0x25320017301300ae,0x23001803002e3972,0x0a3b3191001e2c31,0x00c0672e70746573\n"
".quad 0x00e62c3170250954,0x25400a3b313104f1,0x4220617262203170,0x0402f23b325f3042\n"
".quad 0x2c3440004a0201b7,0x1c3b5d2d00e05b20,0x2b1f001c33322300,0x642e0146010701f6\n"
".quad 0x1900883713014732,0x00352c3826014734,0x00b7621001b03712,0xd102ee2c36317249\n"
".quad 0x6275737b090a0a3b,0x2100a9783631662e,0x6c00b30000262c32,0x0021090a0a7d0a3b\n"
".quad 0x009600000021351f,0x00472c3824002105,0x39007f0600213512,0x007f0d031a2c3532\n"
".quad 0x160000262c313231,0x34322e02007f0f01,0x373234007f090021,0x1b0000a00600472c\n"
".quad 0x2c30333300210401,0x00002137322500a5,0x6c689204d90104b6,0x120a203b7568202c\n"
".quad 0x2c6c662032338000,0x2200c70300126620,0x03287d1100247b20,0x2e4001b3203b3030\n"
".quad 0x002e010062323366,0x55751300156c682c,0x612e74727173d400,0x5c662e786f727070\n"
".quad 0x75130100196c1f00,0x6e72200047000075,0x3168140018010046,0x00a5751b00180c00\n"
".quad 0x00ab2c3333722555,0x74732800e9203b21,0x5d3821027400027a,0xbb0a0a3b334100c6\n"
".quad 0x3b7465720a3ab002,0x0000000a0a0a7d0a\n"
".text\n");

extern "C" {

extern const unsigned long long fatbinData[362];

}


extern "C" {

static const __fatBinC_Wrapper_t __fatDeviceText __attribute__ ((aligned (8))) __attribute__ ((section (".nvFatBinSegment")))=
 { 0x466243b1, 1, fatbinData, 0 };

}
# 10 "/tmp/tmpxft_000048b8_00000000-5_nn_cuda.compute_53.cudafe1.stub.c" 2 3
extern void __device_stub__Z6euclidP13latLong_half2P7__half2iS1_S1_(LatLong_half2 *, struct __half2 *, int, struct __half2&, struct __half2&);
static void __nv_cudaEntityRegisterCallback(void **);
static void __sti____cudaRegisterAll(void) __attribute__((__constructor__));
void __device_stub__Z6euclidP13latLong_half2P7__half2iS1_S1_(LatLong_half2 *__par0, struct __half2 *__par1, int __par2, struct __half2&__par3, struct __half2&__par4){void * __args_arr[5]; int __args_idx = 0;__args_arr[__args_idx] = (void *)(char *)&__par0; ++__args_idx;__args_arr[__args_idx] = (void *)(char *)&__par1; ++__args_idx;__args_arr[__args_idx] = (void *)(char *)&__par2; ++__args_idx;__args_arr[__args_idx] = (void *)__cudaAddressOf(__par3); ++__args_idx;__args_arr[__args_idx] = (void *)__cudaAddressOf(__par4); ++__args_idx;{ volatile static char *__f __attribute__((unused)); __f = ((char *)((void ( *)(LatLong_half2 *, struct __half2 *, int, struct __half2, struct __half2))euclid)); dim3 __gridDim, __blockDim; size_t __sharedMem; cudaStream_t __stream; if (__cudaPopCallConfiguration(&__gridDim, &__blockDim, &__sharedMem, &__stream) != cudaSuccess) return; if (__args_idx == 0) { (void)cudaLaunchKernel(((char *)((void ( *)(LatLong_half2 *, struct __half2 *, int, struct __half2, struct __half2))euclid)), __gridDim, __blockDim, &__args_arr[__args_idx], __sharedMem, __stream); } else { (void)cudaLaunchKernel(((char *)((void ( *)(LatLong_half2 *, struct __half2 *, int, struct __half2, struct __half2))euclid)), __gridDim, __blockDim, &__args_arr[0], __sharedMem, __stream); } };}
# 67 "nn_cuda.cu"
void euclid( LatLong_half2 *__cuda_0,struct __half2 *__cuda_1,int __cuda_2,struct __half2 __cuda_3,struct __half2 __cuda_4)
# 68 "nn_cuda.cu"
{__device_stub__Z6euclidP13latLong_half2P7__half2iS1_S1_( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4);
# 78 "nn_cuda.cu"
}
# 1 "/tmp/tmpxft_000048b8_00000000-5_nn_cuda.compute_53.cudafe1.stub.c"
static void __nv_cudaEntityRegisterCallback( void **__T38) { { volatile static void **__ref __attribute__((unused)); __ref = (volatile void **)__T38; }; __nv_save_fatbinhandle_for_managed_rt(__T38); __cudaRegisterFunction(__T38, (const char*)((void ( *)(LatLong_half2 *, struct __half2 *, int, struct __half2, struct __half2))euclid), (char*)"_Z6euclidP13latLong_half2P7__half2iS1_S1_", "_Z6euclidP13latLong_half2P7__half2iS1_S1_", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); }
static void __sti____cudaRegisterAll(void) { __cudaFatCubinHandle = __cudaRegisterFatBinary((void*)&__fatDeviceText); { void (*callback_fp)(void **) = (void (*)(void **))(__nv_cudaEntityRegisterCallback); (*callback_fp)(__cudaFatCubinHandle); } atexit(__cudaUnregisterBinaryUtil); }

#pragma GCC diagnostic pop
# 2 "tmpxft_000048b8_00000000-5_nn_cuda.compute_53.cudafe1.stub.c" 2
# 1 "tmpxft_000048b8_00000000-5_nn_cuda.compute_53.cudafe1.stub.c"
